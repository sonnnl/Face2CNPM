{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kasiz\\\\Documents\\\\Studying\\\\FaceReg\\\\frontend\\\\src\\\\pages\\\\teacher\\\\AttendancePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useSnackbar } from \"notistack\";\nimport { Box, Typography, Card, CardContent, Grid, Paper, Button, Divider, CircularProgress, List, ListItem, ListItemAvatar, ListItemText, Avatar, Chip, Dialog, DialogTitle, DialogContent, DialogActions, TextField, FormControl, InputLabel, Select, MenuItem, IconButton, Alert } from \"@mui/material\";\nimport { CameraAlt, Check, Close, Edit, Refresh, Save, VerifiedUser, HourglassEmpty } from \"@mui/icons-material\";\nimport Webcam from \"react-webcam\";\nimport * as faceapi from \"face-api.js\";\nimport { getClassFaceFeatures, verifyAttendance, manualAttendance, setModelLoaded, setCameraReady, setDetectedFaces, setRecognizedStudents, clearRecognitionState } from \"../../redux/slices/faceRecognitionSlice\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\nconst AttendancePage = () => {\n  _s();\n  const {\n    classId,\n    sessionId\n  } = useParams();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const videoRef = useRef(null);\n  const [intervalId, setIntervalId] = useState(null);\n  const [showLandmark, setShowLandmark] = useState(true);\n  const [landmarkIntervalId, setLandmarkIntervalId] = useState(null);\n  const [cameraMode, setCameraMode] = useState(\"face_recognition\");\n  const {\n    token\n  } = useSelector(state => state.auth);\n  const {\n    isModelLoaded,\n    isCameraReady,\n    detectedFaces,\n    recognizedStudents,\n    classStudents,\n    isProcessing,\n    error\n  } = useSelector(state => state.faceRecognition);\n  const [classInfo, setClassInfo] = useState(null);\n  const [sessionInfo, setSessionInfo] = useState(null);\n  const [attendanceLogs, setAttendanceLogs] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isRecognizing, setIsRecognizing] = useState(false);\n  const [isAutoMode, setIsAutoMode] = useState(false);\n  const [selectedStudent, setSelectedStudent] = useState(null);\n  const [manualDialogOpen, setManualDialogOpen] = useState(false);\n  const [manualAttendanceData, setManualAttendanceData] = useState({\n    status: \"present\",\n    note: \"\"\n  });\n\n  // Các hằng số cấu hình\n  const RECOGNITION_THRESHOLD = 0.5; // Ngưỡng nhận diện\n  const DETECTION_THRESHOLD = 0.3; // Giảm ngưỡng phát hiện khuôn mặt\n  const CONFIDENCE_THRESHOLD = 0.6; // Ngưỡng độ tin cậy để điểm danh\n  const AUTO_DETECT_INTERVAL = 1000; // Thời gian giữa các lần phát hiện (ms)\n  const ENABLE_DEBUG_LOGS = true; // Bật/tắt log gỡ lỗi\n\n  // Thêm state mới để theo dõi số lần thử lại camera\n  const [cameraRetryCount, setCameraRetryCount] = useState(0);\n  const [lastDetectionTime, setLastDetectionTime] = useState(null);\n\n  // Thêm state theo dõi interval phát hiện landmarks\n  const [landmarkDetectionInterval, setLandmarkDetectionInterval] = useState(null);\n\n  // Load class info, session info và models\n  useEffect(() => {\n    const loadInitialData = async () => {\n      try {\n        setIsLoading(true);\n\n        // Bắt đầu tải dữ liệu và models song song\n        const loadModelsPromise = !isModelLoaded ? loadFaceRecognitionModels() : Promise.resolve(true);\n\n        // Lấy thông tin lớp học\n        const classPromise = axios.get(`${API_URL}/classes/teaching/${classId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Lấy thông tin phiên điểm danh\n        const sessionPromise = axios.get(`${API_URL}/attendance/sessions/${sessionId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Lấy danh sách điểm danh\n        const logsPromise = axios.get(`${API_URL}/attendance/logs/${sessionId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Chờ tất cả API calls hoàn thành\n        const [classResponse, sessionResponse, logsResponse] = await Promise.all([classPromise, sessionPromise, logsPromise]);\n        setClassInfo(classResponse.data.data);\n        setSessionInfo(sessionResponse.data.data);\n        setAttendanceLogs(logsResponse.data.data);\n\n        // Lấy đặc trưng khuôn mặt của sinh viên trong lớp\n        console.log(\"[DEBUG] Bắt đầu lấy đặc trưng khuôn mặt của sinh viên, classId:\", classId);\n        try {\n          // Gọi API trực tiếp để kiểm tra\n          const faceDataResponse = await axios.get(`${API_URL}/face-recognition/class-features/${classId}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          console.log(\"[DEBUG] API response raw:\", faceDataResponse);\n          console.log(\"[DEBUG] API response data:\", faceDataResponse.data);\n\n          // Vẫn sử dụng redux dispatch để đảm bảo tính nhất quán\n          const faceFeatureResult = await dispatch(getClassFaceFeatures(classId)).unwrap();\n\n          // Log toàn bộ result để debug\n          console.log(\"[DEBUG] Redux unwrapped result:\", faceFeatureResult);\n\n          // Kiểm tra xem có dữ liệu trả về không\n          if (faceFeatureResult) {\n            // Log dữ liệu để debug\n            console.log(\"[DEBUG] Bắt đầu phân tích dữ liệu khuôn mặt\");\n            console.log(\"[DEBUG] faceFeatureResult structure:\", JSON.stringify(faceFeatureResult, null, 2));\n            let studentsData = null;\n\n            // Kiểm tra các cấu trúc dữ liệu có thể có\n            if (Array.isArray(faceFeatureResult)) {\n              studentsData = faceFeatureResult;\n              console.log(`[DEBUG] Nhận được dữ liệu khuôn mặt dạng mảng: ${studentsData.length} sinh viên`);\n            } else if (faceFeatureResult.data && Array.isArray(faceFeatureResult.data)) {\n              studentsData = faceFeatureResult.data;\n              console.log(`[DEBUG] Nhận được dữ liệu khuôn mặt từ faceFeatureResult.data: ${studentsData.length} sinh viên`);\n            } else if (faceFeatureResult.students && Array.isArray(faceFeatureResult.students)) {\n              studentsData = faceFeatureResult.students;\n              console.log(`[DEBUG] Nhận được dữ liệu khuôn mặt từ faceFeatureResult.students: ${studentsData.length} sinh viên`);\n            }\n            if (studentsData && studentsData.length > 0) {\n              console.log(`[DEBUG] Phân tích dữ liệu khuôn mặt của ${studentsData.length} sinh viên`);\n\n              // Kiểm tra chi tiết dữ liệu khuôn mặt\n              let validDescriptorsCount = 0;\n              let invalidDescriptorsCount = 0;\n              studentsData.forEach(student => {\n                console.log(`[DEBUG] Kiểm tra sinh viên: ${student.full_name || \"Unknown\"}, ID: ${student._id}`);\n                console.log(`[DEBUG] Cấu trúc dữ liệu sinh viên:`, student);\n\n                // Kiểm tra nếu có faceFeatures\n                if (student.faceFeatures) {\n                  console.log(`[DEBUG] Sinh viên có dữ liệu faceFeatures`);\n\n                  // Kiểm tra nếu có descriptors\n                  const hasDescriptors = student.faceFeatures && student.faceFeatures.descriptors && Array.isArray(student.faceFeatures.descriptors) && student.faceFeatures.descriptors.length > 0;\n                  if (hasDescriptors) {\n                    console.log(`[DEBUG] Sinh viên có ${student.faceFeatures.descriptors.length} nhóm descriptors`);\n\n                    // Đếm số descriptor hợp lệ\n                    let validDescriptorsInStudent = 0;\n                    student.faceFeatures.descriptors.forEach((group, groupIndex) => {\n                      if (Array.isArray(group)) {\n                        group.forEach((descriptor, descIndex) => {\n                          if (Array.isArray(descriptor) && descriptor.length === 128) {\n                            validDescriptorsInStudent++;\n                          }\n                        });\n                      }\n                    });\n                    if (validDescriptorsInStudent > 0) {\n                      validDescriptorsCount++;\n                      console.log(`[DEBUG] Sinh viên ${student.full_name} có ${validDescriptorsInStudent} descriptor hợp lệ`);\n                    } else {\n                      invalidDescriptorsCount++;\n                      console.log(`[DEBUG] Sinh viên ${student.full_name} không có descriptor hợp lệ`);\n                    }\n                  } else {\n                    invalidDescriptorsCount++;\n                    console.log(`[DEBUG] Sinh viên ${student.full_name} không có descriptors`);\n                  }\n                } else {\n                  // Kiểm tra nếu có faceDescriptors (cấu trúc cũ)\n                  const hasOldDescriptors = student.faceDescriptors && Array.isArray(student.faceDescriptors) && student.faceDescriptors.length > 0;\n                  if (hasOldDescriptors) {\n                    console.log(`[DEBUG] Sinh viên có ${student.faceDescriptors.length} descriptors (dạng cũ)`);\n                    console.log(`[DEBUG] Chi tiết faceDescriptors:`, JSON.stringify(student.faceDescriptors, null, 2));\n\n                    // Thử các cách khác nhau để lấy descriptor\n                    if (typeof student.faceDescriptors[0] === \"object\") {\n                      // Nếu là object (không phải mảng), có thể nó là object có chứa descriptor\n                      console.log(`[DEBUG] Descriptor là object:`, student.faceDescriptors[0]);\n\n                      // Kiểm tra nếu descriptor nằm trong object.descriptors hoặc object.0\n                      if (student.faceDescriptors[0].descriptors && Array.isArray(student.faceDescriptors[0].descriptors)) {\n                        console.log(`[DEBUG] Tìm thấy descriptors trong object.descriptors`);\n                        // Sử dụng descriptors trong object\n                        const flatDescriptors = student.faceDescriptors[0].descriptors;\n                        const validOldDescriptors = flatDescriptors.filter(desc => Array.isArray(desc) && desc.length === 128).length;\n                        if (validOldDescriptors > 0) {\n                          validDescriptorsCount++;\n                          console.log(`[DEBUG] Sinh viên ${student.full_name} có ${validOldDescriptors} descriptor hợp lệ trong object.descriptors`);\n                        }\n                      } else {\n                        // Duyệt tất cả các thuộc tính của object để tìm mảng\n                        const foundArrays = [];\n                        Object.keys(student.faceDescriptors[0]).forEach(key => {\n                          const value = student.faceDescriptors[0][key];\n                          if (Array.isArray(value)) {\n                            console.log(`[DEBUG] Tìm thấy mảng trong thuộc tính ${key}, độ dài: ${value.length}`);\n                            foundArrays.push(value);\n                          }\n                        });\n\n                        // Kiểm tra các mảng tìm được\n                        if (foundArrays.length > 0) {\n                          // Ưu tiên mảng có 128 phần tử\n                          const potentialDescriptors = foundArrays.filter(arr => arr.length === 128);\n                          if (potentialDescriptors.length > 0) {\n                            validDescriptorsCount++;\n                            console.log(`[DEBUG] Sinh viên ${student.full_name} có descriptor hợp lệ trong thuộc tính object`);\n                          }\n                        }\n                      }\n                    } else {\n                      // Xử lý thông thường\n                      const validOldDescriptors = student.faceDescriptors.filter(desc => Array.isArray(desc) && desc.length === 128).length;\n                      if (validOldDescriptors > 0) {\n                        validDescriptorsCount++;\n                        console.log(`[DEBUG] Sinh viên ${student.full_name} có ${validOldDescriptors} descriptor hợp lệ (dạng cũ)`);\n                      } else {\n                        invalidDescriptorsCount++;\n                        console.log(`[DEBUG] Sinh viên ${student.full_name} không có descriptor hợp lệ (dạng cũ)`);\n                      }\n                    }\n                  } else {\n                    invalidDescriptorsCount++;\n                    console.log(`[DEBUG] Sinh viên ${student.full_name} không có dữ liệu khuôn mặt`);\n                  }\n                }\n              });\n              console.log(`[DEBUG] Tổng hợp: ${validDescriptorsCount} sinh viên có descriptor hợp lệ, ${invalidDescriptorsCount} sinh viên không có`);\n              if (validDescriptorsCount === 0) {\n                enqueueSnackbar(\"Không có sinh viên nào có dữ liệu khuôn mặt, vui lòng cập nhật dữ liệu\", {\n                  variant: \"warning\",\n                  autoHideDuration: 8000\n                });\n              }\n            } else {\n              console.log(\"[DEBUG] Không nhận được dữ liệu khuôn mặt từ API\");\n              enqueueSnackbar(\"Không thể tải dữ liệu nhận diện khuôn mặt\", {\n                variant: \"error\"\n              });\n            }\n          } else {\n            console.log(\"[DEBUG] Không nhận được dữ liệu khuôn mặt từ API (faceFeatureResult là null hoặc undefined)\");\n            enqueueSnackbar(\"Không thể tải dữ liệu nhận diện khuôn mặt\", {\n              variant: \"error\"\n            });\n          }\n        } catch (apiError) {\n          var _apiError$response;\n          console.error(\"[DEBUG] Lỗi khi gọi API lấy dữ liệu khuôn mặt:\", apiError);\n          console.log(\"[DEBUG] API error details:\", ((_apiError$response = apiError.response) === null || _apiError$response === void 0 ? void 0 : _apiError$response.data) || apiError.message);\n          enqueueSnackbar(\"Lỗi khi lấy dữ liệu khuôn mặt. Vui lòng kiểm tra API endpoint.\", {\n            variant: \"error\"\n          });\n        }\n\n        // Không chờ đợi model load xong mới hiển thị UI\n        setIsLoading(false);\n\n        // Model sẽ load song song\n        await loadModelsPromise;\n\n        // Thiết lập thời gian phát hiện ban đầu\n        setLastDetectionTime(Date.now());\n      } catch (error) {\n        console.error(\"Lỗi khi tải dữ liệu:\", error);\n        enqueueSnackbar(\"Lỗi khi tải dữ liệu\", {\n          variant: \"error\"\n        });\n        setIsLoading(false);\n      }\n    };\n    loadInitialData();\n\n    // Clean up\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n\n      // Dừng landmark interval nếu đang chạy\n      if (landmarkIntervalId) {\n        clearInterval(landmarkIntervalId);\n      }\n\n      // Dừng camera stream nếu đang chạy\n      if (webcamRef.current && webcamRef.current.video && webcamRef.current.video.srcObject) {\n        const tracks = webcamRef.current.video.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n      if (videoRef.current && videoRef.current.srcObject) {\n        const tracks = videoRef.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n      dispatch(clearRecognitionState());\n\n      // Reset các state theo dõi camera\n      setCameraRetryCount(0);\n      setLastDetectionTime(null);\n    };\n  }, [classId, sessionId, token, dispatch, enqueueSnackbar, isModelLoaded, intervalId, landmarkIntervalId]);\n\n  // Hàm khởi tạo camera trực tiếp - nút duy nhất cho camera\n  const initDirectCamera = async () => {\n    try {\n      // Tải model nhận diện và đảm bảo model đã sẵn sàng\n      if (!isModelLoaded || !faceapi.nets.ssdMobilenetv1.isLoaded) {\n        enqueueSnackbar(\"Đang tải các mô hình nhận diện...\", {\n          variant: \"info\"\n        });\n        const modelLoaded = await loadFaceRecognitionModels();\n        if (!modelLoaded) {\n          enqueueSnackbar(\"Không thể tải mô hình nhận diện, vui lòng thử lại\", {\n            variant: \"error\"\n          });\n          return;\n        }\n      }\n\n      // Dừng stream cũ nếu có\n      if (webcamRef.current && webcamRef.current.video && webcamRef.current.video.srcObject) {\n        const tracks = webcamRef.current.video.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n      if (videoRef.current && videoRef.current.srcObject) {\n        const tracks = videoRef.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n\n      // Truy cập camera trực tiếp thông qua MediaDevices API\n      try {\n        // Thêm tùy chọn camera với nhiều độ phân giải cao hơn\n        const constraints = {\n          video: {\n            width: {\n              ideal: 1920,\n              min: 640\n            },\n            height: {\n              ideal: 1080,\n              min: 480\n            },\n            facingMode: \"user\",\n            frameRate: {\n              ideal: 30,\n              min: 15\n            }\n          },\n          audio: false\n        };\n        console.log(\"[DEBUG] Đang yêu cầu truy cập camera với tùy chọn:\", constraints);\n        const stream = await navigator.mediaDevices.getUserMedia(constraints);\n        console.log(\"Đã nhận được stream camera trực tiếp\", stream.id);\n        console.log(\"Thông tin camera: \", stream.getVideoTracks()[0].getSettings());\n\n        // Nếu đang sử dụng webcam component\n        if (webcamRef.current && webcamRef.current.video) {\n          webcamRef.current.video.srcObject = stream;\n\n          // Kiểm tra stream đã hoạt động chưa\n          webcamRef.current.video.onloadedmetadata = () => {\n            webcamRef.current.video.play().catch(err => {\n              console.error(\"Lỗi khi play video webcam:\", err);\n            });\n          };\n        }\n        // Hoặc nếu đang sử dụng video element\n        else if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n          videoRef.current.onloadedmetadata = () => {\n            videoRef.current.play().catch(err => console.error(\"Lỗi khi play video:\", err));\n          };\n        }\n\n        // Đánh dấu camera và model đã sẵn sàng\n        dispatch(setModelLoaded(true));\n        dispatch(setCameraReady(true));\n\n        // Khởi động thời gian phát hiện ban đầu\n        setLastDetectionTime(Date.now());\n        enqueueSnackbar(\"Đã kết nối camera thành công\", {\n          variant: \"success\"\n        });\n\n        // Bật hiển thị landmark sau khi camera khởi động\n        setTimeout(() => {\n          setShowLandmark(true);\n          startLandmarkDetection();\n        }, 1000);\n\n        // Đặt lại số lần thử camera\n        setCameraRetryCount(0);\n        return true;\n      } catch (err) {\n        console.error(\"Lỗi truy cập camera:\", err);\n        enqueueSnackbar(`Không thể truy cập camera: ${err.message}`, {\n          variant: \"error\"\n        });\n\n        // Thử phương án thay thế nếu camera mặt trước thất bại\n        if (cameraRetryCount < 2) {\n          try {\n            console.log(\"[DEBUG] Thử sử dụng camera phương án thay thế\");\n            const altStream = await navigator.mediaDevices.getUserMedia({\n              video: true,\n              // Chỉ yêu cầu bất kỳ camera nào có sẵn\n              audio: false\n            });\n\n            // Xử lý stream mới\n            if (webcamRef.current && webcamRef.current.video) {\n              webcamRef.current.video.srcObject = altStream;\n            } else if (videoRef.current) {\n              videoRef.current.srcObject = altStream;\n              videoRef.current.onloadedmetadata = () => videoRef.current.play();\n            }\n            dispatch(setCameraReady(true));\n            setLastDetectionTime(Date.now());\n            enqueueSnackbar(\"Đã kết nối camera thay thế\", {\n              variant: \"success\"\n            });\n            return true;\n          } catch (altErr) {\n            console.error(\"Không thể sử dụng camera thay thế:\", altErr);\n          }\n        }\n        return false;\n      }\n    } catch (err) {\n      console.error(\"Lỗi khi khởi tạo camera trực tiếp:\", err);\n      enqueueSnackbar(`Lỗi: ${err.message}`, {\n        variant: \"error\"\n      });\n      return false;\n    }\n  };\n\n  // Hàm bắt đầu phát hiện landmarks theo thời gian thực\n  const startLandmarkDetection = () => {\n    // Xóa interval cũ nếu có\n    if (landmarkDetectionInterval) {\n      clearInterval(landmarkDetectionInterval);\n    }\n\n    // Tạo interval mới để cập nhật landmarks mỗi 50ms\n    const intervalId = setInterval(() => {\n      if (cameraMode === \"face_recognition\" && showLandmark) {\n        handleDetectFaces(true);\n      }\n    }, 50);\n    setLandmarkDetectionInterval(intervalId);\n  };\n\n  // Hàm dừng phát hiện landmarks theo thời gian thực\n  const stopLandmarkDetection = () => {\n    if (landmarkDetectionInterval) {\n      clearInterval(landmarkDetectionInterval);\n      setLandmarkDetectionInterval(null);\n    }\n  };\n\n  // Cập nhật useEffect để bắt đầu và dừng phát hiện landmarks khi camera hoặc chế độ thay đổi\n  useEffect(() => {\n    if (cameraMode === \"face_recognition\" && showLandmark) {\n      startLandmarkDetection();\n    } else {\n      stopLandmarkDetection();\n    }\n    return () => {\n      stopLandmarkDetection();\n    };\n  }, [cameraMode, showLandmark]);\n\n  // Cập nhật useEffect cho việc toggle showLandmark\n  useEffect(() => {\n    if (showLandmark && cameraMode === \"face_recognition\") {\n      startLandmarkDetection();\n    } else {\n      stopLandmarkDetection();\n    }\n  }, [showLandmark]);\n\n  // Load các mô hình nhận diện khuôn mặt\n  const loadFaceRecognitionModels = async () => {\n    try {\n      const MODEL_URL = \"/models\";\n      console.log(\"Bắt đầu tải models từ:\", MODEL_URL);\n\n      // Thêm SsdMobilenetv1 vào danh sách models cần tải\n      const modelPromises = [faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL), faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL), faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL), faceapi.nets.ssdMobilenetv1.loadFromUri(MODEL_URL) // Thêm model SSD MobileNet\n      ];\n\n      // Kiểm tra xem các models đã được tải chưa\n      const modelStatuses = [faceapi.nets.tinyFaceDetector.isLoaded, faceapi.nets.faceLandmark68Net.isLoaded, faceapi.nets.faceRecognitionNet.isLoaded, faceapi.nets.ssdMobilenetv1.isLoaded // Kiểm tra SSD MobileNet đã tải chưa\n      ];\n      if (modelStatuses.every(status => status)) {\n        console.log(\"Các models đã được tải từ trước\");\n        dispatch(setModelLoaded(true));\n        return true;\n      }\n      await Promise.all(modelPromises);\n      console.log(\"Đã tải xong models thành công\");\n      dispatch(setModelLoaded(true));\n      enqueueSnackbar(\"Tải mô hình nhận diện thành công\", {\n        variant: \"success\"\n      });\n      return true;\n    } catch (error) {\n      console.error(\"Lỗi khi tải mô hình:\", error);\n      enqueueSnackbar(\"Không thể tải mô hình nhận diện\", {\n        variant: \"error\"\n      });\n      return false;\n    }\n  };\n\n  // Hàm kiểm tra và đảm bảo camera hoạt động\n  const ensureCameraIsWorking = () => {\n    var _webcamRef$current;\n    // Kiểm tra nếu camera chưa hoạt động và đã thử khởi động\n    if (!isCameraReady && cameraRetryCount === 0) {\n      console.log(\"[DEBUG] Camera chưa sẵn sàng, thử khởi động\");\n      setCameraRetryCount(1);\n      initDirectCamera();\n      return false;\n    }\n\n    // Kiểm tra stream của camera\n    const videoElement = isAutoMode ? videoRef.current : (_webcamRef$current = webcamRef.current) === null || _webcamRef$current === void 0 ? void 0 : _webcamRef$current.video;\n    if (!videoElement || !videoElement.srcObject || videoElement.readyState !== 4) {\n      console.log(\"[DEBUG] Video stream không hoạt động, thử khởi động lại camera\");\n      if (cameraRetryCount < 3) {\n        setCameraRetryCount(prev => prev + 1);\n        initDirectCamera();\n        return false;\n      }\n    }\n    return true;\n  };\n\n  // Xử lý phát hiện khuôn mặt\n  const handleFaceDetection = async detections => {\n    // Cập nhật state\n    dispatch(setDetectedFaces(detections));\n    try {\n      // Cập nhật thời gian phát hiện\n      setLastDetectionTime(Date.now());\n\n      // Nếu không có khuôn mặt nào được phát hiện, dừng lại\n      if (!detections || detections.length === 0) {\n        if (ENABLE_DEBUG_LOGS) {\n          console.log(\"[DEBUG] Không phát hiện khuôn mặt\");\n        }\n        return;\n      }\n      if (ENABLE_DEBUG_LOGS) {\n        console.log(`[DEBUG] Đã phát hiện ${detections.length} khuôn mặt`);\n      }\n\n      // Xử lý nhận diện khuôn mặt nếu có sinh viên\n      if (classStudents && classStudents.length > 0) {\n        // Xử lý nhận diện khuôn mặt sẽ được thêm sau\n      }\n    } catch (error) {\n      console.error(\"Lỗi khi xử lý khuôn mặt:\", error);\n    }\n  };\n\n  // Cập nhật hàm handleDetectFaces để kiểm tra camera trước\n  const handleDetectFaces = async (landmarkOnly = false) => {\n    var _webcamRef$current2;\n    if (cameraMode !== \"face_recognition\" || !faceapi || !canvasRef.current) return;\n\n    // Xác định video element hiện tại (từ webcam hoặc video trực tiếp)\n    const videoElement = isAutoMode ? videoRef.current : (_webcamRef$current2 = webcamRef.current) === null || _webcamRef$current2 === void 0 ? void 0 : _webcamRef$current2.video;\n    if (!videoElement || videoElement.readyState !== 4) return;\n    const canvasElement = canvasRef.current;\n\n    // Lấy kích thước thực của video\n    const videoWidth = videoElement.videoWidth || videoElement.width;\n    const videoHeight = videoElement.videoHeight || videoElement.height;\n\n    // Lấy kích thước hiển thị của container\n    const displayWidth = videoElement.clientWidth;\n    const displayHeight = videoElement.clientHeight;\n\n    // Đặt kích thước thực cho canvas để đảm bảo chất lượng cao\n    canvasElement.width = displayWidth;\n    canvasElement.height = displayHeight;\n\n    // Đặt kích thước hiển thị trong CSS\n    canvasElement.style.width = `${displayWidth}px`;\n    canvasElement.style.height = `${displayHeight}px`;\n\n    // Sử dụng kích thước hiển thị thực tế cho faceapi\n    const displaySize = {\n      width: displayWidth,\n      height: displayHeight\n    };\n    faceapi.matchDimensions(canvasElement, displaySize);\n    try {\n      // Thay đổi sử dụng SsdMobilenetv1 thay vì TinyFaceDetector để chính xác hơn\n      const detections = await faceapi.detectAllFaces(videoElement, new faceapi.SsdMobilenetv1Options({\n        minConfidence: 0.5 // Tăng ngưỡng để giảm phát hiện sai\n      })).withFaceLandmarks();\n\n      // Thêm descriptors nếu không phải chỉ vẽ landmarks\n      const finalDetections = landmarkOnly ? detections : await faceapi.detectAllFaces(videoElement, new faceapi.SsdMobilenetv1Options({\n        minConfidence: 0.5\n      })).withFaceLandmarks().withFaceDescriptors();\n\n      // Điều chỉnh kết quả theo kích thước hiển thị\n      const resizedDetections = faceapi.resizeResults(finalDetections, displaySize);\n\n      // Xóa canvas trước khi vẽ mới\n      const ctx = canvasElement.getContext(\"2d\");\n      ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n\n      // Vẽ các landmarks nếu showLandmark được bật\n      if (showLandmark) {\n        // Vẽ các khung nhận diện\n        faceapi.draw.drawDetections(canvasElement, resizedDetections);\n\n        // Vẽ landmarks với kích thước lớn hơn và chính xác hơn\n        resizedDetections.forEach(detection => {\n          const landmarks = detection.landmarks;\n          const positions = landmarks.positions;\n\n          // Vẽ đường viền khuôn mặt\n          ctx.strokeStyle = \"#00FF00\";\n          ctx.lineWidth = 2;\n\n          // Vẽ đường viền mặt (từ 0-16)\n          ctx.beginPath();\n          ctx.moveTo(positions[0].x, positions[0].y);\n          for (let i = 1; i <= 16; i++) {\n            ctx.lineTo(positions[i].x, positions[i].y);\n          }\n          ctx.stroke();\n\n          // Vẽ lông mày trái (từ 17-21)\n          ctx.beginPath();\n          ctx.moveTo(positions[17].x, positions[17].y);\n          for (let i = 18; i <= 21; i++) {\n            ctx.lineTo(positions[i].x, positions[i].y);\n          }\n          ctx.stroke();\n\n          // Vẽ lông mày phải (từ 22-26)\n          ctx.beginPath();\n          ctx.moveTo(positions[22].x, positions[22].y);\n          for (let i = 23; i <= 26; i++) {\n            ctx.lineTo(positions[i].x, positions[i].y);\n          }\n          ctx.stroke();\n\n          // Vẽ sống mũi (từ 27-30)\n          ctx.beginPath();\n          ctx.moveTo(positions[27].x, positions[27].y);\n          for (let i = 28; i <= 30; i++) {\n            ctx.lineTo(positions[i].x, positions[i].y);\n          }\n          ctx.stroke();\n\n          // Vẽ mũi dưới (từ 30-35)\n          ctx.beginPath();\n          ctx.moveTo(positions[30].x, positions[30].y);\n          ctx.lineTo(positions[31].x, positions[31].y);\n          ctx.lineTo(positions[32].x, positions[32].y);\n          ctx.lineTo(positions[33].x, positions[33].y);\n          ctx.lineTo(positions[34].x, positions[34].y);\n          ctx.lineTo(positions[35].x, positions[35].y);\n          ctx.stroke();\n\n          // Vẽ mắt trái\n          ctx.beginPath();\n          ctx.moveTo(positions[36].x, positions[36].y);\n          for (let i = 37; i <= 41; i++) {\n            ctx.lineTo(positions[i].x, positions[i].y);\n          }\n          ctx.lineTo(positions[36].x, positions[36].y);\n          ctx.strokeStyle = \"#FF0000\";\n          ctx.stroke();\n\n          // Vẽ mắt phải\n          ctx.beginPath();\n          ctx.moveTo(positions[42].x, positions[42].y);\n          for (let i = 43; i <= 47; i++) {\n            ctx.lineTo(positions[i].x, positions[i].y);\n          }\n          ctx.lineTo(positions[42].x, positions[42].y);\n          ctx.strokeStyle = \"#0000FF\";\n          ctx.stroke();\n\n          // Vẽ miệng ngoài\n          ctx.beginPath();\n          ctx.moveTo(positions[48].x, positions[48].y);\n          for (let i = 49; i <= 59; i++) {\n            ctx.lineTo(positions[i].x, positions[i].y);\n          }\n          ctx.lineTo(positions[48].x, positions[48].y);\n          ctx.strokeStyle = \"#FF00FF\";\n          ctx.stroke();\n\n          // Vẽ miệng trong\n          ctx.beginPath();\n          ctx.moveTo(positions[60].x, positions[60].y);\n          for (let i = 61; i <= 67; i++) {\n            ctx.lineTo(positions[i].x, positions[i].y);\n          }\n          ctx.lineTo(positions[60].x, positions[60].y);\n          ctx.strokeStyle = \"#FF00FF\";\n          ctx.stroke();\n\n          // Vẽ các điểm landmark riêng lẻ với kích thước lớn hơn\n          positions.forEach((point, index) => {\n            let color, size;\n\n            // Thay đổi màu sắc và kích thước tùy theo vùng\n            if (index >= 36 && index <= 41) {\n              // Mắt trái\n              color = \"#FF0000\";\n              size = 3;\n            } else if (index >= 42 && index <= 47) {\n              // Mắt phải\n              color = \"#0000FF\";\n              size = 3;\n            } else if (index >= 27 && index <= 35) {\n              // Mũi\n              color = \"#FFFF00\";\n              size = 3;\n            } else if (index >= 48 && index <= 67) {\n              // Miệng\n              color = \"#FF00FF\";\n              size = 3;\n            } else {\n              // Viền mặt\n              color = \"#00FF00\";\n              size = 3;\n            }\n\n            // Vẽ điểm\n            ctx.fillStyle = color;\n            ctx.beginPath();\n            ctx.arc(point.x, point.y, size, 0, 2 * Math.PI);\n            ctx.fill();\n          });\n\n          // Hiển thị thông tin bên dưới hộp giới hạn\n          const box = detection.detection.box;\n          ctx.fillStyle = \"#FFFFFF\";\n          ctx.font = \"16px Arial\";\n          ctx.fillText(\"Đã phát hiện khuôn mặt\", box.x, box.y + box.height + 20);\n\n          // Tạo viền cho chữ\n          ctx.strokeStyle = \"#000000\";\n          ctx.lineWidth = 0.5;\n          ctx.strokeText(\"Đã phát hiện khuôn mặt\", box.x, box.y + box.height + 20);\n        });\n      }\n\n      // Chỉ xử lý nhận diện nếu không phải chỉ vẽ landmarks\n      if (!landmarkOnly) {\n        handleFaceDetection(resizedDetections);\n      }\n      return resizedDetections;\n    } catch (error) {\n      console.error(\"Lỗi khi phát hiện khuôn mặt:\", error);\n      return [];\n    }\n  };\n\n  // Điểm danh thủ công\n  const openManualAttendanceDialog = student => {\n    setSelectedStudent(student);\n    setManualAttendanceData({\n      status: \"present\",\n      note: \"\"\n    });\n    setManualDialogOpen(true);\n  };\n  const handleManualDialogClose = () => {\n    setManualDialogOpen(false);\n  };\n  const handleManualAttendanceChange = e => {\n    setManualAttendanceData({\n      ...manualAttendanceData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleManualAttendanceSubmit = async () => {\n    if (!selectedStudent) return;\n    try {\n      const result = await dispatch(manualAttendance({\n        sessionId,\n        studentId: selectedStudent._id,\n        status: manualAttendanceData.status,\n        note: manualAttendanceData.note\n      })).unwrap();\n\n      // Cập nhật logs điểm danh\n      if (result && result.data) {\n        const updatedLogs = attendanceLogs.filter(log => log.student_id._id !== selectedStudent._id);\n        updatedLogs.push({\n          ...result.data,\n          student_id: selectedStudent\n        });\n        setAttendanceLogs(updatedLogs);\n      }\n      enqueueSnackbar(\"Điểm danh thủ công thành công\", {\n        variant: \"success\"\n      });\n      handleManualDialogClose();\n\n      // Cập nhật lại thông tin phiên điểm danh\n      const sessionResponse = await axios.get(`${API_URL}/attendance/sessions/${sessionId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSessionInfo(sessionResponse.data.data);\n    } catch (error) {\n      console.error(\"Lỗi khi điểm danh thủ công:\", error);\n      enqueueSnackbar(\"Lỗi khi điểm danh thủ công\", {\n        variant: \"error\"\n      });\n    }\n  };\n\n  // Đánh dấu điểm danh từ nhận diện khuôn mặt\n  const markAttendance = async (studentId, faceDescriptor, confidence, imageBase64) => {\n    try {\n      const result = await dispatch(verifyAttendance({\n        sessionId,\n        studentId,\n        faceDescriptor,\n        confidence,\n        imageBase64\n      })).unwrap();\n\n      // Cập nhật logs điểm danh\n      if (result && result.data) {\n        const student = classStudents.find(s => s._id === studentId);\n        if (student) {\n          const updatedLogs = attendanceLogs.filter(log => log.student_id._id !== studentId);\n          updatedLogs.push({\n            ...result.data,\n            student_id: student\n          });\n          setAttendanceLogs(updatedLogs);\n          enqueueSnackbar(`Đã điểm danh cho ${student.full_name}`, {\n            variant: \"success\"\n          });\n        }\n      }\n\n      // Cập nhật lại thông tin phiên điểm danh\n      const sessionResponse = await axios.get(`${API_URL}/attendance/sessions/${sessionId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSessionInfo(sessionResponse.data.data);\n      return true;\n    } catch (error) {\n      console.error(\"Lỗi khi xác nhận điểm danh:\", error);\n      enqueueSnackbar(\"Lỗi khi xác nhận điểm danh\", {\n        variant: \"error\"\n      });\n      return false;\n    }\n  };\n\n  // Kết thúc phiên điểm danh\n  const completeSession = async () => {\n    try {\n      await axios.put(`${API_URL}/attendance/sessions/${sessionId}`, {\n        status: \"completed\"\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      enqueueSnackbar(\"Phiên điểm danh đã kết thúc\", {\n        variant: \"success\"\n      });\n      navigate(`/teacher/classes/${classId}`);\n    } catch (error) {\n      console.error(\"Lỗi khi kết thúc phiên điểm danh:\", error);\n      enqueueSnackbar(\"Lỗi khi kết thúc phiên điểm danh\", {\n        variant: \"error\"\n      });\n    }\n  };\n\n  // Làm mới danh sách điểm danh\n  const refreshAttendanceLogs = async () => {\n    try {\n      const logsResponse = await axios.get(`${API_URL}/attendance/logs/${sessionId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setAttendanceLogs(logsResponse.data.data);\n      const sessionResponse = await axios.get(`${API_URL}/attendance/sessions/${sessionId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSessionInfo(sessionResponse.data.data);\n      enqueueSnackbar(\"Đã làm mới dữ liệu điểm danh\", {\n        variant: \"success\"\n      });\n    } catch (error) {\n      console.error(\"Lỗi khi làm mới dữ liệu:\", error);\n      enqueueSnackbar(\"Lỗi khi làm mới dữ liệu\", {\n        variant: \"error\"\n      });\n    }\n  };\n\n  // Chụp ảnh và nhận diện thủ công\n  const captureAndRecognize = async () => {\n    await handleDetectFaces();\n  };\n\n  // Xử lý đánh dấu sinh viên điểm danh\n  const handleMarkAttendance = async (studentId, confidence) => {\n    // Kiểm tra xem sinh viên đã được điểm danh chưa\n    const isAlreadyAttended = attendanceLogs.some(log => log.student_id._id === studentId && log.status === \"present\");\n    if (isAlreadyAttended) {\n      if (ENABLE_DEBUG_LOGS) {\n        console.log(`[DEBUG] Sinh viên ${studentId} đã được điểm danh trước đó`);\n      }\n      return;\n    }\n    try {\n      var _webcamRef$current3;\n      // Lấy dữ liệu video\n      const videoElement = isAutoMode ? videoRef.current : (_webcamRef$current3 = webcamRef.current) === null || _webcamRef$current3 === void 0 ? void 0 : _webcamRef$current3.video;\n      if (!videoElement) return;\n\n      // Tạo ảnh chụp từ video element\n      let imageBase64 = null;\n\n      // Nếu sử dụng webcam component\n      if (!isAutoMode && webcamRef.current) {\n        imageBase64 = webcamRef.current.getScreenshot();\n      }\n      // Nếu sử dụng video element trực tiếp\n      else if (isAutoMode) {\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = videoElement.videoWidth;\n        canvas.height = videoElement.videoHeight;\n        const ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(videoElement, 0, 0);\n        imageBase64 = canvas.toDataURL(\"image/jpeg\");\n      }\n\n      // Tìm sinh viên đã được phát hiện\n      const student = classStudents.find(s => s._id === studentId);\n      if (!student) {\n        console.error(`Không tìm thấy sinh viên với ID ${studentId}`);\n        return;\n      }\n\n      // Lấy descriptor mới nhất từ sinh viên\n      let descriptor = null;\n\n      // Kiểm tra và lấy descriptor từ các cấu trúc khác nhau\n      if (student.faceFeatures && student.faceFeatures.descriptors && Array.isArray(student.faceFeatures.descriptors) && student.faceFeatures.descriptors.length > 0) {\n        // Lấy từ cấu trúc mới\n        if (Array.isArray(student.faceFeatures.descriptors[0])) {\n          descriptor = student.faceFeatures.descriptors[0];\n        } else if (Array.isArray(student.faceFeatures.descriptors[0][0])) {\n          descriptor = student.faceFeatures.descriptors[0][0];\n        }\n      } else if (student.faceDescriptors && Array.isArray(student.faceDescriptors) && student.faceDescriptors.length > 0) {\n        // Lấy từ cấu trúc cũ\n        if (typeof student.faceDescriptors[0] === \"object\") {\n          if (student.faceDescriptors[0].descriptors && Array.isArray(student.faceDescriptors[0].descriptors) && student.faceDescriptors[0].descriptors.length > 0) {\n            descriptor = student.faceDescriptors[0].descriptors[0];\n          } else {\n            // Tìm mảng 128 phần tử đầu tiên trong object\n            Object.keys(student.faceDescriptors[0]).forEach(key => {\n              const value = student.faceDescriptors[0][key];\n              if (!descriptor && Array.isArray(value) && value.length === 128) {\n                descriptor = value;\n              }\n            });\n          }\n        } else if (Array.isArray(student.faceDescriptors[0]) && student.faceDescriptors[0].length === 128) {\n          descriptor = student.faceDescriptors[0];\n        }\n      }\n\n      // Gọi API điểm danh\n      if (ENABLE_DEBUG_LOGS) {\n        console.log(`[DEBUG] Đánh dấu điểm danh cho ${student.full_name} với độ tin cậy ${confidence.toFixed(2)}`);\n      }\n\n      // Gọi hàm điểm danh\n      await markAttendance(studentId, descriptor, confidence, imageBase64);\n    } catch (error) {\n      console.error(\"Lỗi khi đánh dấu điểm danh:\", error);\n    }\n  };\n\n  // Bật/tắt hiển thị landmark trên khuôn mặt\n  const toggleLandmarkDetection = () => {\n    const newState = !showLandmark;\n    setShowLandmark(newState);\n\n    // Bắt đầu hoặc dừng interval landmark detection\n    if (newState) {\n      startLandmarkDetection();\n    } else if (landmarkIntervalId) {\n      clearInterval(landmarkIntervalId);\n      setLandmarkIntervalId(null);\n\n      // Xóa canvas khi tắt landmarks\n      const canvasElement = canvasRef.current;\n      if (canvasElement) {\n        const ctx = canvasElement.getContext(\"2d\");\n        ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n      }\n    }\n  };\n\n  // Thêm hàm debug để kiểm tra cấu trúc dữ liệu khuôn mặt\n  const debugFaceFeatures = () => {\n    if (!classStudents || classStudents.length === 0) {\n      console.log(\"[DEBUG] Không có sinh viên nào để kiểm tra dữ liệu khuôn mặt\");\n      return;\n    }\n    classStudents.forEach((student, index) => {\n      console.log(`[DEBUG] Sinh viên #${index + 1}: ${student.full_name}`);\n\n      // Kiểm tra dữ liệu faceFeatures\n      if (student.faceFeatures) {\n        console.log(`  - Có dữ liệu faceFeatures`);\n\n        // Kiểm tra descriptors\n        if (student.faceFeatures.descriptors) {\n          console.log(`  - Có descriptors: ${student.faceFeatures.descriptors.length} nhóm`);\n          student.faceFeatures.descriptors.forEach((group, groupIndex) => {\n            if (Array.isArray(group)) {\n              console.log(`    - Nhóm #${groupIndex + 1}: ${group.length} descriptors`);\n              group.forEach((descriptor, descIndex) => {\n                if (Array.isArray(descriptor)) {\n                  console.log(`      - Descriptor #${descIndex + 1}: ${descriptor.length} phần tử`);\n                } else {\n                  console.log(`      - Descriptor #${descIndex + 1}: Không phải mảng`);\n                }\n              });\n            } else {\n              console.log(`    - Nhóm #${groupIndex + 1}: Không phải mảng`);\n            }\n          });\n        } else {\n          console.log(`  - Không có dữ liệu descriptors`);\n        }\n      } else {\n        console.log(`  - Không có dữ liệu faceFeatures`);\n      }\n\n      // Kiểm tra dữ liệu cũ (faceDescriptors)\n      if (student.faceDescriptors) {\n        console.log(`  - Có dữ liệu faceDescriptors (cấu trúc cũ): ${student.faceDescriptors.length} descriptors`);\n      }\n    });\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"60vh\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1390,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1384,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Lấy danh sách sinh viên vắng mặt\n  const getAbsentStudents = () => {\n    if (!classInfo || !sessionInfo) return [];\n    const presentStudentIds = attendanceLogs.filter(log => log.status === \"present\").map(log => log.student_id._id);\n    return classInfo.students.filter(student => !presentStudentIds.includes(student._id));\n  };\n  const absentStudents = getAbsentStudents();\n\n  // Điểm danh thủ công trong chế độ đơn giản\n  const showStudentList = () => {\n    if (!classInfo) return;\n\n    // Hiển thị danh sách sinh viên để điểm danh thủ công\n    const absentStudents = getAbsentStudents();\n    if (absentStudents.length === 0) {\n      enqueueSnackbar(\"Tất cả sinh viên đã được điểm danh\", {\n        variant: \"success\"\n      });\n      return;\n    }\n\n    // Hiển thị dialog chọn sinh viên để điểm danh\n    if (absentStudents.length > 0 && absentStudents[0]) {\n      openManualAttendanceDialog(absentStudents[0]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: [\"\\u0110i\\u1EC3m Danh - \", classInfo === null || classInfo === void 0 ? void 0 : classInfo.class_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1431,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      color: \"textSecondary\",\n      gutterBottom: true,\n      children: [\"Bu\\u1ED5i \", sessionInfo === null || sessionInfo === void 0 ? void 0 : sessionInfo.session_number, \" -\", \" \", new Date(sessionInfo === null || sessionInfo === void 0 ? void 0 : sessionInfo.date).toLocaleDateString(\"vi-VN\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1434,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      mt: 1,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              mb: 2,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Camera nh\\u1EADn di\\u1EC7n\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1449,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Chip, {\n                  label: isAutoMode ? \"Tự động đang bật\" : \"Tự động đang tắt\",\n                  color: isAutoMode ? \"success\" : \"default\",\n                  sx: {\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1451,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: isAutoMode ? \"error\" : \"primary\",\n                  onClick: isAutoMode ? () => {\n                    // Dừng tự động\n                    if (intervalId) {\n                      clearInterval(intervalId);\n                      setIntervalId(null);\n                    }\n                    setIsAutoMode(false);\n                    enqueueSnackbar(\"Đã tắt chế độ tự động điểm danh\", {\n                      variant: \"info\"\n                    });\n                  } : () => {\n                    // Bắt đầu tự động\n                    if (intervalId) {\n                      clearInterval(intervalId);\n                    }\n                    // Khởi tạo thời gian phát hiện ban đầu\n                    setLastDetectionTime(Date.now());\n                    const id = setInterval(() => {\n                      handleDetectFaces();\n                    }, AUTO_DETECT_INTERVAL);\n                    setIntervalId(id);\n                    setIsAutoMode(true);\n                    enqueueSnackbar(\"Đã bật chế độ tự động điểm danh\", {\n                      variant: \"info\"\n                    });\n                  },\n                  children: isAutoMode ? \"Tắt tự động\" : \"Bật tự động\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1456,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1450,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1443,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1442,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            sx: {\n              position: \"relative\",\n              width: \"100%\",\n              height: \"400px\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              overflow: \"hidden\",\n              mb: 2\n            },\n            children: isCameraReady ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [isAutoMode ?\n              /*#__PURE__*/\n              // Sử dụng video element trực tiếp thay vì Webcam component\n              _jsxDEV(\"video\", {\n                ref: videoRef,\n                style: {\n                  position: \"absolute\",\n                  width: \"100%\",\n                  height: \"100%\",\n                  objectFit: \"cover\"\n                },\n                autoPlay: true,\n                playsInline: true,\n                muted: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1513,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Webcam, {\n                audio: false,\n                ref: webcamRef,\n                screenshotFormat: \"image/jpeg\",\n                width: 640,\n                height: 480,\n                videoConstraints: {\n                  width: 640,\n                  height: 480,\n                  facingMode: \"user\"\n                },\n                style: {\n                  position: \"absolute\",\n                  width: \"100%\",\n                  height: \"100%\",\n                  objectFit: \"cover\"\n                },\n                onUserMedia: stream => {\n                  console.log(\"Camera đã được cấp quyền và khởi tạo\", stream.id);\n                  // Đảm bảo readyState được kiểm tra khi stream đã sẵn sàng\n                  setTimeout(() => {\n                    if (webcamRef.current && webcamRef.current.video) {\n                      console.log(\"Stream ready, readyState=\", webcamRef.current.video.readyState);\n                      dispatch(setCameraReady(true));\n                      // Đặt thời gian phát hiện ban đầu\n                      setLastDetectionTime(Date.now());\n                    }\n                  }, 500);\n                },\n                onUserMediaError: err => {\n                  console.error(\"Lỗi khi truy cập camera:\", err);\n                  enqueueSnackbar(`Không thể truy cập camera: ${err.name === \"NotAllowedError\" ? \"Bạn chưa cấp quyền truy cập camera\" : err.name === \"NotFoundError\" ? \"Không tìm thấy thiết bị camera\" : err.message || \"Lỗi không xác định\"}`, {\n                    variant: \"error\"\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1526,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n                ref: canvasRef,\n                style: {\n                  position: \"absolute\",\n                  top: 0,\n                  left: 0,\n                  width: \"100%\",\n                  height: \"100%\",\n                  objectFit: \"cover\",\n                  zIndex: 10\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1579,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 50\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1594,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                mt: 2,\n                children: \"\\u0110ang kh\\u1EDFi t\\u1EA1o camera...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1595,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                color: \"text.secondary\",\n                sx: {\n                  mt: 1\n                },\n                children: isModelLoaded ? \"Chờ kết nối camera - Hãy đảm bảo bạn đã cấp quyền camera\" : \"Đang tải mô hình nhận diện khuôn mặt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1596,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mt: 2,\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\",\n                  gap: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  size: \"small\",\n                  onClick: initDirectCamera,\n                  children: \"Kh\\u1EDFi \\u0111\\u1ED9ng camera tr\\u1EF1c ti\\u1EBFp\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1615,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: \"secondary\",\n                  size: \"small\",\n                  onClick: () => {\n                    setIsAutoMode(true);\n                    // Khởi tạo thời gian phát hiện ban đầu\n                    setLastDetectionTime(Date.now());\n                    const id = setInterval(() => {\n                      handleDetectFaces();\n                    }, AUTO_DETECT_INTERVAL);\n                    setIntervalId(id);\n                    enqueueSnackbar(\"Đã bật tự động điểm danh\", {\n                      variant: \"info\"\n                    });\n                  },\n                  children: \"B\\u1EAFt \\u0111\\u1EA7u t\\u1EF1 \\u0111\\u1ED9ng \\u0111i\\u1EC3m danh\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1624,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: \"warning\",\n                  size: \"small\",\n                  onClick: showStudentList,\n                  children: \"\\u0110i\\u1EC3m danh th\\u1EE7 c\\xF4ng\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1644,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Alert, {\n                  severity: \"info\",\n                  sx: {\n                    mt: 2,\n                    maxWidth: 300\n                  },\n                  children: [\"N\\u1EBFu camera kh\\xF4ng ho\\u1EA1t \\u0111\\u1ED9ng, vui l\\xF2ng th\\u1EED:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n                    style: {\n                      margin: \"8px 0\",\n                      paddingLeft: \"20px\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                      children: \"Ki\\u1EC3m tra quy\\u1EC1n camera tr\\xEAn tr\\xECnh duy\\u1EC7t\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1656,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: \"L\\xE0m m\\u1EDBi trang v\\xE0 th\\u1EED l\\u1EA1i\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1657,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: \"\\u0110\\u1EA3m b\\u1EA3o kh\\xF4ng c\\xF3 \\u1EE9ng d\\u1EE5ng kh\\xE1c \\u0111ang s\\u1EED d\\u1EE5ng camera\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1658,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1655,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1653,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1606,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1593,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1496,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              onClick: captureAndRecognize,\n              startIcon: /*#__PURE__*/_jsxDEV(CameraAlt, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1672,\n                columnNumber: 28\n              }, this),\n              disabled: !isCameraReady || isRecognizing || isAutoMode,\n              children: isRecognizing ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 24,\n                color: \"inherit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1676,\n                columnNumber: 19\n              }, this) : \"Chụp & Nhận diện\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1669,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: [isCameraReady && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: showLandmark ? \"success\" : \"info\",\n                  onClick: toggleLandmarkDetection,\n                  sx: {\n                    mr: 1\n                  },\n                  children: showLandmark ? \"Tắt Landmark\" : \"Hiện Landmark\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1685,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: isAutoMode ? \"error\" : \"primary\",\n                  onClick: () => {\n                    // Dừng tự động\n                    if (intervalId) {\n                      clearInterval(intervalId);\n                      setIntervalId(null);\n                    }\n                    setIsAutoMode(false);\n                    enqueueSnackbar(\"Đã tắt chế độ tự động điểm danh\", {\n                      variant: \"info\"\n                    });\n                  },\n                  sx: {\n                    mr: 1\n                  },\n                  children: isAutoMode ? \"Tắt tự động\" : \"Bật tự động\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1694,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: completeSession,\n                startIcon: /*#__PURE__*/_jsxDEV(Save, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1719,\n                  columnNumber: 30\n                }, this),\n                disabled: (sessionInfo === null || sessionInfo === void 0 ? void 0 : sessionInfo.status) === \"completed\",\n                children: \"K\\u1EBFt th\\xFAc phi\\xEAn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1715,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1682,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1668,\n            columnNumber: 13\n          }, this), recognizedStudents.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n            mt: 2,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: [\"\\u0110\\xE3 nh\\u1EADn di\\u1EC7n (\", recognizedStudents.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1729,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 1,\n              children: recognizedStudents.map((student, index) => /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                sm: 4,\n                children: /*#__PURE__*/_jsxDEV(Paper, {\n                  elevation: 2,\n                  sx: {\n                    p: 1,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    noWrap: true,\n                    children: student.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1744,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    color: \"textSecondary\",\n                    children: [Math.round(student.confidence * 100), \"% match\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1747,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    variant: \"outlined\",\n                    color: \"primary\",\n                    sx: {\n                      mt: 1\n                    },\n                    onClick: () => handleMarkAttendance(student.studentId, student.confidence),\n                    children: [/*#__PURE__*/_jsxDEV(Check, {\n                      fontSize: \"small\",\n                      sx: {\n                        mr: 0.5\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1762,\n                      columnNumber: 27\n                    }, this), \"\\u0110i\\u1EC3m danh\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1750,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1735,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1734,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1732,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1728,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1441,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1440,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            mb: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              mb: 2,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: [\"C\\xF3 m\\u1EB7t (\", attendanceLogs.filter(log => log.status === \"present\").length, \"/\", classInfo === null || classInfo === void 0 ? void 0 : classInfo.students.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1783,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"small\",\n                onClick: refreshAttendanceLogs,\n                children: /*#__PURE__*/_jsxDEV(Refresh, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1792,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1791,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1777,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              dense: true,\n              children: [attendanceLogs.filter(log => log.status === \"present\").sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp)).map(log => /*#__PURE__*/_jsxDEV(ListItem, {\n                secondaryAction: /*#__PURE__*/_jsxDEV(Chip, {\n                  size: \"small\",\n                  icon: log.recognized ? /*#__PURE__*/_jsxDEV(VerifiedUser, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1808,\n                    columnNumber: 31\n                  }, this) : null,\n                  label: log.recognized ? \"Tự động\" : \"Thủ công\",\n                  color: log.recognized ? \"success\" : \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1804,\n                  columnNumber: 25\n                }, this),\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    alt: log.student_id.full_name,\n                    src: log.student_id.avatar_url\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1817,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1816,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: log.student_id.full_name,\n                  secondary: `${new Date(log.timestamp).toLocaleTimeString(\"vi-VN\")}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1822,\n                  columnNumber: 23\n                }, this)]\n              }, log._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1801,\n                columnNumber: 21\n              }, this)), attendanceLogs.filter(log => log.status === \"present\").length === 0 && /*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: \"Ch\\u01B0a c\\xF3 sinh vi\\xEAn n\\xE0o \\u0111i\\u1EC3m danh\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1834,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1833,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1796,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1776,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1775,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: [\"V\\u1EAFng m\\u1EB7t (\", absentStudents.length, \"/\", classInfo === null || classInfo === void 0 ? void 0 : classInfo.students.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1843,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              dense: true,\n              children: [absentStudents.map(student => /*#__PURE__*/_jsxDEV(ListItem, {\n                secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n                  edge: \"end\",\n                  onClick: () => openManualAttendanceDialog(student),\n                  children: /*#__PURE__*/_jsxDEV(Edit, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1856,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1852,\n                  columnNumber: 23\n                }, this),\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    alt: student.full_name,\n                    src: student.avatar_url\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1861,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1860,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: student.full_name,\n                  secondary: student.student_code\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1866,\n                  columnNumber: 21\n                }, this)]\n              }, student._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1849,\n                columnNumber: 19\n              }, this)), absentStudents.length === 0 && /*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: \"Kh\\xF4ng c\\xF3 sinh vi\\xEAn n\\xE0o v\\u1EAFng m\\u1EB7t\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1875,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1874,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1847,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1842,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1841,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1774,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1439,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: manualDialogOpen,\n      onClose: handleManualDialogClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"\\u0110i\\u1EC3m danh th\\u1EE7 c\\xF4ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1886,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: [selectedStudent === null || selectedStudent === void 0 ? void 0 : selectedStudent.full_name, \" (\", selectedStudent === null || selectedStudent === void 0 ? void 0 : selectedStudent.student_code, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1889,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            margin: \"normal\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Tr\\u1EA1ng th\\xE1i\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1894,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              name: \"status\",\n              value: manualAttendanceData.status,\n              onChange: handleManualAttendanceChange,\n              label: \"Tr\\u1EA1ng th\\xE1i\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"present\",\n                children: \"C\\xF3 m\\u1EB7t\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1901,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"absent\",\n                children: \"V\\u1EAFng m\\u1EB7t\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1902,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"late\",\n                children: \"\\u0110i tr\\u1EC5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1903,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"early_leave\",\n                children: \"V\\u1EC1 s\\u1EDBm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1904,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1895,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1893,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            margin: \"normal\",\n            name: \"note\",\n            label: \"Ghi ch\\xFA\",\n            value: manualAttendanceData.note,\n            onChange: handleManualAttendanceChange,\n            multiline: true,\n            rows: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1908,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1888,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1887,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleManualDialogClose,\n          children: \"H\\u1EE7y\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1921,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleManualAttendanceSubmit,\n          variant: \"contained\",\n          children: \"X\\xE1c nh\\u1EADn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1922,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1920,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1885,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1430,\n    columnNumber: 5\n  }, this);\n};\n_s(AttendancePage, \"QGQFOpcDrHymCHYW+RSh6RaOX7c=\", false, function () {\n  return [useParams, useNavigate, useDispatch, useSnackbar, useSelector, useSelector];\n});\n_c = AttendancePage;\nexport default AttendancePage;\nvar _c;\n$RefreshReg$(_c, \"AttendancePage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","useDispatch","useSelector","useSnackbar","Box","Typography","Card","CardContent","Grid","Paper","Button","Divider","CircularProgress","List","ListItem","ListItemAvatar","ListItemText","Avatar","Chip","Dialog","DialogTitle","DialogContent","DialogActions","TextField","FormControl","InputLabel","Select","MenuItem","IconButton","Alert","CameraAlt","Check","Close","Edit","Refresh","Save","VerifiedUser","HourglassEmpty","Webcam","faceapi","getClassFaceFeatures","verifyAttendance","manualAttendance","setModelLoaded","setCameraReady","setDetectedFaces","setRecognizedStudents","clearRecognitionState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","process","env","REACT_APP_API_URL","AttendancePage","_s","classId","sessionId","navigate","dispatch","enqueueSnackbar","webcamRef","canvasRef","videoRef","intervalId","setIntervalId","showLandmark","setShowLandmark","landmarkIntervalId","setLandmarkIntervalId","cameraMode","setCameraMode","token","state","auth","isModelLoaded","isCameraReady","detectedFaces","recognizedStudents","classStudents","isProcessing","error","faceRecognition","classInfo","setClassInfo","sessionInfo","setSessionInfo","attendanceLogs","setAttendanceLogs","isLoading","setIsLoading","isRecognizing","setIsRecognizing","isAutoMode","setIsAutoMode","selectedStudent","setSelectedStudent","manualDialogOpen","setManualDialogOpen","manualAttendanceData","setManualAttendanceData","status","note","RECOGNITION_THRESHOLD","DETECTION_THRESHOLD","CONFIDENCE_THRESHOLD","AUTO_DETECT_INTERVAL","ENABLE_DEBUG_LOGS","cameraRetryCount","setCameraRetryCount","lastDetectionTime","setLastDetectionTime","landmarkDetectionInterval","setLandmarkDetectionInterval","loadInitialData","loadModelsPromise","loadFaceRecognitionModels","Promise","resolve","classPromise","get","headers","Authorization","sessionPromise","logsPromise","classResponse","sessionResponse","logsResponse","all","data","console","log","faceDataResponse","faceFeatureResult","unwrap","JSON","stringify","studentsData","Array","isArray","length","students","validDescriptorsCount","invalidDescriptorsCount","forEach","student","full_name","_id","faceFeatures","hasDescriptors","descriptors","validDescriptorsInStudent","group","groupIndex","descriptor","descIndex","hasOldDescriptors","faceDescriptors","flatDescriptors","validOldDescriptors","filter","desc","foundArrays","Object","keys","key","value","push","potentialDescriptors","arr","variant","autoHideDuration","apiError","_apiError$response","response","message","Date","now","clearInterval","current","video","srcObject","tracks","getTracks","track","stop","initDirectCamera","nets","ssdMobilenetv1","isLoaded","modelLoaded","constraints","width","ideal","min","height","facingMode","frameRate","audio","stream","navigator","mediaDevices","getUserMedia","id","getVideoTracks","getSettings","onloadedmetadata","play","catch","err","setTimeout","startLandmarkDetection","altStream","altErr","setInterval","handleDetectFaces","stopLandmarkDetection","MODEL_URL","modelPromises","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","modelStatuses","every","ensureCameraIsWorking","_webcamRef$current","videoElement","readyState","prev","handleFaceDetection","detections","landmarkOnly","_webcamRef$current2","canvasElement","videoWidth","videoHeight","displayWidth","clientWidth","displayHeight","clientHeight","style","displaySize","matchDimensions","detectAllFaces","SsdMobilenetv1Options","minConfidence","withFaceLandmarks","finalDetections","withFaceDescriptors","resizedDetections","resizeResults","ctx","getContext","clearRect","draw","drawDetections","detection","landmarks","positions","strokeStyle","lineWidth","beginPath","moveTo","x","y","i","lineTo","stroke","point","index","color","size","fillStyle","arc","Math","PI","fill","box","font","fillText","strokeText","openManualAttendanceDialog","handleManualDialogClose","handleManualAttendanceChange","e","target","name","handleManualAttendanceSubmit","result","studentId","updatedLogs","student_id","markAttendance","faceDescriptor","confidence","imageBase64","find","s","completeSession","put","refreshAttendanceLogs","captureAndRecognize","handleMarkAttendance","isAlreadyAttended","some","_webcamRef$current3","getScreenshot","canvas","document","createElement","drawImage","toDataURL","toFixed","toggleLandmarkDetection","newState","debugFaceFeatures","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","getAbsentStudents","presentStudentIds","map","includes","absentStudents","showStudentList","gutterBottom","class_name","session_number","date","toLocaleDateString","container","spacing","mt","item","xs","md","mb","label","sx","mr","onClick","elevation","position","overflow","ref","objectFit","autoPlay","playsInline","muted","screenshotFormat","videoConstraints","onUserMedia","onUserMediaError","top","left","zIndex","flexDirection","gap","severity","maxWidth","margin","paddingLeft","startIcon","disabled","sm","p","noWrap","round","fontSize","dense","sort","a","b","timestamp","secondaryAction","icon","recognized","alt","src","avatar_url","primary","secondary","toLocaleTimeString","edge","student_code","open","onClose","fullWidth","onChange","multiline","rows","_c","$RefreshReg$"],"sources":["C:/Users/kasiz/Documents/Studying/FaceReg/frontend/src/pages/teacher/AttendancePage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Paper,\r\n  Button,\r\n  Divider,\r\n  CircularProgress,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Avatar,\r\n  Chip,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  IconButton,\r\n  Alert,\r\n} from \"@mui/material\";\r\nimport {\r\n  CameraAlt,\r\n  Check,\r\n  Close,\r\n  Edit,\r\n  Refresh,\r\n  Save,\r\n  VerifiedUser,\r\n  HourglassEmpty,\r\n} from \"@mui/icons-material\";\r\nimport Webcam from \"react-webcam\";\r\nimport * as faceapi from \"face-api.js\";\r\nimport {\r\n  getClassFaceFeatures,\r\n  verifyAttendance,\r\n  manualAttendance,\r\n  setModelLoaded,\r\n  setCameraReady,\r\n  setDetectedFaces,\r\n  setRecognizedStudents,\r\n  clearRecognitionState,\r\n} from \"../../redux/slices/faceRecognitionSlice\";\r\nimport axios from \"axios\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\r\n\r\nconst AttendancePage = () => {\r\n  const { classId, sessionId } = useParams();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const videoRef = useRef(null);\r\n  const [intervalId, setIntervalId] = useState(null);\r\n  const [showLandmark, setShowLandmark] = useState(true);\r\n  const [landmarkIntervalId, setLandmarkIntervalId] = useState(null);\r\n  const [cameraMode, setCameraMode] = useState(\"face_recognition\");\r\n\r\n  const { token } = useSelector((state) => state.auth);\r\n  const {\r\n    isModelLoaded,\r\n    isCameraReady,\r\n    detectedFaces,\r\n    recognizedStudents,\r\n    classStudents,\r\n    isProcessing,\r\n    error,\r\n  } = useSelector((state) => state.faceRecognition);\r\n\r\n  const [classInfo, setClassInfo] = useState(null);\r\n  const [sessionInfo, setSessionInfo] = useState(null);\r\n  const [attendanceLogs, setAttendanceLogs] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isRecognizing, setIsRecognizing] = useState(false);\r\n  const [isAutoMode, setIsAutoMode] = useState(false);\r\n  const [selectedStudent, setSelectedStudent] = useState(null);\r\n  const [manualDialogOpen, setManualDialogOpen] = useState(false);\r\n  const [manualAttendanceData, setManualAttendanceData] = useState({\r\n    status: \"present\",\r\n    note: \"\",\r\n  });\r\n\r\n  // Các hằng số cấu hình\r\n  const RECOGNITION_THRESHOLD = 0.5; // Ngưỡng nhận diện\r\n  const DETECTION_THRESHOLD = 0.3; // Giảm ngưỡng phát hiện khuôn mặt\r\n  const CONFIDENCE_THRESHOLD = 0.6; // Ngưỡng độ tin cậy để điểm danh\r\n  const AUTO_DETECT_INTERVAL = 1000; // Thời gian giữa các lần phát hiện (ms)\r\n  const ENABLE_DEBUG_LOGS = true; // Bật/tắt log gỡ lỗi\r\n\r\n  // Thêm state mới để theo dõi số lần thử lại camera\r\n  const [cameraRetryCount, setCameraRetryCount] = useState(0);\r\n  const [lastDetectionTime, setLastDetectionTime] = useState(null);\r\n\r\n  // Thêm state theo dõi interval phát hiện landmarks\r\n  const [landmarkDetectionInterval, setLandmarkDetectionInterval] =\r\n    useState(null);\r\n\r\n  // Load class info, session info và models\r\n  useEffect(() => {\r\n    const loadInitialData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n\r\n        // Bắt đầu tải dữ liệu và models song song\r\n        const loadModelsPromise = !isModelLoaded\r\n          ? loadFaceRecognitionModels()\r\n          : Promise.resolve(true);\r\n\r\n        // Lấy thông tin lớp học\r\n        const classPromise = axios.get(\r\n          `${API_URL}/classes/teaching/${classId}`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        );\r\n\r\n        // Lấy thông tin phiên điểm danh\r\n        const sessionPromise = axios.get(\r\n          `${API_URL}/attendance/sessions/${sessionId}`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        );\r\n\r\n        // Lấy danh sách điểm danh\r\n        const logsPromise = axios.get(\r\n          `${API_URL}/attendance/logs/${sessionId}`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        );\r\n\r\n        // Chờ tất cả API calls hoàn thành\r\n        const [classResponse, sessionResponse, logsResponse] =\r\n          await Promise.all([classPromise, sessionPromise, logsPromise]);\r\n\r\n        setClassInfo(classResponse.data.data);\r\n        setSessionInfo(sessionResponse.data.data);\r\n        setAttendanceLogs(logsResponse.data.data);\r\n\r\n        // Lấy đặc trưng khuôn mặt của sinh viên trong lớp\r\n        console.log(\r\n          \"[DEBUG] Bắt đầu lấy đặc trưng khuôn mặt của sinh viên, classId:\",\r\n          classId\r\n        );\r\n\r\n        try {\r\n          // Gọi API trực tiếp để kiểm tra\r\n          const faceDataResponse = await axios.get(\r\n            `${API_URL}/face-recognition/class-features/${classId}`,\r\n            {\r\n              headers: { Authorization: `Bearer ${token}` },\r\n            }\r\n          );\r\n\r\n          console.log(\"[DEBUG] API response raw:\", faceDataResponse);\r\n          console.log(\"[DEBUG] API response data:\", faceDataResponse.data);\r\n\r\n          // Vẫn sử dụng redux dispatch để đảm bảo tính nhất quán\r\n          const faceFeatureResult = await dispatch(\r\n            getClassFaceFeatures(classId)\r\n          ).unwrap();\r\n\r\n          // Log toàn bộ result để debug\r\n          console.log(\"[DEBUG] Redux unwrapped result:\", faceFeatureResult);\r\n\r\n          // Kiểm tra xem có dữ liệu trả về không\r\n          if (faceFeatureResult) {\r\n            // Log dữ liệu để debug\r\n            console.log(\"[DEBUG] Bắt đầu phân tích dữ liệu khuôn mặt\");\r\n            console.log(\r\n              \"[DEBUG] faceFeatureResult structure:\",\r\n              JSON.stringify(faceFeatureResult, null, 2)\r\n            );\r\n\r\n            let studentsData = null;\r\n\r\n            // Kiểm tra các cấu trúc dữ liệu có thể có\r\n            if (Array.isArray(faceFeatureResult)) {\r\n              studentsData = faceFeatureResult;\r\n              console.log(\r\n                `[DEBUG] Nhận được dữ liệu khuôn mặt dạng mảng: ${studentsData.length} sinh viên`\r\n              );\r\n            } else if (\r\n              faceFeatureResult.data &&\r\n              Array.isArray(faceFeatureResult.data)\r\n            ) {\r\n              studentsData = faceFeatureResult.data;\r\n              console.log(\r\n                `[DEBUG] Nhận được dữ liệu khuôn mặt từ faceFeatureResult.data: ${studentsData.length} sinh viên`\r\n              );\r\n            } else if (\r\n              faceFeatureResult.students &&\r\n              Array.isArray(faceFeatureResult.students)\r\n            ) {\r\n              studentsData = faceFeatureResult.students;\r\n              console.log(\r\n                `[DEBUG] Nhận được dữ liệu khuôn mặt từ faceFeatureResult.students: ${studentsData.length} sinh viên`\r\n              );\r\n            }\r\n\r\n            if (studentsData && studentsData.length > 0) {\r\n              console.log(\r\n                `[DEBUG] Phân tích dữ liệu khuôn mặt của ${studentsData.length} sinh viên`\r\n              );\r\n\r\n              // Kiểm tra chi tiết dữ liệu khuôn mặt\r\n              let validDescriptorsCount = 0;\r\n              let invalidDescriptorsCount = 0;\r\n\r\n              studentsData.forEach((student) => {\r\n                console.log(\r\n                  `[DEBUG] Kiểm tra sinh viên: ${\r\n                    student.full_name || \"Unknown\"\r\n                  }, ID: ${student._id}`\r\n                );\r\n                console.log(`[DEBUG] Cấu trúc dữ liệu sinh viên:`, student);\r\n\r\n                // Kiểm tra nếu có faceFeatures\r\n                if (student.faceFeatures) {\r\n                  console.log(`[DEBUG] Sinh viên có dữ liệu faceFeatures`);\r\n\r\n                  // Kiểm tra nếu có descriptors\r\n                  const hasDescriptors =\r\n                    student.faceFeatures &&\r\n                    student.faceFeatures.descriptors &&\r\n                    Array.isArray(student.faceFeatures.descriptors) &&\r\n                    student.faceFeatures.descriptors.length > 0;\r\n\r\n                  if (hasDescriptors) {\r\n                    console.log(\r\n                      `[DEBUG] Sinh viên có ${student.faceFeatures.descriptors.length} nhóm descriptors`\r\n                    );\r\n\r\n                    // Đếm số descriptor hợp lệ\r\n                    let validDescriptorsInStudent = 0;\r\n\r\n                    student.faceFeatures.descriptors.forEach(\r\n                      (group, groupIndex) => {\r\n                        if (Array.isArray(group)) {\r\n                          group.forEach((descriptor, descIndex) => {\r\n                            if (\r\n                              Array.isArray(descriptor) &&\r\n                              descriptor.length === 128\r\n                            ) {\r\n                              validDescriptorsInStudent++;\r\n                            }\r\n                          });\r\n                        }\r\n                      }\r\n                    );\r\n\r\n                    if (validDescriptorsInStudent > 0) {\r\n                      validDescriptorsCount++;\r\n                      console.log(\r\n                        `[DEBUG] Sinh viên ${student.full_name} có ${validDescriptorsInStudent} descriptor hợp lệ`\r\n                      );\r\n                    } else {\r\n                      invalidDescriptorsCount++;\r\n                      console.log(\r\n                        `[DEBUG] Sinh viên ${student.full_name} không có descriptor hợp lệ`\r\n                      );\r\n                    }\r\n                  } else {\r\n                    invalidDescriptorsCount++;\r\n                    console.log(\r\n                      `[DEBUG] Sinh viên ${student.full_name} không có descriptors`\r\n                    );\r\n                  }\r\n                } else {\r\n                  // Kiểm tra nếu có faceDescriptors (cấu trúc cũ)\r\n                  const hasOldDescriptors =\r\n                    student.faceDescriptors &&\r\n                    Array.isArray(student.faceDescriptors) &&\r\n                    student.faceDescriptors.length > 0;\r\n\r\n                  if (hasOldDescriptors) {\r\n                    console.log(\r\n                      `[DEBUG] Sinh viên có ${student.faceDescriptors.length} descriptors (dạng cũ)`\r\n                    );\r\n                    console.log(\r\n                      `[DEBUG] Chi tiết faceDescriptors:`,\r\n                      JSON.stringify(student.faceDescriptors, null, 2)\r\n                    );\r\n\r\n                    // Thử các cách khác nhau để lấy descriptor\r\n                    if (typeof student.faceDescriptors[0] === \"object\") {\r\n                      // Nếu là object (không phải mảng), có thể nó là object có chứa descriptor\r\n                      console.log(\r\n                        `[DEBUG] Descriptor là object:`,\r\n                        student.faceDescriptors[0]\r\n                      );\r\n\r\n                      // Kiểm tra nếu descriptor nằm trong object.descriptors hoặc object.0\r\n                      if (\r\n                        student.faceDescriptors[0].descriptors &&\r\n                        Array.isArray(student.faceDescriptors[0].descriptors)\r\n                      ) {\r\n                        console.log(\r\n                          `[DEBUG] Tìm thấy descriptors trong object.descriptors`\r\n                        );\r\n                        // Sử dụng descriptors trong object\r\n                        const flatDescriptors =\r\n                          student.faceDescriptors[0].descriptors;\r\n\r\n                        const validOldDescriptors = flatDescriptors.filter(\r\n                          (desc) => Array.isArray(desc) && desc.length === 128\r\n                        ).length;\r\n\r\n                        if (validOldDescriptors > 0) {\r\n                          validDescriptorsCount++;\r\n                          console.log(\r\n                            `[DEBUG] Sinh viên ${student.full_name} có ${validOldDescriptors} descriptor hợp lệ trong object.descriptors`\r\n                          );\r\n                        }\r\n                      } else {\r\n                        // Duyệt tất cả các thuộc tính của object để tìm mảng\r\n                        const foundArrays = [];\r\n                        Object.keys(student.faceDescriptors[0]).forEach(\r\n                          (key) => {\r\n                            const value = student.faceDescriptors[0][key];\r\n                            if (Array.isArray(value)) {\r\n                              console.log(\r\n                                `[DEBUG] Tìm thấy mảng trong thuộc tính ${key}, độ dài: ${value.length}`\r\n                              );\r\n                              foundArrays.push(value);\r\n                            }\r\n                          }\r\n                        );\r\n\r\n                        // Kiểm tra các mảng tìm được\r\n                        if (foundArrays.length > 0) {\r\n                          // Ưu tiên mảng có 128 phần tử\r\n                          const potentialDescriptors = foundArrays.filter(\r\n                            (arr) => arr.length === 128\r\n                          );\r\n                          if (potentialDescriptors.length > 0) {\r\n                            validDescriptorsCount++;\r\n                            console.log(\r\n                              `[DEBUG] Sinh viên ${student.full_name} có descriptor hợp lệ trong thuộc tính object`\r\n                            );\r\n                          }\r\n                        }\r\n                      }\r\n                    } else {\r\n                      // Xử lý thông thường\r\n                      const validOldDescriptors =\r\n                        student.faceDescriptors.filter(\r\n                          (desc) => Array.isArray(desc) && desc.length === 128\r\n                        ).length;\r\n\r\n                      if (validOldDescriptors > 0) {\r\n                        validDescriptorsCount++;\r\n                        console.log(\r\n                          `[DEBUG] Sinh viên ${student.full_name} có ${validOldDescriptors} descriptor hợp lệ (dạng cũ)`\r\n                        );\r\n                      } else {\r\n                        invalidDescriptorsCount++;\r\n                        console.log(\r\n                          `[DEBUG] Sinh viên ${student.full_name} không có descriptor hợp lệ (dạng cũ)`\r\n                        );\r\n                      }\r\n                    }\r\n                  } else {\r\n                    invalidDescriptorsCount++;\r\n                    console.log(\r\n                      `[DEBUG] Sinh viên ${student.full_name} không có dữ liệu khuôn mặt`\r\n                    );\r\n                  }\r\n                }\r\n              });\r\n\r\n              console.log(\r\n                `[DEBUG] Tổng hợp: ${validDescriptorsCount} sinh viên có descriptor hợp lệ, ${invalidDescriptorsCount} sinh viên không có`\r\n              );\r\n\r\n              if (validDescriptorsCount === 0) {\r\n                enqueueSnackbar(\r\n                  \"Không có sinh viên nào có dữ liệu khuôn mặt, vui lòng cập nhật dữ liệu\",\r\n                  {\r\n                    variant: \"warning\",\r\n                    autoHideDuration: 8000,\r\n                  }\r\n                );\r\n              }\r\n            } else {\r\n              console.log(\"[DEBUG] Không nhận được dữ liệu khuôn mặt từ API\");\r\n              enqueueSnackbar(\"Không thể tải dữ liệu nhận diện khuôn mặt\", {\r\n                variant: \"error\",\r\n              });\r\n            }\r\n          } else {\r\n            console.log(\r\n              \"[DEBUG] Không nhận được dữ liệu khuôn mặt từ API (faceFeatureResult là null hoặc undefined)\"\r\n            );\r\n            enqueueSnackbar(\"Không thể tải dữ liệu nhận diện khuôn mặt\", {\r\n              variant: \"error\",\r\n            });\r\n          }\r\n        } catch (apiError) {\r\n          console.error(\r\n            \"[DEBUG] Lỗi khi gọi API lấy dữ liệu khuôn mặt:\",\r\n            apiError\r\n          );\r\n          console.log(\r\n            \"[DEBUG] API error details:\",\r\n            apiError.response?.data || apiError.message\r\n          );\r\n          enqueueSnackbar(\r\n            \"Lỗi khi lấy dữ liệu khuôn mặt. Vui lòng kiểm tra API endpoint.\",\r\n            {\r\n              variant: \"error\",\r\n            }\r\n          );\r\n        }\r\n\r\n        // Không chờ đợi model load xong mới hiển thị UI\r\n        setIsLoading(false);\r\n\r\n        // Model sẽ load song song\r\n        await loadModelsPromise;\r\n\r\n        // Thiết lập thời gian phát hiện ban đầu\r\n        setLastDetectionTime(Date.now());\r\n      } catch (error) {\r\n        console.error(\"Lỗi khi tải dữ liệu:\", error);\r\n        enqueueSnackbar(\"Lỗi khi tải dữ liệu\", { variant: \"error\" });\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    loadInitialData();\r\n\r\n    // Clean up\r\n    return () => {\r\n      if (intervalId) {\r\n        clearInterval(intervalId);\r\n      }\r\n\r\n      // Dừng landmark interval nếu đang chạy\r\n      if (landmarkIntervalId) {\r\n        clearInterval(landmarkIntervalId);\r\n      }\r\n\r\n      // Dừng camera stream nếu đang chạy\r\n      if (\r\n        webcamRef.current &&\r\n        webcamRef.current.video &&\r\n        webcamRef.current.video.srcObject\r\n      ) {\r\n        const tracks = webcamRef.current.video.srcObject.getTracks();\r\n        tracks.forEach((track) => track.stop());\r\n      }\r\n\r\n      if (videoRef.current && videoRef.current.srcObject) {\r\n        const tracks = videoRef.current.srcObject.getTracks();\r\n        tracks.forEach((track) => track.stop());\r\n      }\r\n\r\n      dispatch(clearRecognitionState());\r\n\r\n      // Reset các state theo dõi camera\r\n      setCameraRetryCount(0);\r\n      setLastDetectionTime(null);\r\n    };\r\n  }, [\r\n    classId,\r\n    sessionId,\r\n    token,\r\n    dispatch,\r\n    enqueueSnackbar,\r\n    isModelLoaded,\r\n    intervalId,\r\n    landmarkIntervalId,\r\n  ]);\r\n\r\n  // Hàm khởi tạo camera trực tiếp - nút duy nhất cho camera\r\n  const initDirectCamera = async () => {\r\n    try {\r\n      // Tải model nhận diện và đảm bảo model đã sẵn sàng\r\n      if (!isModelLoaded || !faceapi.nets.ssdMobilenetv1.isLoaded) {\r\n        enqueueSnackbar(\"Đang tải các mô hình nhận diện...\", {\r\n          variant: \"info\",\r\n        });\r\n        const modelLoaded = await loadFaceRecognitionModels();\r\n\r\n        if (!modelLoaded) {\r\n          enqueueSnackbar(\"Không thể tải mô hình nhận diện, vui lòng thử lại\", {\r\n            variant: \"error\",\r\n          });\r\n          return;\r\n        }\r\n      }\r\n\r\n      // Dừng stream cũ nếu có\r\n      if (\r\n        webcamRef.current &&\r\n        webcamRef.current.video &&\r\n        webcamRef.current.video.srcObject\r\n      ) {\r\n        const tracks = webcamRef.current.video.srcObject.getTracks();\r\n        tracks.forEach((track) => track.stop());\r\n      }\r\n\r\n      if (videoRef.current && videoRef.current.srcObject) {\r\n        const tracks = videoRef.current.srcObject.getTracks();\r\n        tracks.forEach((track) => track.stop());\r\n      }\r\n\r\n      // Truy cập camera trực tiếp thông qua MediaDevices API\r\n      try {\r\n        // Thêm tùy chọn camera với nhiều độ phân giải cao hơn\r\n        const constraints = {\r\n          video: {\r\n            width: { ideal: 1920, min: 640 },\r\n            height: { ideal: 1080, min: 480 },\r\n            facingMode: \"user\",\r\n            frameRate: { ideal: 30, min: 15 },\r\n          },\r\n          audio: false,\r\n        };\r\n\r\n        console.log(\r\n          \"[DEBUG] Đang yêu cầu truy cập camera với tùy chọn:\",\r\n          constraints\r\n        );\r\n\r\n        const stream = await navigator.mediaDevices.getUserMedia(constraints);\r\n\r\n        console.log(\"Đã nhận được stream camera trực tiếp\", stream.id);\r\n        console.log(\r\n          \"Thông tin camera: \",\r\n          stream.getVideoTracks()[0].getSettings()\r\n        );\r\n\r\n        // Nếu đang sử dụng webcam component\r\n        if (webcamRef.current && webcamRef.current.video) {\r\n          webcamRef.current.video.srcObject = stream;\r\n\r\n          // Kiểm tra stream đã hoạt động chưa\r\n          webcamRef.current.video.onloadedmetadata = () => {\r\n            webcamRef.current.video.play().catch((err) => {\r\n              console.error(\"Lỗi khi play video webcam:\", err);\r\n            });\r\n          };\r\n        }\r\n        // Hoặc nếu đang sử dụng video element\r\n        else if (videoRef.current) {\r\n          videoRef.current.srcObject = stream;\r\n          videoRef.current.onloadedmetadata = () => {\r\n            videoRef.current\r\n              .play()\r\n              .catch((err) => console.error(\"Lỗi khi play video:\", err));\r\n          };\r\n        }\r\n\r\n        // Đánh dấu camera và model đã sẵn sàng\r\n        dispatch(setModelLoaded(true));\r\n        dispatch(setCameraReady(true));\r\n\r\n        // Khởi động thời gian phát hiện ban đầu\r\n        setLastDetectionTime(Date.now());\r\n\r\n        enqueueSnackbar(\"Đã kết nối camera thành công\", {\r\n          variant: \"success\",\r\n        });\r\n\r\n        // Bật hiển thị landmark sau khi camera khởi động\r\n        setTimeout(() => {\r\n          setShowLandmark(true);\r\n          startLandmarkDetection();\r\n        }, 1000);\r\n\r\n        // Đặt lại số lần thử camera\r\n        setCameraRetryCount(0);\r\n\r\n        return true;\r\n      } catch (err) {\r\n        console.error(\"Lỗi truy cập camera:\", err);\r\n        enqueueSnackbar(`Không thể truy cập camera: ${err.message}`, {\r\n          variant: \"error\",\r\n        });\r\n\r\n        // Thử phương án thay thế nếu camera mặt trước thất bại\r\n        if (cameraRetryCount < 2) {\r\n          try {\r\n            console.log(\"[DEBUG] Thử sử dụng camera phương án thay thế\");\r\n            const altStream = await navigator.mediaDevices.getUserMedia({\r\n              video: true, // Chỉ yêu cầu bất kỳ camera nào có sẵn\r\n              audio: false,\r\n            });\r\n\r\n            // Xử lý stream mới\r\n            if (webcamRef.current && webcamRef.current.video) {\r\n              webcamRef.current.video.srcObject = altStream;\r\n            } else if (videoRef.current) {\r\n              videoRef.current.srcObject = altStream;\r\n              videoRef.current.onloadedmetadata = () => videoRef.current.play();\r\n            }\r\n\r\n            dispatch(setCameraReady(true));\r\n            setLastDetectionTime(Date.now());\r\n            enqueueSnackbar(\"Đã kết nối camera thay thế\", {\r\n              variant: \"success\",\r\n            });\r\n            return true;\r\n          } catch (altErr) {\r\n            console.error(\"Không thể sử dụng camera thay thế:\", altErr);\r\n          }\r\n        }\r\n\r\n        return false;\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Lỗi khi khởi tạo camera trực tiếp:\", err);\r\n      enqueueSnackbar(`Lỗi: ${err.message}`, { variant: \"error\" });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Hàm bắt đầu phát hiện landmarks theo thời gian thực\r\n  const startLandmarkDetection = () => {\r\n    // Xóa interval cũ nếu có\r\n    if (landmarkDetectionInterval) {\r\n      clearInterval(landmarkDetectionInterval);\r\n    }\r\n\r\n    // Tạo interval mới để cập nhật landmarks mỗi 50ms\r\n    const intervalId = setInterval(() => {\r\n      if (cameraMode === \"face_recognition\" && showLandmark) {\r\n        handleDetectFaces(true);\r\n      }\r\n    }, 50);\r\n\r\n    setLandmarkDetectionInterval(intervalId);\r\n  };\r\n\r\n  // Hàm dừng phát hiện landmarks theo thời gian thực\r\n  const stopLandmarkDetection = () => {\r\n    if (landmarkDetectionInterval) {\r\n      clearInterval(landmarkDetectionInterval);\r\n      setLandmarkDetectionInterval(null);\r\n    }\r\n  };\r\n\r\n  // Cập nhật useEffect để bắt đầu và dừng phát hiện landmarks khi camera hoặc chế độ thay đổi\r\n  useEffect(() => {\r\n    if (cameraMode === \"face_recognition\" && showLandmark) {\r\n      startLandmarkDetection();\r\n    } else {\r\n      stopLandmarkDetection();\r\n    }\r\n\r\n    return () => {\r\n      stopLandmarkDetection();\r\n    };\r\n  }, [cameraMode, showLandmark]);\r\n\r\n  // Cập nhật useEffect cho việc toggle showLandmark\r\n  useEffect(() => {\r\n    if (showLandmark && cameraMode === \"face_recognition\") {\r\n      startLandmarkDetection();\r\n    } else {\r\n      stopLandmarkDetection();\r\n    }\r\n  }, [showLandmark]);\r\n\r\n  // Load các mô hình nhận diện khuôn mặt\r\n  const loadFaceRecognitionModels = async () => {\r\n    try {\r\n      const MODEL_URL = \"/models\";\r\n      console.log(\"Bắt đầu tải models từ:\", MODEL_URL);\r\n\r\n      // Thêm SsdMobilenetv1 vào danh sách models cần tải\r\n      const modelPromises = [\r\n        faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL),\r\n        faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),\r\n        faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL),\r\n        faceapi.nets.ssdMobilenetv1.loadFromUri(MODEL_URL), // Thêm model SSD MobileNet\r\n      ];\r\n\r\n      // Kiểm tra xem các models đã được tải chưa\r\n      const modelStatuses = [\r\n        faceapi.nets.tinyFaceDetector.isLoaded,\r\n        faceapi.nets.faceLandmark68Net.isLoaded,\r\n        faceapi.nets.faceRecognitionNet.isLoaded,\r\n        faceapi.nets.ssdMobilenetv1.isLoaded, // Kiểm tra SSD MobileNet đã tải chưa\r\n      ];\r\n\r\n      if (modelStatuses.every((status) => status)) {\r\n        console.log(\"Các models đã được tải từ trước\");\r\n        dispatch(setModelLoaded(true));\r\n        return true;\r\n      }\r\n\r\n      await Promise.all(modelPromises);\r\n\r\n      console.log(\"Đã tải xong models thành công\");\r\n      dispatch(setModelLoaded(true));\r\n      enqueueSnackbar(\"Tải mô hình nhận diện thành công\", {\r\n        variant: \"success\",\r\n      });\r\n      return true;\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi tải mô hình:\", error);\r\n      enqueueSnackbar(\"Không thể tải mô hình nhận diện\", { variant: \"error\" });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Hàm kiểm tra và đảm bảo camera hoạt động\r\n  const ensureCameraIsWorking = () => {\r\n    // Kiểm tra nếu camera chưa hoạt động và đã thử khởi động\r\n    if (!isCameraReady && cameraRetryCount === 0) {\r\n      console.log(\"[DEBUG] Camera chưa sẵn sàng, thử khởi động\");\r\n      setCameraRetryCount(1);\r\n      initDirectCamera();\r\n      return false;\r\n    }\r\n\r\n    // Kiểm tra stream của camera\r\n    const videoElement = isAutoMode\r\n      ? videoRef.current\r\n      : webcamRef.current?.video;\r\n\r\n    if (\r\n      !videoElement ||\r\n      !videoElement.srcObject ||\r\n      videoElement.readyState !== 4\r\n    ) {\r\n      console.log(\r\n        \"[DEBUG] Video stream không hoạt động, thử khởi động lại camera\"\r\n      );\r\n      if (cameraRetryCount < 3) {\r\n        setCameraRetryCount((prev) => prev + 1);\r\n        initDirectCamera();\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  // Xử lý phát hiện khuôn mặt\r\n  const handleFaceDetection = async (detections) => {\r\n    // Cập nhật state\r\n    dispatch(setDetectedFaces(detections));\r\n\r\n    try {\r\n      // Cập nhật thời gian phát hiện\r\n      setLastDetectionTime(Date.now());\r\n\r\n      // Nếu không có khuôn mặt nào được phát hiện, dừng lại\r\n      if (!detections || detections.length === 0) {\r\n        if (ENABLE_DEBUG_LOGS) {\r\n          console.log(\"[DEBUG] Không phát hiện khuôn mặt\");\r\n        }\r\n        return;\r\n      }\r\n\r\n      if (ENABLE_DEBUG_LOGS) {\r\n        console.log(`[DEBUG] Đã phát hiện ${detections.length} khuôn mặt`);\r\n      }\r\n\r\n      // Xử lý nhận diện khuôn mặt nếu có sinh viên\r\n      if (classStudents && classStudents.length > 0) {\r\n        // Xử lý nhận diện khuôn mặt sẽ được thêm sau\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi xử lý khuôn mặt:\", error);\r\n    }\r\n  };\r\n\r\n  // Cập nhật hàm handleDetectFaces để kiểm tra camera trước\r\n  const handleDetectFaces = async (landmarkOnly = false) => {\r\n    if (cameraMode !== \"face_recognition\" || !faceapi || !canvasRef.current)\r\n      return;\r\n\r\n    // Xác định video element hiện tại (từ webcam hoặc video trực tiếp)\r\n    const videoElement = isAutoMode\r\n      ? videoRef.current\r\n      : webcamRef.current?.video;\r\n\r\n    if (!videoElement || videoElement.readyState !== 4) return;\r\n\r\n    const canvasElement = canvasRef.current;\r\n\r\n    // Lấy kích thước thực của video\r\n    const videoWidth = videoElement.videoWidth || videoElement.width;\r\n    const videoHeight = videoElement.videoHeight || videoElement.height;\r\n\r\n    // Lấy kích thước hiển thị của container\r\n    const displayWidth = videoElement.clientWidth;\r\n    const displayHeight = videoElement.clientHeight;\r\n\r\n    // Đặt kích thước thực cho canvas để đảm bảo chất lượng cao\r\n    canvasElement.width = displayWidth;\r\n    canvasElement.height = displayHeight;\r\n\r\n    // Đặt kích thước hiển thị trong CSS\r\n    canvasElement.style.width = `${displayWidth}px`;\r\n    canvasElement.style.height = `${displayHeight}px`;\r\n\r\n    // Sử dụng kích thước hiển thị thực tế cho faceapi\r\n    const displaySize = { width: displayWidth, height: displayHeight };\r\n    faceapi.matchDimensions(canvasElement, displaySize);\r\n\r\n    try {\r\n      // Thay đổi sử dụng SsdMobilenetv1 thay vì TinyFaceDetector để chính xác hơn\r\n      const detections = await faceapi\r\n        .detectAllFaces(\r\n          videoElement,\r\n          new faceapi.SsdMobilenetv1Options({\r\n            minConfidence: 0.5, // Tăng ngưỡng để giảm phát hiện sai\r\n          })\r\n        )\r\n        .withFaceLandmarks();\r\n\r\n      // Thêm descriptors nếu không phải chỉ vẽ landmarks\r\n      const finalDetections = landmarkOnly\r\n        ? detections\r\n        : await faceapi\r\n            .detectAllFaces(\r\n              videoElement,\r\n              new faceapi.SsdMobilenetv1Options({\r\n                minConfidence: 0.5,\r\n              })\r\n            )\r\n            .withFaceLandmarks()\r\n            .withFaceDescriptors();\r\n\r\n      // Điều chỉnh kết quả theo kích thước hiển thị\r\n      const resizedDetections = faceapi.resizeResults(\r\n        finalDetections,\r\n        displaySize\r\n      );\r\n\r\n      // Xóa canvas trước khi vẽ mới\r\n      const ctx = canvasElement.getContext(\"2d\");\r\n      ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\r\n\r\n      // Vẽ các landmarks nếu showLandmark được bật\r\n      if (showLandmark) {\r\n        // Vẽ các khung nhận diện\r\n        faceapi.draw.drawDetections(canvasElement, resizedDetections);\r\n\r\n        // Vẽ landmarks với kích thước lớn hơn và chính xác hơn\r\n        resizedDetections.forEach((detection) => {\r\n          const landmarks = detection.landmarks;\r\n          const positions = landmarks.positions;\r\n\r\n          // Vẽ đường viền khuôn mặt\r\n          ctx.strokeStyle = \"#00FF00\";\r\n          ctx.lineWidth = 2;\r\n\r\n          // Vẽ đường viền mặt (từ 0-16)\r\n          ctx.beginPath();\r\n          ctx.moveTo(positions[0].x, positions[0].y);\r\n          for (let i = 1; i <= 16; i++) {\r\n            ctx.lineTo(positions[i].x, positions[i].y);\r\n          }\r\n          ctx.stroke();\r\n\r\n          // Vẽ lông mày trái (từ 17-21)\r\n          ctx.beginPath();\r\n          ctx.moveTo(positions[17].x, positions[17].y);\r\n          for (let i = 18; i <= 21; i++) {\r\n            ctx.lineTo(positions[i].x, positions[i].y);\r\n          }\r\n          ctx.stroke();\r\n\r\n          // Vẽ lông mày phải (từ 22-26)\r\n          ctx.beginPath();\r\n          ctx.moveTo(positions[22].x, positions[22].y);\r\n          for (let i = 23; i <= 26; i++) {\r\n            ctx.lineTo(positions[i].x, positions[i].y);\r\n          }\r\n          ctx.stroke();\r\n\r\n          // Vẽ sống mũi (từ 27-30)\r\n          ctx.beginPath();\r\n          ctx.moveTo(positions[27].x, positions[27].y);\r\n          for (let i = 28; i <= 30; i++) {\r\n            ctx.lineTo(positions[i].x, positions[i].y);\r\n          }\r\n          ctx.stroke();\r\n\r\n          // Vẽ mũi dưới (từ 30-35)\r\n          ctx.beginPath();\r\n          ctx.moveTo(positions[30].x, positions[30].y);\r\n          ctx.lineTo(positions[31].x, positions[31].y);\r\n          ctx.lineTo(positions[32].x, positions[32].y);\r\n          ctx.lineTo(positions[33].x, positions[33].y);\r\n          ctx.lineTo(positions[34].x, positions[34].y);\r\n          ctx.lineTo(positions[35].x, positions[35].y);\r\n          ctx.stroke();\r\n\r\n          // Vẽ mắt trái\r\n          ctx.beginPath();\r\n          ctx.moveTo(positions[36].x, positions[36].y);\r\n          for (let i = 37; i <= 41; i++) {\r\n            ctx.lineTo(positions[i].x, positions[i].y);\r\n          }\r\n          ctx.lineTo(positions[36].x, positions[36].y);\r\n          ctx.strokeStyle = \"#FF0000\";\r\n          ctx.stroke();\r\n\r\n          // Vẽ mắt phải\r\n          ctx.beginPath();\r\n          ctx.moveTo(positions[42].x, positions[42].y);\r\n          for (let i = 43; i <= 47; i++) {\r\n            ctx.lineTo(positions[i].x, positions[i].y);\r\n          }\r\n          ctx.lineTo(positions[42].x, positions[42].y);\r\n          ctx.strokeStyle = \"#0000FF\";\r\n          ctx.stroke();\r\n\r\n          // Vẽ miệng ngoài\r\n          ctx.beginPath();\r\n          ctx.moveTo(positions[48].x, positions[48].y);\r\n          for (let i = 49; i <= 59; i++) {\r\n            ctx.lineTo(positions[i].x, positions[i].y);\r\n          }\r\n          ctx.lineTo(positions[48].x, positions[48].y);\r\n          ctx.strokeStyle = \"#FF00FF\";\r\n          ctx.stroke();\r\n\r\n          // Vẽ miệng trong\r\n          ctx.beginPath();\r\n          ctx.moveTo(positions[60].x, positions[60].y);\r\n          for (let i = 61; i <= 67; i++) {\r\n            ctx.lineTo(positions[i].x, positions[i].y);\r\n          }\r\n          ctx.lineTo(positions[60].x, positions[60].y);\r\n          ctx.strokeStyle = \"#FF00FF\";\r\n          ctx.stroke();\r\n\r\n          // Vẽ các điểm landmark riêng lẻ với kích thước lớn hơn\r\n          positions.forEach((point, index) => {\r\n            let color, size;\r\n\r\n            // Thay đổi màu sắc và kích thước tùy theo vùng\r\n            if (index >= 36 && index <= 41) {\r\n              // Mắt trái\r\n              color = \"#FF0000\";\r\n              size = 3;\r\n            } else if (index >= 42 && index <= 47) {\r\n              // Mắt phải\r\n              color = \"#0000FF\";\r\n              size = 3;\r\n            } else if (index >= 27 && index <= 35) {\r\n              // Mũi\r\n              color = \"#FFFF00\";\r\n              size = 3;\r\n            } else if (index >= 48 && index <= 67) {\r\n              // Miệng\r\n              color = \"#FF00FF\";\r\n              size = 3;\r\n            } else {\r\n              // Viền mặt\r\n              color = \"#00FF00\";\r\n              size = 3;\r\n            }\r\n\r\n            // Vẽ điểm\r\n            ctx.fillStyle = color;\r\n            ctx.beginPath();\r\n            ctx.arc(point.x, point.y, size, 0, 2 * Math.PI);\r\n            ctx.fill();\r\n          });\r\n\r\n          // Hiển thị thông tin bên dưới hộp giới hạn\r\n          const box = detection.detection.box;\r\n          ctx.fillStyle = \"#FFFFFF\";\r\n          ctx.font = \"16px Arial\";\r\n          ctx.fillText(\r\n            \"Đã phát hiện khuôn mặt\",\r\n            box.x,\r\n            box.y + box.height + 20\r\n          );\r\n\r\n          // Tạo viền cho chữ\r\n          ctx.strokeStyle = \"#000000\";\r\n          ctx.lineWidth = 0.5;\r\n          ctx.strokeText(\r\n            \"Đã phát hiện khuôn mặt\",\r\n            box.x,\r\n            box.y + box.height + 20\r\n          );\r\n        });\r\n      }\r\n\r\n      // Chỉ xử lý nhận diện nếu không phải chỉ vẽ landmarks\r\n      if (!landmarkOnly) {\r\n        handleFaceDetection(resizedDetections);\r\n      }\r\n\r\n      return resizedDetections;\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi phát hiện khuôn mặt:\", error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  // Điểm danh thủ công\r\n  const openManualAttendanceDialog = (student) => {\r\n    setSelectedStudent(student);\r\n    setManualAttendanceData({\r\n      status: \"present\",\r\n      note: \"\",\r\n    });\r\n    setManualDialogOpen(true);\r\n  };\r\n\r\n  const handleManualDialogClose = () => {\r\n    setManualDialogOpen(false);\r\n  };\r\n\r\n  const handleManualAttendanceChange = (e) => {\r\n    setManualAttendanceData({\r\n      ...manualAttendanceData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleManualAttendanceSubmit = async () => {\r\n    if (!selectedStudent) return;\r\n\r\n    try {\r\n      const result = await dispatch(\r\n        manualAttendance({\r\n          sessionId,\r\n          studentId: selectedStudent._id,\r\n          status: manualAttendanceData.status,\r\n          note: manualAttendanceData.note,\r\n        })\r\n      ).unwrap();\r\n\r\n      // Cập nhật logs điểm danh\r\n      if (result && result.data) {\r\n        const updatedLogs = attendanceLogs.filter(\r\n          (log) => log.student_id._id !== selectedStudent._id\r\n        );\r\n\r\n        updatedLogs.push({\r\n          ...result.data,\r\n          student_id: selectedStudent,\r\n        });\r\n\r\n        setAttendanceLogs(updatedLogs);\r\n      }\r\n\r\n      enqueueSnackbar(\"Điểm danh thủ công thành công\", { variant: \"success\" });\r\n      handleManualDialogClose();\r\n\r\n      // Cập nhật lại thông tin phiên điểm danh\r\n      const sessionResponse = await axios.get(\r\n        `${API_URL}/attendance/sessions/${sessionId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      setSessionInfo(sessionResponse.data.data);\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi điểm danh thủ công:\", error);\r\n      enqueueSnackbar(\"Lỗi khi điểm danh thủ công\", { variant: \"error\" });\r\n    }\r\n  };\r\n\r\n  // Đánh dấu điểm danh từ nhận diện khuôn mặt\r\n  const markAttendance = async (\r\n    studentId,\r\n    faceDescriptor,\r\n    confidence,\r\n    imageBase64\r\n  ) => {\r\n    try {\r\n      const result = await dispatch(\r\n        verifyAttendance({\r\n          sessionId,\r\n          studentId,\r\n          faceDescriptor,\r\n          confidence,\r\n          imageBase64,\r\n        })\r\n      ).unwrap();\r\n\r\n      // Cập nhật logs điểm danh\r\n      if (result && result.data) {\r\n        const student = classStudents.find((s) => s._id === studentId);\r\n\r\n        if (student) {\r\n          const updatedLogs = attendanceLogs.filter(\r\n            (log) => log.student_id._id !== studentId\r\n          );\r\n\r\n          updatedLogs.push({\r\n            ...result.data,\r\n            student_id: student,\r\n          });\r\n\r\n          setAttendanceLogs(updatedLogs);\r\n\r\n          enqueueSnackbar(`Đã điểm danh cho ${student.full_name}`, {\r\n            variant: \"success\",\r\n          });\r\n        }\r\n      }\r\n\r\n      // Cập nhật lại thông tin phiên điểm danh\r\n      const sessionResponse = await axios.get(\r\n        `${API_URL}/attendance/sessions/${sessionId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      setSessionInfo(sessionResponse.data.data);\r\n\r\n      return true;\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi xác nhận điểm danh:\", error);\r\n      enqueueSnackbar(\"Lỗi khi xác nhận điểm danh\", { variant: \"error\" });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Kết thúc phiên điểm danh\r\n  const completeSession = async () => {\r\n    try {\r\n      await axios.put(\r\n        `${API_URL}/attendance/sessions/${sessionId}`,\r\n        { status: \"completed\" },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n\r\n      enqueueSnackbar(\"Phiên điểm danh đã kết thúc\", { variant: \"success\" });\r\n      navigate(`/teacher/classes/${classId}`);\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi kết thúc phiên điểm danh:\", error);\r\n      enqueueSnackbar(\"Lỗi khi kết thúc phiên điểm danh\", { variant: \"error\" });\r\n    }\r\n  };\r\n\r\n  // Làm mới danh sách điểm danh\r\n  const refreshAttendanceLogs = async () => {\r\n    try {\r\n      const logsResponse = await axios.get(\r\n        `${API_URL}/attendance/logs/${sessionId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      setAttendanceLogs(logsResponse.data.data);\r\n\r\n      const sessionResponse = await axios.get(\r\n        `${API_URL}/attendance/sessions/${sessionId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      setSessionInfo(sessionResponse.data.data);\r\n\r\n      enqueueSnackbar(\"Đã làm mới dữ liệu điểm danh\", { variant: \"success\" });\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi làm mới dữ liệu:\", error);\r\n      enqueueSnackbar(\"Lỗi khi làm mới dữ liệu\", { variant: \"error\" });\r\n    }\r\n  };\r\n\r\n  // Chụp ảnh và nhận diện thủ công\r\n  const captureAndRecognize = async () => {\r\n    await handleDetectFaces();\r\n  };\r\n\r\n  // Xử lý đánh dấu sinh viên điểm danh\r\n  const handleMarkAttendance = async (studentId, confidence) => {\r\n    // Kiểm tra xem sinh viên đã được điểm danh chưa\r\n    const isAlreadyAttended = attendanceLogs.some(\r\n      (log) => log.student_id._id === studentId && log.status === \"present\"\r\n    );\r\n\r\n    if (isAlreadyAttended) {\r\n      if (ENABLE_DEBUG_LOGS) {\r\n        console.log(\r\n          `[DEBUG] Sinh viên ${studentId} đã được điểm danh trước đó`\r\n        );\r\n      }\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Lấy dữ liệu video\r\n      const videoElement = isAutoMode\r\n        ? videoRef.current\r\n        : webcamRef.current?.video;\r\n\r\n      if (!videoElement) return;\r\n\r\n      // Tạo ảnh chụp từ video element\r\n      let imageBase64 = null;\r\n\r\n      // Nếu sử dụng webcam component\r\n      if (!isAutoMode && webcamRef.current) {\r\n        imageBase64 = webcamRef.current.getScreenshot();\r\n      }\r\n      // Nếu sử dụng video element trực tiếp\r\n      else if (isAutoMode) {\r\n        const canvas = document.createElement(\"canvas\");\r\n        canvas.width = videoElement.videoWidth;\r\n        canvas.height = videoElement.videoHeight;\r\n        const ctx = canvas.getContext(\"2d\");\r\n        ctx.drawImage(videoElement, 0, 0);\r\n        imageBase64 = canvas.toDataURL(\"image/jpeg\");\r\n      }\r\n\r\n      // Tìm sinh viên đã được phát hiện\r\n      const student = classStudents.find((s) => s._id === studentId);\r\n\r\n      if (!student) {\r\n        console.error(`Không tìm thấy sinh viên với ID ${studentId}`);\r\n        return;\r\n      }\r\n\r\n      // Lấy descriptor mới nhất từ sinh viên\r\n      let descriptor = null;\r\n\r\n      // Kiểm tra và lấy descriptor từ các cấu trúc khác nhau\r\n      if (\r\n        student.faceFeatures &&\r\n        student.faceFeatures.descriptors &&\r\n        Array.isArray(student.faceFeatures.descriptors) &&\r\n        student.faceFeatures.descriptors.length > 0\r\n      ) {\r\n        // Lấy từ cấu trúc mới\r\n        if (Array.isArray(student.faceFeatures.descriptors[0])) {\r\n          descriptor = student.faceFeatures.descriptors[0];\r\n        } else if (Array.isArray(student.faceFeatures.descriptors[0][0])) {\r\n          descriptor = student.faceFeatures.descriptors[0][0];\r\n        }\r\n      } else if (\r\n        student.faceDescriptors &&\r\n        Array.isArray(student.faceDescriptors) &&\r\n        student.faceDescriptors.length > 0\r\n      ) {\r\n        // Lấy từ cấu trúc cũ\r\n        if (typeof student.faceDescriptors[0] === \"object\") {\r\n          if (\r\n            student.faceDescriptors[0].descriptors &&\r\n            Array.isArray(student.faceDescriptors[0].descriptors) &&\r\n            student.faceDescriptors[0].descriptors.length > 0\r\n          ) {\r\n            descriptor = student.faceDescriptors[0].descriptors[0];\r\n          } else {\r\n            // Tìm mảng 128 phần tử đầu tiên trong object\r\n            Object.keys(student.faceDescriptors[0]).forEach((key) => {\r\n              const value = student.faceDescriptors[0][key];\r\n              if (!descriptor && Array.isArray(value) && value.length === 128) {\r\n                descriptor = value;\r\n              }\r\n            });\r\n          }\r\n        } else if (\r\n          Array.isArray(student.faceDescriptors[0]) &&\r\n          student.faceDescriptors[0].length === 128\r\n        ) {\r\n          descriptor = student.faceDescriptors[0];\r\n        }\r\n      }\r\n\r\n      // Gọi API điểm danh\r\n      if (ENABLE_DEBUG_LOGS) {\r\n        console.log(\r\n          `[DEBUG] Đánh dấu điểm danh cho ${\r\n            student.full_name\r\n          } với độ tin cậy ${confidence.toFixed(2)}`\r\n        );\r\n      }\r\n\r\n      // Gọi hàm điểm danh\r\n      await markAttendance(studentId, descriptor, confidence, imageBase64);\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi đánh dấu điểm danh:\", error);\r\n    }\r\n  };\r\n\r\n  // Bật/tắt hiển thị landmark trên khuôn mặt\r\n  const toggleLandmarkDetection = () => {\r\n    const newState = !showLandmark;\r\n    setShowLandmark(newState);\r\n\r\n    // Bắt đầu hoặc dừng interval landmark detection\r\n    if (newState) {\r\n      startLandmarkDetection();\r\n    } else if (landmarkIntervalId) {\r\n      clearInterval(landmarkIntervalId);\r\n      setLandmarkIntervalId(null);\r\n\r\n      // Xóa canvas khi tắt landmarks\r\n      const canvasElement = canvasRef.current;\r\n      if (canvasElement) {\r\n        const ctx = canvasElement.getContext(\"2d\");\r\n        ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Thêm hàm debug để kiểm tra cấu trúc dữ liệu khuôn mặt\r\n  const debugFaceFeatures = () => {\r\n    if (!classStudents || classStudents.length === 0) {\r\n      console.log(\r\n        \"[DEBUG] Không có sinh viên nào để kiểm tra dữ liệu khuôn mặt\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    classStudents.forEach((student, index) => {\r\n      console.log(`[DEBUG] Sinh viên #${index + 1}: ${student.full_name}`);\r\n\r\n      // Kiểm tra dữ liệu faceFeatures\r\n      if (student.faceFeatures) {\r\n        console.log(`  - Có dữ liệu faceFeatures`);\r\n\r\n        // Kiểm tra descriptors\r\n        if (student.faceFeatures.descriptors) {\r\n          console.log(\r\n            `  - Có descriptors: ${student.faceFeatures.descriptors.length} nhóm`\r\n          );\r\n\r\n          student.faceFeatures.descriptors.forEach((group, groupIndex) => {\r\n            if (Array.isArray(group)) {\r\n              console.log(\r\n                `    - Nhóm #${groupIndex + 1}: ${group.length} descriptors`\r\n              );\r\n\r\n              group.forEach((descriptor, descIndex) => {\r\n                if (Array.isArray(descriptor)) {\r\n                  console.log(\r\n                    `      - Descriptor #${descIndex + 1}: ${\r\n                      descriptor.length\r\n                    } phần tử`\r\n                  );\r\n                } else {\r\n                  console.log(\r\n                    `      - Descriptor #${descIndex + 1}: Không phải mảng`\r\n                  );\r\n                }\r\n              });\r\n            } else {\r\n              console.log(`    - Nhóm #${groupIndex + 1}: Không phải mảng`);\r\n            }\r\n          });\r\n        } else {\r\n          console.log(`  - Không có dữ liệu descriptors`);\r\n        }\r\n      } else {\r\n        console.log(`  - Không có dữ liệu faceFeatures`);\r\n      }\r\n\r\n      // Kiểm tra dữ liệu cũ (faceDescriptors)\r\n      if (student.faceDescriptors) {\r\n        console.log(\r\n          `  - Có dữ liệu faceDescriptors (cấu trúc cũ): ${student.faceDescriptors.length} descriptors`\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        minHeight=\"60vh\"\r\n      >\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  // Lấy danh sách sinh viên vắng mặt\r\n  const getAbsentStudents = () => {\r\n    if (!classInfo || !sessionInfo) return [];\r\n\r\n    const presentStudentIds = attendanceLogs\r\n      .filter((log) => log.status === \"present\")\r\n      .map((log) => log.student_id._id);\r\n\r\n    return classInfo.students.filter(\r\n      (student) => !presentStudentIds.includes(student._id)\r\n    );\r\n  };\r\n\r\n  const absentStudents = getAbsentStudents();\r\n\r\n  // Điểm danh thủ công trong chế độ đơn giản\r\n  const showStudentList = () => {\r\n    if (!classInfo) return;\r\n\r\n    // Hiển thị danh sách sinh viên để điểm danh thủ công\r\n    const absentStudents = getAbsentStudents();\r\n    if (absentStudents.length === 0) {\r\n      enqueueSnackbar(\"Tất cả sinh viên đã được điểm danh\", {\r\n        variant: \"success\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Hiển thị dialog chọn sinh viên để điểm danh\r\n    if (absentStudents.length > 0 && absentStudents[0]) {\r\n      openManualAttendanceDialog(absentStudents[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Điểm Danh - {classInfo?.class_name}\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" color=\"textSecondary\" gutterBottom>\r\n        Buổi {sessionInfo?.session_number} -{\" \"}\r\n        {new Date(sessionInfo?.date).toLocaleDateString(\"vi-VN\")}\r\n      </Typography>\r\n\r\n      <Grid container spacing={3} mt={1}>\r\n        <Grid item xs={12} md={8}>\r\n          <Card>\r\n            <CardContent>\r\n              <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                mb={2}\r\n              >\r\n                <Typography variant=\"h6\">Camera nhận diện</Typography>\r\n                <Box>\r\n                  <Chip\r\n                    label={isAutoMode ? \"Tự động đang bật\" : \"Tự động đang tắt\"}\r\n                    color={isAutoMode ? \"success\" : \"default\"}\r\n                    sx={{ mr: 1 }}\r\n                  />\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color={isAutoMode ? \"error\" : \"primary\"}\r\n                    onClick={\r\n                      isAutoMode\r\n                        ? () => {\r\n                            // Dừng tự động\r\n                            if (intervalId) {\r\n                              clearInterval(intervalId);\r\n                              setIntervalId(null);\r\n                            }\r\n                            setIsAutoMode(false);\r\n                            enqueueSnackbar(\"Đã tắt chế độ tự động điểm danh\", {\r\n                              variant: \"info\",\r\n                            });\r\n                          }\r\n                        : () => {\r\n                            // Bắt đầu tự động\r\n                            if (intervalId) {\r\n                              clearInterval(intervalId);\r\n                            }\r\n                            // Khởi tạo thời gian phát hiện ban đầu\r\n                            setLastDetectionTime(Date.now());\r\n                            const id = setInterval(() => {\r\n                              handleDetectFaces();\r\n                            }, AUTO_DETECT_INTERVAL);\r\n                            setIntervalId(id);\r\n                            setIsAutoMode(true);\r\n                            enqueueSnackbar(\"Đã bật chế độ tự động điểm danh\", {\r\n                              variant: \"info\",\r\n                            });\r\n                          }\r\n                    }\r\n                  >\r\n                    {isAutoMode ? \"Tắt tự động\" : \"Bật tự động\"}\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            </CardContent>\r\n\r\n            <Paper\r\n              elevation={3}\r\n              sx={{\r\n                position: \"relative\",\r\n                width: \"100%\",\r\n                height: \"400px\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                overflow: \"hidden\",\r\n                mb: 2,\r\n              }}\r\n            >\r\n              {isCameraReady ? (\r\n                <>\r\n                  {isAutoMode ? (\r\n                    // Sử dụng video element trực tiếp thay vì Webcam component\r\n                    <video\r\n                      ref={videoRef}\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        objectFit: \"cover\",\r\n                      }}\r\n                      autoPlay\r\n                      playsInline\r\n                      muted\r\n                    />\r\n                  ) : (\r\n                    <Webcam\r\n                      audio={false}\r\n                      ref={webcamRef}\r\n                      screenshotFormat=\"image/jpeg\"\r\n                      width={640}\r\n                      height={480}\r\n                      videoConstraints={{\r\n                        width: 640,\r\n                        height: 480,\r\n                        facingMode: \"user\",\r\n                      }}\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        objectFit: \"cover\",\r\n                      }}\r\n                      onUserMedia={(stream) => {\r\n                        console.log(\r\n                          \"Camera đã được cấp quyền và khởi tạo\",\r\n                          stream.id\r\n                        );\r\n                        // Đảm bảo readyState được kiểm tra khi stream đã sẵn sàng\r\n                        setTimeout(() => {\r\n                          if (webcamRef.current && webcamRef.current.video) {\r\n                            console.log(\r\n                              \"Stream ready, readyState=\",\r\n                              webcamRef.current.video.readyState\r\n                            );\r\n                            dispatch(setCameraReady(true));\r\n                            // Đặt thời gian phát hiện ban đầu\r\n                            setLastDetectionTime(Date.now());\r\n                          }\r\n                        }, 500);\r\n                      }}\r\n                      onUserMediaError={(err) => {\r\n                        console.error(\"Lỗi khi truy cập camera:\", err);\r\n                        enqueueSnackbar(\r\n                          `Không thể truy cập camera: ${\r\n                            err.name === \"NotAllowedError\"\r\n                              ? \"Bạn chưa cấp quyền truy cập camera\"\r\n                              : err.name === \"NotFoundError\"\r\n                              ? \"Không tìm thấy thiết bị camera\"\r\n                              : err.message || \"Lỗi không xác định\"\r\n                          }`,\r\n                          {\r\n                            variant: \"error\",\r\n                          }\r\n                        );\r\n                      }}\r\n                    />\r\n                  )}\r\n                  {/* Canvas hiển thị ở cả hai chế độ */}\r\n                  <canvas\r\n                    ref={canvasRef}\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      top: 0,\r\n                      left: 0,\r\n                      width: \"100%\",\r\n                      height: \"100%\",\r\n                      objectFit: \"cover\",\r\n                      zIndex: 10,\r\n                    }}\r\n                  />\r\n                </>\r\n              ) : (\r\n                <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n                  <CircularProgress size={50} />\r\n                  <Typography mt={2}>Đang khởi tạo camera...</Typography>\r\n                  <Typography\r\n                    variant=\"caption\"\r\n                    color=\"text.secondary\"\r\n                    sx={{ mt: 1 }}\r\n                  >\r\n                    {isModelLoaded\r\n                      ? \"Chờ kết nối camera - Hãy đảm bảo bạn đã cấp quyền camera\"\r\n                      : \"Đang tải mô hình nhận diện khuôn mặt\"}\r\n                  </Typography>\r\n\r\n                  <Box\r\n                    sx={{\r\n                      mt: 2,\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\",\r\n                      alignItems: \"center\",\r\n                      gap: 1,\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      onClick={initDirectCamera}\r\n                    >\r\n                      Khởi động camera trực tiếp\r\n                    </Button>\r\n\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"secondary\"\r\n                      size=\"small\"\r\n                      onClick={() => {\r\n                        setIsAutoMode(true);\r\n                        // Khởi tạo thời gian phát hiện ban đầu\r\n                        setLastDetectionTime(Date.now());\r\n                        const id = setInterval(() => {\r\n                          handleDetectFaces();\r\n                        }, AUTO_DETECT_INTERVAL);\r\n                        setIntervalId(id);\r\n                        enqueueSnackbar(\"Đã bật tự động điểm danh\", {\r\n                          variant: \"info\",\r\n                        });\r\n                      }}\r\n                    >\r\n                      Bắt đầu tự động điểm danh\r\n                    </Button>\r\n\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"warning\"\r\n                      size=\"small\"\r\n                      onClick={showStudentList}\r\n                    >\r\n                      Điểm danh thủ công\r\n                    </Button>\r\n\r\n                    <Alert severity=\"info\" sx={{ mt: 2, maxWidth: 300 }}>\r\n                      Nếu camera không hoạt động, vui lòng thử:\r\n                      <ul style={{ margin: \"8px 0\", paddingLeft: \"20px\" }}>\r\n                        <li>Kiểm tra quyền camera trên trình duyệt</li>\r\n                        <li>Làm mới trang và thử lại</li>\r\n                        <li>\r\n                          Đảm bảo không có ứng dụng khác đang sử dụng camera\r\n                        </li>\r\n                      </ul>\r\n                    </Alert>\r\n                  </Box>\r\n                </Box>\r\n              )}\r\n            </Paper>\r\n\r\n            <Box display=\"flex\" justifyContent=\"space-between\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                onClick={captureAndRecognize}\r\n                startIcon={<CameraAlt />}\r\n                disabled={!isCameraReady || isRecognizing || isAutoMode}\r\n              >\r\n                {isRecognizing ? (\r\n                  <CircularProgress size={24} color=\"inherit\" />\r\n                ) : (\r\n                  \"Chụp & Nhận diện\"\r\n                )}\r\n              </Button>\r\n\r\n              <Box>\r\n                {isCameraReady && (\r\n                  <>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color={showLandmark ? \"success\" : \"info\"}\r\n                      onClick={toggleLandmarkDetection}\r\n                      sx={{ mr: 1 }}\r\n                    >\r\n                      {showLandmark ? \"Tắt Landmark\" : \"Hiện Landmark\"}\r\n                    </Button>\r\n\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color={isAutoMode ? \"error\" : \"primary\"}\r\n                      onClick={() => {\r\n                        // Dừng tự động\r\n                        if (intervalId) {\r\n                          clearInterval(intervalId);\r\n                          setIntervalId(null);\r\n                        }\r\n                        setIsAutoMode(false);\r\n                        enqueueSnackbar(\"Đã tắt chế độ tự động điểm danh\", {\r\n                          variant: \"info\",\r\n                        });\r\n                      }}\r\n                      sx={{ mr: 1 }}\r\n                    >\r\n                      {isAutoMode ? \"Tắt tự động\" : \"Bật tự động\"}\r\n                    </Button>\r\n                  </>\r\n                )}\r\n\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={completeSession}\r\n                  startIcon={<Save />}\r\n                  disabled={sessionInfo?.status === \"completed\"}\r\n                >\r\n                  Kết thúc phiên\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n\r\n            {recognizedStudents.length > 0 && (\r\n              <Box mt={2}>\r\n                <Typography variant=\"subtitle1\" gutterBottom>\r\n                  Đã nhận diện ({recognizedStudents.length})\r\n                </Typography>\r\n                <Grid container spacing={1}>\r\n                  {recognizedStudents.map((student, index) => (\r\n                    <Grid item xs={6} sm={4} key={index}>\r\n                      <Paper\r\n                        elevation={2}\r\n                        sx={{\r\n                          p: 1,\r\n                          display: \"flex\",\r\n                          flexDirection: \"column\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        <Typography variant=\"body2\" noWrap>\r\n                          {student.name}\r\n                        </Typography>\r\n                        <Typography variant=\"caption\" color=\"textSecondary\">\r\n                          {Math.round(student.confidence * 100)}% match\r\n                        </Typography>\r\n                        <Button\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          color=\"primary\"\r\n                          sx={{ mt: 1 }}\r\n                          onClick={() =>\r\n                            handleMarkAttendance(\r\n                              student.studentId,\r\n                              student.confidence\r\n                            )\r\n                          }\r\n                        >\r\n                          <Check fontSize=\"small\" sx={{ mr: 0.5 }} />\r\n                          Điểm danh\r\n                        </Button>\r\n                      </Paper>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </Box>\r\n            )}\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={4}>\r\n          <Card sx={{ mb: 3 }}>\r\n            <CardContent>\r\n              <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                mb={2}\r\n              >\r\n                <Typography variant=\"h6\">\r\n                  Có mặt (\r\n                  {\r\n                    attendanceLogs.filter((log) => log.status === \"present\")\r\n                      .length\r\n                  }\r\n                  /{classInfo?.students.length})\r\n                </Typography>\r\n                <IconButton size=\"small\" onClick={refreshAttendanceLogs}>\r\n                  <Refresh />\r\n                </IconButton>\r\n              </Box>\r\n\r\n              <List dense>\r\n                {attendanceLogs\r\n                  .filter((log) => log.status === \"present\")\r\n                  .sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))\r\n                  .map((log) => (\r\n                    <ListItem\r\n                      key={log._id}\r\n                      secondaryAction={\r\n                        <Chip\r\n                          size=\"small\"\r\n                          icon={\r\n                            log.recognized ? (\r\n                              <VerifiedUser fontSize=\"small\" />\r\n                            ) : null\r\n                          }\r\n                          label={log.recognized ? \"Tự động\" : \"Thủ công\"}\r\n                          color={log.recognized ? \"success\" : \"primary\"}\r\n                        />\r\n                      }\r\n                    >\r\n                      <ListItemAvatar>\r\n                        <Avatar\r\n                          alt={log.student_id.full_name}\r\n                          src={log.student_id.avatar_url}\r\n                        />\r\n                      </ListItemAvatar>\r\n                      <ListItemText\r\n                        primary={log.student_id.full_name}\r\n                        secondary={`${new Date(\r\n                          log.timestamp\r\n                        ).toLocaleTimeString(\"vi-VN\")}`}\r\n                      />\r\n                    </ListItem>\r\n                  ))}\r\n\r\n                {attendanceLogs.filter((log) => log.status === \"present\")\r\n                  .length === 0 && (\r\n                  <ListItem>\r\n                    <ListItemText primary=\"Chưa có sinh viên nào điểm danh\" />\r\n                  </ListItem>\r\n                )}\r\n              </List>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Vắng mặt ({absentStudents.length}/{classInfo?.students.length})\r\n              </Typography>\r\n\r\n              <List dense>\r\n                {absentStudents.map((student) => (\r\n                  <ListItem\r\n                    key={student._id}\r\n                    secondaryAction={\r\n                      <IconButton\r\n                        edge=\"end\"\r\n                        onClick={() => openManualAttendanceDialog(student)}\r\n                      >\r\n                        <Edit fontSize=\"small\" />\r\n                      </IconButton>\r\n                    }\r\n                  >\r\n                    <ListItemAvatar>\r\n                      <Avatar\r\n                        alt={student.full_name}\r\n                        src={student.avatar_url}\r\n                      />\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={student.full_name}\r\n                      secondary={student.student_code}\r\n                    />\r\n                  </ListItem>\r\n                ))}\r\n\r\n                {absentStudents.length === 0 && (\r\n                  <ListItem>\r\n                    <ListItemText primary=\"Không có sinh viên nào vắng mặt\" />\r\n                  </ListItem>\r\n                )}\r\n              </List>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Dialog điểm danh thủ công */}\r\n      <Dialog open={manualDialogOpen} onClose={handleManualDialogClose}>\r\n        <DialogTitle>Điểm danh thủ công</DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ p: 1 }}>\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              {selectedStudent?.full_name} ({selectedStudent?.student_code})\r\n            </Typography>\r\n\r\n            <FormControl fullWidth margin=\"normal\">\r\n              <InputLabel>Trạng thái</InputLabel>\r\n              <Select\r\n                name=\"status\"\r\n                value={manualAttendanceData.status}\r\n                onChange={handleManualAttendanceChange}\r\n                label=\"Trạng thái\"\r\n              >\r\n                <MenuItem value=\"present\">Có mặt</MenuItem>\r\n                <MenuItem value=\"absent\">Vắng mặt</MenuItem>\r\n                <MenuItem value=\"late\">Đi trễ</MenuItem>\r\n                <MenuItem value=\"early_leave\">Về sớm</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n              fullWidth\r\n              margin=\"normal\"\r\n              name=\"note\"\r\n              label=\"Ghi chú\"\r\n              value={manualAttendanceData.note}\r\n              onChange={handleManualAttendanceChange}\r\n              multiline\r\n              rows={2}\r\n            />\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleManualDialogClose}>Hủy</Button>\r\n          <Button onClick={handleManualAttendanceSubmit} variant=\"contained\">\r\n            Xác nhận\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AttendancePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}