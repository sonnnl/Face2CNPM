{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kasiz\\\\Documents\\\\Studying\\\\FaceReg\\\\frontend\\\\src\\\\pages\\\\teacher\\\\AttendancePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useSnackbar } from \"notistack\";\nimport { Box, Typography, Card, CardContent, Grid, Paper, Button, Divider, CircularProgress, List, ListItem, ListItemAvatar, ListItemText, Avatar, Chip, Dialog, DialogTitle, DialogContent, DialogActions, TextField, FormControl, InputLabel, Select, MenuItem, IconButton, Alert } from \"@mui/material\";\nimport { CameraAlt, Check, Close, Edit, Refresh, Save, VerifiedUser, HourglassEmpty } from \"@mui/icons-material\";\nimport Webcam from \"react-webcam\";\nimport * as faceapi from \"face-api.js\";\nimport { getClassFaceFeatures, verifyAttendance, manualAttendance, setModelLoaded, setCameraReady, setDetectedFaces, setRecognizedStudents, clearRecognitionState } from \"../../redux/slices/faceRecognitionSlice\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\nconst AttendancePage = () => {\n  _s();\n  const {\n    classId,\n    sessionId\n  } = useParams();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const videoRef = useRef(null);\n  const [intervalId, setIntervalId] = useState(null);\n  const [showLandmark, setShowLandmark] = useState(false);\n  const [landmarkIntervalId, setLandmarkIntervalId] = useState(null);\n  const {\n    token\n  } = useSelector(state => state.auth);\n  const {\n    isModelLoaded,\n    isCameraReady,\n    detectedFaces,\n    recognizedStudents,\n    classStudents,\n    isProcessing,\n    error\n  } = useSelector(state => state.faceRecognition);\n  const [classInfo, setClassInfo] = useState(null);\n  const [sessionInfo, setSessionInfo] = useState(null);\n  const [attendanceLogs, setAttendanceLogs] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isRecognizing, setIsRecognizing] = useState(false);\n  const [isAutoMode, setIsAutoMode] = useState(false);\n  const [selectedStudent, setSelectedStudent] = useState(null);\n  const [manualDialogOpen, setManualDialogOpen] = useState(false);\n  const [manualAttendanceData, setManualAttendanceData] = useState({\n    status: \"present\",\n    note: \"\"\n  });\n\n  // Các hằng số cấu hình\n  const RECOGNITION_THRESHOLD = 0.5; // Ngưỡng nhận diện\n  const DETECTION_THRESHOLD = 0.5; // Ngưỡng phát hiện khuôn mặt\n  const CONFIDENCE_THRESHOLD = 0.7; // Ngưỡng độ tin cậy để điểm danh\n  const AUTO_DETECT_INTERVAL = 1000; // Thời gian giữa các lần phát hiện (ms)\n  const ENABLE_DEBUG_LOGS = true; // Bật/tắt log gỡ lỗi\n\n  // Load class info, session info và models\n  useEffect(() => {\n    const loadInitialData = async () => {\n      try {\n        setIsLoading(true);\n\n        // Bắt đầu tải dữ liệu và models song song\n        const loadModelsPromise = !isModelLoaded ? loadFaceRecognitionModels() : Promise.resolve(true);\n\n        // Lấy thông tin lớp học\n        const classPromise = axios.get(`${API_URL}/classes/teaching/${classId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Lấy thông tin phiên điểm danh\n        const sessionPromise = axios.get(`${API_URL}/attendance/sessions/${sessionId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Lấy danh sách điểm danh\n        const logsPromise = axios.get(`${API_URL}/attendance/logs/${sessionId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Chờ tất cả API calls hoàn thành\n        const [classResponse, sessionResponse, logsResponse] = await Promise.all([classPromise, sessionPromise, logsPromise]);\n        setClassInfo(classResponse.data.data);\n        setSessionInfo(sessionResponse.data.data);\n        setAttendanceLogs(logsResponse.data.data);\n\n        // Lấy đặc trưng khuôn mặt của sinh viên trong lớp\n        dispatch(getClassFaceFeatures(classId));\n\n        // Không chờ đợi model load xong mới hiển thị UI\n        setIsLoading(false);\n\n        // Model sẽ load song song\n        await loadModelsPromise;\n      } catch (error) {\n        console.error(\"Lỗi khi tải dữ liệu:\", error);\n        enqueueSnackbar(\"Lỗi khi tải dữ liệu\", {\n          variant: \"error\"\n        });\n        setIsLoading(false);\n      }\n    };\n    loadInitialData();\n\n    // Clean up\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n\n      // Dừng landmark interval nếu đang chạy\n      if (landmarkIntervalId) {\n        clearInterval(landmarkIntervalId);\n      }\n\n      // Dừng camera stream nếu đang chạy\n      if (webcamRef.current && webcamRef.current.video && webcamRef.current.video.srcObject) {\n        const tracks = webcamRef.current.video.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n      if (videoRef.current && videoRef.current.srcObject) {\n        const tracks = videoRef.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n      dispatch(clearRecognitionState());\n    };\n  }, [classId, sessionId, token, dispatch, enqueueSnackbar, isModelLoaded, intervalId, landmarkIntervalId]);\n\n  // Load các mô hình nhận diện khuôn mặt\n  const loadFaceRecognitionModels = async () => {\n    try {\n      const MODEL_URL = \"/models\";\n      console.log(\"Bắt đầu tải models từ:\", MODEL_URL);\n\n      // Thêm timeout để đảm bảo có đủ thời gian tải models\n      const modelPromises = [faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL), faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL), faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL)];\n\n      // Kiểm tra xem các models đã được tải chưa\n      const modelStatuses = [faceapi.nets.tinyFaceDetector.isLoaded, faceapi.nets.faceLandmark68Net.isLoaded, faceapi.nets.faceRecognitionNet.isLoaded];\n      if (modelStatuses.every(status => status)) {\n        console.log(\"Các models đã được tải từ trước\");\n        dispatch(setModelLoaded(true));\n        return true;\n      }\n      await Promise.all(modelPromises);\n      console.log(\"Đã tải xong models thành công\");\n      dispatch(setModelLoaded(true));\n      enqueueSnackbar(\"Tải mô hình nhận diện thành công\", {\n        variant: \"success\"\n      });\n      return true;\n    } catch (error) {\n      console.error(\"Lỗi khi tải mô hình:\", error);\n      enqueueSnackbar(\"Không thể tải mô hình nhận diện\", {\n        variant: \"error\"\n      });\n      return false;\n    }\n  };\n\n  // Xử lý phát hiện khuôn mặt\n  const handleDetectFaces = async () => {\n    try {\n      var _webcamRef$current;\n      // Lấy dữ liệu video\n      const videoElement = isAutoMode ? videoRef.current : (_webcamRef$current = webcamRef.current) === null || _webcamRef$current === void 0 ? void 0 : _webcamRef$current.video;\n      if (!videoElement || !canvasRef.current) return;\n\n      // Lấy kích thước của video\n      const displaySize = {\n        width: videoElement.videoWidth || videoElement.width || 640,\n        height: videoElement.videoHeight || videoElement.height || 480\n      };\n\n      // Phát hiện khuôn mặt trên video\n      const detections = await faceapi.detectAllFaces(videoElement, new faceapi.SsdMobilenetv1Options({\n        minConfidence: RECOGNITION_THRESHOLD\n      })).withFaceLandmarks().withFaceDescriptors();\n      if (!detections || detections.length === 0) {\n        if (ENABLE_DEBUG_LOGS) {\n          console.log(\"[DEBUG] Không phát hiện khuôn mặt\", new Date().toLocaleTimeString());\n        }\n        return [];\n      }\n      if (ENABLE_DEBUG_LOGS) {\n        console.log(`[DEBUG] Phát hiện ${detections.length} khuôn mặt`, new Date().toLocaleTimeString());\n      }\n\n      // Điều chỉnh kích thước phát hiện để phù hợp với kích thước hiển thị\n      const resizedDetections = faceapi.resizeResults(detections, displaySize);\n\n      // Cập nhật state\n      setDetectedFaces(resizedDetections);\n\n      // Tạo FaceMatcher từ dữ liệu sinh viên\n      const labeledDescriptors = classStudents.filter(student => student.faceDescriptors && student.faceDescriptors.length > 0).map(student => {\n        const descriptors = student.faceDescriptors.map(descriptor => new Float32Array(descriptor));\n        return new faceapi.LabeledFaceDescriptors(student._id, descriptors);\n      });\n\n      // Tạo faceMatcher nếu có dữ liệu\n      if (labeledDescriptors.length === 0) {\n        console.warn(\"Không có dữ liệu khuôn mặt của sinh viên\");\n        return resizedDetections;\n      }\n      const faceMatcher = new faceapi.FaceMatcher(labeledDescriptors, RECOGNITION_THRESHOLD);\n\n      // Vẽ lên canvas nếu có khuôn mặt\n      const canvas = canvasRef.current;\n      canvas.width = displaySize.width;\n      canvas.height = displaySize.height;\n      const ctx = canvas.getContext(\"2d\");\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Vẽ các phát hiện lên canvas\n      resizedDetections.forEach(detection => {\n        if (detection.descriptor) {\n          const bestMatch = faceMatcher.findBestMatch(detection.descriptor);\n          const {\n            label,\n            distance\n          } = bestMatch;\n\n          // Kiểm tra nếu match với một sinh viên\n          if (label !== \"unknown\") {\n            // Tìm sinh viên trong danh sách\n            const student = classStudents.find(s => s._id === label);\n            if (student) {\n              // Cập nhật thông tin nhận diện cho sinh viên\n              const studentId = student._id;\n              const confidence = 1 - distance;\n\n              // Đánh dấu sinh viên đã điểm danh nếu đủ độ tin cậy\n              if (confidence >= RECOGNITION_THRESHOLD) {\n                handleMarkAttendance(studentId, confidence);\n              }\n\n              // Vẽ hộp và tên sinh viên\n              const drawBox = new faceapi.draw.DrawBox(detection.detection.box, {\n                label: `${student.full_name} (${Math.round(confidence * 100)}%)`,\n                boxColor: confidence >= RECOGNITION_THRESHOLD ? \"green\" : \"orange\"\n              });\n              drawBox.draw(canvas);\n            }\n          } else {\n            // Không nhận diện được sinh viên\n            const drawBox = new faceapi.draw.DrawBox(detection.detection.box, {\n              label: \"Unknown\",\n              boxColor: \"red\"\n            });\n            drawBox.draw(canvas);\n          }\n        } else {\n          // Không có descriptor\n          const drawBox = new faceapi.draw.DrawBox(detection.detection.box, {\n            label: \"Đang phân tích...\",\n            boxColor: \"blue\"\n          });\n          drawBox.draw(canvas);\n        }\n\n        // Vẽ landmarks nếu đã bật\n        if (showLandmark && detection.landmarks) {\n          faceapi.draw.drawFaceLandmarks(canvas, detection);\n        }\n      });\n      return resizedDetections;\n    } catch (error) {\n      console.error(\"Lỗi phát hiện khuôn mặt:\", error);\n      return [];\n    }\n  };\n\n  // Điểm danh thủ công\n  const openManualAttendanceDialog = student => {\n    setSelectedStudent(student);\n    setManualAttendanceData({\n      status: \"present\",\n      note: \"\"\n    });\n    setManualDialogOpen(true);\n  };\n  const handleManualDialogClose = () => {\n    setManualDialogOpen(false);\n  };\n  const handleManualAttendanceChange = e => {\n    setManualAttendanceData({\n      ...manualAttendanceData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleManualAttendanceSubmit = async () => {\n    if (!selectedStudent) return;\n    try {\n      const result = await dispatch(manualAttendance({\n        sessionId,\n        studentId: selectedStudent._id,\n        status: manualAttendanceData.status,\n        note: manualAttendanceData.note\n      })).unwrap();\n\n      // Cập nhật logs điểm danh\n      if (result && result.data) {\n        const updatedLogs = attendanceLogs.filter(log => log.student_id._id !== selectedStudent._id);\n        updatedLogs.push({\n          ...result.data,\n          student_id: selectedStudent\n        });\n        setAttendanceLogs(updatedLogs);\n      }\n      enqueueSnackbar(\"Điểm danh thủ công thành công\", {\n        variant: \"success\"\n      });\n      handleManualDialogClose();\n\n      // Cập nhật lại thông tin phiên điểm danh\n      const sessionResponse = await axios.get(`${API_URL}/attendance/sessions/${sessionId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSessionInfo(sessionResponse.data.data);\n    } catch (error) {\n      console.error(\"Lỗi khi điểm danh thủ công:\", error);\n      enqueueSnackbar(\"Lỗi khi điểm danh thủ công\", {\n        variant: \"error\"\n      });\n    }\n  };\n\n  // Đánh dấu điểm danh từ nhận diện khuôn mặt\n  const markAttendance = async (studentId, faceDescriptor, confidence, imageBase64) => {\n    try {\n      const result = await dispatch(verifyAttendance({\n        sessionId,\n        studentId,\n        faceDescriptor,\n        confidence,\n        imageBase64\n      })).unwrap();\n\n      // Cập nhật logs điểm danh\n      if (result && result.data) {\n        const student = classStudents.find(s => s._id === studentId);\n        if (student) {\n          const updatedLogs = attendanceLogs.filter(log => log.student_id._id !== studentId);\n          updatedLogs.push({\n            ...result.data,\n            student_id: student\n          });\n          setAttendanceLogs(updatedLogs);\n          enqueueSnackbar(`Đã điểm danh cho ${student.full_name}`, {\n            variant: \"success\"\n          });\n        }\n      }\n\n      // Cập nhật lại thông tin phiên điểm danh\n      const sessionResponse = await axios.get(`${API_URL}/attendance/sessions/${sessionId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSessionInfo(sessionResponse.data.data);\n      return true;\n    } catch (error) {\n      console.error(\"Lỗi khi xác nhận điểm danh:\", error);\n      enqueueSnackbar(\"Lỗi khi xác nhận điểm danh\", {\n        variant: \"error\"\n      });\n      return false;\n    }\n  };\n\n  // Kết thúc phiên điểm danh\n  const completeSession = async () => {\n    try {\n      await axios.put(`${API_URL}/attendance/sessions/${sessionId}`, {\n        status: \"completed\"\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      enqueueSnackbar(\"Phiên điểm danh đã kết thúc\", {\n        variant: \"success\"\n      });\n      navigate(`/teacher/classes/${classId}`);\n    } catch (error) {\n      console.error(\"Lỗi khi kết thúc phiên điểm danh:\", error);\n      enqueueSnackbar(\"Lỗi khi kết thúc phiên điểm danh\", {\n        variant: \"error\"\n      });\n    }\n  };\n\n  // Làm mới danh sách điểm danh\n  const refreshAttendanceLogs = async () => {\n    try {\n      const logsResponse = await axios.get(`${API_URL}/attendance/logs/${sessionId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setAttendanceLogs(logsResponse.data.data);\n      const sessionResponse = await axios.get(`${API_URL}/attendance/sessions/${sessionId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSessionInfo(sessionResponse.data.data);\n      enqueueSnackbar(\"Đã làm mới dữ liệu điểm danh\", {\n        variant: \"success\"\n      });\n    } catch (error) {\n      console.error(\"Lỗi khi làm mới dữ liệu:\", error);\n      enqueueSnackbar(\"Lỗi khi làm mới dữ liệu\", {\n        variant: \"error\"\n      });\n    }\n  };\n\n  // Chụp ảnh và nhận diện thủ công\n  const captureAndRecognize = async () => {\n    await handleDetectFaces();\n  };\n\n  // Hàm khởi tạo camera trực tiếp - nút duy nhất cho camera\n  const initDirectCamera = () => {\n    try {\n      // Tải model nhận diện\n      loadFaceRecognitionModels();\n\n      // Truy cập camera trực tiếp thông qua MediaDevices API\n      navigator.mediaDevices.getUserMedia({\n        video: {\n          width: {\n            ideal: 1280\n          },\n          height: {\n            ideal: 720\n          },\n          facingMode: \"user\"\n        },\n        audio: false\n      }).then(stream => {\n        console.log(\"Đã nhận được stream camera trực tiếp\", stream.id);\n\n        // Nếu đang sử dụng webcam component\n        if (webcamRef.current && webcamRef.current.video) {\n          webcamRef.current.video.srcObject = stream;\n        }\n        // Hoặc nếu đang sử dụng video element\n        else if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n          videoRef.current.onloadedmetadata = () => {\n            videoRef.current.play().catch(err => console.error(\"Lỗi khi play video:\", err));\n          };\n        }\n\n        // Đánh dấu camera và model đã sẵn sàng\n        dispatch(setModelLoaded(true));\n        dispatch(setCameraReady(true));\n        enqueueSnackbar(\"Đã kết nối camera thành công\", {\n          variant: \"success\"\n        });\n\n        // Bật hiển thị landmark sau khi camera khởi động\n        setTimeout(() => {\n          if (!landmarkIntervalId) {\n            toggleLandmarkDetection();\n          }\n        }, 1000);\n      }).catch(err => {\n        console.error(\"Lỗi truy cập camera:\", err);\n        enqueueSnackbar(`Không thể truy cập camera: ${err.message}`, {\n          variant: \"error\"\n        });\n      });\n    } catch (err) {\n      console.error(\"Lỗi khi khởi tạo camera trực tiếp:\", err);\n      enqueueSnackbar(`Lỗi: ${err.message}`, {\n        variant: \"error\"\n      });\n    }\n  };\n\n  // Điểm danh thủ công trong chế độ đơn giản\n  const showStudentList = () => {\n    if (!classInfo) return;\n\n    // Hiển thị danh sách sinh viên để điểm danh thủ công\n    const absentStudents = getAbsentStudents();\n    if (absentStudents.length === 0) {\n      enqueueSnackbar(\"Tất cả sinh viên đã được điểm danh\", {\n        variant: \"success\"\n      });\n      return;\n    }\n\n    // Hiển thị dialog chọn sinh viên để điểm danh\n    if (absentStudents.length > 0 && absentStudents[0]) {\n      openManualAttendanceDialog(absentStudents[0]);\n    }\n  };\n\n  // Bật/tắt hiển thị landmark trên khuôn mặt\n  const toggleLandmarkDetection = () => {\n    var _webcamRef$current2;\n    const newState = !showLandmark;\n    setShowLandmark(newState);\n\n    // Lấy canvas context\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Kiểm tra nếu không có khuôn mặt được phát hiện\n    if (!detectedFaces || detectedFaces.length === 0) return;\n\n    // Lấy video element\n    const videoElement = isAutoMode ? videoRef.current : (_webcamRef$current2 = webcamRef.current) === null || _webcamRef$current2 === void 0 ? void 0 : _webcamRef$current2.video;\n    if (!videoElement) return;\n\n    // Tính toán tỷ lệ hiển thị\n    const displaySize = {\n      width: videoElement.videoWidth || videoElement.width,\n      height: videoElement.videoHeight || videoElement.height\n    };\n\n    // Đảm bảo canvas có kích thước phù hợp\n    faceapi.matchDimensions(canvas, displaySize);\n\n    // Tạo FaceMatcher từ dữ liệu sinh viên\n    const labeledDescriptors = classStudents.filter(student => student.faceDescriptors && student.faceDescriptors.length > 0).map(student => {\n      const descriptors = student.faceDescriptors.map(descriptor => new Float32Array(descriptor));\n      return new faceapi.LabeledFaceDescriptors(student._id, descriptors);\n    });\n\n    // Tạo faceMatcher nếu có dữ liệu\n    let faceMatcher = null;\n    if (labeledDescriptors.length > 0) {\n      faceMatcher = new faceapi.FaceMatcher(labeledDescriptors, RECOGNITION_THRESHOLD);\n    }\n\n    // Sử dụng faceapi.resizeResults để điều chỉnh kích thước phát hiện phù hợp với canvas\n    const resizedDetections = faceapi.resizeResults(detectedFaces, displaySize);\n\n    // Vẽ các phát hiện lên canvas\n    resizedDetections.forEach(detection => {\n      if (detection.descriptor && faceMatcher) {\n        var _classStudents$find;\n        const bestMatch = faceMatcher.findBestMatch(detection.descriptor);\n        const {\n          label,\n          distance\n        } = bestMatch;\n        const drawBox = new faceapi.draw.DrawBox(detection.detection.box, {\n          label: label !== \"unknown\" ? `${((_classStudents$find = classStudents.find(s => s._id === label)) === null || _classStudents$find === void 0 ? void 0 : _classStudents$find.full_name) || \"Unknown\"} (${Math.round((1 - distance) * 100)}%)` : \"Unknown\",\n          boxColor: label !== \"unknown\" ? \"green\" : \"red\"\n        });\n        drawBox.draw(canvas);\n      } else {\n        // Nếu không có descriptor, vẽ hộp màu xanh dương\n        const drawBox = new faceapi.draw.DrawBox(detection.detection.box, {\n          label: \"Đang phân tích...\",\n          boxColor: \"blue\"\n        });\n        drawBox.draw(canvas);\n      }\n\n      // Vẽ landmarks nếu đã bật\n      if (newState && detection.landmarks) {\n        faceapi.draw.drawFaceLandmarks(canvas, detection);\n      }\n    });\n  };\n\n  // Xử lý đánh dấu sinh viên điểm danh\n  const handleMarkAttendance = async (studentId, confidence) => {\n    // Kiểm tra xem sinh viên đã được điểm danh chưa\n    const isAlreadyAttended = attendanceLogs.some(log => log.student_id._id === studentId && log.status === \"present\");\n    if (isAlreadyAttended) {\n      if (ENABLE_DEBUG_LOGS) {\n        console.log(`[DEBUG] Sinh viên ${studentId} đã được điểm danh trước đó`);\n      }\n      return;\n    }\n    try {\n      var _webcamRef$current3;\n      // Lấy dữ liệu video\n      const videoElement = isAutoMode ? videoRef.current : (_webcamRef$current3 = webcamRef.current) === null || _webcamRef$current3 === void 0 ? void 0 : _webcamRef$current3.video;\n      if (!videoElement) return;\n\n      // Tạo ảnh chụp từ video element\n      let imageBase64 = null;\n\n      // Nếu sử dụng webcam component\n      if (!isAutoMode && webcamRef.current) {\n        imageBase64 = webcamRef.current.getScreenshot();\n      }\n      // Nếu sử dụng video element trực tiếp\n      else if (isAutoMode) {\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = videoElement.videoWidth;\n        canvas.height = videoElement.videoHeight;\n        const ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(videoElement, 0, 0);\n        imageBase64 = canvas.toDataURL(\"image/jpeg\");\n      }\n\n      // Tìm sinh viên đã được phát hiện\n      const student = classStudents.find(s => s._id === studentId);\n      if (!student) {\n        console.error(`Không tìm thấy sinh viên với ID ${studentId}`);\n        return;\n      }\n\n      // Lấy descriptor mới nhất từ sinh viên\n      const descriptor = student.faceDescriptors && student.faceDescriptors.length > 0 ? student.faceDescriptors[0] : null;\n\n      // Gọi API điểm danh\n      if (ENABLE_DEBUG_LOGS) {\n        console.log(`[DEBUG] Đánh dấu điểm danh cho ${student.full_name} với độ tin cậy ${confidence.toFixed(2)}`);\n      }\n\n      // Gọi hàm điểm danh\n      await markAttendance(studentId, descriptor, confidence, imageBase64);\n    } catch (error) {\n      console.error(\"Lỗi khi đánh dấu điểm danh:\", error);\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"60vh\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 804,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 798,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Lấy danh sách sinh viên vắng mặt\n  const getAbsentStudents = () => {\n    if (!classInfo || !sessionInfo) return [];\n    const presentStudentIds = attendanceLogs.filter(log => log.status === \"present\").map(log => log.student_id._id);\n    return classInfo.students.filter(student => !presentStudentIds.includes(student._id));\n  };\n  const absentStudents = getAbsentStudents();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: [\"\\u0110i\\u1EC3m Danh - \", classInfo === null || classInfo === void 0 ? void 0 : classInfo.class_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 826,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      color: \"textSecondary\",\n      gutterBottom: true,\n      children: [\"Bu\\u1ED5i \", sessionInfo === null || sessionInfo === void 0 ? void 0 : sessionInfo.session_number, \" -\", \" \", new Date(sessionInfo === null || sessionInfo === void 0 ? void 0 : sessionInfo.date).toLocaleDateString(\"vi-VN\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 829,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      mt: 1,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              mb: 2,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Camera nh\\u1EADn di\\u1EC7n\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 844,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Chip, {\n                  label: isAutoMode ? \"Tự động đang bật\" : \"Tự động đang tắt\",\n                  color: isAutoMode ? \"success\" : \"default\",\n                  sx: {\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 846,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: isAutoMode ? \"error\" : \"primary\",\n                  onClick: isAutoMode ? () => {\n                    // Dừng tự động\n                    if (intervalId) {\n                      clearInterval(intervalId);\n                      setIntervalId(null);\n                    }\n                    setIsAutoMode(false);\n                    enqueueSnackbar(\"Đã tắt chế độ tự động điểm danh\", {\n                      variant: \"info\"\n                    });\n                  } : () => {\n                    // Bắt đầu tự động\n                    if (intervalId) {\n                      clearInterval(intervalId);\n                    }\n                    const id = setInterval(() => {\n                      handleDetectFaces();\n                    }, AUTO_DETECT_INTERVAL);\n                    setIntervalId(id);\n                    setIsAutoMode(true);\n                    enqueueSnackbar(\"Đã bật chế độ tự động điểm danh\", {\n                      variant: \"info\"\n                    });\n                  },\n                  children: isAutoMode ? \"Tắt tự động\" : \"Bật tự động\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 851,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 845,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 838,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 837,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            sx: {\n              position: \"relative\",\n              width: \"100%\",\n              height: \"400px\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              overflow: \"hidden\",\n              mb: 2\n            },\n            children: isCameraReady ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [isAutoMode ?\n              /*#__PURE__*/\n              // Sử dụng video element trực tiếp thay vì Webcam component\n              _jsxDEV(\"video\", {\n                ref: videoRef,\n                style: {\n                  position: \"absolute\",\n                  width: \"100%\",\n                  height: \"100%\",\n                  objectFit: \"cover\"\n                },\n                autoPlay: true,\n                playsInline: true,\n                muted: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 906,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Webcam, {\n                audio: false,\n                ref: webcamRef,\n                screenshotFormat: \"image/jpeg\",\n                width: 640,\n                height: 480,\n                videoConstraints: {\n                  width: 640,\n                  height: 480,\n                  facingMode: \"user\"\n                },\n                style: {\n                  position: \"absolute\",\n                  width: \"100%\",\n                  height: \"100%\",\n                  objectFit: \"cover\"\n                },\n                onUserMedia: stream => {\n                  console.log(\"Camera đã được cấp quyền và khởi tạo\", stream.id);\n                  // Đảm bảo readyState được kiểm tra khi stream đã sẵn sàng\n                  setTimeout(() => {\n                    if (webcamRef.current && webcamRef.current.video) {\n                      console.log(\"Stream ready, readyState=\", webcamRef.current.video.readyState);\n                      dispatch(setCameraReady(true));\n                    }\n                  }, 500);\n                },\n                onUserMediaError: err => {\n                  console.error(\"Lỗi khi truy cập camera:\", err);\n                  enqueueSnackbar(`Không thể truy cập camera: ${err.name === \"NotAllowedError\" ? \"Bạn chưa cấp quyền truy cập camera\" : err.name === \"NotFoundError\" ? \"Không tìm thấy thiết bị camera\" : err.message || \"Lỗi không xác định\"}`, {\n                    variant: \"error\"\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 919,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n                ref: canvasRef,\n                style: {\n                  position: \"absolute\",\n                  top: 0,\n                  left: 0,\n                  width: \"100%\",\n                  height: \"100%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 970,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 50\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 983,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                mt: 2,\n                children: \"\\u0110ang kh\\u1EDFi t\\u1EA1o camera...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 984,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                color: \"text.secondary\",\n                sx: {\n                  mt: 1\n                },\n                children: isModelLoaded ? \"Chờ kết nối camera - Hãy đảm bảo bạn đã cấp quyền camera\" : \"Đang tải mô hình nhận diện khuôn mặt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 985,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mt: 2,\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  size: \"small\",\n                  sx: {\n                    mb: 1\n                  },\n                  onClick: initDirectCamera,\n                  children: \"Kh\\u1EDFi \\u0111\\u1ED9ng camera tr\\u1EF1c ti\\u1EBFp\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1003,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 995,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 982,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 889,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              onClick: captureAndRecognize,\n              startIcon: /*#__PURE__*/_jsxDEV(CameraAlt, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1021,\n                columnNumber: 28\n              }, this),\n              disabled: !isCameraReady || isRecognizing || isAutoMode,\n              children: isRecognizing ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 24,\n                color: \"inherit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1025,\n                columnNumber: 19\n              }, this) : \"Chụp & Nhận diện\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1018,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: [isCameraReady && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: showLandmark ? \"success\" : \"info\",\n                  onClick: toggleLandmarkDetection,\n                  sx: {\n                    mr: 1\n                  },\n                  children: showLandmark ? \"Tắt Landmark\" : \"Hiện Landmark\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1034,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: isAutoMode ? \"error\" : \"primary\",\n                  onClick: isAutoMode ? () => {\n                    // Dừng tự động\n                    if (intervalId) {\n                      clearInterval(intervalId);\n                      setIntervalId(null);\n                    }\n                    setIsAutoMode(false);\n                    enqueueSnackbar(\"Đã tắt chế độ tự động điểm danh\", {\n                      variant: \"info\"\n                    });\n                  } : () => {\n                    // Bắt đầu tự động\n                    if (intervalId) {\n                      clearInterval(intervalId);\n                    }\n                    const id = setInterval(() => {\n                      handleDetectFaces();\n                    }, AUTO_DETECT_INTERVAL);\n                    setIntervalId(id);\n                    setIsAutoMode(true);\n                    enqueueSnackbar(\"Đã bật chế độ tự động điểm danh\", {\n                      variant: \"info\"\n                    });\n                  },\n                  sx: {\n                    mr: 1\n                  },\n                  children: isAutoMode ? \"Tắt tự động\" : \"Bật tự động\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1043,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: completeSession,\n                startIcon: /*#__PURE__*/_jsxDEV(Save, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1087,\n                  columnNumber: 30\n                }, this),\n                disabled: (sessionInfo === null || sessionInfo === void 0 ? void 0 : sessionInfo.status) === \"completed\",\n                children: \"K\\u1EBFt th\\xFAc phi\\xEAn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1083,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1031,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1017,\n            columnNumber: 13\n          }, this), recognizedStudents.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n            mt: 2,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: [\"\\u0110\\xE3 nh\\u1EADn di\\u1EC7n (\", recognizedStudents.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1097,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 1,\n              children: recognizedStudents.map((student, index) => /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                sm: 4,\n                children: /*#__PURE__*/_jsxDEV(Paper, {\n                  elevation: 2,\n                  sx: {\n                    p: 1,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    noWrap: true,\n                    children: student.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1112,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    color: \"textSecondary\",\n                    children: [Math.round(student.confidence * 100), \"% match\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1115,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    variant: \"outlined\",\n                    color: \"primary\",\n                    sx: {\n                      mt: 1\n                    },\n                    onClick: () => handleMarkAttendance(student.studentId, student.confidence),\n                    children: [/*#__PURE__*/_jsxDEV(Check, {\n                      fontSize: \"small\",\n                      sx: {\n                        mr: 0.5\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1130,\n                      columnNumber: 27\n                    }, this), \"\\u0110i\\u1EC3m danh\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1118,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1103,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1102,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1100,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1096,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 836,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 835,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            mb: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              mb: 2,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: [\"C\\xF3 m\\u1EB7t (\", attendanceLogs.filter(log => log.status === \"present\").length, \"/\", classInfo === null || classInfo === void 0 ? void 0 : classInfo.students.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1151,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"small\",\n                onClick: refreshAttendanceLogs,\n                children: /*#__PURE__*/_jsxDEV(Refresh, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1160,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1159,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              dense: true,\n              children: [attendanceLogs.filter(log => log.status === \"present\").sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp)).map(log => /*#__PURE__*/_jsxDEV(ListItem, {\n                secondaryAction: /*#__PURE__*/_jsxDEV(Chip, {\n                  size: \"small\",\n                  icon: log.recognized ? /*#__PURE__*/_jsxDEV(VerifiedUser, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1176,\n                    columnNumber: 31\n                  }, this) : null,\n                  label: log.recognized ? \"Tự động\" : \"Thủ công\",\n                  color: log.recognized ? \"success\" : \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1172,\n                  columnNumber: 25\n                }, this),\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    alt: log.student_id.full_name,\n                    src: log.student_id.avatar_url\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1185,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1184,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: log.student_id.full_name,\n                  secondary: `${new Date(log.timestamp).toLocaleTimeString(\"vi-VN\")}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1190,\n                  columnNumber: 23\n                }, this)]\n              }, log._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1169,\n                columnNumber: 21\n              }, this)), attendanceLogs.filter(log => log.status === \"present\").length === 0 && /*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: \"Ch\\u01B0a c\\xF3 sinh vi\\xEAn n\\xE0o \\u0111i\\u1EC3m danh\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1202,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1201,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1144,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: [\"V\\u1EAFng m\\u1EB7t (\", absentStudents.length, \"/\", classInfo === null || classInfo === void 0 ? void 0 : classInfo.students.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              dense: true,\n              children: [absentStudents.map(student => /*#__PURE__*/_jsxDEV(ListItem, {\n                secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n                  edge: \"end\",\n                  onClick: () => openManualAttendanceDialog(student),\n                  children: /*#__PURE__*/_jsxDEV(Edit, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1224,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1220,\n                  columnNumber: 23\n                }, this),\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    alt: student.full_name,\n                    src: student.avatar_url\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1229,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1228,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: student.full_name,\n                  secondary: student.student_code\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1234,\n                  columnNumber: 21\n                }, this)]\n              }, student._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1217,\n                columnNumber: 19\n              }, this)), absentStudents.length === 0 && /*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: \"Kh\\xF4ng c\\xF3 sinh vi\\xEAn n\\xE0o v\\u1EAFng m\\u1EB7t\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1243,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1242,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1215,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1210,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 834,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: manualDialogOpen,\n      onClose: handleManualDialogClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"\\u0110i\\u1EC3m danh th\\u1EE7 c\\xF4ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: [selectedStudent === null || selectedStudent === void 0 ? void 0 : selectedStudent.full_name, \" (\", selectedStudent === null || selectedStudent === void 0 ? void 0 : selectedStudent.student_code, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            margin: \"normal\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Tr\\u1EA1ng th\\xE1i\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1262,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              name: \"status\",\n              value: manualAttendanceData.status,\n              onChange: handleManualAttendanceChange,\n              label: \"Tr\\u1EA1ng th\\xE1i\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"present\",\n                children: \"C\\xF3 m\\u1EB7t\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1269,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"absent\",\n                children: \"V\\u1EAFng m\\u1EB7t\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1270,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"late\",\n                children: \"\\u0110i tr\\u1EC5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1271,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"early_leave\",\n                children: \"V\\u1EC1 s\\u1EDBm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1272,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1263,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            margin: \"normal\",\n            name: \"note\",\n            label: \"Ghi ch\\xFA\",\n            value: manualAttendanceData.note,\n            onChange: handleManualAttendanceChange,\n            multiline: true,\n            rows: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1276,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1256,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleManualDialogClose,\n          children: \"H\\u1EE7y\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleManualAttendanceSubmit,\n          variant: \"contained\",\n          children: \"X\\xE1c nh\\u1EADn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1290,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1288,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1253,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 825,\n    columnNumber: 5\n  }, this);\n};\n_s(AttendancePage, \"xF2uNwGAKlt1XU8f7AkoFEYVw9M=\", false, function () {\n  return [useParams, useNavigate, useDispatch, useSnackbar, useSelector, useSelector];\n});\n_c = AttendancePage;\nexport default AttendancePage;\nvar _c;\n$RefreshReg$(_c, \"AttendancePage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","useDispatch","useSelector","useSnackbar","Box","Typography","Card","CardContent","Grid","Paper","Button","Divider","CircularProgress","List","ListItem","ListItemAvatar","ListItemText","Avatar","Chip","Dialog","DialogTitle","DialogContent","DialogActions","TextField","FormControl","InputLabel","Select","MenuItem","IconButton","Alert","CameraAlt","Check","Close","Edit","Refresh","Save","VerifiedUser","HourglassEmpty","Webcam","faceapi","getClassFaceFeatures","verifyAttendance","manualAttendance","setModelLoaded","setCameraReady","setDetectedFaces","setRecognizedStudents","clearRecognitionState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","process","env","REACT_APP_API_URL","AttendancePage","_s","classId","sessionId","navigate","dispatch","enqueueSnackbar","webcamRef","canvasRef","videoRef","intervalId","setIntervalId","showLandmark","setShowLandmark","landmarkIntervalId","setLandmarkIntervalId","token","state","auth","isModelLoaded","isCameraReady","detectedFaces","recognizedStudents","classStudents","isProcessing","error","faceRecognition","classInfo","setClassInfo","sessionInfo","setSessionInfo","attendanceLogs","setAttendanceLogs","isLoading","setIsLoading","isRecognizing","setIsRecognizing","isAutoMode","setIsAutoMode","selectedStudent","setSelectedStudent","manualDialogOpen","setManualDialogOpen","manualAttendanceData","setManualAttendanceData","status","note","RECOGNITION_THRESHOLD","DETECTION_THRESHOLD","CONFIDENCE_THRESHOLD","AUTO_DETECT_INTERVAL","ENABLE_DEBUG_LOGS","loadInitialData","loadModelsPromise","loadFaceRecognitionModels","Promise","resolve","classPromise","get","headers","Authorization","sessionPromise","logsPromise","classResponse","sessionResponse","logsResponse","all","data","console","variant","clearInterval","current","video","srcObject","tracks","getTracks","forEach","track","stop","MODEL_URL","log","modelPromises","nets","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","modelStatuses","isLoaded","every","handleDetectFaces","_webcamRef$current","videoElement","displaySize","width","videoWidth","height","videoHeight","detections","detectAllFaces","SsdMobilenetv1Options","minConfidence","withFaceLandmarks","withFaceDescriptors","length","Date","toLocaleTimeString","resizedDetections","resizeResults","labeledDescriptors","filter","student","faceDescriptors","map","descriptors","descriptor","Float32Array","LabeledFaceDescriptors","_id","warn","faceMatcher","FaceMatcher","canvas","ctx","getContext","clearRect","detection","bestMatch","findBestMatch","label","distance","find","s","studentId","confidence","handleMarkAttendance","drawBox","draw","DrawBox","box","full_name","Math","round","boxColor","landmarks","drawFaceLandmarks","openManualAttendanceDialog","handleManualDialogClose","handleManualAttendanceChange","e","target","name","value","handleManualAttendanceSubmit","result","unwrap","updatedLogs","student_id","push","markAttendance","faceDescriptor","imageBase64","completeSession","put","refreshAttendanceLogs","captureAndRecognize","initDirectCamera","navigator","mediaDevices","getUserMedia","ideal","facingMode","audio","then","stream","id","onloadedmetadata","play","catch","err","setTimeout","toggleLandmarkDetection","message","showStudentList","absentStudents","getAbsentStudents","_webcamRef$current2","newState","matchDimensions","_classStudents$find","isAlreadyAttended","some","_webcamRef$current3","getScreenshot","document","createElement","drawImage","toDataURL","toFixed","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","presentStudentIds","students","includes","gutterBottom","class_name","color","session_number","date","toLocaleDateString","container","spacing","mt","item","xs","md","mb","sx","mr","onClick","setInterval","elevation","position","overflow","ref","style","objectFit","autoPlay","playsInline","muted","screenshotFormat","videoConstraints","onUserMedia","readyState","onUserMediaError","top","left","flexDirection","size","startIcon","disabled","index","sm","p","noWrap","fontSize","dense","sort","a","b","timestamp","secondaryAction","icon","recognized","alt","src","avatar_url","primary","secondary","edge","student_code","open","onClose","fullWidth","margin","onChange","multiline","rows","_c","$RefreshReg$"],"sources":["C:/Users/kasiz/Documents/Studying/FaceReg/frontend/src/pages/teacher/AttendancePage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Paper,\r\n  Button,\r\n  Divider,\r\n  CircularProgress,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Avatar,\r\n  Chip,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  IconButton,\r\n  Alert,\r\n} from \"@mui/material\";\r\nimport {\r\n  CameraAlt,\r\n  Check,\r\n  Close,\r\n  Edit,\r\n  Refresh,\r\n  Save,\r\n  VerifiedUser,\r\n  HourglassEmpty,\r\n} from \"@mui/icons-material\";\r\nimport Webcam from \"react-webcam\";\r\nimport * as faceapi from \"face-api.js\";\r\nimport {\r\n  getClassFaceFeatures,\r\n  verifyAttendance,\r\n  manualAttendance,\r\n  setModelLoaded,\r\n  setCameraReady,\r\n  setDetectedFaces,\r\n  setRecognizedStudents,\r\n  clearRecognitionState,\r\n} from \"../../redux/slices/faceRecognitionSlice\";\r\nimport axios from \"axios\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\r\n\r\nconst AttendancePage = () => {\r\n  const { classId, sessionId } = useParams();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const videoRef = useRef(null);\r\n  const [intervalId, setIntervalId] = useState(null);\r\n  const [showLandmark, setShowLandmark] = useState(false);\r\n  const [landmarkIntervalId, setLandmarkIntervalId] = useState(null);\r\n\r\n  const { token } = useSelector((state) => state.auth);\r\n  const {\r\n    isModelLoaded,\r\n    isCameraReady,\r\n    detectedFaces,\r\n    recognizedStudents,\r\n    classStudents,\r\n    isProcessing,\r\n    error,\r\n  } = useSelector((state) => state.faceRecognition);\r\n\r\n  const [classInfo, setClassInfo] = useState(null);\r\n  const [sessionInfo, setSessionInfo] = useState(null);\r\n  const [attendanceLogs, setAttendanceLogs] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isRecognizing, setIsRecognizing] = useState(false);\r\n  const [isAutoMode, setIsAutoMode] = useState(false);\r\n  const [selectedStudent, setSelectedStudent] = useState(null);\r\n  const [manualDialogOpen, setManualDialogOpen] = useState(false);\r\n  const [manualAttendanceData, setManualAttendanceData] = useState({\r\n    status: \"present\",\r\n    note: \"\",\r\n  });\r\n\r\n  // Các hằng số cấu hình\r\n  const RECOGNITION_THRESHOLD = 0.5; // Ngưỡng nhận diện\r\n  const DETECTION_THRESHOLD = 0.5; // Ngưỡng phát hiện khuôn mặt\r\n  const CONFIDENCE_THRESHOLD = 0.7; // Ngưỡng độ tin cậy để điểm danh\r\n  const AUTO_DETECT_INTERVAL = 1000; // Thời gian giữa các lần phát hiện (ms)\r\n  const ENABLE_DEBUG_LOGS = true; // Bật/tắt log gỡ lỗi\r\n\r\n  // Load class info, session info và models\r\n  useEffect(() => {\r\n    const loadInitialData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n\r\n        // Bắt đầu tải dữ liệu và models song song\r\n        const loadModelsPromise = !isModelLoaded\r\n          ? loadFaceRecognitionModels()\r\n          : Promise.resolve(true);\r\n\r\n        // Lấy thông tin lớp học\r\n        const classPromise = axios.get(\r\n          `${API_URL}/classes/teaching/${classId}`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        );\r\n\r\n        // Lấy thông tin phiên điểm danh\r\n        const sessionPromise = axios.get(\r\n          `${API_URL}/attendance/sessions/${sessionId}`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        );\r\n\r\n        // Lấy danh sách điểm danh\r\n        const logsPromise = axios.get(\r\n          `${API_URL}/attendance/logs/${sessionId}`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        );\r\n\r\n        // Chờ tất cả API calls hoàn thành\r\n        const [classResponse, sessionResponse, logsResponse] =\r\n          await Promise.all([classPromise, sessionPromise, logsPromise]);\r\n\r\n        setClassInfo(classResponse.data.data);\r\n        setSessionInfo(sessionResponse.data.data);\r\n        setAttendanceLogs(logsResponse.data.data);\r\n\r\n        // Lấy đặc trưng khuôn mặt của sinh viên trong lớp\r\n        dispatch(getClassFaceFeatures(classId));\r\n\r\n        // Không chờ đợi model load xong mới hiển thị UI\r\n        setIsLoading(false);\r\n\r\n        // Model sẽ load song song\r\n        await loadModelsPromise;\r\n      } catch (error) {\r\n        console.error(\"Lỗi khi tải dữ liệu:\", error);\r\n        enqueueSnackbar(\"Lỗi khi tải dữ liệu\", { variant: \"error\" });\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    loadInitialData();\r\n\r\n    // Clean up\r\n    return () => {\r\n      if (intervalId) {\r\n        clearInterval(intervalId);\r\n      }\r\n\r\n      // Dừng landmark interval nếu đang chạy\r\n      if (landmarkIntervalId) {\r\n        clearInterval(landmarkIntervalId);\r\n      }\r\n\r\n      // Dừng camera stream nếu đang chạy\r\n      if (\r\n        webcamRef.current &&\r\n        webcamRef.current.video &&\r\n        webcamRef.current.video.srcObject\r\n      ) {\r\n        const tracks = webcamRef.current.video.srcObject.getTracks();\r\n        tracks.forEach((track) => track.stop());\r\n      }\r\n\r\n      if (videoRef.current && videoRef.current.srcObject) {\r\n        const tracks = videoRef.current.srcObject.getTracks();\r\n        tracks.forEach((track) => track.stop());\r\n      }\r\n\r\n      dispatch(clearRecognitionState());\r\n    };\r\n  }, [\r\n    classId,\r\n    sessionId,\r\n    token,\r\n    dispatch,\r\n    enqueueSnackbar,\r\n    isModelLoaded,\r\n    intervalId,\r\n    landmarkIntervalId,\r\n  ]);\r\n\r\n  // Load các mô hình nhận diện khuôn mặt\r\n  const loadFaceRecognitionModels = async () => {\r\n    try {\r\n      const MODEL_URL = \"/models\";\r\n      console.log(\"Bắt đầu tải models từ:\", MODEL_URL);\r\n\r\n      // Thêm timeout để đảm bảo có đủ thời gian tải models\r\n      const modelPromises = [\r\n        faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL),\r\n        faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),\r\n        faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL),\r\n      ];\r\n\r\n      // Kiểm tra xem các models đã được tải chưa\r\n      const modelStatuses = [\r\n        faceapi.nets.tinyFaceDetector.isLoaded,\r\n        faceapi.nets.faceLandmark68Net.isLoaded,\r\n        faceapi.nets.faceRecognitionNet.isLoaded,\r\n      ];\r\n\r\n      if (modelStatuses.every((status) => status)) {\r\n        console.log(\"Các models đã được tải từ trước\");\r\n        dispatch(setModelLoaded(true));\r\n        return true;\r\n      }\r\n\r\n      await Promise.all(modelPromises);\r\n\r\n      console.log(\"Đã tải xong models thành công\");\r\n      dispatch(setModelLoaded(true));\r\n      enqueueSnackbar(\"Tải mô hình nhận diện thành công\", {\r\n        variant: \"success\",\r\n      });\r\n      return true;\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi tải mô hình:\", error);\r\n      enqueueSnackbar(\"Không thể tải mô hình nhận diện\", { variant: \"error\" });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Xử lý phát hiện khuôn mặt\r\n  const handleDetectFaces = async () => {\r\n    try {\r\n      // Lấy dữ liệu video\r\n      const videoElement = isAutoMode\r\n        ? videoRef.current\r\n        : webcamRef.current?.video;\r\n      if (!videoElement || !canvasRef.current) return;\r\n\r\n      // Lấy kích thước của video\r\n      const displaySize = {\r\n        width: videoElement.videoWidth || videoElement.width || 640,\r\n        height: videoElement.videoHeight || videoElement.height || 480,\r\n      };\r\n\r\n      // Phát hiện khuôn mặt trên video\r\n      const detections = await faceapi\r\n        .detectAllFaces(\r\n          videoElement,\r\n          new faceapi.SsdMobilenetv1Options({\r\n            minConfidence: RECOGNITION_THRESHOLD,\r\n          })\r\n        )\r\n        .withFaceLandmarks()\r\n        .withFaceDescriptors();\r\n\r\n      if (!detections || detections.length === 0) {\r\n        if (ENABLE_DEBUG_LOGS) {\r\n          console.log(\r\n            \"[DEBUG] Không phát hiện khuôn mặt\",\r\n            new Date().toLocaleTimeString()\r\n          );\r\n        }\r\n        return [];\r\n      }\r\n\r\n      if (ENABLE_DEBUG_LOGS) {\r\n        console.log(\r\n          `[DEBUG] Phát hiện ${detections.length} khuôn mặt`,\r\n          new Date().toLocaleTimeString()\r\n        );\r\n      }\r\n\r\n      // Điều chỉnh kích thước phát hiện để phù hợp với kích thước hiển thị\r\n      const resizedDetections = faceapi.resizeResults(detections, displaySize);\r\n\r\n      // Cập nhật state\r\n      setDetectedFaces(resizedDetections);\r\n\r\n      // Tạo FaceMatcher từ dữ liệu sinh viên\r\n      const labeledDescriptors = classStudents\r\n        .filter(\r\n          (student) =>\r\n            student.faceDescriptors && student.faceDescriptors.length > 0\r\n        )\r\n        .map((student) => {\r\n          const descriptors = student.faceDescriptors.map(\r\n            (descriptor) => new Float32Array(descriptor)\r\n          );\r\n          return new faceapi.LabeledFaceDescriptors(student._id, descriptors);\r\n        });\r\n\r\n      // Tạo faceMatcher nếu có dữ liệu\r\n      if (labeledDescriptors.length === 0) {\r\n        console.warn(\"Không có dữ liệu khuôn mặt của sinh viên\");\r\n        return resizedDetections;\r\n      }\r\n\r\n      const faceMatcher = new faceapi.FaceMatcher(\r\n        labeledDescriptors,\r\n        RECOGNITION_THRESHOLD\r\n      );\r\n\r\n      // Vẽ lên canvas nếu có khuôn mặt\r\n      const canvas = canvasRef.current;\r\n      canvas.width = displaySize.width;\r\n      canvas.height = displaySize.height;\r\n\r\n      const ctx = canvas.getContext(\"2d\");\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n      // Vẽ các phát hiện lên canvas\r\n      resizedDetections.forEach((detection) => {\r\n        if (detection.descriptor) {\r\n          const bestMatch = faceMatcher.findBestMatch(detection.descriptor);\r\n          const { label, distance } = bestMatch;\r\n\r\n          // Kiểm tra nếu match với một sinh viên\r\n          if (label !== \"unknown\") {\r\n            // Tìm sinh viên trong danh sách\r\n            const student = classStudents.find((s) => s._id === label);\r\n            if (student) {\r\n              // Cập nhật thông tin nhận diện cho sinh viên\r\n              const studentId = student._id;\r\n              const confidence = 1 - distance;\r\n\r\n              // Đánh dấu sinh viên đã điểm danh nếu đủ độ tin cậy\r\n              if (confidence >= RECOGNITION_THRESHOLD) {\r\n                handleMarkAttendance(studentId, confidence);\r\n              }\r\n\r\n              // Vẽ hộp và tên sinh viên\r\n              const drawBox = new faceapi.draw.DrawBox(\r\n                detection.detection.box,\r\n                {\r\n                  label: `${student.full_name} (${Math.round(\r\n                    confidence * 100\r\n                  )}%)`,\r\n                  boxColor:\r\n                    confidence >= RECOGNITION_THRESHOLD ? \"green\" : \"orange\",\r\n                }\r\n              );\r\n              drawBox.draw(canvas);\r\n            }\r\n          } else {\r\n            // Không nhận diện được sinh viên\r\n            const drawBox = new faceapi.draw.DrawBox(detection.detection.box, {\r\n              label: \"Unknown\",\r\n              boxColor: \"red\",\r\n            });\r\n            drawBox.draw(canvas);\r\n          }\r\n        } else {\r\n          // Không có descriptor\r\n          const drawBox = new faceapi.draw.DrawBox(detection.detection.box, {\r\n            label: \"Đang phân tích...\",\r\n            boxColor: \"blue\",\r\n          });\r\n          drawBox.draw(canvas);\r\n        }\r\n\r\n        // Vẽ landmarks nếu đã bật\r\n        if (showLandmark && detection.landmarks) {\r\n          faceapi.draw.drawFaceLandmarks(canvas, detection);\r\n        }\r\n      });\r\n\r\n      return resizedDetections;\r\n    } catch (error) {\r\n      console.error(\"Lỗi phát hiện khuôn mặt:\", error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  // Điểm danh thủ công\r\n  const openManualAttendanceDialog = (student) => {\r\n    setSelectedStudent(student);\r\n    setManualAttendanceData({\r\n      status: \"present\",\r\n      note: \"\",\r\n    });\r\n    setManualDialogOpen(true);\r\n  };\r\n\r\n  const handleManualDialogClose = () => {\r\n    setManualDialogOpen(false);\r\n  };\r\n\r\n  const handleManualAttendanceChange = (e) => {\r\n    setManualAttendanceData({\r\n      ...manualAttendanceData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleManualAttendanceSubmit = async () => {\r\n    if (!selectedStudent) return;\r\n\r\n    try {\r\n      const result = await dispatch(\r\n        manualAttendance({\r\n          sessionId,\r\n          studentId: selectedStudent._id,\r\n          status: manualAttendanceData.status,\r\n          note: manualAttendanceData.note,\r\n        })\r\n      ).unwrap();\r\n\r\n      // Cập nhật logs điểm danh\r\n      if (result && result.data) {\r\n        const updatedLogs = attendanceLogs.filter(\r\n          (log) => log.student_id._id !== selectedStudent._id\r\n        );\r\n\r\n        updatedLogs.push({\r\n          ...result.data,\r\n          student_id: selectedStudent,\r\n        });\r\n\r\n        setAttendanceLogs(updatedLogs);\r\n      }\r\n\r\n      enqueueSnackbar(\"Điểm danh thủ công thành công\", { variant: \"success\" });\r\n      handleManualDialogClose();\r\n\r\n      // Cập nhật lại thông tin phiên điểm danh\r\n      const sessionResponse = await axios.get(\r\n        `${API_URL}/attendance/sessions/${sessionId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      setSessionInfo(sessionResponse.data.data);\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi điểm danh thủ công:\", error);\r\n      enqueueSnackbar(\"Lỗi khi điểm danh thủ công\", { variant: \"error\" });\r\n    }\r\n  };\r\n\r\n  // Đánh dấu điểm danh từ nhận diện khuôn mặt\r\n  const markAttendance = async (\r\n    studentId,\r\n    faceDescriptor,\r\n    confidence,\r\n    imageBase64\r\n  ) => {\r\n    try {\r\n      const result = await dispatch(\r\n        verifyAttendance({\r\n          sessionId,\r\n          studentId,\r\n          faceDescriptor,\r\n          confidence,\r\n          imageBase64,\r\n        })\r\n      ).unwrap();\r\n\r\n      // Cập nhật logs điểm danh\r\n      if (result && result.data) {\r\n        const student = classStudents.find((s) => s._id === studentId);\r\n\r\n        if (student) {\r\n          const updatedLogs = attendanceLogs.filter(\r\n            (log) => log.student_id._id !== studentId\r\n          );\r\n\r\n          updatedLogs.push({\r\n            ...result.data,\r\n            student_id: student,\r\n          });\r\n\r\n          setAttendanceLogs(updatedLogs);\r\n\r\n          enqueueSnackbar(`Đã điểm danh cho ${student.full_name}`, {\r\n            variant: \"success\",\r\n          });\r\n        }\r\n      }\r\n\r\n      // Cập nhật lại thông tin phiên điểm danh\r\n      const sessionResponse = await axios.get(\r\n        `${API_URL}/attendance/sessions/${sessionId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      setSessionInfo(sessionResponse.data.data);\r\n\r\n      return true;\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi xác nhận điểm danh:\", error);\r\n      enqueueSnackbar(\"Lỗi khi xác nhận điểm danh\", { variant: \"error\" });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Kết thúc phiên điểm danh\r\n  const completeSession = async () => {\r\n    try {\r\n      await axios.put(\r\n        `${API_URL}/attendance/sessions/${sessionId}`,\r\n        { status: \"completed\" },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n\r\n      enqueueSnackbar(\"Phiên điểm danh đã kết thúc\", { variant: \"success\" });\r\n      navigate(`/teacher/classes/${classId}`);\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi kết thúc phiên điểm danh:\", error);\r\n      enqueueSnackbar(\"Lỗi khi kết thúc phiên điểm danh\", { variant: \"error\" });\r\n    }\r\n  };\r\n\r\n  // Làm mới danh sách điểm danh\r\n  const refreshAttendanceLogs = async () => {\r\n    try {\r\n      const logsResponse = await axios.get(\r\n        `${API_URL}/attendance/logs/${sessionId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      setAttendanceLogs(logsResponse.data.data);\r\n\r\n      const sessionResponse = await axios.get(\r\n        `${API_URL}/attendance/sessions/${sessionId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      setSessionInfo(sessionResponse.data.data);\r\n\r\n      enqueueSnackbar(\"Đã làm mới dữ liệu điểm danh\", { variant: \"success\" });\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi làm mới dữ liệu:\", error);\r\n      enqueueSnackbar(\"Lỗi khi làm mới dữ liệu\", { variant: \"error\" });\r\n    }\r\n  };\r\n\r\n  // Chụp ảnh và nhận diện thủ công\r\n  const captureAndRecognize = async () => {\r\n    await handleDetectFaces();\r\n  };\r\n\r\n  // Hàm khởi tạo camera trực tiếp - nút duy nhất cho camera\r\n  const initDirectCamera = () => {\r\n    try {\r\n      // Tải model nhận diện\r\n      loadFaceRecognitionModels();\r\n\r\n      // Truy cập camera trực tiếp thông qua MediaDevices API\r\n      navigator.mediaDevices\r\n        .getUserMedia({\r\n          video: {\r\n            width: { ideal: 1280 },\r\n            height: { ideal: 720 },\r\n            facingMode: \"user\",\r\n          },\r\n          audio: false,\r\n        })\r\n        .then((stream) => {\r\n          console.log(\"Đã nhận được stream camera trực tiếp\", stream.id);\r\n\r\n          // Nếu đang sử dụng webcam component\r\n          if (webcamRef.current && webcamRef.current.video) {\r\n            webcamRef.current.video.srcObject = stream;\r\n          }\r\n          // Hoặc nếu đang sử dụng video element\r\n          else if (videoRef.current) {\r\n            videoRef.current.srcObject = stream;\r\n            videoRef.current.onloadedmetadata = () => {\r\n              videoRef.current\r\n                .play()\r\n                .catch((err) => console.error(\"Lỗi khi play video:\", err));\r\n            };\r\n          }\r\n\r\n          // Đánh dấu camera và model đã sẵn sàng\r\n          dispatch(setModelLoaded(true));\r\n          dispatch(setCameraReady(true));\r\n\r\n          enqueueSnackbar(\"Đã kết nối camera thành công\", {\r\n            variant: \"success\",\r\n          });\r\n\r\n          // Bật hiển thị landmark sau khi camera khởi động\r\n          setTimeout(() => {\r\n            if (!landmarkIntervalId) {\r\n              toggleLandmarkDetection();\r\n            }\r\n          }, 1000);\r\n        })\r\n        .catch((err) => {\r\n          console.error(\"Lỗi truy cập camera:\", err);\r\n          enqueueSnackbar(`Không thể truy cập camera: ${err.message}`, {\r\n            variant: \"error\",\r\n          });\r\n        });\r\n    } catch (err) {\r\n      console.error(\"Lỗi khi khởi tạo camera trực tiếp:\", err);\r\n      enqueueSnackbar(`Lỗi: ${err.message}`, { variant: \"error\" });\r\n    }\r\n  };\r\n\r\n  // Điểm danh thủ công trong chế độ đơn giản\r\n  const showStudentList = () => {\r\n    if (!classInfo) return;\r\n\r\n    // Hiển thị danh sách sinh viên để điểm danh thủ công\r\n    const absentStudents = getAbsentStudents();\r\n    if (absentStudents.length === 0) {\r\n      enqueueSnackbar(\"Tất cả sinh viên đã được điểm danh\", {\r\n        variant: \"success\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Hiển thị dialog chọn sinh viên để điểm danh\r\n    if (absentStudents.length > 0 && absentStudents[0]) {\r\n      openManualAttendanceDialog(absentStudents[0]);\r\n    }\r\n  };\r\n\r\n  // Bật/tắt hiển thị landmark trên khuôn mặt\r\n  const toggleLandmarkDetection = () => {\r\n    const newState = !showLandmark;\r\n    setShowLandmark(newState);\r\n\r\n    // Lấy canvas context\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    // Kiểm tra nếu không có khuôn mặt được phát hiện\r\n    if (!detectedFaces || detectedFaces.length === 0) return;\r\n\r\n    // Lấy video element\r\n    const videoElement = isAutoMode\r\n      ? videoRef.current\r\n      : webcamRef.current?.video;\r\n    if (!videoElement) return;\r\n\r\n    // Tính toán tỷ lệ hiển thị\r\n    const displaySize = {\r\n      width: videoElement.videoWidth || videoElement.width,\r\n      height: videoElement.videoHeight || videoElement.height,\r\n    };\r\n\r\n    // Đảm bảo canvas có kích thước phù hợp\r\n    faceapi.matchDimensions(canvas, displaySize);\r\n\r\n    // Tạo FaceMatcher từ dữ liệu sinh viên\r\n    const labeledDescriptors = classStudents\r\n      .filter(\r\n        (student) =>\r\n          student.faceDescriptors && student.faceDescriptors.length > 0\r\n      )\r\n      .map((student) => {\r\n        const descriptors = student.faceDescriptors.map(\r\n          (descriptor) => new Float32Array(descriptor)\r\n        );\r\n        return new faceapi.LabeledFaceDescriptors(student._id, descriptors);\r\n      });\r\n\r\n    // Tạo faceMatcher nếu có dữ liệu\r\n    let faceMatcher = null;\r\n    if (labeledDescriptors.length > 0) {\r\n      faceMatcher = new faceapi.FaceMatcher(\r\n        labeledDescriptors,\r\n        RECOGNITION_THRESHOLD\r\n      );\r\n    }\r\n\r\n    // Sử dụng faceapi.resizeResults để điều chỉnh kích thước phát hiện phù hợp với canvas\r\n    const resizedDetections = faceapi.resizeResults(detectedFaces, displaySize);\r\n\r\n    // Vẽ các phát hiện lên canvas\r\n    resizedDetections.forEach((detection) => {\r\n      if (detection.descriptor && faceMatcher) {\r\n        const bestMatch = faceMatcher.findBestMatch(detection.descriptor);\r\n        const { label, distance } = bestMatch;\r\n\r\n        const drawBox = new faceapi.draw.DrawBox(detection.detection.box, {\r\n          label:\r\n            label !== \"unknown\"\r\n              ? `${\r\n                  classStudents.find((s) => s._id === label)?.full_name ||\r\n                  \"Unknown\"\r\n                } (${Math.round((1 - distance) * 100)}%)`\r\n              : \"Unknown\",\r\n          boxColor: label !== \"unknown\" ? \"green\" : \"red\",\r\n        });\r\n\r\n        drawBox.draw(canvas);\r\n      } else {\r\n        // Nếu không có descriptor, vẽ hộp màu xanh dương\r\n        const drawBox = new faceapi.draw.DrawBox(detection.detection.box, {\r\n          label: \"Đang phân tích...\",\r\n          boxColor: \"blue\",\r\n        });\r\n        drawBox.draw(canvas);\r\n      }\r\n\r\n      // Vẽ landmarks nếu đã bật\r\n      if (newState && detection.landmarks) {\r\n        faceapi.draw.drawFaceLandmarks(canvas, detection);\r\n      }\r\n    });\r\n  };\r\n\r\n  // Xử lý đánh dấu sinh viên điểm danh\r\n  const handleMarkAttendance = async (studentId, confidence) => {\r\n    // Kiểm tra xem sinh viên đã được điểm danh chưa\r\n    const isAlreadyAttended = attendanceLogs.some(\r\n      (log) => log.student_id._id === studentId && log.status === \"present\"\r\n    );\r\n\r\n    if (isAlreadyAttended) {\r\n      if (ENABLE_DEBUG_LOGS) {\r\n        console.log(\r\n          `[DEBUG] Sinh viên ${studentId} đã được điểm danh trước đó`\r\n        );\r\n      }\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Lấy dữ liệu video\r\n      const videoElement = isAutoMode\r\n        ? videoRef.current\r\n        : webcamRef.current?.video;\r\n\r\n      if (!videoElement) return;\r\n\r\n      // Tạo ảnh chụp từ video element\r\n      let imageBase64 = null;\r\n\r\n      // Nếu sử dụng webcam component\r\n      if (!isAutoMode && webcamRef.current) {\r\n        imageBase64 = webcamRef.current.getScreenshot();\r\n      }\r\n      // Nếu sử dụng video element trực tiếp\r\n      else if (isAutoMode) {\r\n        const canvas = document.createElement(\"canvas\");\r\n        canvas.width = videoElement.videoWidth;\r\n        canvas.height = videoElement.videoHeight;\r\n        const ctx = canvas.getContext(\"2d\");\r\n        ctx.drawImage(videoElement, 0, 0);\r\n        imageBase64 = canvas.toDataURL(\"image/jpeg\");\r\n      }\r\n\r\n      // Tìm sinh viên đã được phát hiện\r\n      const student = classStudents.find((s) => s._id === studentId);\r\n\r\n      if (!student) {\r\n        console.error(`Không tìm thấy sinh viên với ID ${studentId}`);\r\n        return;\r\n      }\r\n\r\n      // Lấy descriptor mới nhất từ sinh viên\r\n      const descriptor =\r\n        student.faceDescriptors && student.faceDescriptors.length > 0\r\n          ? student.faceDescriptors[0]\r\n          : null;\r\n\r\n      // Gọi API điểm danh\r\n      if (ENABLE_DEBUG_LOGS) {\r\n        console.log(\r\n          `[DEBUG] Đánh dấu điểm danh cho ${\r\n            student.full_name\r\n          } với độ tin cậy ${confidence.toFixed(2)}`\r\n        );\r\n      }\r\n\r\n      // Gọi hàm điểm danh\r\n      await markAttendance(studentId, descriptor, confidence, imageBase64);\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi đánh dấu điểm danh:\", error);\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        minHeight=\"60vh\"\r\n      >\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  // Lấy danh sách sinh viên vắng mặt\r\n  const getAbsentStudents = () => {\r\n    if (!classInfo || !sessionInfo) return [];\r\n\r\n    const presentStudentIds = attendanceLogs\r\n      .filter((log) => log.status === \"present\")\r\n      .map((log) => log.student_id._id);\r\n\r\n    return classInfo.students.filter(\r\n      (student) => !presentStudentIds.includes(student._id)\r\n    );\r\n  };\r\n\r\n  const absentStudents = getAbsentStudents();\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Điểm Danh - {classInfo?.class_name}\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" color=\"textSecondary\" gutterBottom>\r\n        Buổi {sessionInfo?.session_number} -{\" \"}\r\n        {new Date(sessionInfo?.date).toLocaleDateString(\"vi-VN\")}\r\n      </Typography>\r\n\r\n      <Grid container spacing={3} mt={1}>\r\n        <Grid item xs={12} md={8}>\r\n          <Card>\r\n            <CardContent>\r\n              <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                mb={2}\r\n              >\r\n                <Typography variant=\"h6\">Camera nhận diện</Typography>\r\n                <Box>\r\n                  <Chip\r\n                    label={isAutoMode ? \"Tự động đang bật\" : \"Tự động đang tắt\"}\r\n                    color={isAutoMode ? \"success\" : \"default\"}\r\n                    sx={{ mr: 1 }}\r\n                  />\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color={isAutoMode ? \"error\" : \"primary\"}\r\n                    onClick={\r\n                      isAutoMode\r\n                        ? () => {\r\n                            // Dừng tự động\r\n                            if (intervalId) {\r\n                              clearInterval(intervalId);\r\n                              setIntervalId(null);\r\n                            }\r\n                            setIsAutoMode(false);\r\n                            enqueueSnackbar(\"Đã tắt chế độ tự động điểm danh\", {\r\n                              variant: \"info\",\r\n                            });\r\n                          }\r\n                        : () => {\r\n                            // Bắt đầu tự động\r\n                            if (intervalId) {\r\n                              clearInterval(intervalId);\r\n                            }\r\n                            const id = setInterval(() => {\r\n                              handleDetectFaces();\r\n                            }, AUTO_DETECT_INTERVAL);\r\n                            setIntervalId(id);\r\n                            setIsAutoMode(true);\r\n                            enqueueSnackbar(\"Đã bật chế độ tự động điểm danh\", {\r\n                              variant: \"info\",\r\n                            });\r\n                          }\r\n                    }\r\n                  >\r\n                    {isAutoMode ? \"Tắt tự động\" : \"Bật tự động\"}\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            </CardContent>\r\n\r\n            <Paper\r\n              elevation={3}\r\n              sx={{\r\n                position: \"relative\",\r\n                width: \"100%\",\r\n                height: \"400px\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                overflow: \"hidden\",\r\n                mb: 2,\r\n              }}\r\n            >\r\n              {isCameraReady ? (\r\n                <>\r\n                  {isAutoMode ? (\r\n                    // Sử dụng video element trực tiếp thay vì Webcam component\r\n                    <video\r\n                      ref={videoRef}\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        objectFit: \"cover\",\r\n                      }}\r\n                      autoPlay\r\n                      playsInline\r\n                      muted\r\n                    />\r\n                  ) : (\r\n                    <Webcam\r\n                      audio={false}\r\n                      ref={webcamRef}\r\n                      screenshotFormat=\"image/jpeg\"\r\n                      width={640}\r\n                      height={480}\r\n                      videoConstraints={{\r\n                        width: 640,\r\n                        height: 480,\r\n                        facingMode: \"user\",\r\n                      }}\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        objectFit: \"cover\",\r\n                      }}\r\n                      onUserMedia={(stream) => {\r\n                        console.log(\r\n                          \"Camera đã được cấp quyền và khởi tạo\",\r\n                          stream.id\r\n                        );\r\n                        // Đảm bảo readyState được kiểm tra khi stream đã sẵn sàng\r\n                        setTimeout(() => {\r\n                          if (webcamRef.current && webcamRef.current.video) {\r\n                            console.log(\r\n                              \"Stream ready, readyState=\",\r\n                              webcamRef.current.video.readyState\r\n                            );\r\n                            dispatch(setCameraReady(true));\r\n                          }\r\n                        }, 500);\r\n                      }}\r\n                      onUserMediaError={(err) => {\r\n                        console.error(\"Lỗi khi truy cập camera:\", err);\r\n                        enqueueSnackbar(\r\n                          `Không thể truy cập camera: ${\r\n                            err.name === \"NotAllowedError\"\r\n                              ? \"Bạn chưa cấp quyền truy cập camera\"\r\n                              : err.name === \"NotFoundError\"\r\n                              ? \"Không tìm thấy thiết bị camera\"\r\n                              : err.message || \"Lỗi không xác định\"\r\n                          }`,\r\n                          {\r\n                            variant: \"error\",\r\n                          }\r\n                        );\r\n                      }}\r\n                    />\r\n                  )}\r\n                  {/* Canvas hiển thị ở cả hai chế độ */}\r\n                  <canvas\r\n                    ref={canvasRef}\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      top: 0,\r\n                      left: 0,\r\n                      width: \"100%\",\r\n                      height: \"100%\",\r\n                    }}\r\n                  />\r\n                </>\r\n              ) : (\r\n                <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n                  <CircularProgress size={50} />\r\n                  <Typography mt={2}>Đang khởi tạo camera...</Typography>\r\n                  <Typography\r\n                    variant=\"caption\"\r\n                    color=\"text.secondary\"\r\n                    sx={{ mt: 1 }}\r\n                  >\r\n                    {isModelLoaded\r\n                      ? \"Chờ kết nối camera - Hãy đảm bảo bạn đã cấp quyền camera\"\r\n                      : \"Đang tải mô hình nhận diện khuôn mặt\"}\r\n                  </Typography>\r\n\r\n                  <Box\r\n                    sx={{\r\n                      mt: 2,\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      sx={{ mb: 1 }}\r\n                      onClick={initDirectCamera}\r\n                    >\r\n                      Khởi động camera trực tiếp\r\n                    </Button>\r\n                  </Box>\r\n                </Box>\r\n              )}\r\n            </Paper>\r\n\r\n            <Box display=\"flex\" justifyContent=\"space-between\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                onClick={captureAndRecognize}\r\n                startIcon={<CameraAlt />}\r\n                disabled={!isCameraReady || isRecognizing || isAutoMode}\r\n              >\r\n                {isRecognizing ? (\r\n                  <CircularProgress size={24} color=\"inherit\" />\r\n                ) : (\r\n                  \"Chụp & Nhận diện\"\r\n                )}\r\n              </Button>\r\n\r\n              <Box>\r\n                {isCameraReady && (\r\n                  <>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color={showLandmark ? \"success\" : \"info\"}\r\n                      onClick={toggleLandmarkDetection}\r\n                      sx={{ mr: 1 }}\r\n                    >\r\n                      {showLandmark ? \"Tắt Landmark\" : \"Hiện Landmark\"}\r\n                    </Button>\r\n\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color={isAutoMode ? \"error\" : \"primary\"}\r\n                      onClick={\r\n                        isAutoMode\r\n                          ? () => {\r\n                              // Dừng tự động\r\n                              if (intervalId) {\r\n                                clearInterval(intervalId);\r\n                                setIntervalId(null);\r\n                              }\r\n                              setIsAutoMode(false);\r\n                              enqueueSnackbar(\r\n                                \"Đã tắt chế độ tự động điểm danh\",\r\n                                { variant: \"info\" }\r\n                              );\r\n                            }\r\n                          : () => {\r\n                              // Bắt đầu tự động\r\n                              if (intervalId) {\r\n                                clearInterval(intervalId);\r\n                              }\r\n                              const id = setInterval(() => {\r\n                                handleDetectFaces();\r\n                              }, AUTO_DETECT_INTERVAL);\r\n                              setIntervalId(id);\r\n                              setIsAutoMode(true);\r\n                              enqueueSnackbar(\r\n                                \"Đã bật chế độ tự động điểm danh\",\r\n                                { variant: \"info\" }\r\n                              );\r\n                            }\r\n                      }\r\n                      sx={{ mr: 1 }}\r\n                    >\r\n                      {isAutoMode ? \"Tắt tự động\" : \"Bật tự động\"}\r\n                    </Button>\r\n                  </>\r\n                )}\r\n\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={completeSession}\r\n                  startIcon={<Save />}\r\n                  disabled={sessionInfo?.status === \"completed\"}\r\n                >\r\n                  Kết thúc phiên\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n\r\n            {recognizedStudents.length > 0 && (\r\n              <Box mt={2}>\r\n                <Typography variant=\"subtitle1\" gutterBottom>\r\n                  Đã nhận diện ({recognizedStudents.length})\r\n                </Typography>\r\n                <Grid container spacing={1}>\r\n                  {recognizedStudents.map((student, index) => (\r\n                    <Grid item xs={6} sm={4} key={index}>\r\n                      <Paper\r\n                        elevation={2}\r\n                        sx={{\r\n                          p: 1,\r\n                          display: \"flex\",\r\n                          flexDirection: \"column\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        <Typography variant=\"body2\" noWrap>\r\n                          {student.name}\r\n                        </Typography>\r\n                        <Typography variant=\"caption\" color=\"textSecondary\">\r\n                          {Math.round(student.confidence * 100)}% match\r\n                        </Typography>\r\n                        <Button\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          color=\"primary\"\r\n                          sx={{ mt: 1 }}\r\n                          onClick={() =>\r\n                            handleMarkAttendance(\r\n                              student.studentId,\r\n                              student.confidence\r\n                            )\r\n                          }\r\n                        >\r\n                          <Check fontSize=\"small\" sx={{ mr: 0.5 }} />\r\n                          Điểm danh\r\n                        </Button>\r\n                      </Paper>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </Box>\r\n            )}\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={4}>\r\n          <Card sx={{ mb: 3 }}>\r\n            <CardContent>\r\n              <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                mb={2}\r\n              >\r\n                <Typography variant=\"h6\">\r\n                  Có mặt (\r\n                  {\r\n                    attendanceLogs.filter((log) => log.status === \"present\")\r\n                      .length\r\n                  }\r\n                  /{classInfo?.students.length})\r\n                </Typography>\r\n                <IconButton size=\"small\" onClick={refreshAttendanceLogs}>\r\n                  <Refresh />\r\n                </IconButton>\r\n              </Box>\r\n\r\n              <List dense>\r\n                {attendanceLogs\r\n                  .filter((log) => log.status === \"present\")\r\n                  .sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))\r\n                  .map((log) => (\r\n                    <ListItem\r\n                      key={log._id}\r\n                      secondaryAction={\r\n                        <Chip\r\n                          size=\"small\"\r\n                          icon={\r\n                            log.recognized ? (\r\n                              <VerifiedUser fontSize=\"small\" />\r\n                            ) : null\r\n                          }\r\n                          label={log.recognized ? \"Tự động\" : \"Thủ công\"}\r\n                          color={log.recognized ? \"success\" : \"primary\"}\r\n                        />\r\n                      }\r\n                    >\r\n                      <ListItemAvatar>\r\n                        <Avatar\r\n                          alt={log.student_id.full_name}\r\n                          src={log.student_id.avatar_url}\r\n                        />\r\n                      </ListItemAvatar>\r\n                      <ListItemText\r\n                        primary={log.student_id.full_name}\r\n                        secondary={`${new Date(\r\n                          log.timestamp\r\n                        ).toLocaleTimeString(\"vi-VN\")}`}\r\n                      />\r\n                    </ListItem>\r\n                  ))}\r\n\r\n                {attendanceLogs.filter((log) => log.status === \"present\")\r\n                  .length === 0 && (\r\n                  <ListItem>\r\n                    <ListItemText primary=\"Chưa có sinh viên nào điểm danh\" />\r\n                  </ListItem>\r\n                )}\r\n              </List>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Vắng mặt ({absentStudents.length}/{classInfo?.students.length})\r\n              </Typography>\r\n\r\n              <List dense>\r\n                {absentStudents.map((student) => (\r\n                  <ListItem\r\n                    key={student._id}\r\n                    secondaryAction={\r\n                      <IconButton\r\n                        edge=\"end\"\r\n                        onClick={() => openManualAttendanceDialog(student)}\r\n                      >\r\n                        <Edit fontSize=\"small\" />\r\n                      </IconButton>\r\n                    }\r\n                  >\r\n                    <ListItemAvatar>\r\n                      <Avatar\r\n                        alt={student.full_name}\r\n                        src={student.avatar_url}\r\n                      />\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={student.full_name}\r\n                      secondary={student.student_code}\r\n                    />\r\n                  </ListItem>\r\n                ))}\r\n\r\n                {absentStudents.length === 0 && (\r\n                  <ListItem>\r\n                    <ListItemText primary=\"Không có sinh viên nào vắng mặt\" />\r\n                  </ListItem>\r\n                )}\r\n              </List>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Dialog điểm danh thủ công */}\r\n      <Dialog open={manualDialogOpen} onClose={handleManualDialogClose}>\r\n        <DialogTitle>Điểm danh thủ công</DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ p: 1 }}>\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              {selectedStudent?.full_name} ({selectedStudent?.student_code})\r\n            </Typography>\r\n\r\n            <FormControl fullWidth margin=\"normal\">\r\n              <InputLabel>Trạng thái</InputLabel>\r\n              <Select\r\n                name=\"status\"\r\n                value={manualAttendanceData.status}\r\n                onChange={handleManualAttendanceChange}\r\n                label=\"Trạng thái\"\r\n              >\r\n                <MenuItem value=\"present\">Có mặt</MenuItem>\r\n                <MenuItem value=\"absent\">Vắng mặt</MenuItem>\r\n                <MenuItem value=\"late\">Đi trễ</MenuItem>\r\n                <MenuItem value=\"early_leave\">Về sớm</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n              fullWidth\r\n              margin=\"normal\"\r\n              name=\"note\"\r\n              label=\"Ghi chú\"\r\n              value={manualAttendanceData.note}\r\n              onChange={handleManualAttendanceChange}\r\n              multiline\r\n              rows={2}\r\n            />\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleManualDialogClose}>Hủy</Button>\r\n          <Button onClick={handleManualAttendanceSubmit} variant=\"contained\">\r\n            Xác nhận\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AttendancePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}