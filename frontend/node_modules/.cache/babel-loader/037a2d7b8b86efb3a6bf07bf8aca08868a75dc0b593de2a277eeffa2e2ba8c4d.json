{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { createFileSystem } from './createFileSystem';\nexport function createNodejsEnv() {\n  var Canvas = global['Canvas'] || global['HTMLCanvasElement'];\n  var Image = global['Image'] || global['HTMLImageElement'];\n  var createCanvasElement = function () {\n    if (Canvas) {\n      return new Canvas();\n    }\n    throw new Error('createCanvasElement - missing Canvas implementation for nodejs environment');\n  };\n  var createImageElement = function () {\n    if (Image) {\n      return new Image();\n    }\n    throw new Error('createImageElement - missing Image implementation for nodejs environment');\n  };\n  var fetch = global['fetch'] || function () {\n    throw new Error('fetch - missing fetch implementation for nodejs environment');\n  };\n  var fileSystem = createFileSystem();\n  return __assign({\n    Canvas: Canvas || (/** @class */function () {\n      function Canvas() {}\n      return Canvas;\n    }()),\n    CanvasRenderingContext2D: global['CanvasRenderingContext2D'] || (/** @class */function () {\n      function class_1() {}\n      return class_1;\n    }()),\n    Image: Image || (/** @class */function () {\n      function Image() {}\n      return Image;\n    }()),\n    ImageData: global['ImageData'] || (/** @class */function () {\n      function class_2() {}\n      return class_2;\n    }()),\n    Video: global['HTMLVideoElement'] || (/** @class */function () {\n      function class_3() {}\n      return class_3;\n    }()),\n    createCanvasElement: createCanvasElement,\n    createImageElement: createImageElement,\n    fetch: fetch\n  }, fileSystem);\n}\n//# sourceMappingURL=createNodejsEnv.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}