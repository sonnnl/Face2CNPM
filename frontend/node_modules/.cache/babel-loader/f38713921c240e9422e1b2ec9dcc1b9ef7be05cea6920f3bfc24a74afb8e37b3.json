{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kasiz\\\\Documents\\\\Studying\\\\FaceReg\\\\frontend\\\\src\\\\pages\\\\teacher\\\\AttendancePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useSnackbar } from \"notistack\";\nimport { Box, Typography, Card, CardContent, Grid, Paper, Button, Divider, CircularProgress, List, ListItem, ListItemAvatar, ListItemText, Avatar, Chip, Dialog, DialogTitle, DialogContent, DialogActions, TextField, FormControl, InputLabel, Select, MenuItem, IconButton, Alert } from \"@mui/material\";\nimport { CameraAlt, Check, Close, Edit, Refresh, Save, VerifiedUser, HourglassEmpty, ArrowBack } from \"@mui/icons-material\";\nimport Webcam from \"react-webcam\";\nimport * as faceapi from \"face-api.js\";\nimport { getClassFaceFeatures, verifyAttendance, manualAttendance, setModelLoaded, setCameraReady, setDetectedFaces, setRecognizedStudents, clearRecognitionState } from \"../../redux/slices/faceRecognitionSlice\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\nconst AttendancePage = () => {\n  _s();\n  const {\n    classId,\n    sessionId\n  } = useParams();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const videoRef = useRef(null);\n  const [intervalId, setIntervalId] = useState(null);\n  const [showLandmark, setShowLandmark] = useState(true);\n  const [landmarkIntervalId, setLandmarkIntervalId] = useState(null);\n  const [cameraMode, setCameraMode] = useState(\"face_recognition\");\n  const {\n    token\n  } = useSelector(state => state.auth);\n  const {\n    isModelLoaded,\n    isCameraReady,\n    detectedFaces,\n    recognizedStudents,\n    classStudents,\n    isProcessing,\n    error\n  } = useSelector(state => state.faceRecognition);\n  const [classInfo, setClassInfo] = useState(null);\n  const [sessionInfo, setSessionInfo] = useState(null);\n  const [attendanceLogs, setAttendanceLogs] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isRecognizing, setIsRecognizing] = useState(false);\n  const [isAutoMode, setIsAutoMode] = useState(false);\n  const [selectedStudent, setSelectedStudent] = useState(null);\n  const [manualDialogOpen, setManualDialogOpen] = useState(false);\n  const [manualAttendanceData, setManualAttendanceData] = useState({\n    status: \"present\",\n    note: \"\"\n  });\n\n  // Các hằng số cấu hình\n  const RECOGNITION_THRESHOLD = 0.4; // Giảm ngưỡng nhận diện để dễ nhận diện hơn\n  const DETECTION_THRESHOLD = 0.3; // Giảm ngưỡng phát hiện khuôn mặt\n  const CONFIDENCE_THRESHOLD = 0.5; // Giảm ngưỡng độ tin cậy để điểm danh\n  const AUTO_DETECT_INTERVAL = 1000; // Thời gian giữa các lần phát hiện (ms)\n  const ENABLE_DEBUG_LOGS = true; // Bật/tắt log gỡ lỗi\n\n  // Thêm state mới để theo dõi số lần thử lại camera\n  const [cameraRetryCount, setCameraRetryCount] = useState(0);\n  const [lastDetectionTime, setLastDetectionTime] = useState(null);\n\n  // Thêm state theo dõi interval phát hiện landmarks\n  const [landmarkDetectionInterval, setLandmarkDetectionInterval] = useState(null);\n\n  // Load class info, session info và models\n  useEffect(() => {\n    const loadInitialData = async () => {\n      try {\n        setIsLoading(true);\n\n        // Lấy thông tin lớp học\n        const classPromise = axios.get(`${API_URL}/classes/teaching/${classId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Lấy thông tin phiên điểm danh\n        const sessionPromise = axios.get(`${API_URL}/attendance/sessions/${sessionId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Lấy danh sách điểm danh\n        const logsPromise = axios.get(`${API_URL}/attendance/logs/${sessionId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Chờ tất cả API calls hoàn thành\n        const [classResponse, sessionResponse, logsResponse] = await Promise.all([classPromise, sessionPromise, logsPromise]);\n        setClassInfo(classResponse.data.data);\n        setSessionInfo(sessionResponse.data.data);\n        setAttendanceLogs(logsResponse.data.data);\n\n        // Đã tải xong dữ liệu cơ bản\n        setIsLoading(false);\n\n        // Chỉ tải mô hình và lấy đặc trưng khuôn mặt nếu phiên điểm danh chưa hoàn thành\n        if (sessionResponse.data.data.status !== \"completed\") {\n          // Bắt đầu tải dữ liệu và models nếu phiên chưa hoàn thành\n          const loadModelsPromise = !isModelLoaded ? loadFaceRecognitionModels() : Promise.resolve(true);\n\n          // Lấy đặc trưng khuôn mặt của sinh viên trong lớp\n          console.log(\"[DEBUG] Bắt đầu lấy đặc trưng khuôn mặt của sinh viên, classId:\", classId);\n          try {\n            // Gọi API trực tiếp để kiểm tra\n            const faceDataResponse = await axios.get(`${API_URL}/face-recognition/class-features/${classId}`, {\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n            console.log(\"[DEBUG] API response raw:\", faceDataResponse);\n            console.log(\"[DEBUG] API response data:\", faceDataResponse.data);\n\n            // Vẫn sử dụng redux dispatch để đảm bảo tính nhất quán\n            const faceFeatureResult = await dispatch(getClassFaceFeatures(classId)).unwrap();\n\n            // Log toàn bộ result để debug\n            console.log(\"[DEBUG] Redux unwrapped result:\", faceFeatureResult);\n\n            // Kiểm tra xem có dữ liệu trả về không\n            if (faceFeatureResult) {\n              // Log dữ liệu để debug\n              console.log(\"[DEBUG] Bắt đầu phân tích dữ liệu khuôn mặt\");\n              console.log(\"[DEBUG] faceFeatureResult structure:\", JSON.stringify(faceFeatureResult, null, 2));\n              let studentsData = null;\n\n              // Kiểm tra các cấu trúc dữ liệu có thể có\n              if (Array.isArray(faceFeatureResult)) {\n                studentsData = faceFeatureResult;\n                console.log(`[DEBUG] Nhận được dữ liệu khuôn mặt dạng mảng: ${studentsData.length} sinh viên`);\n              } else if (faceFeatureResult.data && Array.isArray(faceFeatureResult.data)) {\n                studentsData = faceFeatureResult.data;\n                console.log(`[DEBUG] Nhận được dữ liệu khuôn mặt từ faceFeatureResult.data: ${studentsData.length} sinh viên`);\n              } else if (faceFeatureResult.students && Array.isArray(faceFeatureResult.students)) {\n                studentsData = faceFeatureResult.students;\n                console.log(`[DEBUG] Nhận được dữ liệu khuôn mặt từ faceFeatureResult.students: ${studentsData.length} sinh viên`);\n              }\n              if (studentsData && studentsData.length > 0) {\n                console.log(`[DEBUG] Phân tích dữ liệu khuôn mặt của ${studentsData.length} sinh viên`);\n\n                // Kiểm tra chi tiết dữ liệu khuôn mặt\n                let validDescriptorsCount = 0;\n                let invalidDescriptorsCount = 0;\n                studentsData.forEach(student => {\n                  console.log(`[DEBUG] Kiểm tra sinh viên: ${student.full_name || \"Unknown\"}, ID: ${student._id}`);\n                  console.log(`[DEBUG] Cấu trúc dữ liệu sinh viên:`, student);\n\n                  // Kiểm tra nếu có faceFeatures\n                  if (student.faceFeatures) {\n                    console.log(`[DEBUG] Sinh viên có dữ liệu faceFeatures`);\n\n                    // Kiểm tra nếu có descriptors\n                    const hasDescriptors = student.faceFeatures && student.faceFeatures.descriptors && Array.isArray(student.faceFeatures.descriptors) && student.faceFeatures.descriptors.length > 0;\n                    if (hasDescriptors) {\n                      console.log(`[DEBUG] Sinh viên có ${student.faceFeatures.descriptors.length} nhóm descriptors`);\n\n                      // Đếm số descriptor hợp lệ\n                      let validDescriptorsInStudent = 0;\n                      student.faceFeatures.descriptors.forEach((group, groupIndex) => {\n                        if (Array.isArray(group)) {\n                          group.forEach((descriptor, descIndex) => {\n                            if (Array.isArray(descriptor) && descriptor.length === 128) {\n                              validDescriptorsInStudent++;\n                            }\n                          });\n                        }\n                      });\n                      if (validDescriptorsInStudent > 0) {\n                        validDescriptorsCount++;\n                        console.log(`[DEBUG] Sinh viên ${student.full_name} có ${validDescriptorsInStudent} descriptor hợp lệ`);\n                      } else {\n                        invalidDescriptorsCount++;\n                        console.log(`[DEBUG] Sinh viên ${student.full_name} không có descriptor hợp lệ`);\n                      }\n                    } else {\n                      invalidDescriptorsCount++;\n                      console.log(`[DEBUG] Sinh viên ${student.full_name} không có descriptors`);\n                    }\n                  } else {\n                    // Kiểm tra nếu có faceDescriptors (cấu trúc cũ)\n                    const hasOldDescriptors = student.faceDescriptors && Array.isArray(student.faceDescriptors) && student.faceDescriptors.length > 0;\n                    if (hasOldDescriptors) {\n                      console.log(`[DEBUG] Sinh viên có ${student.faceDescriptors.length} descriptors (dạng cũ)`);\n                      console.log(`[DEBUG] Chi tiết faceDescriptors:`, JSON.stringify(student.faceDescriptors, null, 2));\n\n                      // Thử các cách khác nhau để lấy descriptor\n                      if (typeof student.faceDescriptors[0] === \"object\") {\n                        // Nếu là object (không phải mảng), có thể nó là object có chứa descriptor\n                        console.log(`[DEBUG] Descriptor là object:`, student.faceDescriptors[0]);\n\n                        // Kiểm tra nếu descriptor nằm trong object.descriptors hoặc object.0\n                        if (student.faceDescriptors[0].descriptors && Array.isArray(student.faceDescriptors[0].descriptors)) {\n                          console.log(`[DEBUG] Tìm thấy descriptors trong object.descriptors`);\n                          // Sử dụng descriptors trong object\n                          const flatDescriptors = student.faceDescriptors[0].descriptors;\n                          const validOldDescriptors = flatDescriptors.filter(desc => Array.isArray(desc) && desc.length === 128).length;\n                          if (validOldDescriptors > 0) {\n                            validDescriptorsCount++;\n                            console.log(`[DEBUG] Sinh viên ${student.full_name} có ${validOldDescriptors} descriptor hợp lệ trong object.descriptors`);\n                          }\n                        } else {\n                          // Duyệt tất cả các thuộc tính của object để tìm mảng\n                          const foundArrays = [];\n                          Object.keys(student.faceDescriptors[0]).forEach(key => {\n                            const value = student.faceDescriptors[0][key];\n                            if (Array.isArray(value)) {\n                              console.log(`[DEBUG] Tìm thấy mảng trong thuộc tính ${key}, độ dài: ${value.length}`);\n                              foundArrays.push(value);\n                            }\n                          });\n\n                          // Kiểm tra các mảng tìm được\n                          if (foundArrays.length > 0) {\n                            // Ưu tiên mảng có 128 phần tử\n                            const potentialDescriptors = foundArrays.filter(arr => arr.length === 128);\n                            if (potentialDescriptors.length > 0) {\n                              validDescriptorsCount++;\n                              console.log(`[DEBUG] Sinh viên ${student.full_name} có descriptor hợp lệ trong thuộc tính object`);\n                            }\n                          }\n                        }\n                      } else {\n                        // Xử lý thông thường\n                        const validOldDescriptors = student.faceDescriptors.filter(desc => Array.isArray(desc) && desc.length === 128).length;\n                        if (validOldDescriptors > 0) {\n                          validDescriptorsCount++;\n                          console.log(`[DEBUG] Sinh viên ${student.full_name} có ${validOldDescriptors} descriptor hợp lệ (dạng cũ)`);\n                        } else {\n                          invalidDescriptorsCount++;\n                          console.log(`[DEBUG] Sinh viên ${student.full_name} không có descriptor hợp lệ (dạng cũ)`);\n                        }\n                      }\n                    } else {\n                      invalidDescriptorsCount++;\n                      console.log(`[DEBUG] Sinh viên ${student.full_name} không có dữ liệu khuôn mặt`);\n                    }\n                  }\n                });\n                console.log(`[DEBUG] Tổng hợp: ${validDescriptorsCount} sinh viên có descriptor hợp lệ, ${invalidDescriptorsCount} sinh viên không có`);\n                if (validDescriptorsCount === 0) {\n                  enqueueSnackbar(\"Không có sinh viên nào có dữ liệu khuôn mặt, vui lòng cập nhật dữ liệu\", {\n                    variant: \"warning\",\n                    autoHideDuration: 8000\n                  });\n                }\n              } else {\n                console.log(\"[DEBUG] Không nhận được dữ liệu khuôn mặt từ API\");\n                enqueueSnackbar(\"Không thể tải dữ liệu nhận diện khuôn mặt\", {\n                  variant: \"error\"\n                });\n              }\n            } else {\n              console.log(\"[DEBUG] Không nhận được dữ liệu khuôn mặt từ API (faceFeatureResult là null hoặc undefined)\");\n              enqueueSnackbar(\"Không thể tải dữ liệu nhận diện khuôn mặt\", {\n                variant: \"error\"\n              });\n            }\n          } catch (apiError) {\n            var _apiError$response;\n            console.error(\"[DEBUG] Lỗi khi gọi API lấy dữ liệu khuôn mặt:\", apiError);\n            console.log(\"[DEBUG] API error details:\", ((_apiError$response = apiError.response) === null || _apiError$response === void 0 ? void 0 : _apiError$response.data) || apiError.message);\n            enqueueSnackbar(\"Lỗi khi lấy dữ liệu khuôn mặt. Vui lòng kiểm tra API endpoint.\", {\n              variant: \"error\"\n            });\n          }\n\n          // Thiết lập thời gian phát hiện ban đầu\n          setLastDetectionTime(Date.now());\n        }\n      } catch (error) {\n        console.error(\"Lỗi khi tải dữ liệu:\", error);\n        enqueueSnackbar(\"Lỗi khi tải dữ liệu\", {\n          variant: \"error\"\n        });\n        setIsLoading(false);\n      }\n    };\n    loadInitialData();\n\n    // Clean up\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n\n      // Dừng landmark interval nếu đang chạy\n      if (landmarkIntervalId) {\n        clearInterval(landmarkIntervalId);\n      }\n\n      // Dừng camera stream nếu đang chạy\n      if (webcamRef.current && webcamRef.current.video && webcamRef.current.video.srcObject) {\n        const tracks = webcamRef.current.video.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n      if (videoRef.current && videoRef.current.srcObject) {\n        const tracks = videoRef.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n      dispatch(clearRecognitionState());\n\n      // Reset các state theo dõi camera\n      setCameraRetryCount(0);\n      setLastDetectionTime(null);\n    };\n  }, [classId, sessionId, token, dispatch, enqueueSnackbar, isModelLoaded, intervalId, landmarkIntervalId]);\n\n  // Hàm khởi tạo camera trực tiếp - nút duy nhất cho camera\n  const initDirectCamera = async () => {\n    try {\n      // Tải model nhận diện và đảm bảo model đã sẵn sàng\n      if (!isModelLoaded || !faceapi.nets.ssdMobilenetv1.isLoaded) {\n        enqueueSnackbar(\"Đang tải các mô hình nhận diện...\", {\n          variant: \"info\"\n        });\n        const modelLoaded = await loadFaceRecognitionModels();\n        if (!modelLoaded) {\n          enqueueSnackbar(\"Không thể tải mô hình nhận diện, vui lòng thử lại\", {\n            variant: \"error\"\n          });\n          return;\n        }\n      }\n\n      // Dừng stream cũ nếu có\n      if (webcamRef.current && webcamRef.current.video && webcamRef.current.video.srcObject) {\n        const tracks = webcamRef.current.video.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n      if (videoRef.current && videoRef.current.srcObject) {\n        const tracks = videoRef.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n\n      // Truy cập camera trực tiếp thông qua MediaDevices API\n      try {\n        // Thêm tùy chọn camera với nhiều độ phân giải\n        const constraints = {\n          video: {\n            width: {\n              ideal: 1280,\n              min: 640\n            },\n            height: {\n              ideal: 720,\n              min: 480\n            },\n            facingMode: \"user\",\n            frameRate: {\n              ideal: 30,\n              min: 15\n            }\n          },\n          audio: false\n        };\n        console.log(\"[DEBUG] Đang yêu cầu truy cập camera với tùy chọn:\", constraints);\n        const stream = await navigator.mediaDevices.getUserMedia(constraints);\n        console.log(\"Đã nhận được stream camera trực tiếp\", stream.id);\n\n        // Nếu đang sử dụng webcam component\n        if (webcamRef.current && webcamRef.current.video) {\n          webcamRef.current.video.srcObject = stream;\n\n          // Kiểm tra stream đã hoạt động chưa\n          webcamRef.current.video.onloadedmetadata = () => {\n            webcamRef.current.video.play().catch(err => {\n              console.error(\"Lỗi khi play video webcam:\", err);\n            });\n          };\n        }\n        // Hoặc nếu đang sử dụng video element\n        else if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n          videoRef.current.onloadedmetadata = () => {\n            videoRef.current.play().catch(err => console.error(\"Lỗi khi play video:\", err));\n          };\n        }\n\n        // Đánh dấu camera và model đã sẵn sàng\n        dispatch(setModelLoaded(true));\n        dispatch(setCameraReady(true));\n\n        // Khởi động thời gian phát hiện ban đầu\n        setLastDetectionTime(Date.now());\n        enqueueSnackbar(\"Đã kết nối camera thành công\", {\n          variant: \"success\"\n        });\n\n        // Bật hiển thị landmark sau khi camera khởi động\n        setTimeout(() => {\n          setShowLandmark(true);\n          startLandmarkDetection();\n        }, 1000);\n\n        // Đặt lại số lần thử camera\n        setCameraRetryCount(0);\n        return true;\n      } catch (err) {\n        console.error(\"Lỗi truy cập camera:\", err);\n        enqueueSnackbar(`Không thể truy cập camera: ${err.message}`, {\n          variant: \"error\"\n        });\n\n        // Thử phương án thay thế nếu camera mặt trước thất bại\n        if (cameraRetryCount < 2) {\n          try {\n            console.log(\"[DEBUG] Thử sử dụng camera phương án thay thế\");\n            const altStream = await navigator.mediaDevices.getUserMedia({\n              video: true,\n              // Chỉ yêu cầu bất kỳ camera nào có sẵn\n              audio: false\n            });\n\n            // Xử lý stream mới\n            if (webcamRef.current && webcamRef.current.video) {\n              webcamRef.current.video.srcObject = altStream;\n            } else if (videoRef.current) {\n              videoRef.current.srcObject = altStream;\n              videoRef.current.onloadedmetadata = () => videoRef.current.play();\n            }\n            dispatch(setCameraReady(true));\n            setLastDetectionTime(Date.now());\n            enqueueSnackbar(\"Đã kết nối camera thay thế\", {\n              variant: \"success\"\n            });\n            return true;\n          } catch (altErr) {\n            console.error(\"Không thể sử dụng camera thay thế:\", altErr);\n          }\n        }\n        return false;\n      }\n    } catch (err) {\n      console.error(\"Lỗi khi khởi tạo camera trực tiếp:\", err);\n      enqueueSnackbar(`Lỗi: ${err.message}`, {\n        variant: \"error\"\n      });\n      return false;\n    }\n  };\n\n  // Hàm bắt đầu phát hiện landmarks theo thời gian thực\n  const startLandmarkDetection = () => {\n    // Xóa interval cũ nếu có\n    if (landmarkDetectionInterval) {\n      clearInterval(landmarkDetectionInterval);\n    }\n\n    // Tạo interval mới để cập nhật landmarks mỗi 50ms\n    const intervalId = setInterval(() => {\n      if (cameraMode === \"face_recognition\" && showLandmark) {\n        handleDetectFaces(true);\n      }\n    }, 50);\n    setLandmarkDetectionInterval(intervalId);\n  };\n\n  // Hàm dừng phát hiện landmarks theo thời gian thực\n  const stopLandmarkDetection = () => {\n    if (landmarkDetectionInterval) {\n      clearInterval(landmarkDetectionInterval);\n      setLandmarkDetectionInterval(null);\n    }\n  };\n\n  // Cập nhật useEffect để bắt đầu và dừng phát hiện landmarks khi camera hoặc chế độ thay đổi\n  useEffect(() => {\n    if (cameraMode === \"face_recognition\" && showLandmark) {\n      startLandmarkDetection();\n    } else {\n      stopLandmarkDetection();\n    }\n    return () => {\n      stopLandmarkDetection();\n    };\n  }, [cameraMode, showLandmark]);\n\n  // Cập nhật useEffect cho việc toggle showLandmark\n  useEffect(() => {\n    if (showLandmark && cameraMode === \"face_recognition\") {\n      startLandmarkDetection();\n    } else {\n      stopLandmarkDetection();\n    }\n  }, [showLandmark]);\n\n  // Load các mô hình nhận diện khuôn mặt\n  const loadFaceRecognitionModels = async () => {\n    try {\n      const MODEL_URL = \"/models\";\n      console.log(\"Bắt đầu tải models từ:\", MODEL_URL);\n\n      // Thêm SsdMobilenetv1 vào danh sách models cần tải\n      const modelPromises = [faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL), faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL), faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL), faceapi.nets.ssdMobilenetv1.loadFromUri(MODEL_URL) // Thêm model SSD MobileNet\n      ];\n\n      // Kiểm tra xem các models đã được tải chưa\n      const modelStatuses = [faceapi.nets.tinyFaceDetector.isLoaded, faceapi.nets.faceLandmark68Net.isLoaded, faceapi.nets.faceRecognitionNet.isLoaded, faceapi.nets.ssdMobilenetv1.isLoaded // Kiểm tra SSD MobileNet đã tải chưa\n      ];\n      if (modelStatuses.every(status => status)) {\n        console.log(\"Các models đã được tải từ trước\");\n        dispatch(setModelLoaded(true));\n        return true;\n      }\n      await Promise.all(modelPromises);\n      console.log(\"Đã tải xong models thành công\");\n      dispatch(setModelLoaded(true));\n      enqueueSnackbar(\"Tải mô hình nhận diện thành công\", {\n        variant: \"success\"\n      });\n      return true;\n    } catch (error) {\n      console.error(\"Lỗi khi tải mô hình:\", error);\n      enqueueSnackbar(\"Không thể tải mô hình nhận diện\", {\n        variant: \"error\"\n      });\n      return false;\n    }\n  };\n\n  // Hàm kiểm tra và đảm bảo camera hoạt động\n  const ensureCameraIsWorking = () => {\n    var _webcamRef$current;\n    // Kiểm tra nếu camera chưa hoạt động và đã thử khởi động\n    if (!isCameraReady && cameraRetryCount === 0) {\n      console.log(\"[DEBUG] Camera chưa sẵn sàng, thử khởi động\");\n      setCameraRetryCount(1);\n      initDirectCamera();\n      return false;\n    }\n\n    // Kiểm tra stream của camera\n    const videoElement = isAutoMode ? videoRef.current : (_webcamRef$current = webcamRef.current) === null || _webcamRef$current === void 0 ? void 0 : _webcamRef$current.video;\n    if (!videoElement || !videoElement.srcObject || videoElement.readyState !== 4) {\n      console.log(\"[DEBUG] Video stream không hoạt động, thử khởi động lại camera\");\n      if (cameraRetryCount < 3) {\n        setCameraRetryCount(prev => prev + 1);\n        initDirectCamera();\n        return false;\n      }\n    }\n    return true;\n  };\n\n  // Xử lý phát hiện khuôn mặt\n  const handleDetectFaces = async (landmarkOnly = false) => {\n    var _webcamRef$current2;\n    if (cameraMode !== \"face_recognition\" || !faceapi || !canvasRef.current) return [];\n\n    // Xác định video element hiện tại (từ webcam hoặc video trực tiếp)\n    const videoElement = isAutoMode ? videoRef.current : (_webcamRef$current2 = webcamRef.current) === null || _webcamRef$current2 === void 0 ? void 0 : _webcamRef$current2.video;\n\n    // Kiểm tra kỹ lưỡng video element\n    if (!videoElement) {\n      console.error(\"Không tìm thấy video element\");\n      return [];\n    }\n\n    // Kiểm tra video đã tải và sẵn sàng chưa\n    if (videoElement.readyState !== 4) {\n      console.log(\"Video chưa sẵn sàng, readyState =\", videoElement.readyState);\n      return [];\n    }\n\n    // Kiểm tra video có kích thước hợp lệ không\n    if (videoElement.videoWidth === 0 || videoElement.videoHeight === 0) {\n      console.error(\"Video kích thước không hợp lệ:\", videoElement.videoWidth, \"x\", videoElement.videoHeight);\n      return [];\n    }\n    const canvasElement = canvasRef.current;\n\n    // Đặt kích thước canvas để khớp với video thực tế (không phải kích thước hiển thị)\n    const displaySize = {\n      width: videoElement.videoWidth,\n      height: videoElement.videoHeight\n    };\n\n    // Cập nhật kích thước thực của canvas\n    faceapi.matchDimensions(canvasElement, displaySize);\n    try {\n      // Phát hiện khuôn mặt với landmarks\n      let detections = [];\n      try {\n        detections = await faceapi.detectAllFaces(videoElement, new faceapi.TinyFaceDetectorOptions({\n          scoreThreshold: 0.3,\n          inputSize: 320 // Thêm kích thước đầu vào rõ ràng\n        })).withFaceLandmarks();\n        console.log(\"[DEBUG] Phát hiện khuôn mặt với landmarks:\", detections.length);\n      } catch (error) {\n        console.error(\"Lỗi khi phát hiện khuôn mặt với landmarks:\", error);\n        return [];\n      }\n\n      // Thêm descriptors nếu không phải chỉ vẽ landmarks\n      let finalDetections = detections;\n      if (!landmarkOnly && detections.length > 0) {\n        // Sử dụng cả hai phương pháp phát hiện để tăng khả năng nhận diện\n        try {\n          // Sử dụng TinyFaceDetector có kích thước rõ ràng\n          finalDetections = await faceapi.detectAllFaces(videoElement, new faceapi.TinyFaceDetectorOptions({\n            scoreThreshold: 0.3,\n            inputSize: 320\n          })).withFaceLandmarks().withFaceDescriptors();\n          console.log(\"[DEBUG] Phát hiện với TinyFaceDetector:\", finalDetections.length);\n\n          // Nếu không có kết quả, thử sử dụng SSD MobileNet\n          if ((finalDetections.length === 0 || !finalDetections[0].descriptor) && faceapi.nets.ssdMobilenetv1.isLoaded) {\n            finalDetections = await faceapi.detectAllFaces(videoElement, new faceapi.SsdMobilenetv1Options({\n              minConfidence: 0.3\n            })).withFaceLandmarks().withFaceDescriptors();\n            console.log(\"[DEBUG] Phát hiện với SsdMobilenetv1:\", finalDetections.length);\n          }\n        } catch (error) {\n          console.error(\"Lỗi khi lấy mô tả khuôn mặt:\", error);\n          // Quay lại chỉ sử dụng landmarks nếu có lỗi\n          finalDetections = detections;\n        }\n      }\n\n      // Kiểm tra xem finalDetections có hợp lệ không\n      if (!finalDetections || finalDetections.length === 0) {\n        console.log(\"[DEBUG] Không phát hiện được khuôn mặt\");\n        // Xóa canvas\n        const ctx = canvasElement.getContext(\"2d\");\n        ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n        return [];\n      }\n\n      // Đảm bảo mỗi detection có box hợp lệ\n      finalDetections = finalDetections.filter(det => {\n        if (!det.detection || !det.detection.box || det.detection.box._x === null || det.detection.box._y === null) {\n          console.log(\"[DEBUG] Bỏ qua detection có box không hợp lệ\");\n          return false;\n        }\n        return true;\n      });\n      if (finalDetections.length === 0) {\n        console.log(\"[DEBUG] Không còn detection nào sau khi lọc box không hợp lệ\");\n        const ctx = canvasElement.getContext(\"2d\");\n        ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n        return [];\n      }\n\n      // Điều chỉnh kết quả theo kích thước hiển thị\n      const resizedDetections = faceapi.resizeResults(finalDetections, {\n        width: canvasElement.width,\n        height: canvasElement.height\n      });\n\n      // Xóa canvas trước khi vẽ mới\n      const ctx = canvasElement.getContext(\"2d\");\n      ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n\n      // Vẽ các landmarks nếu showLandmark được bật\n      if (showLandmark && resizedDetections.length > 0) {\n        resizedDetections.forEach(detection => {\n          // Kiểm tra detection có hợp lệ không\n          if (!detection.detection || !detection.detection._box) {\n            return;\n          }\n          const landmarks = detection.landmarks;\n          if (!landmarks || !landmarks.positions) {\n            return;\n          }\n          const points = landmarks.positions;\n\n          // Vẽ hộp giới hạn khuôn mặt\n          const {\n            _box: box\n          } = detection.detection;\n          if (box && box._x != null && box._y != null && box._width != null && box._height != null) {\n            ctx.strokeStyle = \"#00FF00\";\n            ctx.lineWidth = 2;\n            ctx.strokeRect(box._x, box._y, box._width, box._height);\n\n            // Hiển thị thông tin bên dưới hộp giới hạn\n            ctx.fillStyle = \"#FFFFFF\";\n            ctx.font = \"16px Arial\";\n            ctx.fillText(\"Đã phát hiện khuôn mặt\", box._x, box._y + box._height + 20);\n\n            // Tạo viền cho chữ\n            ctx.strokeStyle = \"#000000\";\n            ctx.lineWidth = 0.5;\n            ctx.strokeText(\"Đã phát hiện khuôn mặt\", box._x, box._y + box._height + 20);\n          }\n\n          // Vẽ các điểm landmarks chỉ khi có đủ điểm\n          if (points && points.length >= 68) {\n            // Mắt trái (đỏ)\n            ctx.fillStyle = \"#FF0000\";\n            for (let i = 36; i <= 41; i++) {\n              if (points[i] && points[i].x != null && points[i].y != null) {\n                ctx.beginPath();\n                ctx.arc(points[i].x, points[i].y, 3, 0, 2 * Math.PI);\n                ctx.fill();\n              }\n            }\n\n            // Mắt phải (xanh dương)\n            ctx.fillStyle = \"#0000FF\";\n            for (let i = 42; i <= 47; i++) {\n              if (points[i] && points[i].x != null && points[i].y != null) {\n                ctx.beginPath();\n                ctx.arc(points[i].x, points[i].y, 3, 0, 2 * Math.PI);\n                ctx.fill();\n              }\n            }\n\n            // Mũi (vàng)\n            ctx.fillStyle = \"#FFFF00\";\n            for (let i = 27; i <= 35; i++) {\n              if (points[i] && points[i].x != null && points[i].y != null) {\n                ctx.beginPath();\n                ctx.arc(points[i].x, points[i].y, 3, 0, 2 * Math.PI);\n                ctx.fill();\n              }\n            }\n\n            // Miệng (tím)\n            ctx.fillStyle = \"#FF00FF\";\n            for (let i = 48; i <= 67; i++) {\n              if (points[i] && points[i].x != null && points[i].y != null) {\n                ctx.beginPath();\n                ctx.arc(points[i].x, points[i].y, 3, 0, 2 * Math.PI);\n                ctx.fill();\n              }\n            }\n\n            // Viền khuôn mặt (xanh lá)\n            ctx.fillStyle = \"#00FF00\";\n            for (let i = 0; i <= 26; i++) {\n              if (points[i] && points[i].x != null && points[i].y != null) {\n                ctx.beginPath();\n                ctx.arc(points[i].x, points[i].y, 3, 0, 2 * Math.PI);\n                ctx.fill();\n              }\n            }\n          }\n        });\n      }\n\n      // Chỉ xử lý nhận diện nếu không phải chỉ vẽ landmarks\n      if (!landmarkOnly) {\n        handleFaceDetection(resizedDetections);\n      }\n      return resizedDetections;\n    } catch (error) {\n      console.error(\"Lỗi khi phát hiện khuôn mặt:\", error);\n      // Xóa canvas nếu có lỗi\n      if (canvasRef.current) {\n        const ctx = canvasRef.current.getContext(\"2d\");\n        ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      }\n      return [];\n    }\n  };\n\n  // Xử lý phát hiện khuôn mặt\n  const handleFaceDetection = async detections => {\n    // Cập nhật state\n    dispatch(setDetectedFaces(detections));\n    try {\n      // Cập nhật thời gian phát hiện\n      setLastDetectionTime(Date.now());\n\n      // Nếu không có khuôn mặt nào được phát hiện, dừng lại\n      if (!detections || detections.length === 0) {\n        if (ENABLE_DEBUG_LOGS) {\n          console.log(\"[DEBUG] Không phát hiện khuôn mặt\");\n        }\n        return;\n      }\n      if (ENABLE_DEBUG_LOGS) {\n        console.log(`[DEBUG] Đã phát hiện ${detections.length} khuôn mặt`);\n      }\n\n      // Xử lý nhận diện khuôn mặt nếu có sinh viên\n      if (classStudents && classStudents.length > 0) {\n        // Xử lý nhận diện khuôn mặt sẽ được thêm sau\n      }\n    } catch (error) {\n      console.error(\"Lỗi khi xử lý khuôn mặt:\", error);\n    }\n  };\n\n  // Điểm danh thủ công\n  const openManualAttendanceDialog = student => {\n    setSelectedStudent(student);\n    setManualAttendanceData({\n      status: \"present\",\n      note: \"\"\n    });\n    setManualDialogOpen(true);\n  };\n  const handleManualDialogClose = () => {\n    setManualDialogOpen(false);\n  };\n  const handleManualAttendanceChange = e => {\n    setManualAttendanceData({\n      ...manualAttendanceData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleManualAttendanceSubmit = async () => {\n    if (!selectedStudent) return;\n    try {\n      const result = await dispatch(manualAttendance({\n        sessionId,\n        studentId: selectedStudent._id,\n        status: manualAttendanceData.status,\n        note: manualAttendanceData.note\n      })).unwrap();\n\n      // Cập nhật logs điểm danh\n      if (result && result.data) {\n        const updatedLogs = attendanceLogs.filter(log => log.student_id._id !== selectedStudent._id);\n        updatedLogs.push({\n          ...result.data,\n          student_id: selectedStudent\n        });\n        setAttendanceLogs(updatedLogs);\n      }\n      enqueueSnackbar(\"Điểm danh thủ công thành công\", {\n        variant: \"success\"\n      });\n      handleManualDialogClose();\n\n      // Cập nhật lại thông tin phiên điểm danh\n      const sessionResponse = await axios.get(`${API_URL}/attendance/sessions/${sessionId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSessionInfo(sessionResponse.data.data);\n    } catch (error) {\n      console.error(\"Lỗi khi điểm danh thủ công:\", error);\n      enqueueSnackbar(\"Lỗi khi điểm danh thủ công\", {\n        variant: \"error\"\n      });\n    }\n  };\n\n  // Đánh dấu điểm danh từ nhận diện khuôn mặt\n  const markAttendance = async (studentId, faceDescriptor, confidence, imageBase64) => {\n    try {\n      const result = await dispatch(verifyAttendance({\n        sessionId,\n        studentId,\n        faceDescriptor,\n        confidence,\n        imageBase64\n      })).unwrap();\n\n      // Cập nhật logs điểm danh\n      if (result && result.data) {\n        const student = classStudents.find(s => s._id === studentId);\n        if (student) {\n          const updatedLogs = attendanceLogs.filter(log => log.student_id._id !== studentId);\n          updatedLogs.push({\n            ...result.data,\n            student_id: student\n          });\n          setAttendanceLogs(updatedLogs);\n          enqueueSnackbar(`Đã điểm danh cho ${student.full_name}`, {\n            variant: \"success\"\n          });\n        }\n      }\n\n      // Cập nhật lại thông tin phiên điểm danh\n      const sessionResponse = await axios.get(`${API_URL}/attendance/sessions/${sessionId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSessionInfo(sessionResponse.data.data);\n      return true;\n    } catch (error) {\n      console.error(\"Lỗi khi xác nhận điểm danh:\", error);\n      enqueueSnackbar(\"Lỗi khi xác nhận điểm danh\", {\n        variant: \"error\"\n      });\n      return false;\n    }\n  };\n\n  // Kết thúc phiên điểm danh\n  const completeSession = async () => {\n    try {\n      await axios.put(`${API_URL}/attendance/sessions/${sessionId}`, {\n        status: \"completed\"\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      enqueueSnackbar(\"Phiên điểm danh đã kết thúc\", {\n        variant: \"success\"\n      });\n      navigate(`/teacher/classes/${classId}`);\n    } catch (error) {\n      console.error(\"Lỗi khi kết thúc phiên điểm danh:\", error);\n      enqueueSnackbar(\"Lỗi khi kết thúc phiên điểm danh\", {\n        variant: \"error\"\n      });\n    }\n  };\n\n  // Làm mới danh sách điểm danh\n  const refreshAttendanceLogs = async () => {\n    try {\n      const logsResponse = await axios.get(`${API_URL}/attendance/logs/${sessionId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setAttendanceLogs(logsResponse.data.data);\n      const sessionResponse = await axios.get(`${API_URL}/attendance/sessions/${sessionId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSessionInfo(sessionResponse.data.data);\n      enqueueSnackbar(\"Đã làm mới dữ liệu điểm danh\", {\n        variant: \"success\"\n      });\n    } catch (error) {\n      console.error(\"Lỗi khi làm mới dữ liệu:\", error);\n      enqueueSnackbar(\"Lỗi khi làm mới dữ liệu\", {\n        variant: \"error\"\n      });\n    }\n  };\n\n  // Chụp ảnh và nhận diện thủ công\n  const captureAndRecognize = async () => {\n    try {\n      setIsRecognizing(true);\n      enqueueSnackbar(\"Đang nhận diện khuôn mặt...\", {\n        variant: \"info\"\n      });\n\n      // Kiểm tra camera hoạt động\n      if (!ensureCameraIsWorking()) {\n        enqueueSnackbar(\"Camera không hoạt động, vui lòng khởi động lại\", {\n          variant: \"error\"\n        });\n        setIsRecognizing(false);\n        return;\n      }\n\n      // Phát hiện khuôn mặt\n      const detections = await handleDetectFaces(false);\n\n      // Kiểm tra có phát hiện khuôn mặt không\n      if (!detections || detections.length === 0) {\n        enqueueSnackbar(\"Không phát hiện khuôn mặt nào trong hình\", {\n          variant: \"warning\"\n        });\n        setIsRecognizing(false);\n        return;\n      }\n\n      // Debug: Log số khuôn mặt phát hiện được\n      console.log(`[DEBUG] Đã phát hiện ${detections.length} khuôn mặt với descriptor:`, detections[0].descriptor ? \"CÓ\" : \"KHÔNG CÓ\");\n\n      // Kiểm tra xem detection có chứa descriptor không\n      if (!detections[0].descriptor) {\n        console.log(\"[DEBUG] Không tìm thấy descriptor trong kết quả phát hiện\");\n        enqueueSnackbar(\"Không thể trích xuất đặc trưng khuôn mặt để nhận diện\", {\n          variant: \"error\"\n        });\n        setIsRecognizing(false);\n        return;\n      }\n\n      // Xử lý nhận diện với dữ liệu sinh viên hiện có\n      if (classStudents && classStudents.length > 0) {\n        var _webcamRef$current3;\n        // Log số lượng sinh viên để debug\n        console.log(`[DEBUG] Nhận diện với ${classStudents.length} sinh viên trong lớp`);\n\n        // Chụp ảnh từ webcam\n        const imageBase64 = (_webcamRef$current3 = webcamRef.current) === null || _webcamRef$current3 === void 0 ? void 0 : _webcamRef$current3.getScreenshot();\n\n        // Lấy descriptor khuôn mặt đầu tiên được phát hiện\n        const faceDescriptor = detections[0].descriptor;\n\n        // So sánh với dữ liệu sinh viên\n        const matchResults = [];\n\n        // Duyệt từng sinh viên để so sánh\n        for (const student of classStudents) {\n          // Lấy descriptor từ sinh viên (dựa vào cấu trúc dữ liệu của bạn)\n          let studentDescriptors = [];\n\n          // Debug: Log thông tin sinh viên\n          console.log(`[DEBUG] Xử lý sinh viên: ${student.full_name}`);\n\n          // Thử lấy từ cấu trúc faceFeatures\n          if (student.faceFeatures && student.faceFeatures.descriptors) {\n            console.log(\"[DEBUG] Sinh viên có dữ liệu faceFeatures.descriptors\");\n\n            // Xử lý nhiều cấu trúc dữ liệu khác nhau\n            if (Array.isArray(student.faceFeatures.descriptors)) {\n              // Kiểm tra cấu trúc dữ liệu\n              console.log(\"[DEBUG] Cấu trúc descriptors:\", JSON.stringify(student.faceFeatures.descriptors).substring(0, 100) + \"...\");\n\n              // Trường hợp 1: [[descriptor]]\n              if (Array.isArray(student.faceFeatures.descriptors[0]) && Array.isArray(student.faceFeatures.descriptors[0][0]) && student.faceFeatures.descriptors[0][0].length === 128) {\n                studentDescriptors.push(student.faceFeatures.descriptors[0][0]);\n                console.log(\"[DEBUG] Trích xuất descriptor từ cấu trúc [[descriptor]]\");\n              }\n              // Trường hợp 2: [descriptor]\n              else if (Array.isArray(student.faceFeatures.descriptors[0]) && student.faceFeatures.descriptors[0].length === 128) {\n                studentDescriptors.push(student.faceFeatures.descriptors[0]);\n                console.log(\"[DEBUG] Trích xuất descriptor từ cấu trúc [descriptor]\");\n              }\n              // Trường hợp 3: Duyệt từng phần tử để tìm mảng 128 phần tử\n              else {\n                // Tìm tất cả mảng 128 phần tử trong cấu trúc lồng nhau\n                const flattenAndFind = (arr, depth = 0) => {\n                  if (depth > 3) return []; // Giới hạn độ sâu để tránh đệ quy vô hạn\n\n                  let results = [];\n                  for (const item of arr) {\n                    if (Array.isArray(item)) {\n                      if (item.length === 128 && item.every(val => typeof val === \"number\")) {\n                        results.push(item);\n                      } else {\n                        results = [...results, ...flattenAndFind(item, depth + 1)];\n                      }\n                    }\n                  }\n                  return results;\n                };\n                const foundDescriptors = flattenAndFind(student.faceFeatures.descriptors);\n                if (foundDescriptors.length > 0) {\n                  studentDescriptors = [...studentDescriptors, ...foundDescriptors];\n                  console.log(`[DEBUG] Tìm thấy ${foundDescriptors.length} descriptor sau khi duyệt đệ quy`);\n                }\n              }\n            }\n          }\n          // Hoặc thử lấy từ cấu trúc cũ faceDescriptors\n          else if (student.faceDescriptors) {\n            console.log(\"[DEBUG] Sinh viên có dữ liệu faceDescriptors (cấu trúc cũ)\");\n            if (Array.isArray(student.faceDescriptors)) {\n              // Trường hợp 1: [descriptor]\n              if (student.faceDescriptors.some(d => Array.isArray(d) && d.length === 128)) {\n                studentDescriptors = student.faceDescriptors.filter(d => Array.isArray(d) && d.length === 128);\n                console.log(`[DEBUG] Tìm thấy ${studentDescriptors.length} descriptor từ faceDescriptors`);\n              }\n              // Trường hợp 2: descriptor trong object\n              else if (student.faceDescriptors.length > 0 && typeof student.faceDescriptors[0] === \"object\") {\n                // Tìm trong thuộc tính của object\n                for (const desc of student.faceDescriptors) {\n                  // Tìm thuộc tính có mảng 128 phần tử\n                  for (const key in desc) {\n                    if (Array.isArray(desc[key]) && desc[key].length === 128) {\n                      studentDescriptors.push(desc[key]);\n                      console.log(`[DEBUG] Tìm thấy descriptor trong thuộc tính ${key}`);\n                    } else if (key === \"descriptors\" && Array.isArray(desc[key])) {\n                      for (const d of desc[key]) {\n                        if (Array.isArray(d) && d.length === 128) {\n                          studentDescriptors.push(d);\n                          console.log(`[DEBUG] Tìm thấy descriptor trong descriptors`);\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n\n          // Log số lượng descriptor tìm được\n          console.log(`[DEBUG] Tìm thấy ${studentDescriptors.length} descriptor cho sinh viên ${student.full_name}`);\n\n          // Nếu sinh viên có dữ liệu khuôn mặt\n          if (studentDescriptors.length > 0) {\n            // Tính toán độ tương đồng với từng descriptor\n            let bestMatch = 0;\n            for (const descriptor of studentDescriptors) {\n              try {\n                const distance = faceapi.euclideanDistance(faceDescriptor, descriptor);\n                // Chuyển đổi khoảng cách thành độ tương đồng (1 - distance) và lấy giá trị tốt nhất\n                const similarity = Math.max(0, 1 - distance);\n                console.log(`[DEBUG] Độ tương đồng với ${student.full_name}: ${(similarity * 100).toFixed(2)}%`);\n                bestMatch = Math.max(bestMatch, similarity);\n              } catch (error) {\n                console.error(`[DEBUG] Lỗi khi tính khoảng cách với sinh viên ${student.full_name}:`, error);\n              }\n            }\n\n            // Lưu lại tất cả kết quả để phân tích\n            matchResults.push({\n              studentId: student._id,\n              name: student.full_name,\n              confidence: bestMatch,\n              studentCode: student.student_code\n            });\n          }\n        }\n\n        // Sắp xếp kết quả theo độ tương đồng giảm dần\n        matchResults.sort((a, b) => b.confidence - a.confidence);\n\n        // Log tất cả kết quả\n        console.log(\"[DEBUG] Kết quả so sánh đầy đủ:\", matchResults);\n\n        // Lọc kết quả theo ngưỡng\n        const filteredResults = matchResults.filter(r => r.confidence > RECOGNITION_THRESHOLD);\n        console.log(`[DEBUG] Có ${filteredResults.length}/${matchResults.length} kết quả vượt ngưỡng ${RECOGNITION_THRESHOLD}`);\n\n        // Cập nhật danh sách sinh viên được nhận diện\n        dispatch(setRecognizedStudents(filteredResults));\n\n        // Hiển thị kết quả ngay cả khi dưới ngưỡng để giúp debug\n        if (matchResults.length > 0) {\n          const topMatches = matchResults.slice(0, 3);\n\n          // Hiển thị top 3 kết quả để dễ dàng debug\n          const matchDetails = topMatches.map(m => `${m.name}: ${(m.confidence * 100).toFixed(1)}%`).join(\", \");\n          console.log(`[DEBUG] Top 3 kết quả: ${matchDetails}`);\n          if (filteredResults.length > 0) {\n            const topMatch = filteredResults[0];\n            enqueueSnackbar(`Đã nhận diện: ${topMatch.name} (${Math.round(topMatch.confidence * 100)}%)`, {\n              variant: \"success\"\n            });\n\n            // Tự động điểm danh nếu độ tin cậy cao\n            if (topMatch.confidence > CONFIDENCE_THRESHOLD) {\n              handleMarkAttendance(topMatch.studentId, topMatch.confidence);\n            }\n          } else {\n            enqueueSnackbar(`Không nhận diện được sinh viên nào vượt ngưỡng. Gần nhất: ${matchDetails}`, {\n              variant: \"warning\"\n            });\n          }\n        } else {\n          enqueueSnackbar(\"Không nhận diện được sinh viên nào\", {\n            variant: \"warning\"\n          });\n        }\n      } else {\n        enqueueSnackbar(\"Không có dữ liệu sinh viên để so sánh\", {\n          variant: \"error\"\n        });\n      }\n    } catch (error) {\n      console.error(\"Lỗi khi nhận diện khuôn mặt:\", error);\n      enqueueSnackbar(`Lỗi khi nhận diện: ${error.message}`, {\n        variant: \"error\"\n      });\n    } finally {\n      setIsRecognizing(false);\n    }\n  };\n\n  // Xử lý đánh dấu sinh viên điểm danh\n  const handleMarkAttendance = async (studentId, confidence) => {\n    // Kiểm tra xem sinh viên đã được điểm danh chưa\n    const isAlreadyAttended = attendanceLogs.some(log => log.student_id._id === studentId && log.status === \"present\");\n    if (isAlreadyAttended) {\n      if (ENABLE_DEBUG_LOGS) {\n        console.log(`[DEBUG] Sinh viên ${studentId} đã được điểm danh trước đó`);\n      }\n      return;\n    }\n    try {\n      var _webcamRef$current4;\n      // Lấy dữ liệu video\n      const videoElement = isAutoMode ? videoRef.current : (_webcamRef$current4 = webcamRef.current) === null || _webcamRef$current4 === void 0 ? void 0 : _webcamRef$current4.video;\n      if (!videoElement) return;\n\n      // Tạo ảnh chụp từ video element\n      let imageBase64 = null;\n\n      // Nếu sử dụng webcam component\n      if (!isAutoMode && webcamRef.current) {\n        imageBase64 = webcamRef.current.getScreenshot();\n      }\n      // Nếu sử dụng video element trực tiếp\n      else if (isAutoMode) {\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = videoElement.videoWidth;\n        canvas.height = videoElement.videoHeight;\n        const ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(videoElement, 0, 0);\n        imageBase64 = canvas.toDataURL(\"image/jpeg\");\n      }\n\n      // Tìm sinh viên đã được phát hiện\n      const student = classStudents.find(s => s._id === studentId);\n      if (!student) {\n        console.error(`Không tìm thấy sinh viên với ID ${studentId}`);\n        return;\n      }\n\n      // Lấy descriptor mới nhất từ sinh viên\n      let descriptor = null;\n\n      // Kiểm tra và lấy descriptor từ các cấu trúc khác nhau\n      if (student.faceFeatures && student.faceFeatures.descriptors && Array.isArray(student.faceFeatures.descriptors) && student.faceFeatures.descriptors.length > 0) {\n        // Lấy từ cấu trúc mới\n        if (Array.isArray(student.faceFeatures.descriptors[0])) {\n          descriptor = student.faceFeatures.descriptors[0];\n        } else if (Array.isArray(student.faceFeatures.descriptors[0][0])) {\n          descriptor = student.faceFeatures.descriptors[0][0];\n        }\n      } else if (student.faceDescriptors && Array.isArray(student.faceDescriptors) && student.faceDescriptors.length > 0) {\n        // Lấy từ cấu trúc cũ\n        if (typeof student.faceDescriptors[0] === \"object\") {\n          if (student.faceDescriptors[0].descriptors && Array.isArray(student.faceDescriptors[0].descriptors) && student.faceDescriptors[0].descriptors.length > 0) {\n            descriptor = student.faceDescriptors[0].descriptors[0];\n          } else {\n            // Tìm mảng 128 phần tử đầu tiên trong object\n            Object.keys(student.faceDescriptors[0]).forEach(key => {\n              const value = student.faceDescriptors[0][key];\n              if (!descriptor && Array.isArray(value) && value.length === 128) {\n                descriptor = value;\n              }\n            });\n          }\n        } else if (Array.isArray(student.faceDescriptors[0]) && student.faceDescriptors[0].length === 128) {\n          descriptor = student.faceDescriptors[0];\n        }\n      }\n\n      // Gọi API điểm danh\n      if (ENABLE_DEBUG_LOGS) {\n        console.log(`[DEBUG] Đánh dấu điểm danh cho ${student.full_name} với độ tin cậy ${confidence.toFixed(2)}`);\n      }\n\n      // Gọi hàm điểm danh\n      await markAttendance(studentId, descriptor, confidence, imageBase64);\n    } catch (error) {\n      console.error(\"Lỗi khi đánh dấu điểm danh:\", error);\n    }\n  };\n\n  // Bật/tắt hiển thị landmark trên khuôn mặt\n  const toggleLandmarkDetection = () => {\n    const newState = !showLandmark;\n    setShowLandmark(newState);\n\n    // Bắt đầu hoặc dừng interval landmark detection\n    if (newState) {\n      startLandmarkDetection();\n    } else if (landmarkIntervalId) {\n      clearInterval(landmarkIntervalId);\n      setLandmarkIntervalId(null);\n\n      // Xóa canvas khi tắt landmarks\n      const canvasElement = canvasRef.current;\n      if (canvasElement) {\n        const ctx = canvasElement.getContext(\"2d\");\n        ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n      }\n    }\n  };\n\n  // Thêm hàm debug để kiểm tra cấu trúc dữ liệu khuôn mặt\n  const debugFaceFeatures = () => {\n    if (!classStudents || classStudents.length === 0) {\n      console.log(\"[DEBUG] Không có sinh viên nào để kiểm tra dữ liệu khuôn mặt\");\n      return;\n    }\n    classStudents.forEach((student, index) => {\n      console.log(`[DEBUG] Sinh viên #${index + 1}: ${student.full_name}`);\n\n      // Kiểm tra dữ liệu faceFeatures\n      if (student.faceFeatures) {\n        console.log(`  - Có dữ liệu faceFeatures`);\n\n        // Kiểm tra descriptors\n        if (student.faceFeatures.descriptors) {\n          console.log(`  - Có descriptors: ${student.faceFeatures.descriptors.length} nhóm`);\n          student.faceFeatures.descriptors.forEach((group, groupIndex) => {\n            if (Array.isArray(group)) {\n              console.log(`    - Nhóm #${groupIndex + 1}: ${group.length} descriptors`);\n              group.forEach((descriptor, descIndex) => {\n                if (Array.isArray(descriptor)) {\n                  console.log(`      - Descriptor #${descIndex + 1}: ${descriptor.length} phần tử`);\n                } else {\n                  console.log(`      - Descriptor #${descIndex + 1}: Không phải mảng`);\n                }\n              });\n            } else {\n              console.log(`    - Nhóm #${groupIndex + 1}: Không phải mảng`);\n            }\n          });\n        } else {\n          console.log(`  - Không có dữ liệu descriptors`);\n        }\n      } else {\n        console.log(`  - Không có dữ liệu faceFeatures`);\n      }\n\n      // Kiểm tra dữ liệu cũ (faceDescriptors)\n      if (student.faceDescriptors) {\n        console.log(`  - Có dữ liệu faceDescriptors (cấu trúc cũ): ${student.faceDescriptors.length} descriptors`);\n      }\n    });\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"60vh\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1744,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1738,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Lấy danh sách sinh viên vắng mặt\n  const getAbsentStudents = () => {\n    if (!classInfo || !sessionInfo) return [];\n    const presentStudentIds = attendanceLogs.filter(log => log.status === \"present\").map(log => log.student_id._id);\n    return classInfo.students.filter(student => !presentStudentIds.includes(student._id));\n  };\n  const absentStudents = getAbsentStudents();\n\n  // Điểm danh thủ công trong chế độ đơn giản\n  const showStudentList = () => {\n    if (!classInfo) return;\n\n    // Hiển thị danh sách sinh viên để điểm danh thủ công\n    const absentStudents = getAbsentStudents();\n    if (absentStudents.length === 0) {\n      enqueueSnackbar(\"Tất cả sinh viên đã được điểm danh\", {\n        variant: \"success\"\n      });\n      return;\n    }\n\n    // Hiển thị dialog chọn sinh viên để điểm danh\n    if (absentStudents.length > 0 && absentStudents[0]) {\n      openManualAttendanceDialog(absentStudents[0]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: [\"\\u0110i\\u1EC3m Danh - \", classInfo === null || classInfo === void 0 ? void 0 : classInfo.class_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1785,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      color: \"textSecondary\",\n      gutterBottom: true,\n      children: [\"Bu\\u1ED5i \", sessionInfo === null || sessionInfo === void 0 ? void 0 : sessionInfo.session_number, \" -\", \" \", new Date(sessionInfo === null || sessionInfo === void 0 ? void 0 : sessionInfo.date).toLocaleDateString(\"vi-VN\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1788,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      mt: 1,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              mb: 2,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Camera nh\\u1EADn di\\u1EC7n\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1803,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Chip, {\n                  label: isAutoMode ? \"Tự động đang bật\" : \"Tự động đang tắt\",\n                  color: isAutoMode ? \"success\" : \"default\",\n                  sx: {\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1805,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: isAutoMode ? \"error\" : \"primary\",\n                  onClick: isAutoMode ? () => {\n                    // Dừng tự động\n                    if (intervalId) {\n                      clearInterval(intervalId);\n                      setIntervalId(null);\n                    }\n                    setIsAutoMode(false);\n                    enqueueSnackbar(\"Đã tắt chế độ tự động điểm danh\", {\n                      variant: \"info\"\n                    });\n                  } : () => {\n                    // Bắt đầu tự động\n                    if (intervalId) {\n                      clearInterval(intervalId);\n                    }\n                    // Khởi tạo thời gian phát hiện ban đầu\n                    setLastDetectionTime(Date.now());\n                    const id = setInterval(() => {\n                      handleDetectFaces();\n                    }, AUTO_DETECT_INTERVAL);\n                    setIntervalId(id);\n                    setIsAutoMode(true);\n                    enqueueSnackbar(\"Đã bật chế độ tự động điểm danh\", {\n                      variant: \"info\"\n                    });\n                  },\n                  children: isAutoMode ? \"Tắt tự động\" : \"Bật tự động\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1810,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1804,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1797,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1796,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            sx: {\n              position: \"relative\",\n              width: \"100%\",\n              height: \"400px\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              overflow: \"hidden\",\n              mb: 2\n            },\n            children: isCameraReady ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [isAutoMode ?\n              /*#__PURE__*/\n              // Sử dụng video element trực tiếp thay vì Webcam component\n              _jsxDEV(\"video\", {\n                ref: videoRef,\n                style: {\n                  position: \"absolute\",\n                  width: \"100%\",\n                  height: \"100%\",\n                  objectFit: \"cover\"\n                },\n                autoPlay: true,\n                playsInline: true,\n                muted: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1867,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Webcam, {\n                audio: false,\n                ref: webcamRef,\n                screenshotFormat: \"image/jpeg\",\n                width: 640,\n                height: 480,\n                videoConstraints: {\n                  width: 640,\n                  height: 480,\n                  facingMode: \"user\"\n                },\n                style: {\n                  position: \"absolute\",\n                  width: \"100%\",\n                  height: \"100%\",\n                  objectFit: \"cover\"\n                },\n                onUserMedia: stream => {\n                  console.log(\"Camera đã được cấp quyền và khởi tạo\", stream.id);\n                  // Đảm bảo readyState được kiểm tra khi stream đã sẵn sàng\n                  setTimeout(() => {\n                    if (webcamRef.current && webcamRef.current.video) {\n                      console.log(\"Stream ready, readyState=\", webcamRef.current.video.readyState);\n                      dispatch(setCameraReady(true));\n                      // Đặt thời gian phát hiện ban đầu\n                      setLastDetectionTime(Date.now());\n                    }\n                  }, 500);\n                },\n                onUserMediaError: err => {\n                  console.error(\"Lỗi khi truy cập camera:\", err);\n                  enqueueSnackbar(`Không thể truy cập camera: ${err.name === \"NotAllowedError\" ? \"Bạn chưa cấp quyền truy cập camera\" : err.name === \"NotFoundError\" ? \"Không tìm thấy thiết bị camera\" : err.message || \"Lỗi không xác định\"}`, {\n                    variant: \"error\"\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1880,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n                ref: canvasRef,\n                style: {\n                  position: \"absolute\",\n                  top: 0,\n                  left: 0,\n                  width: \"100%\",\n                  height: \"100%\",\n                  objectFit: \"cover\",\n                  zIndex: 10\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1933,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 50\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1948,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                mt: 2,\n                children: \"\\u0110ang kh\\u1EDFi t\\u1EA1o camera...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1949,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                color: \"text.secondary\",\n                sx: {\n                  mt: 1\n                },\n                children: isModelLoaded ? \"Chờ kết nối camera - Hãy đảm bảo bạn đã cấp quyền camera\" : \"Đang tải mô hình nhận diện khuôn mặt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1950,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mt: 2,\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\",\n                  gap: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  size: \"small\",\n                  onClick: initDirectCamera,\n                  children: \"Kh\\u1EDFi \\u0111\\u1ED9ng camera tr\\u1EF1c ti\\u1EBFp\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1969,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: \"secondary\",\n                  size: \"small\",\n                  onClick: () => {\n                    setIsAutoMode(true);\n                    // Khởi tạo thời gian phát hiện ban đầu\n                    setLastDetectionTime(Date.now());\n                    const id = setInterval(() => {\n                      handleDetectFaces();\n                    }, AUTO_DETECT_INTERVAL);\n                    setIntervalId(id);\n                    enqueueSnackbar(\"Đã bật tự động điểm danh\", {\n                      variant: \"info\"\n                    });\n                  },\n                  children: \"B\\u1EAFt \\u0111\\u1EA7u t\\u1EF1 \\u0111\\u1ED9ng \\u0111i\\u1EC3m danh\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1978,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: \"warning\",\n                  size: \"small\",\n                  onClick: showStudentList,\n                  children: \"\\u0110i\\u1EC3m danh th\\u1EE7 c\\xF4ng\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1998,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Alert, {\n                  severity: \"info\",\n                  sx: {\n                    mt: 2,\n                    maxWidth: 300\n                  },\n                  children: [\"N\\u1EBFu camera kh\\xF4ng ho\\u1EA1t \\u0111\\u1ED9ng, vui l\\xF2ng th\\u1EED:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n                    style: {\n                      margin: \"8px 0\",\n                      paddingLeft: \"20px\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                      children: \"Ki\\u1EC3m tra quy\\u1EC1n camera tr\\xEAn tr\\xECnh duy\\u1EC7t\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2010,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: \"L\\xE0m m\\u1EDBi trang v\\xE0 th\\u1EED l\\u1EA1i\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2011,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: \"\\u0110\\u1EA3m b\\u1EA3o kh\\xF4ng c\\xF3 \\u1EE9ng d\\u1EE5ng kh\\xE1c \\u0111ang s\\u1EED d\\u1EE5ng camera\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2012,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2009,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2007,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1960,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1947,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1850,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              onClick: captureAndRecognize,\n              startIcon: /*#__PURE__*/_jsxDEV(CameraAlt, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2026,\n                columnNumber: 28\n              }, this),\n              disabled: !isCameraReady || isRecognizing || isAutoMode,\n              children: isRecognizing ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 24,\n                color: \"inherit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2030,\n                columnNumber: 19\n              }, this) : \"Chụp & Nhận diện\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2023,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: [isCameraReady && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: showLandmark ? \"success\" : \"info\",\n                  onClick: toggleLandmarkDetection,\n                  sx: {\n                    mr: 1\n                  },\n                  children: showLandmark ? \"Tắt Landmark\" : \"Hiện Landmark\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2039,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: isAutoMode ? \"error\" : \"primary\",\n                  onClick: () => {\n                    // Dừng tự động\n                    if (intervalId) {\n                      clearInterval(intervalId);\n                      setIntervalId(null);\n                    }\n                    setIsAutoMode(false);\n                    enqueueSnackbar(\"Đã tắt chế độ tự động điểm danh\", {\n                      variant: \"info\"\n                    });\n                  },\n                  sx: {\n                    mr: 1\n                  },\n                  children: isAutoMode ? \"Tắt tự động\" : \"Bật tự động\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2048,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: completeSession,\n                startIcon: /*#__PURE__*/_jsxDEV(Save, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2073,\n                  columnNumber: 30\n                }, this),\n                disabled: (sessionInfo === null || sessionInfo === void 0 ? void 0 : sessionInfo.status) === \"completed\",\n                children: \"K\\u1EBFt th\\xFAc phi\\xEAn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2069,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2036,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2022,\n            columnNumber: 13\n          }, this), recognizedStudents.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n            mt: 2,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: [\"\\u0110\\xE3 nh\\u1EADn di\\u1EC7n (\", recognizedStudents.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2083,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 1,\n              children: recognizedStudents.map((student, index) => /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                sm: 4,\n                children: /*#__PURE__*/_jsxDEV(Paper, {\n                  elevation: 2,\n                  sx: {\n                    p: 1,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    noWrap: true,\n                    children: student.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2098,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    color: \"textSecondary\",\n                    children: [Math.round(student.confidence * 100), \"% match\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2101,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    variant: \"outlined\",\n                    color: \"primary\",\n                    sx: {\n                      mt: 1\n                    },\n                    onClick: () => handleMarkAttendance(student.studentId, student.confidence),\n                    children: [/*#__PURE__*/_jsxDEV(Check, {\n                      fontSize: \"small\",\n                      sx: {\n                        mr: 0.5\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2116,\n                      columnNumber: 27\n                    }, this), \"\\u0110i\\u1EC3m danh\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2104,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2089,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2088,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2086,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2082,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1795,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1794,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            mb: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              mb: 2,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: [\"C\\xF3 m\\u1EB7t (\", attendanceLogs.filter(log => log.status === \"present\").length, \"/\", classInfo === null || classInfo === void 0 ? void 0 : classInfo.students.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2137,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"small\",\n                onClick: refreshAttendanceLogs,\n                children: /*#__PURE__*/_jsxDEV(Refresh, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2146,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2145,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              dense: true,\n              children: [attendanceLogs.filter(log => log.status === \"present\").sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp)).map(log => /*#__PURE__*/_jsxDEV(ListItem, {\n                secondaryAction: /*#__PURE__*/_jsxDEV(Chip, {\n                  size: \"small\",\n                  icon: log.recognized ? /*#__PURE__*/_jsxDEV(VerifiedUser, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2162,\n                    columnNumber: 31\n                  }, this) : null,\n                  label: log.recognized ? \"Tự động\" : \"Thủ công\",\n                  color: log.recognized ? \"success\" : \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2158,\n                  columnNumber: 25\n                }, this),\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    alt: log.student_id.full_name,\n                    src: log.student_id.avatar_url\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2171,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2170,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: log.student_id.full_name,\n                  secondary: `${new Date(log.timestamp).toLocaleTimeString(\"vi-VN\")}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2176,\n                  columnNumber: 23\n                }, this)]\n              }, log._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2155,\n                columnNumber: 21\n              }, this)), attendanceLogs.filter(log => log.status === \"present\").length === 0 && /*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: \"Ch\\u01B0a c\\xF3 sinh vi\\xEAn n\\xE0o \\u0111i\\u1EC3m danh\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2188,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2187,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2150,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: [\"V\\u1EAFng m\\u1EB7t (\", absentStudents.length, \"/\", classInfo === null || classInfo === void 0 ? void 0 : classInfo.students.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              dense: true,\n              children: [absentStudents.map(student => /*#__PURE__*/_jsxDEV(ListItem, {\n                secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n                  edge: \"end\",\n                  onClick: () => openManualAttendanceDialog(student),\n                  children: /*#__PURE__*/_jsxDEV(Edit, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2210,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2206,\n                  columnNumber: 23\n                }, this),\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    alt: student.full_name,\n                    src: student.avatar_url\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2215,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2214,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: student.full_name,\n                  secondary: student.student_code\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2220,\n                  columnNumber: 21\n                }, this)]\n              }, student._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2203,\n                columnNumber: 19\n              }, this)), absentStudents.length === 0 && /*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: \"Kh\\xF4ng c\\xF3 sinh vi\\xEAn n\\xE0o v\\u1EAFng m\\u1EB7t\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2229,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2228,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2201,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2196,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1793,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: manualDialogOpen,\n      onClose: handleManualDialogClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"\\u0110i\\u1EC3m danh th\\u1EE7 c\\xF4ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: [selectedStudent === null || selectedStudent === void 0 ? void 0 : selectedStudent.full_name, \" (\", selectedStudent === null || selectedStudent === void 0 ? void 0 : selectedStudent.student_code, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            margin: \"normal\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Tr\\u1EA1ng th\\xE1i\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              name: \"status\",\n              value: manualAttendanceData.status,\n              onChange: handleManualAttendanceChange,\n              label: \"Tr\\u1EA1ng th\\xE1i\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"present\",\n                children: \"C\\xF3 m\\u1EB7t\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2255,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"absent\",\n                children: \"V\\u1EAFng m\\u1EB7t\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2256,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"late\",\n                children: \"\\u0110i tr\\u1EC5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2257,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"early_leave\",\n                children: \"V\\u1EC1 s\\u1EDBm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2258,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2249,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            margin: \"normal\",\n            name: \"note\",\n            label: \"Ghi ch\\xFA\",\n            value: manualAttendanceData.note,\n            onChange: handleManualAttendanceChange,\n            multiline: true,\n            rows: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2262,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2242,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleManualDialogClose,\n          children: \"H\\u1EE7y\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleManualAttendanceSubmit,\n          variant: \"contained\",\n          children: \"X\\xE1c nh\\u1EADn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2239,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1784,\n    columnNumber: 5\n  }, this);\n};\n_s(AttendancePage, \"Xg9t9ghvWjubMUq4UK2NxGff3eQ=\", false, function () {\n  return [useParams, useNavigate, useDispatch, useSnackbar, useSelector, useSelector];\n});\n_c = AttendancePage;\nexport default AttendancePage;\nvar _c;\n$RefreshReg$(_c, \"AttendancePage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","useDispatch","useSelector","useSnackbar","Box","Typography","Card","CardContent","Grid","Paper","Button","Divider","CircularProgress","List","ListItem","ListItemAvatar","ListItemText","Avatar","Chip","Dialog","DialogTitle","DialogContent","DialogActions","TextField","FormControl","InputLabel","Select","MenuItem","IconButton","Alert","CameraAlt","Check","Close","Edit","Refresh","Save","VerifiedUser","HourglassEmpty","ArrowBack","Webcam","faceapi","getClassFaceFeatures","verifyAttendance","manualAttendance","setModelLoaded","setCameraReady","setDetectedFaces","setRecognizedStudents","clearRecognitionState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","process","env","REACT_APP_API_URL","AttendancePage","_s","classId","sessionId","navigate","dispatch","enqueueSnackbar","webcamRef","canvasRef","videoRef","intervalId","setIntervalId","showLandmark","setShowLandmark","landmarkIntervalId","setLandmarkIntervalId","cameraMode","setCameraMode","token","state","auth","isModelLoaded","isCameraReady","detectedFaces","recognizedStudents","classStudents","isProcessing","error","faceRecognition","classInfo","setClassInfo","sessionInfo","setSessionInfo","attendanceLogs","setAttendanceLogs","isLoading","setIsLoading","isRecognizing","setIsRecognizing","isAutoMode","setIsAutoMode","selectedStudent","setSelectedStudent","manualDialogOpen","setManualDialogOpen","manualAttendanceData","setManualAttendanceData","status","note","RECOGNITION_THRESHOLD","DETECTION_THRESHOLD","CONFIDENCE_THRESHOLD","AUTO_DETECT_INTERVAL","ENABLE_DEBUG_LOGS","cameraRetryCount","setCameraRetryCount","lastDetectionTime","setLastDetectionTime","landmarkDetectionInterval","setLandmarkDetectionInterval","loadInitialData","classPromise","get","headers","Authorization","sessionPromise","logsPromise","classResponse","sessionResponse","logsResponse","Promise","all","data","loadModelsPromise","loadFaceRecognitionModels","resolve","console","log","faceDataResponse","faceFeatureResult","unwrap","JSON","stringify","studentsData","Array","isArray","length","students","validDescriptorsCount","invalidDescriptorsCount","forEach","student","full_name","_id","faceFeatures","hasDescriptors","descriptors","validDescriptorsInStudent","group","groupIndex","descriptor","descIndex","hasOldDescriptors","faceDescriptors","flatDescriptors","validOldDescriptors","filter","desc","foundArrays","Object","keys","key","value","push","potentialDescriptors","arr","variant","autoHideDuration","apiError","_apiError$response","response","message","Date","now","clearInterval","current","video","srcObject","tracks","getTracks","track","stop","initDirectCamera","nets","ssdMobilenetv1","isLoaded","modelLoaded","constraints","width","ideal","min","height","facingMode","frameRate","audio","stream","navigator","mediaDevices","getUserMedia","id","onloadedmetadata","play","catch","err","setTimeout","startLandmarkDetection","altStream","altErr","setInterval","handleDetectFaces","stopLandmarkDetection","MODEL_URL","modelPromises","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","modelStatuses","every","ensureCameraIsWorking","_webcamRef$current","videoElement","readyState","prev","landmarkOnly","_webcamRef$current2","videoWidth","videoHeight","canvasElement","displaySize","matchDimensions","detections","detectAllFaces","TinyFaceDetectorOptions","scoreThreshold","inputSize","withFaceLandmarks","finalDetections","withFaceDescriptors","SsdMobilenetv1Options","minConfidence","ctx","getContext","clearRect","det","detection","box","_x","_y","resizedDetections","resizeResults","_box","landmarks","positions","points","_width","_height","strokeStyle","lineWidth","strokeRect","fillStyle","font","fillText","strokeText","i","x","y","beginPath","arc","Math","PI","fill","handleFaceDetection","openManualAttendanceDialog","handleManualDialogClose","handleManualAttendanceChange","e","target","name","handleManualAttendanceSubmit","result","studentId","updatedLogs","student_id","markAttendance","faceDescriptor","confidence","imageBase64","find","s","completeSession","put","refreshAttendanceLogs","captureAndRecognize","_webcamRef$current3","getScreenshot","matchResults","studentDescriptors","substring","flattenAndFind","depth","results","item","val","foundDescriptors","some","d","bestMatch","distance","euclideanDistance","similarity","max","toFixed","studentCode","student_code","sort","a","b","filteredResults","r","topMatches","slice","matchDetails","map","m","join","topMatch","round","handleMarkAttendance","isAlreadyAttended","_webcamRef$current4","canvas","document","createElement","drawImage","toDataURL","toggleLandmarkDetection","newState","debugFaceFeatures","index","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","getAbsentStudents","presentStudentIds","includes","absentStudents","showStudentList","gutterBottom","class_name","color","session_number","date","toLocaleDateString","container","spacing","mt","xs","md","mb","label","sx","mr","onClick","elevation","position","overflow","ref","style","objectFit","autoPlay","playsInline","muted","screenshotFormat","videoConstraints","onUserMedia","onUserMediaError","top","left","zIndex","flexDirection","size","gap","severity","maxWidth","margin","paddingLeft","startIcon","disabled","sm","p","noWrap","fontSize","dense","timestamp","secondaryAction","icon","recognized","alt","src","avatar_url","primary","secondary","toLocaleTimeString","edge","open","onClose","fullWidth","onChange","multiline","rows","_c","$RefreshReg$"],"sources":["C:/Users/kasiz/Documents/Studying/FaceReg/frontend/src/pages/teacher/AttendancePage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useSnackbar } from \"notistack\";\nimport {\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  Grid,\n  Paper,\n  Button,\n  Divider,\n  CircularProgress,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  Chip,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  IconButton,\n  Alert,\n} from \"@mui/material\";\nimport {\n  CameraAlt,\n  Check,\n  Close,\n  Edit,\n  Refresh,\n  Save,\n  VerifiedUser,\n  HourglassEmpty,\n  ArrowBack,\n} from \"@mui/icons-material\";\nimport Webcam from \"react-webcam\";\nimport * as faceapi from \"face-api.js\";\nimport {\n  getClassFaceFeatures,\n  verifyAttendance,\n  manualAttendance,\n  setModelLoaded,\n  setCameraReady,\n  setDetectedFaces,\n  setRecognizedStudents,\n  clearRecognitionState,\n} from \"../../redux/slices/faceRecognitionSlice\";\nimport axios from \"axios\";\n\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\n\nconst AttendancePage = () => {\n  const { classId, sessionId } = useParams();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const videoRef = useRef(null);\n  const [intervalId, setIntervalId] = useState(null);\n  const [showLandmark, setShowLandmark] = useState(true);\n  const [landmarkIntervalId, setLandmarkIntervalId] = useState(null);\n  const [cameraMode, setCameraMode] = useState(\"face_recognition\");\n\n  const { token } = useSelector((state) => state.auth);\n  const {\n    isModelLoaded,\n    isCameraReady,\n    detectedFaces,\n    recognizedStudents,\n    classStudents,\n    isProcessing,\n    error,\n  } = useSelector((state) => state.faceRecognition);\n\n  const [classInfo, setClassInfo] = useState(null);\n  const [sessionInfo, setSessionInfo] = useState(null);\n  const [attendanceLogs, setAttendanceLogs] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isRecognizing, setIsRecognizing] = useState(false);\n  const [isAutoMode, setIsAutoMode] = useState(false);\n  const [selectedStudent, setSelectedStudent] = useState(null);\n  const [manualDialogOpen, setManualDialogOpen] = useState(false);\n  const [manualAttendanceData, setManualAttendanceData] = useState({\n    status: \"present\",\n    note: \"\",\n  });\n\n  // Các hằng số cấu hình\n  const RECOGNITION_THRESHOLD = 0.4; // Giảm ngưỡng nhận diện để dễ nhận diện hơn\n  const DETECTION_THRESHOLD = 0.3; // Giảm ngưỡng phát hiện khuôn mặt\n  const CONFIDENCE_THRESHOLD = 0.5; // Giảm ngưỡng độ tin cậy để điểm danh\n  const AUTO_DETECT_INTERVAL = 1000; // Thời gian giữa các lần phát hiện (ms)\n  const ENABLE_DEBUG_LOGS = true; // Bật/tắt log gỡ lỗi\n\n  // Thêm state mới để theo dõi số lần thử lại camera\n  const [cameraRetryCount, setCameraRetryCount] = useState(0);\n  const [lastDetectionTime, setLastDetectionTime] = useState(null);\n\n  // Thêm state theo dõi interval phát hiện landmarks\n  const [landmarkDetectionInterval, setLandmarkDetectionInterval] =\n    useState(null);\n\n  // Load class info, session info và models\n  useEffect(() => {\n    const loadInitialData = async () => {\n      try {\n        setIsLoading(true);\n\n        // Lấy thông tin lớp học\n        const classPromise = axios.get(\n          `${API_URL}/classes/teaching/${classId}`,\n          {\n            headers: { Authorization: `Bearer ${token}` },\n          }\n        );\n\n        // Lấy thông tin phiên điểm danh\n        const sessionPromise = axios.get(\n          `${API_URL}/attendance/sessions/${sessionId}`,\n          {\n            headers: { Authorization: `Bearer ${token}` },\n          }\n        );\n\n        // Lấy danh sách điểm danh\n        const logsPromise = axios.get(\n          `${API_URL}/attendance/logs/${sessionId}`,\n          {\n            headers: { Authorization: `Bearer ${token}` },\n          }\n        );\n\n        // Chờ tất cả API calls hoàn thành\n        const [classResponse, sessionResponse, logsResponse] =\n          await Promise.all([classPromise, sessionPromise, logsPromise]);\n\n        setClassInfo(classResponse.data.data);\n        setSessionInfo(sessionResponse.data.data);\n        setAttendanceLogs(logsResponse.data.data);\n\n        // Đã tải xong dữ liệu cơ bản\n        setIsLoading(false);\n\n        // Chỉ tải mô hình và lấy đặc trưng khuôn mặt nếu phiên điểm danh chưa hoàn thành\n        if (sessionResponse.data.data.status !== \"completed\") {\n          // Bắt đầu tải dữ liệu và models nếu phiên chưa hoàn thành\n          const loadModelsPromise = !isModelLoaded\n            ? loadFaceRecognitionModels()\n            : Promise.resolve(true);\n\n          // Lấy đặc trưng khuôn mặt của sinh viên trong lớp\n          console.log(\n            \"[DEBUG] Bắt đầu lấy đặc trưng khuôn mặt của sinh viên, classId:\",\n            classId\n          );\n\n          try {\n            // Gọi API trực tiếp để kiểm tra\n            const faceDataResponse = await axios.get(\n              `${API_URL}/face-recognition/class-features/${classId}`,\n              {\n                headers: { Authorization: `Bearer ${token}` },\n              }\n            );\n\n            console.log(\"[DEBUG] API response raw:\", faceDataResponse);\n            console.log(\"[DEBUG] API response data:\", faceDataResponse.data);\n\n            // Vẫn sử dụng redux dispatch để đảm bảo tính nhất quán\n            const faceFeatureResult = await dispatch(\n              getClassFaceFeatures(classId)\n            ).unwrap();\n\n            // Log toàn bộ result để debug\n            console.log(\"[DEBUG] Redux unwrapped result:\", faceFeatureResult);\n\n            // Kiểm tra xem có dữ liệu trả về không\n            if (faceFeatureResult) {\n              // Log dữ liệu để debug\n              console.log(\"[DEBUG] Bắt đầu phân tích dữ liệu khuôn mặt\");\n              console.log(\n                \"[DEBUG] faceFeatureResult structure:\",\n                JSON.stringify(faceFeatureResult, null, 2)\n              );\n\n              let studentsData = null;\n\n              // Kiểm tra các cấu trúc dữ liệu có thể có\n              if (Array.isArray(faceFeatureResult)) {\n                studentsData = faceFeatureResult;\n                console.log(\n                  `[DEBUG] Nhận được dữ liệu khuôn mặt dạng mảng: ${studentsData.length} sinh viên`\n                );\n              } else if (\n                faceFeatureResult.data &&\n                Array.isArray(faceFeatureResult.data)\n              ) {\n                studentsData = faceFeatureResult.data;\n                console.log(\n                  `[DEBUG] Nhận được dữ liệu khuôn mặt từ faceFeatureResult.data: ${studentsData.length} sinh viên`\n                );\n              } else if (\n                faceFeatureResult.students &&\n                Array.isArray(faceFeatureResult.students)\n              ) {\n                studentsData = faceFeatureResult.students;\n                console.log(\n                  `[DEBUG] Nhận được dữ liệu khuôn mặt từ faceFeatureResult.students: ${studentsData.length} sinh viên`\n                );\n              }\n\n              if (studentsData && studentsData.length > 0) {\n                console.log(\n                  `[DEBUG] Phân tích dữ liệu khuôn mặt của ${studentsData.length} sinh viên`\n                );\n\n                // Kiểm tra chi tiết dữ liệu khuôn mặt\n                let validDescriptorsCount = 0;\n                let invalidDescriptorsCount = 0;\n\n                studentsData.forEach((student) => {\n                  console.log(\n                    `[DEBUG] Kiểm tra sinh viên: ${\n                      student.full_name || \"Unknown\"\n                    }, ID: ${student._id}`\n                  );\n                  console.log(`[DEBUG] Cấu trúc dữ liệu sinh viên:`, student);\n\n                  // Kiểm tra nếu có faceFeatures\n                  if (student.faceFeatures) {\n                    console.log(`[DEBUG] Sinh viên có dữ liệu faceFeatures`);\n\n                    // Kiểm tra nếu có descriptors\n                    const hasDescriptors =\n                      student.faceFeatures &&\n                      student.faceFeatures.descriptors &&\n                      Array.isArray(student.faceFeatures.descriptors) &&\n                      student.faceFeatures.descriptors.length > 0;\n\n                    if (hasDescriptors) {\n                      console.log(\n                        `[DEBUG] Sinh viên có ${student.faceFeatures.descriptors.length} nhóm descriptors`\n                      );\n\n                      // Đếm số descriptor hợp lệ\n                      let validDescriptorsInStudent = 0;\n\n                      student.faceFeatures.descriptors.forEach(\n                        (group, groupIndex) => {\n                          if (Array.isArray(group)) {\n                            group.forEach((descriptor, descIndex) => {\n                              if (\n                                Array.isArray(descriptor) &&\n                                descriptor.length === 128\n                              ) {\n                                validDescriptorsInStudent++;\n                              }\n                            });\n                          }\n                        }\n                      );\n\n                      if (validDescriptorsInStudent > 0) {\n                        validDescriptorsCount++;\n                        console.log(\n                          `[DEBUG] Sinh viên ${student.full_name} có ${validDescriptorsInStudent} descriptor hợp lệ`\n                        );\n                      } else {\n                        invalidDescriptorsCount++;\n                        console.log(\n                          `[DEBUG] Sinh viên ${student.full_name} không có descriptor hợp lệ`\n                        );\n                      }\n                    } else {\n                      invalidDescriptorsCount++;\n                      console.log(\n                        `[DEBUG] Sinh viên ${student.full_name} không có descriptors`\n                      );\n                    }\n                  } else {\n                    // Kiểm tra nếu có faceDescriptors (cấu trúc cũ)\n                    const hasOldDescriptors =\n                      student.faceDescriptors &&\n                      Array.isArray(student.faceDescriptors) &&\n                      student.faceDescriptors.length > 0;\n\n                    if (hasOldDescriptors) {\n                      console.log(\n                        `[DEBUG] Sinh viên có ${student.faceDescriptors.length} descriptors (dạng cũ)`\n                      );\n                      console.log(\n                        `[DEBUG] Chi tiết faceDescriptors:`,\n                        JSON.stringify(student.faceDescriptors, null, 2)\n                      );\n\n                      // Thử các cách khác nhau để lấy descriptor\n                      if (typeof student.faceDescriptors[0] === \"object\") {\n                        // Nếu là object (không phải mảng), có thể nó là object có chứa descriptor\n                        console.log(\n                          `[DEBUG] Descriptor là object:`,\n                          student.faceDescriptors[0]\n                        );\n\n                        // Kiểm tra nếu descriptor nằm trong object.descriptors hoặc object.0\n                        if (\n                          student.faceDescriptors[0].descriptors &&\n                          Array.isArray(student.faceDescriptors[0].descriptors)\n                        ) {\n                          console.log(\n                            `[DEBUG] Tìm thấy descriptors trong object.descriptors`\n                          );\n                          // Sử dụng descriptors trong object\n                          const flatDescriptors =\n                            student.faceDescriptors[0].descriptors;\n\n                          const validOldDescriptors = flatDescriptors.filter(\n                            (desc) => Array.isArray(desc) && desc.length === 128\n                          ).length;\n\n                          if (validOldDescriptors > 0) {\n                            validDescriptorsCount++;\n                            console.log(\n                              `[DEBUG] Sinh viên ${student.full_name} có ${validOldDescriptors} descriptor hợp lệ trong object.descriptors`\n                            );\n                          }\n                        } else {\n                          // Duyệt tất cả các thuộc tính của object để tìm mảng\n                          const foundArrays = [];\n                          Object.keys(student.faceDescriptors[0]).forEach(\n                            (key) => {\n                              const value = student.faceDescriptors[0][key];\n                              if (Array.isArray(value)) {\n                                console.log(\n                                  `[DEBUG] Tìm thấy mảng trong thuộc tính ${key}, độ dài: ${value.length}`\n                                );\n                                foundArrays.push(value);\n                              }\n                            }\n                          );\n\n                          // Kiểm tra các mảng tìm được\n                          if (foundArrays.length > 0) {\n                            // Ưu tiên mảng có 128 phần tử\n                            const potentialDescriptors = foundArrays.filter(\n                              (arr) => arr.length === 128\n                            );\n                            if (potentialDescriptors.length > 0) {\n                              validDescriptorsCount++;\n                              console.log(\n                                `[DEBUG] Sinh viên ${student.full_name} có descriptor hợp lệ trong thuộc tính object`\n                              );\n                            }\n                          }\n                        }\n                      } else {\n                        // Xử lý thông thường\n                        const validOldDescriptors =\n                          student.faceDescriptors.filter(\n                            (desc) => Array.isArray(desc) && desc.length === 128\n                          ).length;\n\n                        if (validOldDescriptors > 0) {\n                          validDescriptorsCount++;\n                          console.log(\n                            `[DEBUG] Sinh viên ${student.full_name} có ${validOldDescriptors} descriptor hợp lệ (dạng cũ)`\n                          );\n                        } else {\n                          invalidDescriptorsCount++;\n                          console.log(\n                            `[DEBUG] Sinh viên ${student.full_name} không có descriptor hợp lệ (dạng cũ)`\n                          );\n                        }\n                      }\n                    } else {\n                      invalidDescriptorsCount++;\n                      console.log(\n                        `[DEBUG] Sinh viên ${student.full_name} không có dữ liệu khuôn mặt`\n                      );\n                    }\n                  }\n                });\n\n                console.log(\n                  `[DEBUG] Tổng hợp: ${validDescriptorsCount} sinh viên có descriptor hợp lệ, ${invalidDescriptorsCount} sinh viên không có`\n                );\n\n                if (validDescriptorsCount === 0) {\n                  enqueueSnackbar(\n                    \"Không có sinh viên nào có dữ liệu khuôn mặt, vui lòng cập nhật dữ liệu\",\n                    {\n                      variant: \"warning\",\n                      autoHideDuration: 8000,\n                    }\n                  );\n                }\n              } else {\n                console.log(\"[DEBUG] Không nhận được dữ liệu khuôn mặt từ API\");\n                enqueueSnackbar(\"Không thể tải dữ liệu nhận diện khuôn mặt\", {\n                  variant: \"error\",\n                });\n              }\n            } else {\n              console.log(\n                \"[DEBUG] Không nhận được dữ liệu khuôn mặt từ API (faceFeatureResult là null hoặc undefined)\"\n              );\n              enqueueSnackbar(\"Không thể tải dữ liệu nhận diện khuôn mặt\", {\n                variant: \"error\",\n              });\n            }\n          } catch (apiError) {\n            console.error(\n              \"[DEBUG] Lỗi khi gọi API lấy dữ liệu khuôn mặt:\",\n              apiError\n            );\n            console.log(\n              \"[DEBUG] API error details:\",\n              apiError.response?.data || apiError.message\n            );\n            enqueueSnackbar(\n              \"Lỗi khi lấy dữ liệu khuôn mặt. Vui lòng kiểm tra API endpoint.\",\n              {\n                variant: \"error\",\n              }\n            );\n          }\n\n          // Thiết lập thời gian phát hiện ban đầu\n          setLastDetectionTime(Date.now());\n        }\n      } catch (error) {\n        console.error(\"Lỗi khi tải dữ liệu:\", error);\n        enqueueSnackbar(\"Lỗi khi tải dữ liệu\", { variant: \"error\" });\n        setIsLoading(false);\n      }\n    };\n\n    loadInitialData();\n\n    // Clean up\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n\n      // Dừng landmark interval nếu đang chạy\n      if (landmarkIntervalId) {\n        clearInterval(landmarkIntervalId);\n      }\n\n      // Dừng camera stream nếu đang chạy\n      if (\n        webcamRef.current &&\n        webcamRef.current.video &&\n        webcamRef.current.video.srcObject\n      ) {\n        const tracks = webcamRef.current.video.srcObject.getTracks();\n        tracks.forEach((track) => track.stop());\n      }\n\n      if (videoRef.current && videoRef.current.srcObject) {\n        const tracks = videoRef.current.srcObject.getTracks();\n        tracks.forEach((track) => track.stop());\n      }\n\n      dispatch(clearRecognitionState());\n\n      // Reset các state theo dõi camera\n      setCameraRetryCount(0);\n      setLastDetectionTime(null);\n    };\n  }, [\n    classId,\n    sessionId,\n    token,\n    dispatch,\n    enqueueSnackbar,\n    isModelLoaded,\n    intervalId,\n    landmarkIntervalId,\n  ]);\n\n  // Hàm khởi tạo camera trực tiếp - nút duy nhất cho camera\n  const initDirectCamera = async () => {\n    try {\n      // Tải model nhận diện và đảm bảo model đã sẵn sàng\n      if (!isModelLoaded || !faceapi.nets.ssdMobilenetv1.isLoaded) {\n        enqueueSnackbar(\"Đang tải các mô hình nhận diện...\", {\n          variant: \"info\",\n        });\n        const modelLoaded = await loadFaceRecognitionModels();\n\n        if (!modelLoaded) {\n          enqueueSnackbar(\"Không thể tải mô hình nhận diện, vui lòng thử lại\", {\n            variant: \"error\",\n          });\n          return;\n        }\n      }\n\n      // Dừng stream cũ nếu có\n      if (\n        webcamRef.current &&\n        webcamRef.current.video &&\n        webcamRef.current.video.srcObject\n      ) {\n        const tracks = webcamRef.current.video.srcObject.getTracks();\n        tracks.forEach((track) => track.stop());\n      }\n\n      if (videoRef.current && videoRef.current.srcObject) {\n        const tracks = videoRef.current.srcObject.getTracks();\n        tracks.forEach((track) => track.stop());\n      }\n\n      // Truy cập camera trực tiếp thông qua MediaDevices API\n      try {\n        // Thêm tùy chọn camera với nhiều độ phân giải\n        const constraints = {\n          video: {\n            width: { ideal: 1280, min: 640 },\n            height: { ideal: 720, min: 480 },\n            facingMode: \"user\",\n            frameRate: { ideal: 30, min: 15 },\n          },\n          audio: false,\n        };\n\n        console.log(\n          \"[DEBUG] Đang yêu cầu truy cập camera với tùy chọn:\",\n          constraints\n        );\n\n        const stream = await navigator.mediaDevices.getUserMedia(constraints);\n\n        console.log(\"Đã nhận được stream camera trực tiếp\", stream.id);\n\n        // Nếu đang sử dụng webcam component\n        if (webcamRef.current && webcamRef.current.video) {\n          webcamRef.current.video.srcObject = stream;\n\n          // Kiểm tra stream đã hoạt động chưa\n          webcamRef.current.video.onloadedmetadata = () => {\n            webcamRef.current.video.play().catch((err) => {\n              console.error(\"Lỗi khi play video webcam:\", err);\n            });\n          };\n        }\n        // Hoặc nếu đang sử dụng video element\n        else if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n          videoRef.current.onloadedmetadata = () => {\n            videoRef.current\n              .play()\n              .catch((err) => console.error(\"Lỗi khi play video:\", err));\n          };\n        }\n\n        // Đánh dấu camera và model đã sẵn sàng\n        dispatch(setModelLoaded(true));\n        dispatch(setCameraReady(true));\n\n        // Khởi động thời gian phát hiện ban đầu\n        setLastDetectionTime(Date.now());\n\n        enqueueSnackbar(\"Đã kết nối camera thành công\", {\n          variant: \"success\",\n        });\n\n        // Bật hiển thị landmark sau khi camera khởi động\n        setTimeout(() => {\n          setShowLandmark(true);\n          startLandmarkDetection();\n        }, 1000);\n\n        // Đặt lại số lần thử camera\n        setCameraRetryCount(0);\n\n        return true;\n      } catch (err) {\n        console.error(\"Lỗi truy cập camera:\", err);\n        enqueueSnackbar(`Không thể truy cập camera: ${err.message}`, {\n          variant: \"error\",\n        });\n\n        // Thử phương án thay thế nếu camera mặt trước thất bại\n        if (cameraRetryCount < 2) {\n          try {\n            console.log(\"[DEBUG] Thử sử dụng camera phương án thay thế\");\n            const altStream = await navigator.mediaDevices.getUserMedia({\n              video: true, // Chỉ yêu cầu bất kỳ camera nào có sẵn\n              audio: false,\n            });\n\n            // Xử lý stream mới\n            if (webcamRef.current && webcamRef.current.video) {\n              webcamRef.current.video.srcObject = altStream;\n            } else if (videoRef.current) {\n              videoRef.current.srcObject = altStream;\n              videoRef.current.onloadedmetadata = () => videoRef.current.play();\n            }\n\n            dispatch(setCameraReady(true));\n            setLastDetectionTime(Date.now());\n            enqueueSnackbar(\"Đã kết nối camera thay thế\", {\n              variant: \"success\",\n            });\n            return true;\n          } catch (altErr) {\n            console.error(\"Không thể sử dụng camera thay thế:\", altErr);\n          }\n        }\n\n        return false;\n      }\n    } catch (err) {\n      console.error(\"Lỗi khi khởi tạo camera trực tiếp:\", err);\n      enqueueSnackbar(`Lỗi: ${err.message}`, { variant: \"error\" });\n      return false;\n    }\n  };\n\n  // Hàm bắt đầu phát hiện landmarks theo thời gian thực\n  const startLandmarkDetection = () => {\n    // Xóa interval cũ nếu có\n    if (landmarkDetectionInterval) {\n      clearInterval(landmarkDetectionInterval);\n    }\n\n    // Tạo interval mới để cập nhật landmarks mỗi 50ms\n    const intervalId = setInterval(() => {\n      if (cameraMode === \"face_recognition\" && showLandmark) {\n        handleDetectFaces(true);\n      }\n    }, 50);\n\n    setLandmarkDetectionInterval(intervalId);\n  };\n\n  // Hàm dừng phát hiện landmarks theo thời gian thực\n  const stopLandmarkDetection = () => {\n    if (landmarkDetectionInterval) {\n      clearInterval(landmarkDetectionInterval);\n      setLandmarkDetectionInterval(null);\n    }\n  };\n\n  // Cập nhật useEffect để bắt đầu và dừng phát hiện landmarks khi camera hoặc chế độ thay đổi\n  useEffect(() => {\n    if (cameraMode === \"face_recognition\" && showLandmark) {\n      startLandmarkDetection();\n    } else {\n      stopLandmarkDetection();\n    }\n\n    return () => {\n      stopLandmarkDetection();\n    };\n  }, [cameraMode, showLandmark]);\n\n  // Cập nhật useEffect cho việc toggle showLandmark\n  useEffect(() => {\n    if (showLandmark && cameraMode === \"face_recognition\") {\n      startLandmarkDetection();\n    } else {\n      stopLandmarkDetection();\n    }\n  }, [showLandmark]);\n\n  // Load các mô hình nhận diện khuôn mặt\n  const loadFaceRecognitionModels = async () => {\n    try {\n      const MODEL_URL = \"/models\";\n      console.log(\"Bắt đầu tải models từ:\", MODEL_URL);\n\n      // Thêm SsdMobilenetv1 vào danh sách models cần tải\n      const modelPromises = [\n        faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL),\n        faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),\n        faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL),\n        faceapi.nets.ssdMobilenetv1.loadFromUri(MODEL_URL), // Thêm model SSD MobileNet\n      ];\n\n      // Kiểm tra xem các models đã được tải chưa\n      const modelStatuses = [\n        faceapi.nets.tinyFaceDetector.isLoaded,\n        faceapi.nets.faceLandmark68Net.isLoaded,\n        faceapi.nets.faceRecognitionNet.isLoaded,\n        faceapi.nets.ssdMobilenetv1.isLoaded, // Kiểm tra SSD MobileNet đã tải chưa\n      ];\n\n      if (modelStatuses.every((status) => status)) {\n        console.log(\"Các models đã được tải từ trước\");\n        dispatch(setModelLoaded(true));\n        return true;\n      }\n\n      await Promise.all(modelPromises);\n\n      console.log(\"Đã tải xong models thành công\");\n      dispatch(setModelLoaded(true));\n      enqueueSnackbar(\"Tải mô hình nhận diện thành công\", {\n        variant: \"success\",\n      });\n      return true;\n    } catch (error) {\n      console.error(\"Lỗi khi tải mô hình:\", error);\n      enqueueSnackbar(\"Không thể tải mô hình nhận diện\", { variant: \"error\" });\n      return false;\n    }\n  };\n\n  // Hàm kiểm tra và đảm bảo camera hoạt động\n  const ensureCameraIsWorking = () => {\n    // Kiểm tra nếu camera chưa hoạt động và đã thử khởi động\n    if (!isCameraReady && cameraRetryCount === 0) {\n      console.log(\"[DEBUG] Camera chưa sẵn sàng, thử khởi động\");\n      setCameraRetryCount(1);\n      initDirectCamera();\n      return false;\n    }\n\n    // Kiểm tra stream của camera\n    const videoElement = isAutoMode\n      ? videoRef.current\n      : webcamRef.current?.video;\n\n    if (\n      !videoElement ||\n      !videoElement.srcObject ||\n      videoElement.readyState !== 4\n    ) {\n      console.log(\n        \"[DEBUG] Video stream không hoạt động, thử khởi động lại camera\"\n      );\n      if (cameraRetryCount < 3) {\n        setCameraRetryCount((prev) => prev + 1);\n        initDirectCamera();\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  // Xử lý phát hiện khuôn mặt\n  const handleDetectFaces = async (landmarkOnly = false) => {\n    if (cameraMode !== \"face_recognition\" || !faceapi || !canvasRef.current)\n      return [];\n\n    // Xác định video element hiện tại (từ webcam hoặc video trực tiếp)\n    const videoElement = isAutoMode\n      ? videoRef.current\n      : webcamRef.current?.video;\n\n    // Kiểm tra kỹ lưỡng video element\n    if (!videoElement) {\n      console.error(\"Không tìm thấy video element\");\n      return [];\n    }\n\n    // Kiểm tra video đã tải và sẵn sàng chưa\n    if (videoElement.readyState !== 4) {\n      console.log(\"Video chưa sẵn sàng, readyState =\", videoElement.readyState);\n      return [];\n    }\n\n    // Kiểm tra video có kích thước hợp lệ không\n    if (videoElement.videoWidth === 0 || videoElement.videoHeight === 0) {\n      console.error(\n        \"Video kích thước không hợp lệ:\",\n        videoElement.videoWidth,\n        \"x\",\n        videoElement.videoHeight\n      );\n      return [];\n    }\n\n    const canvasElement = canvasRef.current;\n\n    // Đặt kích thước canvas để khớp với video thực tế (không phải kích thước hiển thị)\n    const displaySize = {\n      width: videoElement.videoWidth,\n      height: videoElement.videoHeight,\n    };\n\n    // Cập nhật kích thước thực của canvas\n    faceapi.matchDimensions(canvasElement, displaySize);\n\n    try {\n      // Phát hiện khuôn mặt với landmarks\n      let detections = [];\n\n      try {\n        detections = await faceapi\n          .detectAllFaces(\n            videoElement,\n            new faceapi.TinyFaceDetectorOptions({\n              scoreThreshold: 0.3,\n              inputSize: 320, // Thêm kích thước đầu vào rõ ràng\n            })\n          )\n          .withFaceLandmarks();\n\n        console.log(\n          \"[DEBUG] Phát hiện khuôn mặt với landmarks:\",\n          detections.length\n        );\n      } catch (error) {\n        console.error(\"Lỗi khi phát hiện khuôn mặt với landmarks:\", error);\n        return [];\n      }\n\n      // Thêm descriptors nếu không phải chỉ vẽ landmarks\n      let finalDetections = detections;\n\n      if (!landmarkOnly && detections.length > 0) {\n        // Sử dụng cả hai phương pháp phát hiện để tăng khả năng nhận diện\n        try {\n          // Sử dụng TinyFaceDetector có kích thước rõ ràng\n          finalDetections = await faceapi\n            .detectAllFaces(\n              videoElement,\n              new faceapi.TinyFaceDetectorOptions({\n                scoreThreshold: 0.3,\n                inputSize: 320,\n              })\n            )\n            .withFaceLandmarks()\n            .withFaceDescriptors();\n\n          console.log(\n            \"[DEBUG] Phát hiện với TinyFaceDetector:\",\n            finalDetections.length\n          );\n\n          // Nếu không có kết quả, thử sử dụng SSD MobileNet\n          if (\n            (finalDetections.length === 0 || !finalDetections[0].descriptor) &&\n            faceapi.nets.ssdMobilenetv1.isLoaded\n          ) {\n            finalDetections = await faceapi\n              .detectAllFaces(\n                videoElement,\n                new faceapi.SsdMobilenetv1Options({\n                  minConfidence: 0.3,\n                })\n              )\n              .withFaceLandmarks()\n              .withFaceDescriptors();\n\n            console.log(\n              \"[DEBUG] Phát hiện với SsdMobilenetv1:\",\n              finalDetections.length\n            );\n          }\n        } catch (error) {\n          console.error(\"Lỗi khi lấy mô tả khuôn mặt:\", error);\n          // Quay lại chỉ sử dụng landmarks nếu có lỗi\n          finalDetections = detections;\n        }\n      }\n\n      // Kiểm tra xem finalDetections có hợp lệ không\n      if (!finalDetections || finalDetections.length === 0) {\n        console.log(\"[DEBUG] Không phát hiện được khuôn mặt\");\n        // Xóa canvas\n        const ctx = canvasElement.getContext(\"2d\");\n        ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n        return [];\n      }\n\n      // Đảm bảo mỗi detection có box hợp lệ\n      finalDetections = finalDetections.filter((det) => {\n        if (\n          !det.detection ||\n          !det.detection.box ||\n          det.detection.box._x === null ||\n          det.detection.box._y === null\n        ) {\n          console.log(\"[DEBUG] Bỏ qua detection có box không hợp lệ\");\n          return false;\n        }\n        return true;\n      });\n\n      if (finalDetections.length === 0) {\n        console.log(\n          \"[DEBUG] Không còn detection nào sau khi lọc box không hợp lệ\"\n        );\n        const ctx = canvasElement.getContext(\"2d\");\n        ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n        return [];\n      }\n\n      // Điều chỉnh kết quả theo kích thước hiển thị\n      const resizedDetections = faceapi.resizeResults(finalDetections, {\n        width: canvasElement.width,\n        height: canvasElement.height,\n      });\n\n      // Xóa canvas trước khi vẽ mới\n      const ctx = canvasElement.getContext(\"2d\");\n      ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n\n      // Vẽ các landmarks nếu showLandmark được bật\n      if (showLandmark && resizedDetections.length > 0) {\n        resizedDetections.forEach((detection) => {\n          // Kiểm tra detection có hợp lệ không\n          if (!detection.detection || !detection.detection._box) {\n            return;\n          }\n\n          const landmarks = detection.landmarks;\n          if (!landmarks || !landmarks.positions) {\n            return;\n          }\n\n          const points = landmarks.positions;\n\n          // Vẽ hộp giới hạn khuôn mặt\n          const { _box: box } = detection.detection;\n          if (\n            box &&\n            box._x != null &&\n            box._y != null &&\n            box._width != null &&\n            box._height != null\n          ) {\n            ctx.strokeStyle = \"#00FF00\";\n            ctx.lineWidth = 2;\n            ctx.strokeRect(box._x, box._y, box._width, box._height);\n\n            // Hiển thị thông tin bên dưới hộp giới hạn\n            ctx.fillStyle = \"#FFFFFF\";\n            ctx.font = \"16px Arial\";\n            ctx.fillText(\n              \"Đã phát hiện khuôn mặt\",\n              box._x,\n              box._y + box._height + 20\n            );\n\n            // Tạo viền cho chữ\n            ctx.strokeStyle = \"#000000\";\n            ctx.lineWidth = 0.5;\n            ctx.strokeText(\n              \"Đã phát hiện khuôn mặt\",\n              box._x,\n              box._y + box._height + 20\n            );\n          }\n\n          // Vẽ các điểm landmarks chỉ khi có đủ điểm\n          if (points && points.length >= 68) {\n            // Mắt trái (đỏ)\n            ctx.fillStyle = \"#FF0000\";\n            for (let i = 36; i <= 41; i++) {\n              if (points[i] && points[i].x != null && points[i].y != null) {\n                ctx.beginPath();\n                ctx.arc(points[i].x, points[i].y, 3, 0, 2 * Math.PI);\n                ctx.fill();\n              }\n            }\n\n            // Mắt phải (xanh dương)\n            ctx.fillStyle = \"#0000FF\";\n            for (let i = 42; i <= 47; i++) {\n              if (points[i] && points[i].x != null && points[i].y != null) {\n                ctx.beginPath();\n                ctx.arc(points[i].x, points[i].y, 3, 0, 2 * Math.PI);\n                ctx.fill();\n              }\n            }\n\n            // Mũi (vàng)\n            ctx.fillStyle = \"#FFFF00\";\n            for (let i = 27; i <= 35; i++) {\n              if (points[i] && points[i].x != null && points[i].y != null) {\n                ctx.beginPath();\n                ctx.arc(points[i].x, points[i].y, 3, 0, 2 * Math.PI);\n                ctx.fill();\n              }\n            }\n\n            // Miệng (tím)\n            ctx.fillStyle = \"#FF00FF\";\n            for (let i = 48; i <= 67; i++) {\n              if (points[i] && points[i].x != null && points[i].y != null) {\n                ctx.beginPath();\n                ctx.arc(points[i].x, points[i].y, 3, 0, 2 * Math.PI);\n                ctx.fill();\n              }\n            }\n\n            // Viền khuôn mặt (xanh lá)\n            ctx.fillStyle = \"#00FF00\";\n            for (let i = 0; i <= 26; i++) {\n              if (points[i] && points[i].x != null && points[i].y != null) {\n                ctx.beginPath();\n                ctx.arc(points[i].x, points[i].y, 3, 0, 2 * Math.PI);\n                ctx.fill();\n              }\n            }\n          }\n        });\n      }\n\n      // Chỉ xử lý nhận diện nếu không phải chỉ vẽ landmarks\n      if (!landmarkOnly) {\n        handleFaceDetection(resizedDetections);\n      }\n\n      return resizedDetections;\n    } catch (error) {\n      console.error(\"Lỗi khi phát hiện khuôn mặt:\", error);\n      // Xóa canvas nếu có lỗi\n      if (canvasRef.current) {\n        const ctx = canvasRef.current.getContext(\"2d\");\n        ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      }\n      return [];\n    }\n  };\n\n  // Xử lý phát hiện khuôn mặt\n  const handleFaceDetection = async (detections) => {\n    // Cập nhật state\n    dispatch(setDetectedFaces(detections));\n\n    try {\n      // Cập nhật thời gian phát hiện\n      setLastDetectionTime(Date.now());\n\n      // Nếu không có khuôn mặt nào được phát hiện, dừng lại\n      if (!detections || detections.length === 0) {\n        if (ENABLE_DEBUG_LOGS) {\n          console.log(\"[DEBUG] Không phát hiện khuôn mặt\");\n        }\n        return;\n      }\n\n      if (ENABLE_DEBUG_LOGS) {\n        console.log(`[DEBUG] Đã phát hiện ${detections.length} khuôn mặt`);\n      }\n\n      // Xử lý nhận diện khuôn mặt nếu có sinh viên\n      if (classStudents && classStudents.length > 0) {\n        // Xử lý nhận diện khuôn mặt sẽ được thêm sau\n      }\n    } catch (error) {\n      console.error(\"Lỗi khi xử lý khuôn mặt:\", error);\n    }\n  };\n\n  // Điểm danh thủ công\n  const openManualAttendanceDialog = (student) => {\n    setSelectedStudent(student);\n    setManualAttendanceData({\n      status: \"present\",\n      note: \"\",\n    });\n    setManualDialogOpen(true);\n  };\n\n  const handleManualDialogClose = () => {\n    setManualDialogOpen(false);\n  };\n\n  const handleManualAttendanceChange = (e) => {\n    setManualAttendanceData({\n      ...manualAttendanceData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleManualAttendanceSubmit = async () => {\n    if (!selectedStudent) return;\n\n    try {\n      const result = await dispatch(\n        manualAttendance({\n          sessionId,\n          studentId: selectedStudent._id,\n          status: manualAttendanceData.status,\n          note: manualAttendanceData.note,\n        })\n      ).unwrap();\n\n      // Cập nhật logs điểm danh\n      if (result && result.data) {\n        const updatedLogs = attendanceLogs.filter(\n          (log) => log.student_id._id !== selectedStudent._id\n        );\n\n        updatedLogs.push({\n          ...result.data,\n          student_id: selectedStudent,\n        });\n\n        setAttendanceLogs(updatedLogs);\n      }\n\n      enqueueSnackbar(\"Điểm danh thủ công thành công\", { variant: \"success\" });\n      handleManualDialogClose();\n\n      // Cập nhật lại thông tin phiên điểm danh\n      const sessionResponse = await axios.get(\n        `${API_URL}/attendance/sessions/${sessionId}`,\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      setSessionInfo(sessionResponse.data.data);\n    } catch (error) {\n      console.error(\"Lỗi khi điểm danh thủ công:\", error);\n      enqueueSnackbar(\"Lỗi khi điểm danh thủ công\", { variant: \"error\" });\n    }\n  };\n\n  // Đánh dấu điểm danh từ nhận diện khuôn mặt\n  const markAttendance = async (\n    studentId,\n    faceDescriptor,\n    confidence,\n    imageBase64\n  ) => {\n    try {\n      const result = await dispatch(\n        verifyAttendance({\n          sessionId,\n          studentId,\n          faceDescriptor,\n          confidence,\n          imageBase64,\n        })\n      ).unwrap();\n\n      // Cập nhật logs điểm danh\n      if (result && result.data) {\n        const student = classStudents.find((s) => s._id === studentId);\n\n        if (student) {\n          const updatedLogs = attendanceLogs.filter(\n            (log) => log.student_id._id !== studentId\n          );\n\n          updatedLogs.push({\n            ...result.data,\n            student_id: student,\n          });\n\n          setAttendanceLogs(updatedLogs);\n\n          enqueueSnackbar(`Đã điểm danh cho ${student.full_name}`, {\n            variant: \"success\",\n          });\n        }\n      }\n\n      // Cập nhật lại thông tin phiên điểm danh\n      const sessionResponse = await axios.get(\n        `${API_URL}/attendance/sessions/${sessionId}`,\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      setSessionInfo(sessionResponse.data.data);\n\n      return true;\n    } catch (error) {\n      console.error(\"Lỗi khi xác nhận điểm danh:\", error);\n      enqueueSnackbar(\"Lỗi khi xác nhận điểm danh\", { variant: \"error\" });\n      return false;\n    }\n  };\n\n  // Kết thúc phiên điểm danh\n  const completeSession = async () => {\n    try {\n      await axios.put(\n        `${API_URL}/attendance/sessions/${sessionId}`,\n        { status: \"completed\" },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n\n      enqueueSnackbar(\"Phiên điểm danh đã kết thúc\", { variant: \"success\" });\n      navigate(`/teacher/classes/${classId}`);\n    } catch (error) {\n      console.error(\"Lỗi khi kết thúc phiên điểm danh:\", error);\n      enqueueSnackbar(\"Lỗi khi kết thúc phiên điểm danh\", { variant: \"error\" });\n    }\n  };\n\n  // Làm mới danh sách điểm danh\n  const refreshAttendanceLogs = async () => {\n    try {\n      const logsResponse = await axios.get(\n        `${API_URL}/attendance/logs/${sessionId}`,\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      setAttendanceLogs(logsResponse.data.data);\n\n      const sessionResponse = await axios.get(\n        `${API_URL}/attendance/sessions/${sessionId}`,\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      setSessionInfo(sessionResponse.data.data);\n\n      enqueueSnackbar(\"Đã làm mới dữ liệu điểm danh\", { variant: \"success\" });\n    } catch (error) {\n      console.error(\"Lỗi khi làm mới dữ liệu:\", error);\n      enqueueSnackbar(\"Lỗi khi làm mới dữ liệu\", { variant: \"error\" });\n    }\n  };\n\n  // Chụp ảnh và nhận diện thủ công\n  const captureAndRecognize = async () => {\n    try {\n      setIsRecognizing(true);\n      enqueueSnackbar(\"Đang nhận diện khuôn mặt...\", { variant: \"info\" });\n\n      // Kiểm tra camera hoạt động\n      if (!ensureCameraIsWorking()) {\n        enqueueSnackbar(\"Camera không hoạt động, vui lòng khởi động lại\", {\n          variant: \"error\",\n        });\n        setIsRecognizing(false);\n        return;\n      }\n\n      // Phát hiện khuôn mặt\n      const detections = await handleDetectFaces(false);\n\n      // Kiểm tra có phát hiện khuôn mặt không\n      if (!detections || detections.length === 0) {\n        enqueueSnackbar(\"Không phát hiện khuôn mặt nào trong hình\", {\n          variant: \"warning\",\n        });\n        setIsRecognizing(false);\n        return;\n      }\n\n      // Debug: Log số khuôn mặt phát hiện được\n      console.log(\n        `[DEBUG] Đã phát hiện ${detections.length} khuôn mặt với descriptor:`,\n        detections[0].descriptor ? \"CÓ\" : \"KHÔNG CÓ\"\n      );\n\n      // Kiểm tra xem detection có chứa descriptor không\n      if (!detections[0].descriptor) {\n        console.log(\n          \"[DEBUG] Không tìm thấy descriptor trong kết quả phát hiện\"\n        );\n        enqueueSnackbar(\n          \"Không thể trích xuất đặc trưng khuôn mặt để nhận diện\",\n          { variant: \"error\" }\n        );\n        setIsRecognizing(false);\n        return;\n      }\n\n      // Xử lý nhận diện với dữ liệu sinh viên hiện có\n      if (classStudents && classStudents.length > 0) {\n        // Log số lượng sinh viên để debug\n        console.log(\n          `[DEBUG] Nhận diện với ${classStudents.length} sinh viên trong lớp`\n        );\n\n        // Chụp ảnh từ webcam\n        const imageBase64 = webcamRef.current?.getScreenshot();\n\n        // Lấy descriptor khuôn mặt đầu tiên được phát hiện\n        const faceDescriptor = detections[0].descriptor;\n\n        // So sánh với dữ liệu sinh viên\n        const matchResults = [];\n\n        // Duyệt từng sinh viên để so sánh\n        for (const student of classStudents) {\n          // Lấy descriptor từ sinh viên (dựa vào cấu trúc dữ liệu của bạn)\n          let studentDescriptors = [];\n\n          // Debug: Log thông tin sinh viên\n          console.log(`[DEBUG] Xử lý sinh viên: ${student.full_name}`);\n\n          // Thử lấy từ cấu trúc faceFeatures\n          if (student.faceFeatures && student.faceFeatures.descriptors) {\n            console.log(\n              \"[DEBUG] Sinh viên có dữ liệu faceFeatures.descriptors\"\n            );\n\n            // Xử lý nhiều cấu trúc dữ liệu khác nhau\n            if (Array.isArray(student.faceFeatures.descriptors)) {\n              // Kiểm tra cấu trúc dữ liệu\n              console.log(\n                \"[DEBUG] Cấu trúc descriptors:\",\n                JSON.stringify(student.faceFeatures.descriptors).substring(\n                  0,\n                  100\n                ) + \"...\"\n              );\n\n              // Trường hợp 1: [[descriptor]]\n              if (\n                Array.isArray(student.faceFeatures.descriptors[0]) &&\n                Array.isArray(student.faceFeatures.descriptors[0][0]) &&\n                student.faceFeatures.descriptors[0][0].length === 128\n              ) {\n                studentDescriptors.push(student.faceFeatures.descriptors[0][0]);\n                console.log(\n                  \"[DEBUG] Trích xuất descriptor từ cấu trúc [[descriptor]]\"\n                );\n              }\n              // Trường hợp 2: [descriptor]\n              else if (\n                Array.isArray(student.faceFeatures.descriptors[0]) &&\n                student.faceFeatures.descriptors[0].length === 128\n              ) {\n                studentDescriptors.push(student.faceFeatures.descriptors[0]);\n                console.log(\n                  \"[DEBUG] Trích xuất descriptor từ cấu trúc [descriptor]\"\n                );\n              }\n              // Trường hợp 3: Duyệt từng phần tử để tìm mảng 128 phần tử\n              else {\n                // Tìm tất cả mảng 128 phần tử trong cấu trúc lồng nhau\n                const flattenAndFind = (arr, depth = 0) => {\n                  if (depth > 3) return []; // Giới hạn độ sâu để tránh đệ quy vô hạn\n\n                  let results = [];\n                  for (const item of arr) {\n                    if (Array.isArray(item)) {\n                      if (\n                        item.length === 128 &&\n                        item.every((val) => typeof val === \"number\")\n                      ) {\n                        results.push(item);\n                      } else {\n                        results = [\n                          ...results,\n                          ...flattenAndFind(item, depth + 1),\n                        ];\n                      }\n                    }\n                  }\n                  return results;\n                };\n\n                const foundDescriptors = flattenAndFind(\n                  student.faceFeatures.descriptors\n                );\n                if (foundDescriptors.length > 0) {\n                  studentDescriptors = [\n                    ...studentDescriptors,\n                    ...foundDescriptors,\n                  ];\n                  console.log(\n                    `[DEBUG] Tìm thấy ${foundDescriptors.length} descriptor sau khi duyệt đệ quy`\n                  );\n                }\n              }\n            }\n          }\n          // Hoặc thử lấy từ cấu trúc cũ faceDescriptors\n          else if (student.faceDescriptors) {\n            console.log(\n              \"[DEBUG] Sinh viên có dữ liệu faceDescriptors (cấu trúc cũ)\"\n            );\n\n            if (Array.isArray(student.faceDescriptors)) {\n              // Trường hợp 1: [descriptor]\n              if (\n                student.faceDescriptors.some(\n                  (d) => Array.isArray(d) && d.length === 128\n                )\n              ) {\n                studentDescriptors = student.faceDescriptors.filter(\n                  (d) => Array.isArray(d) && d.length === 128\n                );\n                console.log(\n                  `[DEBUG] Tìm thấy ${studentDescriptors.length} descriptor từ faceDescriptors`\n                );\n              }\n              // Trường hợp 2: descriptor trong object\n              else if (\n                student.faceDescriptors.length > 0 &&\n                typeof student.faceDescriptors[0] === \"object\"\n              ) {\n                // Tìm trong thuộc tính của object\n                for (const desc of student.faceDescriptors) {\n                  // Tìm thuộc tính có mảng 128 phần tử\n                  for (const key in desc) {\n                    if (Array.isArray(desc[key]) && desc[key].length === 128) {\n                      studentDescriptors.push(desc[key]);\n                      console.log(\n                        `[DEBUG] Tìm thấy descriptor trong thuộc tính ${key}`\n                      );\n                    } else if (\n                      key === \"descriptors\" &&\n                      Array.isArray(desc[key])\n                    ) {\n                      for (const d of desc[key]) {\n                        if (Array.isArray(d) && d.length === 128) {\n                          studentDescriptors.push(d);\n                          console.log(\n                            `[DEBUG] Tìm thấy descriptor trong descriptors`\n                          );\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n\n          // Log số lượng descriptor tìm được\n          console.log(\n            `[DEBUG] Tìm thấy ${studentDescriptors.length} descriptor cho sinh viên ${student.full_name}`\n          );\n\n          // Nếu sinh viên có dữ liệu khuôn mặt\n          if (studentDescriptors.length > 0) {\n            // Tính toán độ tương đồng với từng descriptor\n            let bestMatch = 0;\n\n            for (const descriptor of studentDescriptors) {\n              try {\n                const distance = faceapi.euclideanDistance(\n                  faceDescriptor,\n                  descriptor\n                );\n                // Chuyển đổi khoảng cách thành độ tương đồng (1 - distance) và lấy giá trị tốt nhất\n                const similarity = Math.max(0, 1 - distance);\n                console.log(\n                  `[DEBUG] Độ tương đồng với ${student.full_name}: ${(\n                    similarity * 100\n                  ).toFixed(2)}%`\n                );\n                bestMatch = Math.max(bestMatch, similarity);\n              } catch (error) {\n                console.error(\n                  `[DEBUG] Lỗi khi tính khoảng cách với sinh viên ${student.full_name}:`,\n                  error\n                );\n              }\n            }\n\n            // Lưu lại tất cả kết quả để phân tích\n            matchResults.push({\n              studentId: student._id,\n              name: student.full_name,\n              confidence: bestMatch,\n              studentCode: student.student_code,\n            });\n          }\n        }\n\n        // Sắp xếp kết quả theo độ tương đồng giảm dần\n        matchResults.sort((a, b) => b.confidence - a.confidence);\n\n        // Log tất cả kết quả\n        console.log(\"[DEBUG] Kết quả so sánh đầy đủ:\", matchResults);\n\n        // Lọc kết quả theo ngưỡng\n        const filteredResults = matchResults.filter(\n          (r) => r.confidence > RECOGNITION_THRESHOLD\n        );\n        console.log(\n          `[DEBUG] Có ${filteredResults.length}/${matchResults.length} kết quả vượt ngưỡng ${RECOGNITION_THRESHOLD}`\n        );\n\n        // Cập nhật danh sách sinh viên được nhận diện\n        dispatch(setRecognizedStudents(filteredResults));\n\n        // Hiển thị kết quả ngay cả khi dưới ngưỡng để giúp debug\n        if (matchResults.length > 0) {\n          const topMatches = matchResults.slice(0, 3);\n\n          // Hiển thị top 3 kết quả để dễ dàng debug\n          const matchDetails = topMatches\n            .map((m) => `${m.name}: ${(m.confidence * 100).toFixed(1)}%`)\n            .join(\", \");\n\n          console.log(`[DEBUG] Top 3 kết quả: ${matchDetails}`);\n\n          if (filteredResults.length > 0) {\n            const topMatch = filteredResults[0];\n            enqueueSnackbar(\n              `Đã nhận diện: ${topMatch.name} (${Math.round(\n                topMatch.confidence * 100\n              )}%)`,\n              {\n                variant: \"success\",\n              }\n            );\n\n            // Tự động điểm danh nếu độ tin cậy cao\n            if (topMatch.confidence > CONFIDENCE_THRESHOLD) {\n              handleMarkAttendance(topMatch.studentId, topMatch.confidence);\n            }\n          } else {\n            enqueueSnackbar(\n              `Không nhận diện được sinh viên nào vượt ngưỡng. Gần nhất: ${matchDetails}`,\n              {\n                variant: \"warning\",\n              }\n            );\n          }\n        } else {\n          enqueueSnackbar(\"Không nhận diện được sinh viên nào\", {\n            variant: \"warning\",\n          });\n        }\n      } else {\n        enqueueSnackbar(\"Không có dữ liệu sinh viên để so sánh\", {\n          variant: \"error\",\n        });\n      }\n    } catch (error) {\n      console.error(\"Lỗi khi nhận diện khuôn mặt:\", error);\n      enqueueSnackbar(`Lỗi khi nhận diện: ${error.message}`, {\n        variant: \"error\",\n      });\n    } finally {\n      setIsRecognizing(false);\n    }\n  };\n\n  // Xử lý đánh dấu sinh viên điểm danh\n  const handleMarkAttendance = async (studentId, confidence) => {\n    // Kiểm tra xem sinh viên đã được điểm danh chưa\n    const isAlreadyAttended = attendanceLogs.some(\n      (log) => log.student_id._id === studentId && log.status === \"present\"\n    );\n\n    if (isAlreadyAttended) {\n      if (ENABLE_DEBUG_LOGS) {\n        console.log(\n          `[DEBUG] Sinh viên ${studentId} đã được điểm danh trước đó`\n        );\n      }\n      return;\n    }\n\n    try {\n      // Lấy dữ liệu video\n      const videoElement = isAutoMode\n        ? videoRef.current\n        : webcamRef.current?.video;\n\n      if (!videoElement) return;\n\n      // Tạo ảnh chụp từ video element\n      let imageBase64 = null;\n\n      // Nếu sử dụng webcam component\n      if (!isAutoMode && webcamRef.current) {\n        imageBase64 = webcamRef.current.getScreenshot();\n      }\n      // Nếu sử dụng video element trực tiếp\n      else if (isAutoMode) {\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = videoElement.videoWidth;\n        canvas.height = videoElement.videoHeight;\n        const ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(videoElement, 0, 0);\n        imageBase64 = canvas.toDataURL(\"image/jpeg\");\n      }\n\n      // Tìm sinh viên đã được phát hiện\n      const student = classStudents.find((s) => s._id === studentId);\n\n      if (!student) {\n        console.error(`Không tìm thấy sinh viên với ID ${studentId}`);\n        return;\n      }\n\n      // Lấy descriptor mới nhất từ sinh viên\n      let descriptor = null;\n\n      // Kiểm tra và lấy descriptor từ các cấu trúc khác nhau\n      if (\n        student.faceFeatures &&\n        student.faceFeatures.descriptors &&\n        Array.isArray(student.faceFeatures.descriptors) &&\n        student.faceFeatures.descriptors.length > 0\n      ) {\n        // Lấy từ cấu trúc mới\n        if (Array.isArray(student.faceFeatures.descriptors[0])) {\n          descriptor = student.faceFeatures.descriptors[0];\n        } else if (Array.isArray(student.faceFeatures.descriptors[0][0])) {\n          descriptor = student.faceFeatures.descriptors[0][0];\n        }\n      } else if (\n        student.faceDescriptors &&\n        Array.isArray(student.faceDescriptors) &&\n        student.faceDescriptors.length > 0\n      ) {\n        // Lấy từ cấu trúc cũ\n        if (typeof student.faceDescriptors[0] === \"object\") {\n          if (\n            student.faceDescriptors[0].descriptors &&\n            Array.isArray(student.faceDescriptors[0].descriptors) &&\n            student.faceDescriptors[0].descriptors.length > 0\n          ) {\n            descriptor = student.faceDescriptors[0].descriptors[0];\n          } else {\n            // Tìm mảng 128 phần tử đầu tiên trong object\n            Object.keys(student.faceDescriptors[0]).forEach((key) => {\n              const value = student.faceDescriptors[0][key];\n              if (!descriptor && Array.isArray(value) && value.length === 128) {\n                descriptor = value;\n              }\n            });\n          }\n        } else if (\n          Array.isArray(student.faceDescriptors[0]) &&\n          student.faceDescriptors[0].length === 128\n        ) {\n          descriptor = student.faceDescriptors[0];\n        }\n      }\n\n      // Gọi API điểm danh\n      if (ENABLE_DEBUG_LOGS) {\n        console.log(\n          `[DEBUG] Đánh dấu điểm danh cho ${\n            student.full_name\n          } với độ tin cậy ${confidence.toFixed(2)}`\n        );\n      }\n\n      // Gọi hàm điểm danh\n      await markAttendance(studentId, descriptor, confidence, imageBase64);\n    } catch (error) {\n      console.error(\"Lỗi khi đánh dấu điểm danh:\", error);\n    }\n  };\n\n  // Bật/tắt hiển thị landmark trên khuôn mặt\n  const toggleLandmarkDetection = () => {\n    const newState = !showLandmark;\n    setShowLandmark(newState);\n\n    // Bắt đầu hoặc dừng interval landmark detection\n    if (newState) {\n      startLandmarkDetection();\n    } else if (landmarkIntervalId) {\n      clearInterval(landmarkIntervalId);\n      setLandmarkIntervalId(null);\n\n      // Xóa canvas khi tắt landmarks\n      const canvasElement = canvasRef.current;\n      if (canvasElement) {\n        const ctx = canvasElement.getContext(\"2d\");\n        ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n      }\n    }\n  };\n\n  // Thêm hàm debug để kiểm tra cấu trúc dữ liệu khuôn mặt\n  const debugFaceFeatures = () => {\n    if (!classStudents || classStudents.length === 0) {\n      console.log(\n        \"[DEBUG] Không có sinh viên nào để kiểm tra dữ liệu khuôn mặt\"\n      );\n      return;\n    }\n\n    classStudents.forEach((student, index) => {\n      console.log(`[DEBUG] Sinh viên #${index + 1}: ${student.full_name}`);\n\n      // Kiểm tra dữ liệu faceFeatures\n      if (student.faceFeatures) {\n        console.log(`  - Có dữ liệu faceFeatures`);\n\n        // Kiểm tra descriptors\n        if (student.faceFeatures.descriptors) {\n          console.log(\n            `  - Có descriptors: ${student.faceFeatures.descriptors.length} nhóm`\n          );\n\n          student.faceFeatures.descriptors.forEach((group, groupIndex) => {\n            if (Array.isArray(group)) {\n              console.log(\n                `    - Nhóm #${groupIndex + 1}: ${group.length} descriptors`\n              );\n\n              group.forEach((descriptor, descIndex) => {\n                if (Array.isArray(descriptor)) {\n                  console.log(\n                    `      - Descriptor #${descIndex + 1}: ${\n                      descriptor.length\n                    } phần tử`\n                  );\n                } else {\n                  console.log(\n                    `      - Descriptor #${descIndex + 1}: Không phải mảng`\n                  );\n                }\n              });\n            } else {\n              console.log(`    - Nhóm #${groupIndex + 1}: Không phải mảng`);\n            }\n          });\n        } else {\n          console.log(`  - Không có dữ liệu descriptors`);\n        }\n      } else {\n        console.log(`  - Không có dữ liệu faceFeatures`);\n      }\n\n      // Kiểm tra dữ liệu cũ (faceDescriptors)\n      if (student.faceDescriptors) {\n        console.log(\n          `  - Có dữ liệu faceDescriptors (cấu trúc cũ): ${student.faceDescriptors.length} descriptors`\n        );\n      }\n    });\n  };\n\n  if (isLoading) {\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        minHeight=\"60vh\"\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  // Lấy danh sách sinh viên vắng mặt\n  const getAbsentStudents = () => {\n    if (!classInfo || !sessionInfo) return [];\n\n    const presentStudentIds = attendanceLogs\n      .filter((log) => log.status === \"present\")\n      .map((log) => log.student_id._id);\n\n    return classInfo.students.filter(\n      (student) => !presentStudentIds.includes(student._id)\n    );\n  };\n\n  const absentStudents = getAbsentStudents();\n\n  // Điểm danh thủ công trong chế độ đơn giản\n  const showStudentList = () => {\n    if (!classInfo) return;\n\n    // Hiển thị danh sách sinh viên để điểm danh thủ công\n    const absentStudents = getAbsentStudents();\n    if (absentStudents.length === 0) {\n      enqueueSnackbar(\"Tất cả sinh viên đã được điểm danh\", {\n        variant: \"success\",\n      });\n      return;\n    }\n\n    // Hiển thị dialog chọn sinh viên để điểm danh\n    if (absentStudents.length > 0 && absentStudents[0]) {\n      openManualAttendanceDialog(absentStudents[0]);\n    }\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h5\" gutterBottom>\n        Điểm Danh - {classInfo?.class_name}\n      </Typography>\n      <Typography variant=\"subtitle1\" color=\"textSecondary\" gutterBottom>\n        Buổi {sessionInfo?.session_number} -{\" \"}\n        {new Date(sessionInfo?.date).toLocaleDateString(\"vi-VN\")}\n      </Typography>\n\n      <Grid container spacing={3} mt={1}>\n        <Grid item xs={12} md={8}>\n          <Card>\n            <CardContent>\n              <Box\n                display=\"flex\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n                mb={2}\n              >\n                <Typography variant=\"h6\">Camera nhận diện</Typography>\n                <Box>\n                  <Chip\n                    label={isAutoMode ? \"Tự động đang bật\" : \"Tự động đang tắt\"}\n                    color={isAutoMode ? \"success\" : \"default\"}\n                    sx={{ mr: 1 }}\n                  />\n                  <Button\n                    variant=\"outlined\"\n                    color={isAutoMode ? \"error\" : \"primary\"}\n                    onClick={\n                      isAutoMode\n                        ? () => {\n                            // Dừng tự động\n                            if (intervalId) {\n                              clearInterval(intervalId);\n                              setIntervalId(null);\n                            }\n                            setIsAutoMode(false);\n                            enqueueSnackbar(\"Đã tắt chế độ tự động điểm danh\", {\n                              variant: \"info\",\n                            });\n                          }\n                        : () => {\n                            // Bắt đầu tự động\n                            if (intervalId) {\n                              clearInterval(intervalId);\n                            }\n                            // Khởi tạo thời gian phát hiện ban đầu\n                            setLastDetectionTime(Date.now());\n                            const id = setInterval(() => {\n                              handleDetectFaces();\n                            }, AUTO_DETECT_INTERVAL);\n                            setIntervalId(id);\n                            setIsAutoMode(true);\n                            enqueueSnackbar(\"Đã bật chế độ tự động điểm danh\", {\n                              variant: \"info\",\n                            });\n                          }\n                    }\n                  >\n                    {isAutoMode ? \"Tắt tự động\" : \"Bật tự động\"}\n                  </Button>\n                </Box>\n              </Box>\n            </CardContent>\n\n            <Paper\n              elevation={3}\n              sx={{\n                position: \"relative\",\n                width: \"100%\",\n                height: \"400px\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                overflow: \"hidden\",\n                mb: 2,\n              }}\n            >\n              {isCameraReady ? (\n                <>\n                  {isAutoMode ? (\n                    // Sử dụng video element trực tiếp thay vì Webcam component\n                    <video\n                      ref={videoRef}\n                      style={{\n                        position: \"absolute\",\n                        width: \"100%\",\n                        height: \"100%\",\n                        objectFit: \"cover\",\n                      }}\n                      autoPlay\n                      playsInline\n                      muted\n                    />\n                  ) : (\n                    <Webcam\n                      audio={false}\n                      ref={webcamRef}\n                      screenshotFormat=\"image/jpeg\"\n                      width={640}\n                      height={480}\n                      videoConstraints={{\n                        width: 640,\n                        height: 480,\n                        facingMode: \"user\",\n                      }}\n                      style={{\n                        position: \"absolute\",\n                        width: \"100%\",\n                        height: \"100%\",\n                        objectFit: \"cover\",\n                      }}\n                      onUserMedia={(stream) => {\n                        console.log(\n                          \"Camera đã được cấp quyền và khởi tạo\",\n                          stream.id\n                        );\n                        // Đảm bảo readyState được kiểm tra khi stream đã sẵn sàng\n                        setTimeout(() => {\n                          if (webcamRef.current && webcamRef.current.video) {\n                            console.log(\n                              \"Stream ready, readyState=\",\n                              webcamRef.current.video.readyState\n                            );\n                            dispatch(setCameraReady(true));\n                            // Đặt thời gian phát hiện ban đầu\n                            setLastDetectionTime(Date.now());\n                          }\n                        }, 500);\n                      }}\n                      onUserMediaError={(err) => {\n                        console.error(\"Lỗi khi truy cập camera:\", err);\n                        enqueueSnackbar(\n                          `Không thể truy cập camera: ${\n                            err.name === \"NotAllowedError\"\n                              ? \"Bạn chưa cấp quyền truy cập camera\"\n                              : err.name === \"NotFoundError\"\n                              ? \"Không tìm thấy thiết bị camera\"\n                              : err.message || \"Lỗi không xác định\"\n                          }`,\n                          {\n                            variant: \"error\",\n                          }\n                        );\n                      }}\n                    />\n                  )}\n                  {/* Canvas hiển thị ở cả hai chế độ */}\n                  <canvas\n                    ref={canvasRef}\n                    style={{\n                      position: \"absolute\",\n                      top: 0,\n                      left: 0,\n                      width: \"100%\",\n                      height: \"100%\",\n                      objectFit: \"cover\",\n                      zIndex: 10,\n                    }}\n                  />\n                </>\n              ) : (\n                <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n                  <CircularProgress size={50} />\n                  <Typography mt={2}>Đang khởi tạo camera...</Typography>\n                  <Typography\n                    variant=\"caption\"\n                    color=\"text.secondary\"\n                    sx={{ mt: 1 }}\n                  >\n                    {isModelLoaded\n                      ? \"Chờ kết nối camera - Hãy đảm bảo bạn đã cấp quyền camera\"\n                      : \"Đang tải mô hình nhận diện khuôn mặt\"}\n                  </Typography>\n\n                  <Box\n                    sx={{\n                      mt: 2,\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      alignItems: \"center\",\n                      gap: 1,\n                    }}\n                  >\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      size=\"small\"\n                      onClick={initDirectCamera}\n                    >\n                      Khởi động camera trực tiếp\n                    </Button>\n\n                    <Button\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      size=\"small\"\n                      onClick={() => {\n                        setIsAutoMode(true);\n                        // Khởi tạo thời gian phát hiện ban đầu\n                        setLastDetectionTime(Date.now());\n                        const id = setInterval(() => {\n                          handleDetectFaces();\n                        }, AUTO_DETECT_INTERVAL);\n                        setIntervalId(id);\n                        enqueueSnackbar(\"Đã bật tự động điểm danh\", {\n                          variant: \"info\",\n                        });\n                      }}\n                    >\n                      Bắt đầu tự động điểm danh\n                    </Button>\n\n                    <Button\n                      variant=\"outlined\"\n                      color=\"warning\"\n                      size=\"small\"\n                      onClick={showStudentList}\n                    >\n                      Điểm danh thủ công\n                    </Button>\n\n                    <Alert severity=\"info\" sx={{ mt: 2, maxWidth: 300 }}>\n                      Nếu camera không hoạt động, vui lòng thử:\n                      <ul style={{ margin: \"8px 0\", paddingLeft: \"20px\" }}>\n                        <li>Kiểm tra quyền camera trên trình duyệt</li>\n                        <li>Làm mới trang và thử lại</li>\n                        <li>\n                          Đảm bảo không có ứng dụng khác đang sử dụng camera\n                        </li>\n                      </ul>\n                    </Alert>\n                  </Box>\n                </Box>\n              )}\n            </Paper>\n\n            <Box display=\"flex\" justifyContent=\"space-between\">\n              <Button\n                variant=\"outlined\"\n                onClick={captureAndRecognize}\n                startIcon={<CameraAlt />}\n                disabled={!isCameraReady || isRecognizing || isAutoMode}\n              >\n                {isRecognizing ? (\n                  <CircularProgress size={24} color=\"inherit\" />\n                ) : (\n                  \"Chụp & Nhận diện\"\n                )}\n              </Button>\n\n              <Box>\n                {isCameraReady && (\n                  <>\n                    <Button\n                      variant=\"outlined\"\n                      color={showLandmark ? \"success\" : \"info\"}\n                      onClick={toggleLandmarkDetection}\n                      sx={{ mr: 1 }}\n                    >\n                      {showLandmark ? \"Tắt Landmark\" : \"Hiện Landmark\"}\n                    </Button>\n\n                    <Button\n                      variant=\"outlined\"\n                      color={isAutoMode ? \"error\" : \"primary\"}\n                      onClick={() => {\n                        // Dừng tự động\n                        if (intervalId) {\n                          clearInterval(intervalId);\n                          setIntervalId(null);\n                        }\n                        setIsAutoMode(false);\n                        enqueueSnackbar(\"Đã tắt chế độ tự động điểm danh\", {\n                          variant: \"info\",\n                        });\n                      }}\n                      sx={{ mr: 1 }}\n                    >\n                      {isAutoMode ? \"Tắt tự động\" : \"Bật tự động\"}\n                    </Button>\n                  </>\n                )}\n\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={completeSession}\n                  startIcon={<Save />}\n                  disabled={sessionInfo?.status === \"completed\"}\n                >\n                  Kết thúc phiên\n                </Button>\n              </Box>\n            </Box>\n\n            {recognizedStudents.length > 0 && (\n              <Box mt={2}>\n                <Typography variant=\"subtitle1\" gutterBottom>\n                  Đã nhận diện ({recognizedStudents.length})\n                </Typography>\n                <Grid container spacing={1}>\n                  {recognizedStudents.map((student, index) => (\n                    <Grid item xs={6} sm={4} key={index}>\n                      <Paper\n                        elevation={2}\n                        sx={{\n                          p: 1,\n                          display: \"flex\",\n                          flexDirection: \"column\",\n                          alignItems: \"center\",\n                        }}\n                      >\n                        <Typography variant=\"body2\" noWrap>\n                          {student.name}\n                        </Typography>\n                        <Typography variant=\"caption\" color=\"textSecondary\">\n                          {Math.round(student.confidence * 100)}% match\n                        </Typography>\n                        <Button\n                          size=\"small\"\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          sx={{ mt: 1 }}\n                          onClick={() =>\n                            handleMarkAttendance(\n                              student.studentId,\n                              student.confidence\n                            )\n                          }\n                        >\n                          <Check fontSize=\"small\" sx={{ mr: 0.5 }} />\n                          Điểm danh\n                        </Button>\n                      </Paper>\n                    </Grid>\n                  ))}\n                </Grid>\n              </Box>\n            )}\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} md={4}>\n          <Card sx={{ mb: 3 }}>\n            <CardContent>\n              <Box\n                display=\"flex\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n                mb={2}\n              >\n                <Typography variant=\"h6\">\n                  Có mặt (\n                  {\n                    attendanceLogs.filter((log) => log.status === \"present\")\n                      .length\n                  }\n                  /{classInfo?.students.length})\n                </Typography>\n                <IconButton size=\"small\" onClick={refreshAttendanceLogs}>\n                  <Refresh />\n                </IconButton>\n              </Box>\n\n              <List dense>\n                {attendanceLogs\n                  .filter((log) => log.status === \"present\")\n                  .sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))\n                  .map((log) => (\n                    <ListItem\n                      key={log._id}\n                      secondaryAction={\n                        <Chip\n                          size=\"small\"\n                          icon={\n                            log.recognized ? (\n                              <VerifiedUser fontSize=\"small\" />\n                            ) : null\n                          }\n                          label={log.recognized ? \"Tự động\" : \"Thủ công\"}\n                          color={log.recognized ? \"success\" : \"primary\"}\n                        />\n                      }\n                    >\n                      <ListItemAvatar>\n                        <Avatar\n                          alt={log.student_id.full_name}\n                          src={log.student_id.avatar_url}\n                        />\n                      </ListItemAvatar>\n                      <ListItemText\n                        primary={log.student_id.full_name}\n                        secondary={`${new Date(\n                          log.timestamp\n                        ).toLocaleTimeString(\"vi-VN\")}`}\n                      />\n                    </ListItem>\n                  ))}\n\n                {attendanceLogs.filter((log) => log.status === \"present\")\n                  .length === 0 && (\n                  <ListItem>\n                    <ListItemText primary=\"Chưa có sinh viên nào điểm danh\" />\n                  </ListItem>\n                )}\n              </List>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Vắng mặt ({absentStudents.length}/{classInfo?.students.length})\n              </Typography>\n\n              <List dense>\n                {absentStudents.map((student) => (\n                  <ListItem\n                    key={student._id}\n                    secondaryAction={\n                      <IconButton\n                        edge=\"end\"\n                        onClick={() => openManualAttendanceDialog(student)}\n                      >\n                        <Edit fontSize=\"small\" />\n                      </IconButton>\n                    }\n                  >\n                    <ListItemAvatar>\n                      <Avatar\n                        alt={student.full_name}\n                        src={student.avatar_url}\n                      />\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={student.full_name}\n                      secondary={student.student_code}\n                    />\n                  </ListItem>\n                ))}\n\n                {absentStudents.length === 0 && (\n                  <ListItem>\n                    <ListItemText primary=\"Không có sinh viên nào vắng mặt\" />\n                  </ListItem>\n                )}\n              </List>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n\n      {/* Dialog điểm danh thủ công */}\n      <Dialog open={manualDialogOpen} onClose={handleManualDialogClose}>\n        <DialogTitle>Điểm danh thủ công</DialogTitle>\n        <DialogContent>\n          <Box sx={{ p: 1 }}>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              {selectedStudent?.full_name} ({selectedStudent?.student_code})\n            </Typography>\n\n            <FormControl fullWidth margin=\"normal\">\n              <InputLabel>Trạng thái</InputLabel>\n              <Select\n                name=\"status\"\n                value={manualAttendanceData.status}\n                onChange={handleManualAttendanceChange}\n                label=\"Trạng thái\"\n              >\n                <MenuItem value=\"present\">Có mặt</MenuItem>\n                <MenuItem value=\"absent\">Vắng mặt</MenuItem>\n                <MenuItem value=\"late\">Đi trễ</MenuItem>\n                <MenuItem value=\"early_leave\">Về sớm</MenuItem>\n              </Select>\n            </FormControl>\n\n            <TextField\n              fullWidth\n              margin=\"normal\"\n              name=\"note\"\n              label=\"Ghi chú\"\n              value={manualAttendanceData.note}\n              onChange={handleManualAttendanceChange}\n              multiline\n              rows={2}\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleManualDialogClose}>Hủy</Button>\n          <Button onClick={handleManualAttendanceSubmit} variant=\"contained\">\n            Xác nhận\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default AttendancePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}