{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kasiz\\\\Documents\\\\Studying\\\\FaceReg\\\\frontend\\\\src\\\\pages\\\\teacher\\\\AttendancePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useSnackbar } from \"notistack\";\nimport { Box, Typography, Card, CardContent, Grid, Paper, Button, Divider, CircularProgress, List, ListItem, ListItemAvatar, ListItemText, Avatar, Chip, Dialog, DialogTitle, DialogContent, DialogActions, TextField, FormControl, InputLabel, Select, MenuItem, IconButton, Alert } from \"@mui/material\";\nimport { CameraAlt, Check, Close, Edit, Refresh, Save, VerifiedUser, HourglassEmpty, ArrowBack } from \"@mui/icons-material\";\nimport Webcam from \"react-webcam\";\nimport * as faceapi from \"face-api.js\";\nimport { getClassFaceFeatures, verifyAttendance, manualAttendance, setModelLoaded, setCameraReady, setDetectedFaces, setRecognizedStudents, clearRecognitionState } from \"../../redux/slices/faceRecognitionSlice\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\nconst AttendancePage = () => {\n  _s();\n  const {\n    classId,\n    sessionId\n  } = useParams();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const videoRef = useRef(null);\n  const [intervalId, setIntervalId] = useState(null);\n  const [showLandmark, setShowLandmark] = useState(true);\n  const [landmarkIntervalId, setLandmarkIntervalId] = useState(null);\n  const [cameraMode, setCameraMode] = useState(\"face_recognition\");\n  const {\n    token\n  } = useSelector(state => state.auth);\n  const {\n    isModelLoaded,\n    isCameraReady,\n    detectedFaces,\n    recognizedStudents,\n    classStudents,\n    isProcessing,\n    error\n  } = useSelector(state => state.faceRecognition);\n  const [classInfo, setClassInfo] = useState(null);\n  const [sessionInfo, setSessionInfo] = useState(null);\n  const [attendanceLogs, setAttendanceLogs] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isRecognizing, setIsRecognizing] = useState(false);\n  const [isAutoMode, setIsAutoMode] = useState(false);\n  const [selectedStudent, setSelectedStudent] = useState(null);\n  const [manualDialogOpen, setManualDialogOpen] = useState(false);\n  const [manualAttendanceData, setManualAttendanceData] = useState({\n    status: \"present\",\n    note: \"\"\n  });\n\n  // Các hằng số cấu hình được tối ưu\n  const RECOGNITION_THRESHOLD = 0.45; // Ngưỡng nhận diện được tối ưu\n  const DETECTION_THRESHOLD = 0.5; // Ngưỡng phát hiện khuôn mặt\n  const CONFIDENCE_THRESHOLD = 0.6; // Ngưỡng độ tin cậy để điểm danh\n  const AUTO_DETECT_INTERVAL = 1000; // Thời gian giữa các lần phát hiện (ms)\n  const ENABLE_DEBUG_LOGS = false; // Tắt log gỡ lỗi trong môi trường sản phẩm\n\n  // Thêm state mới để theo dõi số lần thử lại camera\n  const [cameraRetryCount, setCameraRetryCount] = useState(0);\n  const [lastDetectionTime, setLastDetectionTime] = useState(null);\n\n  // Thêm state theo dõi interval phát hiện landmarks\n  const [landmarkDetectionInterval, setLandmarkDetectionInterval] = useState(null);\n\n  // Load class info, session info và models\n  useEffect(() => {\n    const loadInitialData = async () => {\n      try {\n        setIsLoading(true);\n\n        // Lấy thông tin lớp học\n        const classPromise = axios.get(`${API_URL}/classes/teaching/${classId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Lấy thông tin phiên điểm danh\n        const sessionPromise = axios.get(`${API_URL}/attendance/sessions/${sessionId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Lấy danh sách điểm danh\n        const logsPromise = axios.get(`${API_URL}/attendance/logs/${sessionId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Chờ tất cả API calls hoàn thành\n        const [classResponse, sessionResponse, logsResponse] = await Promise.all([classPromise, sessionPromise, logsPromise]);\n        setClassInfo(classResponse.data.data);\n        setSessionInfo(sessionResponse.data.data);\n        setAttendanceLogs(logsResponse.data.data);\n\n        // Đã tải xong dữ liệu cơ bản\n        setIsLoading(false);\n\n        // Chỉ tải mô hình và lấy đặc trưng khuôn mặt nếu phiên điểm danh chưa hoàn thành\n        if (sessionResponse.data.data.status !== \"completed\") {\n          // Bắt đầu tải dữ liệu và models nếu phiên chưa hoàn thành\n          const loadModelsPromise = !isModelLoaded ? loadFaceRecognitionModels() : Promise.resolve(true);\n\n          // Lấy đặc trưng khuôn mặt của sinh viên trong lớp\n          console.log(\"[DEBUG] Bắt đầu lấy đặc trưng khuôn mặt của sinh viên, classId:\", classId);\n          try {\n            // Gọi API trực tiếp để kiểm tra\n            const faceDataResponse = await axios.get(`${API_URL}/face-recognition/class-features/${classId}`, {\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n            console.log(\"[DEBUG] API response raw:\", faceDataResponse);\n            console.log(\"[DEBUG] API response data:\", faceDataResponse.data);\n\n            // Vẫn sử dụng redux dispatch để đảm bảo tính nhất quán\n            const faceFeatureResult = await dispatch(getClassFaceFeatures(classId)).unwrap();\n\n            // Log toàn bộ result để debug\n            console.log(\"[DEBUG] Redux unwrapped result:\", faceFeatureResult);\n\n            // Kiểm tra xem có dữ liệu trả về không\n            if (faceFeatureResult) {\n              // Log dữ liệu để debug\n              console.log(\"[DEBUG] Bắt đầu phân tích dữ liệu khuôn mặt\");\n              console.log(\"[DEBUG] faceFeatureResult structure:\", JSON.stringify(faceFeatureResult, null, 2));\n              let studentsData = null;\n\n              // Kiểm tra các cấu trúc dữ liệu có thể có\n              if (Array.isArray(faceFeatureResult)) {\n                studentsData = faceFeatureResult;\n                console.log(`[DEBUG] Nhận được dữ liệu khuôn mặt dạng mảng: ${studentsData.length} sinh viên`);\n              } else if (faceFeatureResult.data && Array.isArray(faceFeatureResult.data)) {\n                studentsData = faceFeatureResult.data;\n                console.log(`[DEBUG] Nhận được dữ liệu khuôn mặt từ faceFeatureResult.data: ${studentsData.length} sinh viên`);\n              } else if (faceFeatureResult.students && Array.isArray(faceFeatureResult.students)) {\n                studentsData = faceFeatureResult.students;\n                console.log(`[DEBUG] Nhận được dữ liệu khuôn mặt từ faceFeatureResult.students: ${studentsData.length} sinh viên`);\n              }\n              if (studentsData && studentsData.length > 0) {\n                console.log(`[DEBUG] Phân tích dữ liệu khuôn mặt của ${studentsData.length} sinh viên`);\n\n                // Kiểm tra chi tiết dữ liệu khuôn mặt\n                let validDescriptorsCount = 0;\n                let invalidDescriptorsCount = 0;\n                studentsData.forEach(student => {\n                  console.log(`[DEBUG] Kiểm tra sinh viên: ${student.full_name || \"Unknown\"}, ID: ${student._id}`);\n                  console.log(`[DEBUG] Cấu trúc dữ liệu sinh viên:`, student);\n\n                  // Kiểm tra nếu có faceFeatures\n                  if (student.faceFeatures) {\n                    console.log(`[DEBUG] Sinh viên có dữ liệu faceFeatures`);\n\n                    // Kiểm tra nếu có descriptors\n                    const hasDescriptors = student.faceFeatures && student.faceFeatures.descriptors && Array.isArray(student.faceFeatures.descriptors) && student.faceFeatures.descriptors.length > 0;\n                    if (hasDescriptors) {\n                      console.log(`[DEBUG] Sinh viên có ${student.faceFeatures.descriptors.length} nhóm descriptors`);\n\n                      // Đếm số descriptor hợp lệ\n                      let validDescriptorsInStudent = 0;\n                      student.faceFeatures.descriptors.forEach((group, groupIndex) => {\n                        if (Array.isArray(group)) {\n                          group.forEach((descriptor, descIndex) => {\n                            if (Array.isArray(descriptor) && descriptor.length === 128) {\n                              validDescriptorsInStudent++;\n                            }\n                          });\n                        }\n                      });\n                      if (validDescriptorsInStudent > 0) {\n                        validDescriptorsCount++;\n                        console.log(`[DEBUG] Sinh viên ${student.full_name} có ${validDescriptorsInStudent} descriptor hợp lệ`);\n                      } else {\n                        invalidDescriptorsCount++;\n                        console.log(`[DEBUG] Sinh viên ${student.full_name} không có descriptor hợp lệ`);\n                      }\n                    } else {\n                      invalidDescriptorsCount++;\n                      console.log(`[DEBUG] Sinh viên ${student.full_name} không có descriptors`);\n                    }\n                  } else {\n                    // Kiểm tra nếu có faceDescriptors (cấu trúc cũ)\n                    const hasOldDescriptors = student.faceDescriptors && Array.isArray(student.faceDescriptors) && student.faceDescriptors.length > 0;\n                    if (hasOldDescriptors) {\n                      console.log(`[DEBUG] Sinh viên có ${student.faceDescriptors.length} descriptors (dạng cũ)`);\n                      console.log(`[DEBUG] Chi tiết faceDescriptors:`, JSON.stringify(student.faceDescriptors, null, 2));\n\n                      // Thử các cách khác nhau để lấy descriptor\n                      if (typeof student.faceDescriptors[0] === \"object\") {\n                        // Nếu là object (không phải mảng), có thể nó là object có chứa descriptor\n                        console.log(`[DEBUG] Descriptor là object:`, student.faceDescriptors[0]);\n\n                        // Kiểm tra nếu descriptor nằm trong object.descriptors hoặc object.0\n                        if (student.faceDescriptors[0].descriptors && Array.isArray(student.faceDescriptors[0].descriptors)) {\n                          console.log(`[DEBUG] Tìm thấy descriptors trong object.descriptors`);\n                          // Sử dụng descriptors trong object\n                          const flatDescriptors = student.faceDescriptors[0].descriptors;\n                          const validOldDescriptors = flatDescriptors.filter(desc => Array.isArray(desc) && desc.length === 128).length;\n                          if (validOldDescriptors > 0) {\n                            validDescriptorsCount++;\n                            console.log(`[DEBUG] Sinh viên ${student.full_name} có ${validOldDescriptors} descriptor hợp lệ trong object.descriptors`);\n                          }\n                        } else {\n                          // Duyệt tất cả các thuộc tính của object để tìm mảng\n                          const foundArrays = [];\n                          Object.keys(student.faceDescriptors[0]).forEach(key => {\n                            const value = student.faceDescriptors[0][key];\n                            if (Array.isArray(value)) {\n                              console.log(`[DEBUG] Tìm thấy mảng trong thuộc tính ${key}, độ dài: ${value.length}`);\n                              foundArrays.push(value);\n                            }\n                          });\n\n                          // Kiểm tra các mảng tìm được\n                          if (foundArrays.length > 0) {\n                            // Ưu tiên mảng có 128 phần tử\n                            const potentialDescriptors = foundArrays.filter(arr => arr.length === 128);\n                            if (potentialDescriptors.length > 0) {\n                              validDescriptorsCount++;\n                              console.log(`[DEBUG] Sinh viên ${student.full_name} có descriptor hợp lệ trong thuộc tính object`);\n                            }\n                          }\n                        }\n                      } else {\n                        // Xử lý thông thường\n                        const validOldDescriptors = student.faceDescriptors.filter(desc => Array.isArray(desc) && desc.length === 128).length;\n                        if (validOldDescriptors > 0) {\n                          validDescriptorsCount++;\n                          console.log(`[DEBUG] Sinh viên ${student.full_name} có ${validOldDescriptors} descriptor hợp lệ (dạng cũ)`);\n                        } else {\n                          invalidDescriptorsCount++;\n                          console.log(`[DEBUG] Sinh viên ${student.full_name} không có descriptor hợp lệ (dạng cũ)`);\n                        }\n                      }\n                    } else {\n                      invalidDescriptorsCount++;\n                      console.log(`[DEBUG] Sinh viên ${student.full_name} không có dữ liệu khuôn mặt`);\n                    }\n                  }\n                });\n                console.log(`[DEBUG] Tổng hợp: ${validDescriptorsCount} sinh viên có descriptor hợp lệ, ${invalidDescriptorsCount} sinh viên không có`);\n                if (validDescriptorsCount === 0) {\n                  enqueueSnackbar(\"Không có sinh viên nào có dữ liệu khuôn mặt, vui lòng cập nhật dữ liệu\", {\n                    variant: \"warning\",\n                    autoHideDuration: 8000\n                  });\n                }\n              } else {\n                console.log(\"[DEBUG] Không nhận được dữ liệu khuôn mặt từ API\");\n                enqueueSnackbar(\"Không thể tải dữ liệu nhận diện khuôn mặt\", {\n                  variant: \"error\"\n                });\n              }\n            } else {\n              console.log(\"[DEBUG] Không nhận được dữ liệu khuôn mặt từ API (faceFeatureResult là null hoặc undefined)\");\n              enqueueSnackbar(\"Không thể tải dữ liệu nhận diện khuôn mặt\", {\n                variant: \"error\"\n              });\n            }\n          } catch (apiError) {\n            var _apiError$response;\n            console.error(\"[DEBUG] Lỗi khi gọi API lấy dữ liệu khuôn mặt:\", apiError);\n            console.log(\"[DEBUG] API error details:\", ((_apiError$response = apiError.response) === null || _apiError$response === void 0 ? void 0 : _apiError$response.data) || apiError.message);\n            enqueueSnackbar(\"Lỗi khi lấy dữ liệu khuôn mặt. Vui lòng kiểm tra API endpoint.\", {\n              variant: \"error\"\n            });\n          }\n\n          // Thiết lập thời gian phát hiện ban đầu\n          setLastDetectionTime(Date.now());\n        }\n      } catch (error) {\n        console.error(\"Lỗi khi tải dữ liệu:\", error);\n        enqueueSnackbar(\"Lỗi khi tải dữ liệu\", {\n          variant: \"error\"\n        });\n        setIsLoading(false);\n      }\n    };\n    loadInitialData();\n\n    // Clean up\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n\n      // Dừng landmark interval nếu đang chạy\n      if (landmarkIntervalId) {\n        clearInterval(landmarkIntervalId);\n      }\n\n      // Dừng camera stream nếu đang chạy\n      if (webcamRef.current && webcamRef.current.video && webcamRef.current.video.srcObject) {\n        const tracks = webcamRef.current.video.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n      if (videoRef.current && videoRef.current.srcObject) {\n        const tracks = videoRef.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n      dispatch(clearRecognitionState());\n\n      // Reset các state theo dõi camera\n      setCameraRetryCount(0);\n      setLastDetectionTime(null);\n    };\n  }, [classId, sessionId, token, dispatch, enqueueSnackbar, isModelLoaded, intervalId, landmarkIntervalId]);\n\n  // Hàm tối ưu để tải model nhận diện khuôn mặt\n  const loadFaceRecognitionModels = async () => {\n    try {\n      const MODEL_URL = \"/models\";\n\n      // Kiểm tra nhanh xem các models đã được tải chưa\n      if (faceapi.nets.tinyFaceDetector.isLoaded && faceapi.nets.faceLandmark68Net.isLoaded && faceapi.nets.faceRecognitionNet.isLoaded && faceapi.nets.ssdMobilenetv1.isLoaded) {\n        console.log(\"Các models đã được tải từ trước\");\n        dispatch(setModelLoaded(true));\n        return true;\n      }\n\n      // Hiển thị thông báo đang tải\n      enqueueSnackbar(\"Đang tải mô hình nhận diện...\", {\n        variant: \"info\"\n      });\n\n      // Tải song song tất cả model\n      await Promise.all([faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL), faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL), faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL), faceapi.nets.ssdMobilenetv1.loadFromUri(MODEL_URL)]);\n      dispatch(setModelLoaded(true));\n      enqueueSnackbar(\"Tải mô hình nhận diện thành công\", {\n        variant: \"success\"\n      });\n      return true;\n    } catch (error) {\n      console.error(\"Lỗi khi tải mô hình:\", error);\n      enqueueSnackbar(\"Không thể tải mô hình nhận diện\", {\n        variant: \"error\"\n      });\n      return false;\n    }\n  };\n\n  // Hàm khởi tạo camera đã tối ưu\n  const initDirectCamera = async () => {\n    try {\n      var _webcamRef$current;\n      // Tải model nếu chưa tải\n      if (!isModelLoaded) {\n        const modelLoaded = await loadFaceRecognitionModels();\n        if (!modelLoaded) return false;\n      }\n\n      // Dừng stream cũ nếu có\n      const stopExistingStream = videoElement => {\n        if (videoElement !== null && videoElement !== void 0 && videoElement.srcObject) {\n          const tracks = videoElement.srcObject.getTracks();\n          tracks.forEach(track => track.stop());\n        }\n      };\n      stopExistingStream((_webcamRef$current = webcamRef.current) === null || _webcamRef$current === void 0 ? void 0 : _webcamRef$current.video);\n      stopExistingStream(videoRef.current);\n\n      // Cấu hình camera tối ưu\n      const constraints = {\n        video: {\n          width: {\n            ideal: 640,\n            min: 320\n          },\n          height: {\n            ideal: 480,\n            min: 240\n          },\n          facingMode: \"user\",\n          frameRate: {\n            ideal: 24,\n            min: 15\n          }\n        },\n        audio: false\n      };\n\n      // Truy cập camera\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia(constraints);\n\n        // Xử lý stream video\n        const setupVideoStream = videoElement => {\n          if (!videoElement) return false;\n          videoElement.srcObject = stream;\n          videoElement.onloadedmetadata = () => {\n            videoElement.play().catch(err => console.error(\"Lỗi khi play video:\", err));\n          };\n          return true;\n        };\n\n        // Thiết lập stream cho webcam hoặc video element\n        let streamSetupSuccess = false;\n        if (webcamRef.current && webcamRef.current.video) {\n          streamSetupSuccess = setupVideoStream(webcamRef.current.video);\n        } else if (videoRef.current) {\n          streamSetupSuccess = setupVideoStream(videoRef.current);\n        }\n        if (!streamSetupSuccess) {\n          throw new Error(\"Không thể thiết lập video stream\");\n        }\n\n        // Đánh dấu camera đã sẵn sàng\n        dispatch(setCameraReady(true));\n        setLastDetectionTime(Date.now());\n        setCameraRetryCount(0);\n\n        // Bật hiển thị landmark\n        setTimeout(() => {\n          setShowLandmark(true);\n          startLandmarkDetection();\n        }, 1000);\n        enqueueSnackbar(\"Đã kết nối camera thành công\", {\n          variant: \"success\"\n        });\n        return true;\n      } catch (err) {\n        console.error(\"Lỗi truy cập camera:\", err);\n\n        // Thử phương án thay thế nếu lỗi\n        if (cameraRetryCount < 2) {\n          try {\n            var _webcamRef$current2;\n            const altStream = await navigator.mediaDevices.getUserMedia({\n              video: true,\n              audio: false\n            });\n            if ((_webcamRef$current2 = webcamRef.current) !== null && _webcamRef$current2 !== void 0 && _webcamRef$current2.video) {\n              webcamRef.current.video.srcObject = altStream;\n            } else if (videoRef.current) {\n              videoRef.current.srcObject = altStream;\n              videoRef.current.onloadedmetadata = () => videoRef.current.play();\n            }\n            dispatch(setCameraReady(true));\n            setLastDetectionTime(Date.now());\n            setCameraRetryCount(prev => prev + 1);\n            enqueueSnackbar(\"Đã kết nối camera thay thế\", {\n              variant: \"success\"\n            });\n            return true;\n          } catch (altErr) {\n            console.error(\"Không thể sử dụng camera thay thế:\", altErr);\n          }\n        }\n        enqueueSnackbar(`Không thể truy cập camera: ${err.message}`, {\n          variant: \"error\"\n        });\n        return false;\n      }\n    } catch (err) {\n      console.error(\"Lỗi khi khởi tạo camera:\", err);\n      enqueueSnackbar(`Lỗi: ${err.message}`, {\n        variant: \"error\"\n      });\n      return false;\n    }\n  };\n\n  // Hàm bắt đầu phát hiện landmarks theo thời gian thực\n  const startLandmarkDetection = () => {\n    // Xóa interval cũ nếu có\n    if (landmarkDetectionInterval) {\n      clearInterval(landmarkDetectionInterval);\n    }\n\n    // Tạo interval mới để cập nhật landmarks mỗi 50ms\n    const intervalId = setInterval(() => {\n      if (cameraMode === \"face_recognition\" && showLandmark) {\n        handleDetectFaces(true);\n      }\n    }, 50);\n    setLandmarkDetectionInterval(intervalId);\n  };\n\n  // Hàm dừng phát hiện landmarks theo thời gian thực\n  const stopLandmarkDetection = () => {\n    if (landmarkDetectionInterval) {\n      clearInterval(landmarkDetectionInterval);\n      setLandmarkDetectionInterval(null);\n    }\n  };\n\n  // Cập nhật useEffect để bắt đầu và dừng phát hiện landmarks khi camera hoặc chế độ thay đổi\n  useEffect(() => {\n    if (cameraMode === \"face_recognition\" && showLandmark) {\n      startLandmarkDetection();\n    } else {\n      stopLandmarkDetection();\n    }\n    return () => {\n      stopLandmarkDetection();\n    };\n  }, [cameraMode, showLandmark]);\n\n  // Cập nhật useEffect cho việc toggle showLandmark\n  useEffect(() => {\n    if (showLandmark && cameraMode === \"face_recognition\") {\n      startLandmarkDetection();\n    } else {\n      stopLandmarkDetection();\n    }\n  }, [showLandmark]);\n\n  // Hàm kiểm tra và đảm bảo camera hoạt động\n  const ensureCameraIsWorking = () => {\n    var _webcamRef$current3;\n    // Kiểm tra nếu camera chưa hoạt động và đã thử khởi động\n    if (!isCameraReady && cameraRetryCount === 0) {\n      console.log(\"[DEBUG] Camera chưa sẵn sàng, thử khởi động\");\n      setCameraRetryCount(1);\n      initDirectCamera();\n      return false;\n    }\n\n    // Kiểm tra stream của camera\n    const videoElement = isAutoMode ? videoRef.current : (_webcamRef$current3 = webcamRef.current) === null || _webcamRef$current3 === void 0 ? void 0 : _webcamRef$current3.video;\n    if (!videoElement || !videoElement.srcObject || videoElement.readyState !== 4) {\n      console.log(\"[DEBUG] Video stream không hoạt động, thử khởi động lại camera\");\n      if (cameraRetryCount < 3) {\n        setCameraRetryCount(prev => prev + 1);\n        initDirectCamera();\n        return false;\n      }\n    }\n    return true;\n  };\n\n  // Tối ưu hàm phát hiện khuôn mặt\n  const handleDetectFaces = async (landmarkOnly = false) => {\n    var _webcamRef$current4;\n    if (cameraMode !== \"face_recognition\" || !faceapi || !canvasRef.current) return [];\n\n    // Xác định video element hiện tại\n    const videoElement = isAutoMode ? videoRef.current : (_webcamRef$current4 = webcamRef.current) === null || _webcamRef$current4 === void 0 ? void 0 : _webcamRef$current4.video;\n\n    // Kiểm tra video element\n    if (!videoElement || videoElement.readyState !== 4 || videoElement.videoWidth === 0 || videoElement.videoHeight === 0) {\n      return [];\n    }\n    const canvasElement = canvasRef.current;\n\n    // Đặt kích thước canvas\n    const displaySize = {\n      width: videoElement.videoWidth,\n      height: videoElement.videoHeight\n    };\n    faceapi.matchDimensions(canvasElement, displaySize);\n    try {\n      // Sử dụng TinyFaceDetector nhanh hơn để phát hiện khuôn mặt với landmarks\n      let detections = await faceapi.detectAllFaces(videoElement, new faceapi.TinyFaceDetectorOptions({\n        scoreThreshold: DETECTION_THRESHOLD,\n        inputSize: 320\n      })).withFaceLandmarks();\n\n      // Nếu chỉ cần vẽ landmarks, không cần trích xuất descriptor\n      if (landmarkOnly) {\n        if (detections.length > 0) {\n          // Điều chỉnh kết quả theo kích thước canvas\n          const resizedDetections = faceapi.resizeResults(detections, {\n            width: canvasElement.width,\n            height: canvasElement.height\n          });\n\n          // Vẽ landmarks\n          drawFaceLandmarks(resizedDetections, canvasElement);\n        } else {\n          // Xóa canvas nếu không phát hiện khuôn mặt\n          canvasElement.getContext(\"2d\").clearRect(0, 0, canvasElement.width, canvasElement.height);\n        }\n        return detections;\n      }\n\n      // Nếu cần nhận diện đầy đủ, trích xuất thêm descriptors\n      if (detections.length > 0) {\n        var _finalDetections;\n        // Thêm descriptors\n        let finalDetections;\n        try {\n          finalDetections = await faceapi.detectAllFaces(videoElement, new faceapi.TinyFaceDetectorOptions({\n            scoreThreshold: DETECTION_THRESHOLD,\n            inputSize: 320\n          })).withFaceLandmarks().withFaceDescriptors();\n\n          // Nếu không có kết quả hoặc descriptor không hợp lệ, thử dùng SSD MobileNet\n          if ((finalDetections.length === 0 || !finalDetections[0].descriptor) && faceapi.nets.ssdMobilenetv1.isLoaded) {\n            finalDetections = await faceapi.detectAllFaces(videoElement, new faceapi.SsdMobilenetv1Options({\n              minConfidence: DETECTION_THRESHOLD\n            })).withFaceLandmarks().withFaceDescriptors();\n          }\n        } catch (error) {\n          console.error(\"Lỗi khi lấy mô tả khuôn mặt:\", error);\n          finalDetections = detections;\n        }\n\n        // Lọc kết quả hợp lệ\n        finalDetections = ((_finalDetections = finalDetections) === null || _finalDetections === void 0 ? void 0 : _finalDetections.filter(det => {\n          var _det$detection, _det$detection$box, _det$detection2, _det$detection2$box;\n          return (det === null || det === void 0 ? void 0 : (_det$detection = det.detection) === null || _det$detection === void 0 ? void 0 : (_det$detection$box = _det$detection.box) === null || _det$detection$box === void 0 ? void 0 : _det$detection$box._x) != null && (det === null || det === void 0 ? void 0 : (_det$detection2 = det.detection) === null || _det$detection2 === void 0 ? void 0 : (_det$detection2$box = _det$detection2.box) === null || _det$detection2$box === void 0 ? void 0 : _det$detection2$box._y) != null;\n        })) || [];\n        if (finalDetections.length > 0) {\n          // Điều chỉnh kích thước và vẽ landmarks\n          const resizedDetections = faceapi.resizeResults(finalDetections, {\n            width: canvasElement.width,\n            height: canvasElement.height\n          });\n\n          // Vẽ landmarks nếu được bật\n          if (showLandmark) {\n            drawFaceLandmarks(resizedDetections, canvasElement);\n          }\n\n          // Xử lý nhận diện\n          handleFaceDetection(resizedDetections);\n          return resizedDetections;\n        }\n      }\n\n      // Xóa canvas nếu không có kết quả\n      canvasElement.getContext(\"2d\").clearRect(0, 0, canvasElement.width, canvasElement.height);\n      return [];\n    } catch (error) {\n      console.error(\"Lỗi khi phát hiện khuôn mặt:\", error);\n      canvasElement.getContext(\"2d\").clearRect(0, 0, canvasElement.width, canvasElement.height);\n      return [];\n    }\n  };\n\n  // Hàm vẽ landmarks mới, tách biệt và tối ưu\n  const drawFaceLandmarks = (detections, canvas) => {\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    detections.forEach(detection => {\n      const {\n        _box: box\n      } = detection.detection || {};\n      const landmarks = detection.landmarks;\n      if (!box || !(landmarks !== null && landmarks !== void 0 && landmarks.positions) || box._x == null || box._y == null) return;\n\n      // Vẽ hộp giới hạn khuôn mặt\n      ctx.strokeStyle = \"#00FF00\";\n      ctx.lineWidth = 2;\n      ctx.strokeRect(box._x, box._y, box._width, box._height);\n\n      // Hiển thị thông tin\n      ctx.fillStyle = \"#FFFFFF\";\n      ctx.font = \"16px Arial\";\n      ctx.fillText(\"Đã phát hiện khuôn mặt\", box._x, box._y + box._height + 20);\n\n      // Viền cho chữ\n      ctx.strokeStyle = \"#000000\";\n      ctx.lineWidth = 0.5;\n      ctx.strokeText(\"Đã phát hiện khuôn mặt\", box._x, box._y + box._height + 20);\n      const points = landmarks.positions;\n      if (!points || points.length < 68) return;\n\n      // Hàm vẽ nhóm điểm\n      const drawPoints = (startIdx, endIdx, color) => {\n        ctx.fillStyle = color;\n        for (let i = startIdx; i <= endIdx; i++) {\n          var _points$i, _points$i2;\n          if (((_points$i = points[i]) === null || _points$i === void 0 ? void 0 : _points$i.x) != null && ((_points$i2 = points[i]) === null || _points$i2 === void 0 ? void 0 : _points$i2.y) != null) {\n            ctx.beginPath();\n            ctx.arc(points[i].x, points[i].y, 2, 0, 2 * Math.PI);\n            ctx.fill();\n          }\n        }\n      };\n\n      // Vẽ các điểm landmarks\n      drawPoints(36, 41, \"#FF0000\"); // Mắt trái (đỏ)\n      drawPoints(42, 47, \"#0000FF\"); // Mắt phải (xanh dương)\n      drawPoints(27, 35, \"#FFFF00\"); // Mũi (vàng)\n      drawPoints(48, 67, \"#FF00FF\"); // Miệng (tím)\n      drawPoints(0, 26, \"#00FF00\"); // Viền khuôn mặt (xanh lá)\n    });\n  };\n\n  // Hàm trích xuất descriptor từ sinh viên, tối ưu hoá và chỉ phải làm một lần\n  const extractStudentDescriptors = student => {\n    var _student$faceFeatures;\n    if (!student) return [];\n    const descriptors = [];\n\n    // Kiểm tra cấu trúc mới\n    if ((_student$faceFeatures = student.faceFeatures) !== null && _student$faceFeatures !== void 0 && _student$faceFeatures.descriptors) {\n      const featuresData = student.faceFeatures.descriptors;\n\n      // Duyệt qua tất cả cấu trúc lồng nhau để tìm mảng 128 phần tử\n      const findDescriptorsInArray = (arr, maxDepth = 3, depth = 0) => {\n        if (!Array.isArray(arr) || depth > maxDepth) return;\n        if (arr.length === 128 && arr.every(val => typeof val === \"number\")) {\n          descriptors.push(arr);\n          return;\n        }\n        for (const item of arr) {\n          if (Array.isArray(item)) {\n            findDescriptorsInArray(item, maxDepth, depth + 1);\n          }\n        }\n      };\n      findDescriptorsInArray(featuresData);\n    }\n\n    // Kiểm tra cấu trúc cũ\n    if (descriptors.length === 0 && student.faceDescriptors) {\n      const oldFeatures = student.faceDescriptors;\n      if (Array.isArray(oldFeatures)) {\n        // Trường hợp 1: mảng các descriptor\n        for (const item of oldFeatures) {\n          if (Array.isArray(item) && item.length === 128) {\n            descriptors.push(item);\n          }\n          // Trường hợp 2: mảng các object chứa descriptor\n          else if (typeof item === \"object\" && item !== null) {\n            // Tìm trong các thuộc tính của object\n            for (const key in item) {\n              const value = item[key];\n              if (Array.isArray(value) && value.length === 128 && value.every(v => typeof v === \"number\")) {\n                descriptors.push(value);\n              }\n              // Tìm trong thuộc tính descriptors\n              else if (key === \"descriptors\" && Array.isArray(value)) {\n                value.forEach(desc => {\n                  if (Array.isArray(desc) && desc.length === 128) {\n                    descriptors.push(desc);\n                  }\n                });\n              }\n            }\n          }\n        }\n      }\n    }\n    return descriptors;\n  };\n\n  // Xử lý phát hiện khuôn mặt\n  const handleFaceDetection = async detections => {\n    // Cập nhật state\n    dispatch(setDetectedFaces(detections));\n    try {\n      // Cập nhật thời gian phát hiện\n      setLastDetectionTime(Date.now());\n\n      // Nếu không có khuôn mặt nào được phát hiện, dừng lại\n      if (!detections || detections.length === 0) {\n        if (ENABLE_DEBUG_LOGS) {\n          console.log(\"[DEBUG] Không phát hiện khuôn mặt\");\n        }\n        return;\n      }\n      if (ENABLE_DEBUG_LOGS) {\n        console.log(`[DEBUG] Đã phát hiện ${detections.length} khuôn mặt`);\n      }\n\n      // Xử lý nhận diện khuôn mặt nếu có sinh viên\n      if (classStudents && classStudents.length > 0) {\n        // Xử lý nhận diện khuôn mặt sẽ được thêm sau\n      }\n    } catch (error) {\n      console.error(\"Lỗi khi xử lý khuôn mặt:\", error);\n    }\n  };\n\n  // Điểm danh thủ công\n  const openManualAttendanceDialog = student => {\n    if (!student) {\n      enqueueSnackbar(\"Không tìm thấy thông tin sinh viên\", {\n        variant: \"error\"\n      });\n      return;\n    }\n    setSelectedStudent(student);\n    setManualAttendanceData({\n      status: \"present\",\n      // Mặc định là có mặt\n      note: \"\"\n    });\n    setManualDialogOpen(true);\n  };\n  const handleManualDialogClose = () => {\n    setManualDialogOpen(false);\n  };\n  const handleManualAttendanceChange = e => {\n    setManualAttendanceData({\n      ...manualAttendanceData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleManualAttendanceSubmit = async () => {\n    if (!selectedStudent) return;\n    try {\n      // Hiển thị thông báo đang xử lý\n      enqueueSnackbar(\"Đang xử lý điểm danh thủ công...\", {\n        variant: \"info\"\n      });\n\n      // Gọi API điểm danh thủ công\n      const result = await dispatch(manualAttendance({\n        sessionId,\n        studentId: selectedStudent._id,\n        status: manualAttendanceData.status,\n        note: manualAttendanceData.note\n      })).unwrap();\n\n      // Nếu điểm danh thành công\n      if (result !== null && result !== void 0 && result.data) {\n        // Cập nhật logs điểm danh hiệu quả hơn\n        setAttendanceLogs(prevLogs => {\n          // Lọc bỏ log cũ của sinh viên nếu có\n          const filteredLogs = prevLogs.filter(log => log.student_id._id !== selectedStudent._id);\n          // Thêm log mới\n          return [...filteredLogs, {\n            ...result.data,\n            student_id: selectedStudent\n          }];\n        });\n        enqueueSnackbar(`Đã điểm danh ${manualAttendanceData.status === \"present\" ? \"có mặt\" : manualAttendanceData.status === \"absent\" ? \"vắng mặt\" : manualAttendanceData.status === \"late\" ? \"đi trễ\" : \"về sớm\"} cho ${selectedStudent.full_name}`, {\n          variant: \"success\"\n        });\n\n        // Đóng dialog\n        handleManualDialogClose();\n\n        // Cập nhật thông tin phiên\n        fetchSessionInfo();\n      }\n    } catch (error) {\n      console.error(\"Lỗi khi điểm danh thủ công:\", error);\n      enqueueSnackbar(\"Lỗi khi điểm danh thủ công\", {\n        variant: \"error\"\n      });\n    }\n  };\n\n  // Đánh dấu điểm danh từ nhận diện khuôn mặt\n  const markAttendance = async (studentId, faceDescriptor, confidence, imageBase64) => {\n    try {\n      // Hiển thị thông báo đang xử lý\n      enqueueSnackbar(\"Đang xử lý điểm danh...\", {\n        variant: \"info\"\n      });\n\n      // Gọi API điểm danh qua Redux\n      const result = await dispatch(verifyAttendance({\n        sessionId,\n        studentId,\n        faceDescriptor,\n        confidence,\n        imageBase64\n      })).unwrap();\n\n      // Nếu điểm danh thành công\n      if (result !== null && result !== void 0 && result.data) {\n        // Tìm thông tin sinh viên\n        const student = classStudents.find(s => s._id === studentId);\n        if (student) {\n          // Cập nhật logs điểm danh hiệu quả hơn\n          setAttendanceLogs(prevLogs => {\n            // Lọc bỏ log cũ của sinh viên nếu có\n            const filteredLogs = prevLogs.filter(log => log.student_id._id !== studentId);\n            // Thêm log mới\n            return [...filteredLogs, {\n              ...result.data,\n              student_id: student\n            }];\n          });\n          enqueueSnackbar(`Đã điểm danh cho ${student.full_name}`, {\n            variant: \"success\"\n          });\n        }\n\n        // Cập nhật thông tin phiên một cách bất đồng bộ\n        fetchSessionInfo();\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error(\"Lỗi khi xác nhận điểm danh:\", error);\n      enqueueSnackbar(\"Lỗi khi xác nhận điểm danh\", {\n        variant: \"error\"\n      });\n      return false;\n    }\n  };\n\n  // Kết thúc phiên điểm danh\n  const completeSession = async () => {\n    try {\n      // Hiển thị thông báo đang xử lý\n      enqueueSnackbar(\"Đang kết thúc phiên điểm danh...\", {\n        variant: \"info\"\n      });\n\n      // Gọi API kết thúc phiên\n      await axios.put(`${API_URL}/attendance/sessions/${sessionId}`, {\n        status: \"completed\"\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      enqueueSnackbar(\"Phiên điểm danh đã kết thúc thành công\", {\n        variant: \"success\"\n      });\n\n      // Chuyển hướng về trang lớp học\n      setTimeout(() => {\n        navigate(`/teacher/classes/${classId}`);\n      }, 1000);\n    } catch (error) {\n      console.error(\"Lỗi khi kết thúc phiên điểm danh:\", error);\n      enqueueSnackbar(\"Lỗi khi kết thúc phiên điểm danh\", {\n        variant: \"error\"\n      });\n    }\n  };\n\n  // Làm mới danh sách điểm danh\n  const refreshAttendanceLogs = async () => {\n    try {\n      enqueueSnackbar(\"Đang làm mới dữ liệu điểm danh...\", {\n        variant: \"info\"\n      });\n\n      // Tải song song dữ liệu logs và thông tin phiên\n      const [logsResponse, sessionResponse] = await Promise.all([axios.get(`${API_URL}/attendance/logs/${sessionId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }), axios.get(`${API_URL}/attendance/sessions/${sessionId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })]);\n\n      // Cập nhật state\n      setAttendanceLogs(logsResponse.data.data);\n      setSessionInfo(sessionResponse.data.data);\n      enqueueSnackbar(\"Đã làm mới dữ liệu điểm danh\", {\n        variant: \"success\"\n      });\n    } catch (error) {\n      console.error(\"Lỗi khi làm mới dữ liệu:\", error);\n      enqueueSnackbar(\"Lỗi khi làm mới dữ liệu điểm danh\", {\n        variant: \"error\"\n      });\n    }\n  };\n\n  // Tối ưu hàm lấy thông tin phiên\n  const fetchSessionInfo = async () => {\n    try {\n      const sessionResponse = await axios.get(`${API_URL}/attendance/sessions/${sessionId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSessionInfo(sessionResponse.data.data);\n      return sessionResponse.data.data;\n    } catch (error) {\n      console.error(\"Lỗi khi lấy thông tin phiên:\", error);\n      return null;\n    }\n  };\n\n  // Tối ưu hàm xử lý nhận diện khuôn mặt\n  const captureAndRecognize = async () => {\n    try {\n      var _webcamRef$current5;\n      setIsRecognizing(true);\n      enqueueSnackbar(\"Đang nhận diện khuôn mặt...\", {\n        variant: \"info\"\n      });\n\n      // Kiểm tra camera\n      if (!ensureCameraIsWorking()) {\n        enqueueSnackbar(\"Camera không hoạt động, vui lòng khởi động lại\", {\n          variant: \"error\"\n        });\n        setIsRecognizing(false);\n        return;\n      }\n\n      // Phát hiện khuôn mặt\n      const detections = await handleDetectFaces(false);\n\n      // Kiểm tra phát hiện khuôn mặt\n      if (!detections || detections.length === 0) {\n        enqueueSnackbar(\"Không phát hiện khuôn mặt nào trong hình\", {\n          variant: \"warning\"\n        });\n        setIsRecognizing(false);\n        return;\n      }\n\n      // Kiểm tra descriptor\n      if (!detections[0].descriptor) {\n        enqueueSnackbar(\"Không thể trích xuất đặc trưng khuôn mặt để nhận diện\", {\n          variant: \"error\"\n        });\n        setIsRecognizing(false);\n        return;\n      }\n\n      // Xử lý nhận diện với dữ liệu sinh viên\n      if (!classStudents || classStudents.length === 0) {\n        enqueueSnackbar(\"Không có dữ liệu sinh viên để so sánh\", {\n          variant: \"error\"\n        });\n        setIsRecognizing(false);\n        return;\n      }\n\n      // Chụp ảnh từ webcam\n      const imageBase64 = (_webcamRef$current5 = webcamRef.current) === null || _webcamRef$current5 === void 0 ? void 0 : _webcamRef$current5.getScreenshot();\n\n      // Lấy descriptor của khuôn mặt phát hiện được\n      const faceDescriptor = detections[0].descriptor;\n\n      // So sánh với dữ liệu sinh viên\n      const matchResults = [];\n\n      // Tạo một mảng promises để xử lý song song các tính toán\n      const comparePromises = classStudents.map(async student => {\n        // Trích xuất descriptors từ sinh viên\n        const studentDescriptors = extractStudentDescriptors(student);\n        if (studentDescriptors.length === 0) return null;\n\n        // Tính độ tương đồng tốt nhất\n        let bestMatch = 0;\n        for (const descriptor of studentDescriptors) {\n          try {\n            const distance = faceapi.euclideanDistance(faceDescriptor, descriptor);\n            const similarity = Math.max(0, 1 - distance);\n            bestMatch = Math.max(bestMatch, similarity);\n          } catch (error) {\n            // Bỏ qua lỗi và tiếp tục với descriptor tiếp theo\n          }\n        }\n        return {\n          studentId: student._id,\n          name: student.full_name,\n          confidence: bestMatch,\n          studentCode: student.student_code\n        };\n      });\n\n      // Đợi tất cả tính toán hoàn thành và lọc kết quả null\n      const results = (await Promise.all(comparePromises)).filter(result => result !== null);\n\n      // Sắp xếp kết quả theo độ tương đồng\n      results.sort((a, b) => b.confidence - a.confidence);\n      matchResults.push(...results);\n\n      // Lọc kết quả theo ngưỡng\n      const filteredResults = matchResults.filter(r => r.confidence > RECOGNITION_THRESHOLD);\n\n      // Cập nhật danh sách sinh viên được nhận diện\n      dispatch(setRecognizedStudents(filteredResults));\n\n      // Hiển thị kết quả\n      if (matchResults.length > 0) {\n        const topMatches = matchResults.slice(0, 3);\n        if (filteredResults.length > 0) {\n          const topMatch = filteredResults[0];\n          enqueueSnackbar(`Đã nhận diện: ${topMatch.name} (${Math.round(topMatch.confidence * 100)}%)`, {\n            variant: \"success\"\n          });\n\n          // Tự động điểm danh nếu độ tin cậy cao\n          if (topMatch.confidence > CONFIDENCE_THRESHOLD) {\n            handleMarkAttendance(topMatch.studentId, topMatch.confidence);\n          }\n        } else {\n          const matchDetails = topMatches.map(m => `${m.name}: ${(m.confidence * 100).toFixed(1)}%`).join(\", \");\n          enqueueSnackbar(`Không nhận diện được sinh viên nào vượt ngưỡng. Gần nhất: ${matchDetails}`, {\n            variant: \"warning\"\n          });\n        }\n      } else {\n        enqueueSnackbar(\"Không nhận diện được sinh viên nào\", {\n          variant: \"warning\"\n        });\n      }\n    } catch (error) {\n      console.error(\"Lỗi khi nhận diện khuôn mặt:\", error);\n      enqueueSnackbar(`Lỗi khi nhận diện: ${error.message}`, {\n        variant: \"error\"\n      });\n    } finally {\n      setIsRecognizing(false);\n    }\n  };\n\n  // Tối ưu hàm đánh dấu điểm danh\n  const handleMarkAttendance = async (studentId, confidence) => {\n    // Kiểm tra xem sinh viên đã được điểm danh chưa\n    const isAlreadyAttended = attendanceLogs.some(log => log.student_id._id === studentId && log.status === \"present\");\n    if (isAlreadyAttended) return;\n    try {\n      var _webcamRef$current6;\n      // Chụp ảnh từ video element\n      const videoElement = isAutoMode ? videoRef.current : (_webcamRef$current6 = webcamRef.current) === null || _webcamRef$current6 === void 0 ? void 0 : _webcamRef$current6.video;\n      if (!videoElement) return;\n      let imageBase64 = null;\n\n      // Tạo ảnh chụp\n      if (!isAutoMode && webcamRef.current) {\n        imageBase64 = webcamRef.current.getScreenshot();\n      } else if (isAutoMode && videoElement) {\n        // Tạo canvas để chụp từ video\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = videoElement.videoWidth;\n        canvas.height = videoElement.videoHeight;\n        const ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(videoElement, 0, 0);\n        imageBase64 = canvas.toDataURL(\"image/jpeg\");\n      }\n\n      // Tìm sinh viên trong danh sách\n      const student = classStudents.find(s => s._id === studentId);\n      if (!student) return;\n\n      // Trích xuất descriptor\n      const descriptors = extractStudentDescriptors(student);\n      const descriptor = descriptors.length > 0 ? descriptors[0] : null;\n\n      // Gọi API điểm danh\n      await markAttendance(studentId, descriptor, confidence, imageBase64);\n    } catch (error) {\n      console.error(\"Lỗi khi đánh dấu điểm danh:\", error);\n      enqueueSnackbar(\"Lỗi khi đánh dấu điểm danh\", {\n        variant: \"error\"\n      });\n    }\n  };\n\n  // Bật/tắt hiển thị landmark trên khuôn mặt\n  const toggleLandmarkDetection = () => {\n    const newState = !showLandmark;\n    setShowLandmark(newState);\n\n    // Bắt đầu hoặc dừng interval landmark detection\n    if (newState) {\n      startLandmarkDetection();\n    } else if (landmarkIntervalId) {\n      clearInterval(landmarkIntervalId);\n      setLandmarkIntervalId(null);\n\n      // Xóa canvas khi tắt landmarks\n      const canvasElement = canvasRef.current;\n      if (canvasElement) {\n        const ctx = canvasElement.getContext(\"2d\");\n        ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n      }\n    }\n  };\n\n  // Thêm hàm debug để kiểm tra cấu trúc dữ liệu khuôn mặt\n  const debugFaceFeatures = () => {\n    if (!classStudents || classStudents.length === 0) {\n      console.log(\"[DEBUG] Không có sinh viên nào để kiểm tra dữ liệu khuôn mặt\");\n      return;\n    }\n    classStudents.forEach((student, index) => {\n      console.log(`[DEBUG] Sinh viên #${index + 1}: ${student.full_name}`);\n\n      // Kiểm tra dữ liệu faceFeatures\n      if (student.faceFeatures) {\n        console.log(`  - Có dữ liệu faceFeatures`);\n\n        // Kiểm tra descriptors\n        if (student.faceFeatures.descriptors) {\n          console.log(`  - Có descriptors: ${student.faceFeatures.descriptors.length} nhóm`);\n          student.faceFeatures.descriptors.forEach((group, groupIndex) => {\n            if (Array.isArray(group)) {\n              console.log(`    - Nhóm #${groupIndex + 1}: ${group.length} descriptors`);\n              group.forEach((descriptor, descIndex) => {\n                if (Array.isArray(descriptor)) {\n                  console.log(`      - Descriptor #${descIndex + 1}: ${descriptor.length} phần tử`);\n                } else {\n                  console.log(`      - Descriptor #${descIndex + 1}: Không phải mảng`);\n                }\n              });\n            } else {\n              console.log(`    - Nhóm #${groupIndex + 1}: Không phải mảng`);\n            }\n          });\n        } else {\n          console.log(`  - Không có dữ liệu descriptors`);\n        }\n      } else {\n        console.log(`  - Không có dữ liệu faceFeatures`);\n      }\n\n      // Kiểm tra dữ liệu cũ (faceDescriptors)\n      if (student.faceDescriptors) {\n        console.log(`  - Có dữ liệu faceDescriptors (cấu trúc cũ): ${student.faceDescriptors.length} descriptors`);\n      }\n    });\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"60vh\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1520,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1514,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Lấy danh sách sinh viên vắng mặt\n  const getAbsentStudents = () => {\n    if (!classInfo || !classInfo.students || !attendanceLogs) return [];\n\n    // Tạo Set các ID sinh viên đã điểm danh để tăng tốc độ tìm kiếm\n    const presentStudentIds = new Set(attendanceLogs.filter(log => log.status === \"present\").map(log => log.student_id._id));\n\n    // Lọc ra sinh viên chưa điểm danh\n    return classInfo.students.filter(student => !presentStudentIds.has(student._id));\n  };\n  const absentStudents = getAbsentStudents();\n\n  // Điểm danh thủ công trong chế độ đơn giản\n  const showStudentList = () => {\n    if (!classInfo) {\n      enqueueSnackbar(\"Không có thông tin lớp học\", {\n        variant: \"error\"\n      });\n      return;\n    }\n\n    // Lấy danh sách sinh viên vắng mặt\n    const absentStudents = getAbsentStudents();\n    if (absentStudents.length === 0) {\n      enqueueSnackbar(\"Tất cả sinh viên đã được điểm danh\", {\n        variant: \"success\"\n      });\n      return;\n    }\n\n    // Mở dialog điểm danh thủ công với sinh viên đầu tiên trong danh sách\n    if (absentStudents.length > 0 && absentStudents[0]) {\n      openManualAttendanceDialog(absentStudents[0]);\n    }\n  };\n\n  // Tối ưu phần Webcam và Camera\n  const VideoDisplay = ({\n    isCameraReady,\n    isAutoMode,\n    webcamRef,\n    videoRef,\n    canvasRef,\n    onUserMedia,\n    onUserMediaError\n  }) => {\n    // Component con để xử lý hiển thị video\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        position: \"relative\",\n        width: \"100%\",\n        height: \"400px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        overflow: \"hidden\",\n        mb: 2\n      },\n      children: isCameraReady ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [isAutoMode ?\n        /*#__PURE__*/\n        // Video element cho chế độ tự động\n        _jsxDEV(\"video\", {\n          ref: videoRef,\n          style: {\n            position: \"absolute\",\n            width: \"100%\",\n            height: \"100%\",\n            objectFit: \"cover\"\n          },\n          autoPlay: true,\n          playsInline: true,\n          muted: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1596,\n          columnNumber: 15\n        }, this) :\n        /*#__PURE__*/\n        // Webcam component cho chế độ thủ công\n        _jsxDEV(Webcam, {\n          audio: false,\n          ref: webcamRef,\n          screenshotFormat: \"image/jpeg\",\n          width: 640,\n          height: 480,\n          videoConstraints: {\n            width: 640,\n            height: 480,\n            facingMode: \"user\"\n          },\n          style: {\n            position: \"absolute\",\n            width: \"100%\",\n            height: \"100%\",\n            objectFit: \"cover\"\n          },\n          onUserMedia: onUserMedia,\n          onUserMediaError: onUserMediaError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1610,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          style: {\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            width: \"100%\",\n            height: \"100%\",\n            objectFit: \"cover\",\n            zIndex: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1632,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(CameraLoadingPlaceholder, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1646,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1579,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Component hiển thị placeholder khi camera đang tải\n  const CameraLoadingPlaceholder = ({\n    initDirectCamera,\n    showStudentList\n  }) => /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n      size: 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1655,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      mt: 2,\n      children: \"\\u0110ang kh\\u1EDFi t\\u1EA1o camera...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1656,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"caption\",\n      color: \"text.secondary\",\n      sx: {\n        mt: 1\n      },\n      children: \"Ch\\u1EDD k\\u1EBFt n\\u1ED1i camera - H\\xE3y \\u0111\\u1EA3m b\\u1EA3o b\\u1EA1n \\u0111\\xE3 c\\u1EA5p quy\\u1EC1n camera\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1657,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        gap: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"small\",\n        onClick: initDirectCamera,\n        startIcon: /*#__PURE__*/_jsxDEV(CameraAlt, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1675,\n          columnNumber: 22\n        }, this),\n        children: \"Kh\\u1EDFi \\u0111\\u1ED9ng camera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1670,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"warning\",\n        size: \"small\",\n        onClick: showStudentList,\n        startIcon: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1685,\n          columnNumber: 22\n        }, this),\n        children: \"\\u0110i\\u1EC3m danh th\\u1EE7 c\\xF4ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1680,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"info\",\n        sx: {\n          mt: 2,\n          maxWidth: 300\n        },\n        children: [\"N\\u1EBFu camera kh\\xF4ng ho\\u1EA1t \\u0111\\u1ED9ng, vui l\\xF2ng th\\u1EED:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            margin: \"8px 0\",\n            paddingLeft: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Ki\\u1EC3m tra quy\\u1EC1n camera tr\\xEAn tr\\xECnh duy\\u1EC7t\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1693,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"L\\xE0m m\\u1EDBi trang v\\xE0 th\\u1EED l\\u1EA1i\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1694,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u0110\\u1EA3m b\\u1EA3o kh\\xF4ng c\\xF3 \\u1EE9ng d\\u1EE5ng kh\\xE1c \\u0111ang s\\u1EED d\\u1EE5ng camera\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1695,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1692,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1690,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1661,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1654,\n    columnNumber: 5\n  }, this);\n\n  // Component hiển thị danh sách sinh viên đã nhận diện\n  const RecognizedStudentsList = ({\n    students,\n    onMarkAttendance\n  }) => {\n    if (students.length === 0) return null;\n    return /*#__PURE__*/_jsxDEV(Box, {\n      mt: 2,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        gutterBottom: true,\n        children: [\"\\u0110\\xE3 nh\\u1EADn di\\u1EC7n (\", students.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1708,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        children: students.map((student, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          sm: 4,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 2,\n            sx: {\n              p: 1,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              noWrap: true,\n              children: student.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1723,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              color: \"textSecondary\",\n              children: [Math.round(student.confidence * 100), \"% match\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1726,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              variant: \"outlined\",\n              color: \"primary\",\n              sx: {\n                mt: 1\n              },\n              onClick: () => onMarkAttendance(student.studentId, student.confidence),\n              children: [/*#__PURE__*/_jsxDEV(Check, {\n                fontSize: \"small\",\n                sx: {\n                  mr: 0.5\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1738,\n                columnNumber: 19\n              }, this), \"\\u0110i\\u1EC3m danh\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1729,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1714,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1713,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1711,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1707,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Component hiển thị danh sách sinh viên đã điểm danh\n  const PresentStudentsList = ({\n    attendanceLogs,\n    refreshAttendanceLogs\n  }) => /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      mb: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        mb: 2,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"C\\xF3 m\\u1EB7t (\", attendanceLogs.filter(log => log.status === \"present\").length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1759,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          onClick: refreshAttendanceLogs,\n          title: \"L\\xE0m m\\u1EDBi\",\n          children: /*#__PURE__*/_jsxDEV(Refresh, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1768,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1763,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1753,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        dense: true,\n        sx: {\n          maxHeight: \"300px\",\n          overflow: \"auto\"\n        },\n        children: [attendanceLogs.filter(log => log.status === \"present\").sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp)).map(log => /*#__PURE__*/_jsxDEV(ListItem, {\n          secondaryAction: /*#__PURE__*/_jsxDEV(Chip, {\n            size: \"small\",\n            icon: log.recognized ? /*#__PURE__*/_jsxDEV(VerifiedUser, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1783,\n              columnNumber: 40\n            }, this) : null,\n            label: log.recognized ? \"Tự động\" : \"Thủ công\",\n            color: log.recognized ? \"success\" : \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1780,\n            columnNumber: 19\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              alt: log.student_id.full_name,\n              src: log.student_id.avatar_url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1791,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1790,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: log.student_id.full_name,\n            secondary: `${new Date(log.timestamp).toLocaleTimeString(\"vi-VN\")}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1796,\n            columnNumber: 17\n          }, this)]\n        }, log._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1777,\n          columnNumber: 15\n        }, this)), attendanceLogs.filter(log => log.status === \"present\").length === 0 && /*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Ch\\u01B0a c\\xF3 sinh vi\\xEAn n\\xE0o \\u0111i\\u1EC3m danh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1808,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1807,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1772,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1752,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1751,\n    columnNumber: 5\n  }, this);\n\n  // Component hiển thị danh sách sinh viên vắng mặt\n  const AbsentStudentsList = ({\n    absentStudents,\n    onOpenManualAttendance\n  }) => /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: [\"V\\u1EAFng m\\u1EB7t (\", absentStudents.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1820,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        dense: true,\n        sx: {\n          maxHeight: \"300px\",\n          overflow: \"auto\"\n        },\n        children: [absentStudents.map(student => /*#__PURE__*/_jsxDEV(ListItem, {\n          secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"end\",\n            onClick: () => onOpenManualAttendance(student),\n            title: \"\\u0110i\\u1EC3m danh th\\u1EE7 c\\xF4ng\",\n            children: /*#__PURE__*/_jsxDEV(Edit, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1834,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1829,\n            columnNumber: 17\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              alt: student.full_name,\n              src: student.avatar_url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1839,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1838,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: student.full_name,\n            secondary: student.student_code\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1841,\n            columnNumber: 15\n          }, this)]\n        }, student._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1826,\n          columnNumber: 13\n        }, this)), absentStudents.length === 0 && /*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Kh\\xF4ng c\\xF3 sinh vi\\xEAn n\\xE0o v\\u1EAFng m\\u1EB7t\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1850,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1849,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1824,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1819,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1818,\n    columnNumber: 5\n  }, this);\n\n  // Component dialog điểm danh thủ công\n  const ManualAttendanceDialog = ({\n    open,\n    onClose,\n    student,\n    attendanceData,\n    onAttendanceChange,\n    onSubmit\n  }) => /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: onClose,\n    maxWidth: \"sm\",\n    fullWidth: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"\\u0110i\\u1EC3m danh th\\u1EE7 c\\xF4ng\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1868,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          children: [student === null || student === void 0 ? void 0 : student.full_name, \" (\", student === null || student === void 0 ? void 0 : student.student_code, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1871,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          margin: \"normal\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Tr\\u1EA1ng th\\xE1i\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1876,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            name: \"status\",\n            value: attendanceData.status,\n            onChange: onAttendanceChange,\n            label: \"Tr\\u1EA1ng th\\xE1i\",\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"present\",\n              children: \"C\\xF3 m\\u1EB7t\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1883,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"absent\",\n              children: \"V\\u1EAFng m\\u1EB7t\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1884,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"late\",\n              children: \"\\u0110i tr\\u1EC5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1885,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"early_leave\",\n              children: \"V\\u1EC1 s\\u1EDBm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1886,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1877,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1875,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          margin: \"normal\",\n          name: \"note\",\n          label: \"Ghi ch\\xFA\",\n          value: attendanceData.note,\n          onChange: onAttendanceChange,\n          multiline: true,\n          rows: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1890,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1870,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1869,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        children: \"H\\u1EE7y\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1903,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"X\\xE1c nh\\u1EADn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1904,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1902,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1867,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      mb: 2,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: [\"\\u0110i\\u1EC3m Danh - \", classInfo === null || classInfo === void 0 ? void 0 : classInfo.class_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1920,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          color: \"textSecondary\",\n          children: [\"Bu\\u1ED5i \", sessionInfo === null || sessionInfo === void 0 ? void 0 : sessionInfo.session_number, \" -\", \" \", new Date(sessionInfo === null || sessionInfo === void 0 ? void 0 : sessionInfo.date).toLocaleDateString(\"vi-VN\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1923,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1919,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        startIcon: /*#__PURE__*/_jsxDEV(ArrowBack, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1930,\n          columnNumber: 22\n        }, this),\n        onClick: () => navigate(`/teacher/classes/${classId}`),\n        children: \"Quay l\\u1EA1i\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1928,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1913,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      mt: 1,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              mb: 2,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Camera nh\\u1EADn di\\u1EC7n\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1947,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Chip, {\n                  label: isAutoMode ? \"Tự động đang bật\" : \"Tự động đang tắt\",\n                  color: isAutoMode ? \"success\" : \"default\",\n                  sx: {\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1949,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: isAutoMode ? \"error\" : \"primary\",\n                  onClick: () => {\n                    if (isAutoMode) {\n                      // Dừng tự động\n                      if (intervalId) {\n                        clearInterval(intervalId);\n                        setIntervalId(null);\n                      }\n                      setIsAutoMode(false);\n                      enqueueSnackbar(\"Đã tắt chế độ tự động điểm danh\", {\n                        variant: \"info\"\n                      });\n                    } else {\n                      // Bắt đầu tự động\n                      if (intervalId) {\n                        clearInterval(intervalId);\n                      }\n                      setLastDetectionTime(Date.now());\n                      const id = setInterval(() => {\n                        handleDetectFaces();\n                      }, AUTO_DETECT_INTERVAL);\n                      setIntervalId(id);\n                      setIsAutoMode(true);\n                      enqueueSnackbar(\"Đã bật chế độ tự động điểm danh\", {\n                        variant: \"info\"\n                      });\n                    }\n                  },\n                  children: isAutoMode ? \"Tắt tự động\" : \"Bật tự động\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1954,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1948,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1941,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1940,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(VideoDisplay, {\n            isCameraReady: isCameraReady,\n            isAutoMode: isAutoMode,\n            webcamRef: webcamRef,\n            videoRef: videoRef,\n            canvasRef: canvasRef,\n            onUserMedia: stream => {\n              console.log(\"Camera đã được cấp quyền và khởi tạo\", stream.id);\n              setTimeout(() => {\n                if (webcamRef.current && webcamRef.current.video) {\n                  dispatch(setCameraReady(true));\n                  setLastDetectionTime(Date.now());\n                }\n              }, 500);\n            },\n            onUserMediaError: err => {\n              console.error(\"Lỗi khi truy cập camera:\", err);\n              enqueueSnackbar(`Không thể truy cập camera: ${err.name === \"NotAllowedError\" ? \"Bạn chưa cấp quyền truy cập camera\" : err.name === \"NotFoundError\" ? \"Không tìm thấy thiết bị camera\" : err.message || \"Lỗi không xác định\"}`, {\n                variant: \"error\"\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1992,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            px: 2,\n            pb: 2,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              onClick: captureAndRecognize,\n              startIcon: /*#__PURE__*/_jsxDEV(CameraAlt, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2026,\n                columnNumber: 28\n              }, this),\n              disabled: !isCameraReady || isRecognizing || isAutoMode,\n              children: isRecognizing ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 24,\n                color: \"inherit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2030,\n                columnNumber: 19\n              }, this) : \"Chụp & Nhận diện\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2023,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: isCameraReady && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: showLandmark ? \"success\" : \"info\",\n                  onClick: toggleLandmarkDetection,\n                  sx: {\n                    mr: 1\n                  },\n                  children: showLandmark ? \"Tắt Landmark\" : \"Hiện Landmark\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2039,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  onClick: completeSession,\n                  startIcon: /*#__PURE__*/_jsxDEV(Save, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2052,\n                    columnNumber: 34\n                  }, this),\n                  disabled: (sessionInfo === null || sessionInfo === void 0 ? void 0 : sessionInfo.status) === \"completed\",\n                  children: \"K\\u1EBFt th\\xFAc phi\\xEAn\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2048,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2036,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2022,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            px: 2,\n            pb: 2,\n            children: /*#__PURE__*/_jsxDEV(RecognizedStudentsList, {\n              students: recognizedStudents,\n              onMarkAttendance: handleMarkAttendance\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2064,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2063,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1939,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1938,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: [/*#__PURE__*/_jsxDEV(PresentStudentsList, {\n          attendanceLogs: attendanceLogs.filter(log => log.status === \"present\"),\n          refreshAttendanceLogs: refreshAttendanceLogs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2074,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AbsentStudentsList, {\n          absentStudents: absentStudents,\n          onOpenManualAttendance: openManualAttendanceDialog\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2082,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2072,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1937,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ManualAttendanceDialog, {\n      open: manualDialogOpen,\n      onClose: handleManualDialogClose,\n      student: selectedStudent,\n      attendanceData: manualAttendanceData,\n      onAttendanceChange: handleManualAttendanceChange,\n      onSubmit: handleManualAttendanceSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2090,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1912,\n    columnNumber: 5\n  }, this);\n};\n_s(AttendancePage, \"Xg9t9ghvWjubMUq4UK2NxGff3eQ=\", false, function () {\n  return [useParams, useNavigate, useDispatch, useSnackbar, useSelector, useSelector];\n});\n_c = AttendancePage;\nexport default AttendancePage;\nvar _c;\n$RefreshReg$(_c, \"AttendancePage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","useDispatch","useSelector","useSnackbar","Box","Typography","Card","CardContent","Grid","Paper","Button","Divider","CircularProgress","List","ListItem","ListItemAvatar","ListItemText","Avatar","Chip","Dialog","DialogTitle","DialogContent","DialogActions","TextField","FormControl","InputLabel","Select","MenuItem","IconButton","Alert","CameraAlt","Check","Close","Edit","Refresh","Save","VerifiedUser","HourglassEmpty","ArrowBack","Webcam","faceapi","getClassFaceFeatures","verifyAttendance","manualAttendance","setModelLoaded","setCameraReady","setDetectedFaces","setRecognizedStudents","clearRecognitionState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","process","env","REACT_APP_API_URL","AttendancePage","_s","classId","sessionId","navigate","dispatch","enqueueSnackbar","webcamRef","canvasRef","videoRef","intervalId","setIntervalId","showLandmark","setShowLandmark","landmarkIntervalId","setLandmarkIntervalId","cameraMode","setCameraMode","token","state","auth","isModelLoaded","isCameraReady","detectedFaces","recognizedStudents","classStudents","isProcessing","error","faceRecognition","classInfo","setClassInfo","sessionInfo","setSessionInfo","attendanceLogs","setAttendanceLogs","isLoading","setIsLoading","isRecognizing","setIsRecognizing","isAutoMode","setIsAutoMode","selectedStudent","setSelectedStudent","manualDialogOpen","setManualDialogOpen","manualAttendanceData","setManualAttendanceData","status","note","RECOGNITION_THRESHOLD","DETECTION_THRESHOLD","CONFIDENCE_THRESHOLD","AUTO_DETECT_INTERVAL","ENABLE_DEBUG_LOGS","cameraRetryCount","setCameraRetryCount","lastDetectionTime","setLastDetectionTime","landmarkDetectionInterval","setLandmarkDetectionInterval","loadInitialData","classPromise","get","headers","Authorization","sessionPromise","logsPromise","classResponse","sessionResponse","logsResponse","Promise","all","data","loadModelsPromise","loadFaceRecognitionModels","resolve","console","log","faceDataResponse","faceFeatureResult","unwrap","JSON","stringify","studentsData","Array","isArray","length","students","validDescriptorsCount","invalidDescriptorsCount","forEach","student","full_name","_id","faceFeatures","hasDescriptors","descriptors","validDescriptorsInStudent","group","groupIndex","descriptor","descIndex","hasOldDescriptors","faceDescriptors","flatDescriptors","validOldDescriptors","filter","desc","foundArrays","Object","keys","key","value","push","potentialDescriptors","arr","variant","autoHideDuration","apiError","_apiError$response","response","message","Date","now","clearInterval","current","video","srcObject","tracks","getTracks","track","stop","MODEL_URL","nets","tinyFaceDetector","isLoaded","faceLandmark68Net","faceRecognitionNet","ssdMobilenetv1","loadFromUri","initDirectCamera","_webcamRef$current","modelLoaded","stopExistingStream","videoElement","constraints","width","ideal","min","height","facingMode","frameRate","audio","stream","navigator","mediaDevices","getUserMedia","setupVideoStream","onloadedmetadata","play","catch","err","streamSetupSuccess","Error","setTimeout","startLandmarkDetection","_webcamRef$current2","altStream","prev","altErr","setInterval","handleDetectFaces","stopLandmarkDetection","ensureCameraIsWorking","_webcamRef$current3","readyState","landmarkOnly","_webcamRef$current4","videoWidth","videoHeight","canvasElement","displaySize","matchDimensions","detections","detectAllFaces","TinyFaceDetectorOptions","scoreThreshold","inputSize","withFaceLandmarks","resizedDetections","resizeResults","drawFaceLandmarks","getContext","clearRect","_finalDetections","finalDetections","withFaceDescriptors","SsdMobilenetv1Options","minConfidence","det","_det$detection","_det$detection$box","_det$detection2","_det$detection2$box","detection","box","_x","_y","handleFaceDetection","canvas","ctx","_box","landmarks","positions","strokeStyle","lineWidth","strokeRect","_width","_height","fillStyle","font","fillText","strokeText","points","drawPoints","startIdx","endIdx","color","i","_points$i","_points$i2","x","y","beginPath","arc","Math","PI","fill","extractStudentDescriptors","_student$faceFeatures","featuresData","findDescriptorsInArray","maxDepth","depth","every","val","item","oldFeatures","v","openManualAttendanceDialog","handleManualDialogClose","handleManualAttendanceChange","e","target","name","handleManualAttendanceSubmit","result","studentId","prevLogs","filteredLogs","student_id","fetchSessionInfo","markAttendance","faceDescriptor","confidence","imageBase64","find","s","completeSession","put","refreshAttendanceLogs","captureAndRecognize","_webcamRef$current5","getScreenshot","matchResults","comparePromises","map","studentDescriptors","bestMatch","distance","euclideanDistance","similarity","max","studentCode","student_code","results","sort","a","b","filteredResults","r","topMatches","slice","topMatch","round","handleMarkAttendance","matchDetails","m","toFixed","join","isAlreadyAttended","some","_webcamRef$current6","document","createElement","drawImage","toDataURL","toggleLandmarkDetection","newState","debugFaceFeatures","index","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","getAbsentStudents","presentStudentIds","Set","has","absentStudents","showStudentList","VideoDisplay","onUserMedia","onUserMediaError","elevation","sx","position","overflow","mb","ref","style","objectFit","autoPlay","playsInline","muted","screenshotFormat","videoConstraints","top","left","zIndex","CameraLoadingPlaceholder","flexDirection","size","mt","gap","onClick","startIcon","severity","maxWidth","margin","paddingLeft","RecognizedStudentsList","onMarkAttendance","gutterBottom","container","spacing","xs","sm","p","noWrap","fontSize","mr","PresentStudentsList","title","dense","maxHeight","timestamp","secondaryAction","icon","recognized","label","alt","src","avatar_url","primary","secondary","toLocaleTimeString","AbsentStudentsList","onOpenManualAttendance","edge","ManualAttendanceDialog","open","onClose","attendanceData","onAttendanceChange","onSubmit","fullWidth","onChange","multiline","rows","class_name","session_number","date","toLocaleDateString","md","id","px","pb","disabled","_c","$RefreshReg$"],"sources":["C:/Users/kasiz/Documents/Studying/FaceReg/frontend/src/pages/teacher/AttendancePage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useSnackbar } from \"notistack\";\nimport {\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  Grid,\n  Paper,\n  Button,\n  Divider,\n  CircularProgress,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  Chip,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  IconButton,\n  Alert,\n} from \"@mui/material\";\nimport {\n  CameraAlt,\n  Check,\n  Close,\n  Edit,\n  Refresh,\n  Save,\n  VerifiedUser,\n  HourglassEmpty,\n  ArrowBack,\n} from \"@mui/icons-material\";\nimport Webcam from \"react-webcam\";\nimport * as faceapi from \"face-api.js\";\nimport {\n  getClassFaceFeatures,\n  verifyAttendance,\n  manualAttendance,\n  setModelLoaded,\n  setCameraReady,\n  setDetectedFaces,\n  setRecognizedStudents,\n  clearRecognitionState,\n} from \"../../redux/slices/faceRecognitionSlice\";\nimport axios from \"axios\";\n\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\n\nconst AttendancePage = () => {\n  const { classId, sessionId } = useParams();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const videoRef = useRef(null);\n  const [intervalId, setIntervalId] = useState(null);\n  const [showLandmark, setShowLandmark] = useState(true);\n  const [landmarkIntervalId, setLandmarkIntervalId] = useState(null);\n  const [cameraMode, setCameraMode] = useState(\"face_recognition\");\n\n  const { token } = useSelector((state) => state.auth);\n  const {\n    isModelLoaded,\n    isCameraReady,\n    detectedFaces,\n    recognizedStudents,\n    classStudents,\n    isProcessing,\n    error,\n  } = useSelector((state) => state.faceRecognition);\n\n  const [classInfo, setClassInfo] = useState(null);\n  const [sessionInfo, setSessionInfo] = useState(null);\n  const [attendanceLogs, setAttendanceLogs] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isRecognizing, setIsRecognizing] = useState(false);\n  const [isAutoMode, setIsAutoMode] = useState(false);\n  const [selectedStudent, setSelectedStudent] = useState(null);\n  const [manualDialogOpen, setManualDialogOpen] = useState(false);\n  const [manualAttendanceData, setManualAttendanceData] = useState({\n    status: \"present\",\n    note: \"\",\n  });\n\n  // Các hằng số cấu hình được tối ưu\n  const RECOGNITION_THRESHOLD = 0.45; // Ngưỡng nhận diện được tối ưu\n  const DETECTION_THRESHOLD = 0.5; // Ngưỡng phát hiện khuôn mặt\n  const CONFIDENCE_THRESHOLD = 0.6; // Ngưỡng độ tin cậy để điểm danh\n  const AUTO_DETECT_INTERVAL = 1000; // Thời gian giữa các lần phát hiện (ms)\n  const ENABLE_DEBUG_LOGS = false; // Tắt log gỡ lỗi trong môi trường sản phẩm\n\n  // Thêm state mới để theo dõi số lần thử lại camera\n  const [cameraRetryCount, setCameraRetryCount] = useState(0);\n  const [lastDetectionTime, setLastDetectionTime] = useState(null);\n\n  // Thêm state theo dõi interval phát hiện landmarks\n  const [landmarkDetectionInterval, setLandmarkDetectionInterval] =\n    useState(null);\n\n  // Load class info, session info và models\n  useEffect(() => {\n    const loadInitialData = async () => {\n      try {\n        setIsLoading(true);\n\n        // Lấy thông tin lớp học\n        const classPromise = axios.get(\n          `${API_URL}/classes/teaching/${classId}`,\n          {\n            headers: { Authorization: `Bearer ${token}` },\n          }\n        );\n\n        // Lấy thông tin phiên điểm danh\n        const sessionPromise = axios.get(\n          `${API_URL}/attendance/sessions/${sessionId}`,\n          {\n            headers: { Authorization: `Bearer ${token}` },\n          }\n        );\n\n        // Lấy danh sách điểm danh\n        const logsPromise = axios.get(\n          `${API_URL}/attendance/logs/${sessionId}`,\n          {\n            headers: { Authorization: `Bearer ${token}` },\n          }\n        );\n\n        // Chờ tất cả API calls hoàn thành\n        const [classResponse, sessionResponse, logsResponse] =\n          await Promise.all([classPromise, sessionPromise, logsPromise]);\n\n        setClassInfo(classResponse.data.data);\n        setSessionInfo(sessionResponse.data.data);\n        setAttendanceLogs(logsResponse.data.data);\n\n        // Đã tải xong dữ liệu cơ bản\n        setIsLoading(false);\n\n        // Chỉ tải mô hình và lấy đặc trưng khuôn mặt nếu phiên điểm danh chưa hoàn thành\n        if (sessionResponse.data.data.status !== \"completed\") {\n          // Bắt đầu tải dữ liệu và models nếu phiên chưa hoàn thành\n          const loadModelsPromise = !isModelLoaded\n            ? loadFaceRecognitionModels()\n            : Promise.resolve(true);\n\n          // Lấy đặc trưng khuôn mặt của sinh viên trong lớp\n          console.log(\n            \"[DEBUG] Bắt đầu lấy đặc trưng khuôn mặt của sinh viên, classId:\",\n            classId\n          );\n\n          try {\n            // Gọi API trực tiếp để kiểm tra\n            const faceDataResponse = await axios.get(\n              `${API_URL}/face-recognition/class-features/${classId}`,\n              {\n                headers: { Authorization: `Bearer ${token}` },\n              }\n            );\n\n            console.log(\"[DEBUG] API response raw:\", faceDataResponse);\n            console.log(\"[DEBUG] API response data:\", faceDataResponse.data);\n\n            // Vẫn sử dụng redux dispatch để đảm bảo tính nhất quán\n            const faceFeatureResult = await dispatch(\n              getClassFaceFeatures(classId)\n            ).unwrap();\n\n            // Log toàn bộ result để debug\n            console.log(\"[DEBUG] Redux unwrapped result:\", faceFeatureResult);\n\n            // Kiểm tra xem có dữ liệu trả về không\n            if (faceFeatureResult) {\n              // Log dữ liệu để debug\n              console.log(\"[DEBUG] Bắt đầu phân tích dữ liệu khuôn mặt\");\n              console.log(\n                \"[DEBUG] faceFeatureResult structure:\",\n                JSON.stringify(faceFeatureResult, null, 2)\n              );\n\n              let studentsData = null;\n\n              // Kiểm tra các cấu trúc dữ liệu có thể có\n              if (Array.isArray(faceFeatureResult)) {\n                studentsData = faceFeatureResult;\n                console.log(\n                  `[DEBUG] Nhận được dữ liệu khuôn mặt dạng mảng: ${studentsData.length} sinh viên`\n                );\n              } else if (\n                faceFeatureResult.data &&\n                Array.isArray(faceFeatureResult.data)\n              ) {\n                studentsData = faceFeatureResult.data;\n                console.log(\n                  `[DEBUG] Nhận được dữ liệu khuôn mặt từ faceFeatureResult.data: ${studentsData.length} sinh viên`\n                );\n              } else if (\n                faceFeatureResult.students &&\n                Array.isArray(faceFeatureResult.students)\n              ) {\n                studentsData = faceFeatureResult.students;\n                console.log(\n                  `[DEBUG] Nhận được dữ liệu khuôn mặt từ faceFeatureResult.students: ${studentsData.length} sinh viên`\n                );\n              }\n\n              if (studentsData && studentsData.length > 0) {\n                console.log(\n                  `[DEBUG] Phân tích dữ liệu khuôn mặt của ${studentsData.length} sinh viên`\n                );\n\n                // Kiểm tra chi tiết dữ liệu khuôn mặt\n                let validDescriptorsCount = 0;\n                let invalidDescriptorsCount = 0;\n\n                studentsData.forEach((student) => {\n                  console.log(\n                    `[DEBUG] Kiểm tra sinh viên: ${\n                      student.full_name || \"Unknown\"\n                    }, ID: ${student._id}`\n                  );\n                  console.log(`[DEBUG] Cấu trúc dữ liệu sinh viên:`, student);\n\n                  // Kiểm tra nếu có faceFeatures\n                  if (student.faceFeatures) {\n                    console.log(`[DEBUG] Sinh viên có dữ liệu faceFeatures`);\n\n                    // Kiểm tra nếu có descriptors\n                    const hasDescriptors =\n                      student.faceFeatures &&\n                      student.faceFeatures.descriptors &&\n                      Array.isArray(student.faceFeatures.descriptors) &&\n                      student.faceFeatures.descriptors.length > 0;\n\n                    if (hasDescriptors) {\n                      console.log(\n                        `[DEBUG] Sinh viên có ${student.faceFeatures.descriptors.length} nhóm descriptors`\n                      );\n\n                      // Đếm số descriptor hợp lệ\n                      let validDescriptorsInStudent = 0;\n\n                      student.faceFeatures.descriptors.forEach(\n                        (group, groupIndex) => {\n                          if (Array.isArray(group)) {\n                            group.forEach((descriptor, descIndex) => {\n                              if (\n                                Array.isArray(descriptor) &&\n                                descriptor.length === 128\n                              ) {\n                                validDescriptorsInStudent++;\n                              }\n                            });\n                          }\n                        }\n                      );\n\n                      if (validDescriptorsInStudent > 0) {\n                        validDescriptorsCount++;\n                        console.log(\n                          `[DEBUG] Sinh viên ${student.full_name} có ${validDescriptorsInStudent} descriptor hợp lệ`\n                        );\n                      } else {\n                        invalidDescriptorsCount++;\n                        console.log(\n                          `[DEBUG] Sinh viên ${student.full_name} không có descriptor hợp lệ`\n                        );\n                      }\n                    } else {\n                      invalidDescriptorsCount++;\n                      console.log(\n                        `[DEBUG] Sinh viên ${student.full_name} không có descriptors`\n                      );\n                    }\n                  } else {\n                    // Kiểm tra nếu có faceDescriptors (cấu trúc cũ)\n                    const hasOldDescriptors =\n                      student.faceDescriptors &&\n                      Array.isArray(student.faceDescriptors) &&\n                      student.faceDescriptors.length > 0;\n\n                    if (hasOldDescriptors) {\n                      console.log(\n                        `[DEBUG] Sinh viên có ${student.faceDescriptors.length} descriptors (dạng cũ)`\n                      );\n                      console.log(\n                        `[DEBUG] Chi tiết faceDescriptors:`,\n                        JSON.stringify(student.faceDescriptors, null, 2)\n                      );\n\n                      // Thử các cách khác nhau để lấy descriptor\n                      if (typeof student.faceDescriptors[0] === \"object\") {\n                        // Nếu là object (không phải mảng), có thể nó là object có chứa descriptor\n                        console.log(\n                          `[DEBUG] Descriptor là object:`,\n                          student.faceDescriptors[0]\n                        );\n\n                        // Kiểm tra nếu descriptor nằm trong object.descriptors hoặc object.0\n                        if (\n                          student.faceDescriptors[0].descriptors &&\n                          Array.isArray(student.faceDescriptors[0].descriptors)\n                        ) {\n                          console.log(\n                            `[DEBUG] Tìm thấy descriptors trong object.descriptors`\n                          );\n                          // Sử dụng descriptors trong object\n                          const flatDescriptors =\n                            student.faceDescriptors[0].descriptors;\n\n                          const validOldDescriptors = flatDescriptors.filter(\n                            (desc) => Array.isArray(desc) && desc.length === 128\n                          ).length;\n\n                          if (validOldDescriptors > 0) {\n                            validDescriptorsCount++;\n                            console.log(\n                              `[DEBUG] Sinh viên ${student.full_name} có ${validOldDescriptors} descriptor hợp lệ trong object.descriptors`\n                            );\n                          }\n                        } else {\n                          // Duyệt tất cả các thuộc tính của object để tìm mảng\n                          const foundArrays = [];\n                          Object.keys(student.faceDescriptors[0]).forEach(\n                            (key) => {\n                              const value = student.faceDescriptors[0][key];\n                              if (Array.isArray(value)) {\n                                console.log(\n                                  `[DEBUG] Tìm thấy mảng trong thuộc tính ${key}, độ dài: ${value.length}`\n                                );\n                                foundArrays.push(value);\n                              }\n                            }\n                          );\n\n                          // Kiểm tra các mảng tìm được\n                          if (foundArrays.length > 0) {\n                            // Ưu tiên mảng có 128 phần tử\n                            const potentialDescriptors = foundArrays.filter(\n                              (arr) => arr.length === 128\n                            );\n                            if (potentialDescriptors.length > 0) {\n                              validDescriptorsCount++;\n                              console.log(\n                                `[DEBUG] Sinh viên ${student.full_name} có descriptor hợp lệ trong thuộc tính object`\n                              );\n                            }\n                          }\n                        }\n                      } else {\n                        // Xử lý thông thường\n                        const validOldDescriptors =\n                          student.faceDescriptors.filter(\n                            (desc) => Array.isArray(desc) && desc.length === 128\n                          ).length;\n\n                        if (validOldDescriptors > 0) {\n                          validDescriptorsCount++;\n                          console.log(\n                            `[DEBUG] Sinh viên ${student.full_name} có ${validOldDescriptors} descriptor hợp lệ (dạng cũ)`\n                          );\n                        } else {\n                          invalidDescriptorsCount++;\n                          console.log(\n                            `[DEBUG] Sinh viên ${student.full_name} không có descriptor hợp lệ (dạng cũ)`\n                          );\n                        }\n                      }\n                    } else {\n                      invalidDescriptorsCount++;\n                      console.log(\n                        `[DEBUG] Sinh viên ${student.full_name} không có dữ liệu khuôn mặt`\n                      );\n                    }\n                  }\n                });\n\n                console.log(\n                  `[DEBUG] Tổng hợp: ${validDescriptorsCount} sinh viên có descriptor hợp lệ, ${invalidDescriptorsCount} sinh viên không có`\n                );\n\n                if (validDescriptorsCount === 0) {\n                  enqueueSnackbar(\n                    \"Không có sinh viên nào có dữ liệu khuôn mặt, vui lòng cập nhật dữ liệu\",\n                    {\n                      variant: \"warning\",\n                      autoHideDuration: 8000,\n                    }\n                  );\n                }\n              } else {\n                console.log(\"[DEBUG] Không nhận được dữ liệu khuôn mặt từ API\");\n                enqueueSnackbar(\"Không thể tải dữ liệu nhận diện khuôn mặt\", {\n                  variant: \"error\",\n                });\n              }\n            } else {\n              console.log(\n                \"[DEBUG] Không nhận được dữ liệu khuôn mặt từ API (faceFeatureResult là null hoặc undefined)\"\n              );\n              enqueueSnackbar(\"Không thể tải dữ liệu nhận diện khuôn mặt\", {\n                variant: \"error\",\n              });\n            }\n          } catch (apiError) {\n            console.error(\n              \"[DEBUG] Lỗi khi gọi API lấy dữ liệu khuôn mặt:\",\n              apiError\n            );\n            console.log(\n              \"[DEBUG] API error details:\",\n              apiError.response?.data || apiError.message\n            );\n            enqueueSnackbar(\n              \"Lỗi khi lấy dữ liệu khuôn mặt. Vui lòng kiểm tra API endpoint.\",\n              {\n                variant: \"error\",\n              }\n            );\n          }\n\n          // Thiết lập thời gian phát hiện ban đầu\n          setLastDetectionTime(Date.now());\n        }\n      } catch (error) {\n        console.error(\"Lỗi khi tải dữ liệu:\", error);\n        enqueueSnackbar(\"Lỗi khi tải dữ liệu\", { variant: \"error\" });\n        setIsLoading(false);\n      }\n    };\n\n    loadInitialData();\n\n    // Clean up\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n\n      // Dừng landmark interval nếu đang chạy\n      if (landmarkIntervalId) {\n        clearInterval(landmarkIntervalId);\n      }\n\n      // Dừng camera stream nếu đang chạy\n      if (\n        webcamRef.current &&\n        webcamRef.current.video &&\n        webcamRef.current.video.srcObject\n      ) {\n        const tracks = webcamRef.current.video.srcObject.getTracks();\n        tracks.forEach((track) => track.stop());\n      }\n\n      if (videoRef.current && videoRef.current.srcObject) {\n        const tracks = videoRef.current.srcObject.getTracks();\n        tracks.forEach((track) => track.stop());\n      }\n\n      dispatch(clearRecognitionState());\n\n      // Reset các state theo dõi camera\n      setCameraRetryCount(0);\n      setLastDetectionTime(null);\n    };\n  }, [\n    classId,\n    sessionId,\n    token,\n    dispatch,\n    enqueueSnackbar,\n    isModelLoaded,\n    intervalId,\n    landmarkIntervalId,\n  ]);\n\n  // Hàm tối ưu để tải model nhận diện khuôn mặt\n  const loadFaceRecognitionModels = async () => {\n    try {\n      const MODEL_URL = \"/models\";\n\n      // Kiểm tra nhanh xem các models đã được tải chưa\n      if (\n        faceapi.nets.tinyFaceDetector.isLoaded &&\n        faceapi.nets.faceLandmark68Net.isLoaded &&\n        faceapi.nets.faceRecognitionNet.isLoaded &&\n        faceapi.nets.ssdMobilenetv1.isLoaded\n      ) {\n        console.log(\"Các models đã được tải từ trước\");\n        dispatch(setModelLoaded(true));\n        return true;\n      }\n\n      // Hiển thị thông báo đang tải\n      enqueueSnackbar(\"Đang tải mô hình nhận diện...\", { variant: \"info\" });\n\n      // Tải song song tất cả model\n      await Promise.all([\n        faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL),\n        faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),\n        faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL),\n        faceapi.nets.ssdMobilenetv1.loadFromUri(MODEL_URL),\n      ]);\n\n      dispatch(setModelLoaded(true));\n      enqueueSnackbar(\"Tải mô hình nhận diện thành công\", {\n        variant: \"success\",\n      });\n      return true;\n    } catch (error) {\n      console.error(\"Lỗi khi tải mô hình:\", error);\n      enqueueSnackbar(\"Không thể tải mô hình nhận diện\", { variant: \"error\" });\n      return false;\n    }\n  };\n\n  // Hàm khởi tạo camera đã tối ưu\n  const initDirectCamera = async () => {\n    try {\n      // Tải model nếu chưa tải\n      if (!isModelLoaded) {\n        const modelLoaded = await loadFaceRecognitionModels();\n        if (!modelLoaded) return false;\n      }\n\n      // Dừng stream cũ nếu có\n      const stopExistingStream = (videoElement) => {\n        if (videoElement?.srcObject) {\n          const tracks = videoElement.srcObject.getTracks();\n          tracks.forEach((track) => track.stop());\n        }\n      };\n\n      stopExistingStream(webcamRef.current?.video);\n      stopExistingStream(videoRef.current);\n\n      // Cấu hình camera tối ưu\n      const constraints = {\n        video: {\n          width: { ideal: 640, min: 320 },\n          height: { ideal: 480, min: 240 },\n          facingMode: \"user\",\n          frameRate: { ideal: 24, min: 15 },\n        },\n        audio: false,\n      };\n\n      // Truy cập camera\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia(constraints);\n\n        // Xử lý stream video\n        const setupVideoStream = (videoElement) => {\n          if (!videoElement) return false;\n\n          videoElement.srcObject = stream;\n          videoElement.onloadedmetadata = () => {\n            videoElement\n              .play()\n              .catch((err) => console.error(\"Lỗi khi play video:\", err));\n          };\n          return true;\n        };\n\n        // Thiết lập stream cho webcam hoặc video element\n        let streamSetupSuccess = false;\n        if (webcamRef.current && webcamRef.current.video) {\n          streamSetupSuccess = setupVideoStream(webcamRef.current.video);\n        } else if (videoRef.current) {\n          streamSetupSuccess = setupVideoStream(videoRef.current);\n        }\n\n        if (!streamSetupSuccess) {\n          throw new Error(\"Không thể thiết lập video stream\");\n        }\n\n        // Đánh dấu camera đã sẵn sàng\n        dispatch(setCameraReady(true));\n        setLastDetectionTime(Date.now());\n        setCameraRetryCount(0);\n\n        // Bật hiển thị landmark\n        setTimeout(() => {\n          setShowLandmark(true);\n          startLandmarkDetection();\n        }, 1000);\n\n        enqueueSnackbar(\"Đã kết nối camera thành công\", { variant: \"success\" });\n        return true;\n      } catch (err) {\n        console.error(\"Lỗi truy cập camera:\", err);\n\n        // Thử phương án thay thế nếu lỗi\n        if (cameraRetryCount < 2) {\n          try {\n            const altStream = await navigator.mediaDevices.getUserMedia({\n              video: true,\n              audio: false,\n            });\n\n            if (webcamRef.current?.video) {\n              webcamRef.current.video.srcObject = altStream;\n            } else if (videoRef.current) {\n              videoRef.current.srcObject = altStream;\n              videoRef.current.onloadedmetadata = () => videoRef.current.play();\n            }\n\n            dispatch(setCameraReady(true));\n            setLastDetectionTime(Date.now());\n            setCameraRetryCount((prev) => prev + 1);\n            enqueueSnackbar(\"Đã kết nối camera thay thế\", {\n              variant: \"success\",\n            });\n            return true;\n          } catch (altErr) {\n            console.error(\"Không thể sử dụng camera thay thế:\", altErr);\n          }\n        }\n\n        enqueueSnackbar(`Không thể truy cập camera: ${err.message}`, {\n          variant: \"error\",\n        });\n        return false;\n      }\n    } catch (err) {\n      console.error(\"Lỗi khi khởi tạo camera:\", err);\n      enqueueSnackbar(`Lỗi: ${err.message}`, { variant: \"error\" });\n      return false;\n    }\n  };\n\n  // Hàm bắt đầu phát hiện landmarks theo thời gian thực\n  const startLandmarkDetection = () => {\n    // Xóa interval cũ nếu có\n    if (landmarkDetectionInterval) {\n      clearInterval(landmarkDetectionInterval);\n    }\n\n    // Tạo interval mới để cập nhật landmarks mỗi 50ms\n    const intervalId = setInterval(() => {\n      if (cameraMode === \"face_recognition\" && showLandmark) {\n        handleDetectFaces(true);\n      }\n    }, 50);\n\n    setLandmarkDetectionInterval(intervalId);\n  };\n\n  // Hàm dừng phát hiện landmarks theo thời gian thực\n  const stopLandmarkDetection = () => {\n    if (landmarkDetectionInterval) {\n      clearInterval(landmarkDetectionInterval);\n      setLandmarkDetectionInterval(null);\n    }\n  };\n\n  // Cập nhật useEffect để bắt đầu và dừng phát hiện landmarks khi camera hoặc chế độ thay đổi\n  useEffect(() => {\n    if (cameraMode === \"face_recognition\" && showLandmark) {\n      startLandmarkDetection();\n    } else {\n      stopLandmarkDetection();\n    }\n\n    return () => {\n      stopLandmarkDetection();\n    };\n  }, [cameraMode, showLandmark]);\n\n  // Cập nhật useEffect cho việc toggle showLandmark\n  useEffect(() => {\n    if (showLandmark && cameraMode === \"face_recognition\") {\n      startLandmarkDetection();\n    } else {\n      stopLandmarkDetection();\n    }\n  }, [showLandmark]);\n\n  // Hàm kiểm tra và đảm bảo camera hoạt động\n  const ensureCameraIsWorking = () => {\n    // Kiểm tra nếu camera chưa hoạt động và đã thử khởi động\n    if (!isCameraReady && cameraRetryCount === 0) {\n      console.log(\"[DEBUG] Camera chưa sẵn sàng, thử khởi động\");\n      setCameraRetryCount(1);\n      initDirectCamera();\n      return false;\n    }\n\n    // Kiểm tra stream của camera\n    const videoElement = isAutoMode\n      ? videoRef.current\n      : webcamRef.current?.video;\n\n    if (\n      !videoElement ||\n      !videoElement.srcObject ||\n      videoElement.readyState !== 4\n    ) {\n      console.log(\n        \"[DEBUG] Video stream không hoạt động, thử khởi động lại camera\"\n      );\n      if (cameraRetryCount < 3) {\n        setCameraRetryCount((prev) => prev + 1);\n        initDirectCamera();\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  // Tối ưu hàm phát hiện khuôn mặt\n  const handleDetectFaces = async (landmarkOnly = false) => {\n    if (cameraMode !== \"face_recognition\" || !faceapi || !canvasRef.current)\n      return [];\n\n    // Xác định video element hiện tại\n    const videoElement = isAutoMode\n      ? videoRef.current\n      : webcamRef.current?.video;\n\n    // Kiểm tra video element\n    if (\n      !videoElement ||\n      videoElement.readyState !== 4 ||\n      videoElement.videoWidth === 0 ||\n      videoElement.videoHeight === 0\n    ) {\n      return [];\n    }\n\n    const canvasElement = canvasRef.current;\n\n    // Đặt kích thước canvas\n    const displaySize = {\n      width: videoElement.videoWidth,\n      height: videoElement.videoHeight,\n    };\n\n    faceapi.matchDimensions(canvasElement, displaySize);\n\n    try {\n      // Sử dụng TinyFaceDetector nhanh hơn để phát hiện khuôn mặt với landmarks\n      let detections = await faceapi\n        .detectAllFaces(\n          videoElement,\n          new faceapi.TinyFaceDetectorOptions({\n            scoreThreshold: DETECTION_THRESHOLD,\n            inputSize: 320,\n          })\n        )\n        .withFaceLandmarks();\n\n      // Nếu chỉ cần vẽ landmarks, không cần trích xuất descriptor\n      if (landmarkOnly) {\n        if (detections.length > 0) {\n          // Điều chỉnh kết quả theo kích thước canvas\n          const resizedDetections = faceapi.resizeResults(detections, {\n            width: canvasElement.width,\n            height: canvasElement.height,\n          });\n\n          // Vẽ landmarks\n          drawFaceLandmarks(resizedDetections, canvasElement);\n        } else {\n          // Xóa canvas nếu không phát hiện khuôn mặt\n          canvasElement\n            .getContext(\"2d\")\n            .clearRect(0, 0, canvasElement.width, canvasElement.height);\n        }\n        return detections;\n      }\n\n      // Nếu cần nhận diện đầy đủ, trích xuất thêm descriptors\n      if (detections.length > 0) {\n        // Thêm descriptors\n        let finalDetections;\n        try {\n          finalDetections = await faceapi\n            .detectAllFaces(\n              videoElement,\n              new faceapi.TinyFaceDetectorOptions({\n                scoreThreshold: DETECTION_THRESHOLD,\n                inputSize: 320,\n              })\n            )\n            .withFaceLandmarks()\n            .withFaceDescriptors();\n\n          // Nếu không có kết quả hoặc descriptor không hợp lệ, thử dùng SSD MobileNet\n          if (\n            (finalDetections.length === 0 || !finalDetections[0].descriptor) &&\n            faceapi.nets.ssdMobilenetv1.isLoaded\n          ) {\n            finalDetections = await faceapi\n              .detectAllFaces(\n                videoElement,\n                new faceapi.SsdMobilenetv1Options({\n                  minConfidence: DETECTION_THRESHOLD,\n                })\n              )\n              .withFaceLandmarks()\n              .withFaceDescriptors();\n          }\n        } catch (error) {\n          console.error(\"Lỗi khi lấy mô tả khuôn mặt:\", error);\n          finalDetections = detections;\n        }\n\n        // Lọc kết quả hợp lệ\n        finalDetections =\n          finalDetections?.filter(\n            (det) =>\n              det?.detection?.box?._x != null && det?.detection?.box?._y != null\n          ) || [];\n\n        if (finalDetections.length > 0) {\n          // Điều chỉnh kích thước và vẽ landmarks\n          const resizedDetections = faceapi.resizeResults(finalDetections, {\n            width: canvasElement.width,\n            height: canvasElement.height,\n          });\n\n          // Vẽ landmarks nếu được bật\n          if (showLandmark) {\n            drawFaceLandmarks(resizedDetections, canvasElement);\n          }\n\n          // Xử lý nhận diện\n          handleFaceDetection(resizedDetections);\n          return resizedDetections;\n        }\n      }\n\n      // Xóa canvas nếu không có kết quả\n      canvasElement\n        .getContext(\"2d\")\n        .clearRect(0, 0, canvasElement.width, canvasElement.height);\n      return [];\n    } catch (error) {\n      console.error(\"Lỗi khi phát hiện khuôn mặt:\", error);\n      canvasElement\n        .getContext(\"2d\")\n        .clearRect(0, 0, canvasElement.width, canvasElement.height);\n      return [];\n    }\n  };\n\n  // Hàm vẽ landmarks mới, tách biệt và tối ưu\n  const drawFaceLandmarks = (detections, canvas) => {\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    detections.forEach((detection) => {\n      const { _box: box } = detection.detection || {};\n      const landmarks = detection.landmarks;\n\n      if (!box || !landmarks?.positions || box._x == null || box._y == null)\n        return;\n\n      // Vẽ hộp giới hạn khuôn mặt\n      ctx.strokeStyle = \"#00FF00\";\n      ctx.lineWidth = 2;\n      ctx.strokeRect(box._x, box._y, box._width, box._height);\n\n      // Hiển thị thông tin\n      ctx.fillStyle = \"#FFFFFF\";\n      ctx.font = \"16px Arial\";\n      ctx.fillText(\"Đã phát hiện khuôn mặt\", box._x, box._y + box._height + 20);\n\n      // Viền cho chữ\n      ctx.strokeStyle = \"#000000\";\n      ctx.lineWidth = 0.5;\n      ctx.strokeText(\n        \"Đã phát hiện khuôn mặt\",\n        box._x,\n        box._y + box._height + 20\n      );\n\n      const points = landmarks.positions;\n      if (!points || points.length < 68) return;\n\n      // Hàm vẽ nhóm điểm\n      const drawPoints = (startIdx, endIdx, color) => {\n        ctx.fillStyle = color;\n        for (let i = startIdx; i <= endIdx; i++) {\n          if (points[i]?.x != null && points[i]?.y != null) {\n            ctx.beginPath();\n            ctx.arc(points[i].x, points[i].y, 2, 0, 2 * Math.PI);\n            ctx.fill();\n          }\n        }\n      };\n\n      // Vẽ các điểm landmarks\n      drawPoints(36, 41, \"#FF0000\"); // Mắt trái (đỏ)\n      drawPoints(42, 47, \"#0000FF\"); // Mắt phải (xanh dương)\n      drawPoints(27, 35, \"#FFFF00\"); // Mũi (vàng)\n      drawPoints(48, 67, \"#FF00FF\"); // Miệng (tím)\n      drawPoints(0, 26, \"#00FF00\"); // Viền khuôn mặt (xanh lá)\n    });\n  };\n\n  // Hàm trích xuất descriptor từ sinh viên, tối ưu hoá và chỉ phải làm một lần\n  const extractStudentDescriptors = (student) => {\n    if (!student) return [];\n\n    const descriptors = [];\n\n    // Kiểm tra cấu trúc mới\n    if (student.faceFeatures?.descriptors) {\n      const featuresData = student.faceFeatures.descriptors;\n\n      // Duyệt qua tất cả cấu trúc lồng nhau để tìm mảng 128 phần tử\n      const findDescriptorsInArray = (arr, maxDepth = 3, depth = 0) => {\n        if (!Array.isArray(arr) || depth > maxDepth) return;\n\n        if (arr.length === 128 && arr.every((val) => typeof val === \"number\")) {\n          descriptors.push(arr);\n          return;\n        }\n\n        for (const item of arr) {\n          if (Array.isArray(item)) {\n            findDescriptorsInArray(item, maxDepth, depth + 1);\n          }\n        }\n      };\n\n      findDescriptorsInArray(featuresData);\n    }\n\n    // Kiểm tra cấu trúc cũ\n    if (descriptors.length === 0 && student.faceDescriptors) {\n      const oldFeatures = student.faceDescriptors;\n\n      if (Array.isArray(oldFeatures)) {\n        // Trường hợp 1: mảng các descriptor\n        for (const item of oldFeatures) {\n          if (Array.isArray(item) && item.length === 128) {\n            descriptors.push(item);\n          }\n          // Trường hợp 2: mảng các object chứa descriptor\n          else if (typeof item === \"object\" && item !== null) {\n            // Tìm trong các thuộc tính của object\n            for (const key in item) {\n              const value = item[key];\n\n              if (\n                Array.isArray(value) &&\n                value.length === 128 &&\n                value.every((v) => typeof v === \"number\")\n              ) {\n                descriptors.push(value);\n              }\n              // Tìm trong thuộc tính descriptors\n              else if (key === \"descriptors\" && Array.isArray(value)) {\n                value.forEach((desc) => {\n                  if (Array.isArray(desc) && desc.length === 128) {\n                    descriptors.push(desc);\n                  }\n                });\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return descriptors;\n  };\n\n  // Xử lý phát hiện khuôn mặt\n  const handleFaceDetection = async (detections) => {\n    // Cập nhật state\n    dispatch(setDetectedFaces(detections));\n\n    try {\n      // Cập nhật thời gian phát hiện\n      setLastDetectionTime(Date.now());\n\n      // Nếu không có khuôn mặt nào được phát hiện, dừng lại\n      if (!detections || detections.length === 0) {\n        if (ENABLE_DEBUG_LOGS) {\n          console.log(\"[DEBUG] Không phát hiện khuôn mặt\");\n        }\n        return;\n      }\n\n      if (ENABLE_DEBUG_LOGS) {\n        console.log(`[DEBUG] Đã phát hiện ${detections.length} khuôn mặt`);\n      }\n\n      // Xử lý nhận diện khuôn mặt nếu có sinh viên\n      if (classStudents && classStudents.length > 0) {\n        // Xử lý nhận diện khuôn mặt sẽ được thêm sau\n      }\n    } catch (error) {\n      console.error(\"Lỗi khi xử lý khuôn mặt:\", error);\n    }\n  };\n\n  // Điểm danh thủ công\n  const openManualAttendanceDialog = (student) => {\n    if (!student) {\n      enqueueSnackbar(\"Không tìm thấy thông tin sinh viên\", {\n        variant: \"error\",\n      });\n      return;\n    }\n\n    setSelectedStudent(student);\n    setManualAttendanceData({\n      status: \"present\", // Mặc định là có mặt\n      note: \"\",\n    });\n    setManualDialogOpen(true);\n  };\n\n  const handleManualDialogClose = () => {\n    setManualDialogOpen(false);\n  };\n\n  const handleManualAttendanceChange = (e) => {\n    setManualAttendanceData({\n      ...manualAttendanceData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleManualAttendanceSubmit = async () => {\n    if (!selectedStudent) return;\n\n    try {\n      // Hiển thị thông báo đang xử lý\n      enqueueSnackbar(\"Đang xử lý điểm danh thủ công...\", { variant: \"info\" });\n\n      // Gọi API điểm danh thủ công\n      const result = await dispatch(\n        manualAttendance({\n          sessionId,\n          studentId: selectedStudent._id,\n          status: manualAttendanceData.status,\n          note: manualAttendanceData.note,\n        })\n      ).unwrap();\n\n      // Nếu điểm danh thành công\n      if (result?.data) {\n        // Cập nhật logs điểm danh hiệu quả hơn\n        setAttendanceLogs((prevLogs) => {\n          // Lọc bỏ log cũ của sinh viên nếu có\n          const filteredLogs = prevLogs.filter(\n            (log) => log.student_id._id !== selectedStudent._id\n          );\n          // Thêm log mới\n          return [\n            ...filteredLogs,\n            {\n              ...result.data,\n              student_id: selectedStudent,\n            },\n          ];\n        });\n\n        enqueueSnackbar(\n          `Đã điểm danh ${\n            manualAttendanceData.status === \"present\"\n              ? \"có mặt\"\n              : manualAttendanceData.status === \"absent\"\n              ? \"vắng mặt\"\n              : manualAttendanceData.status === \"late\"\n              ? \"đi trễ\"\n              : \"về sớm\"\n          } cho ${selectedStudent.full_name}`,\n          { variant: \"success\" }\n        );\n\n        // Đóng dialog\n        handleManualDialogClose();\n\n        // Cập nhật thông tin phiên\n        fetchSessionInfo();\n      }\n    } catch (error) {\n      console.error(\"Lỗi khi điểm danh thủ công:\", error);\n      enqueueSnackbar(\"Lỗi khi điểm danh thủ công\", { variant: \"error\" });\n    }\n  };\n\n  // Đánh dấu điểm danh từ nhận diện khuôn mặt\n  const markAttendance = async (\n    studentId,\n    faceDescriptor,\n    confidence,\n    imageBase64\n  ) => {\n    try {\n      // Hiển thị thông báo đang xử lý\n      enqueueSnackbar(\"Đang xử lý điểm danh...\", { variant: \"info\" });\n\n      // Gọi API điểm danh qua Redux\n      const result = await dispatch(\n        verifyAttendance({\n          sessionId,\n          studentId,\n          faceDescriptor,\n          confidence,\n          imageBase64,\n        })\n      ).unwrap();\n\n      // Nếu điểm danh thành công\n      if (result?.data) {\n        // Tìm thông tin sinh viên\n        const student = classStudents.find((s) => s._id === studentId);\n\n        if (student) {\n          // Cập nhật logs điểm danh hiệu quả hơn\n          setAttendanceLogs((prevLogs) => {\n            // Lọc bỏ log cũ của sinh viên nếu có\n            const filteredLogs = prevLogs.filter(\n              (log) => log.student_id._id !== studentId\n            );\n            // Thêm log mới\n            return [\n              ...filteredLogs,\n              {\n                ...result.data,\n                student_id: student,\n              },\n            ];\n          });\n\n          enqueueSnackbar(`Đã điểm danh cho ${student.full_name}`, {\n            variant: \"success\",\n          });\n        }\n\n        // Cập nhật thông tin phiên một cách bất đồng bộ\n        fetchSessionInfo();\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error(\"Lỗi khi xác nhận điểm danh:\", error);\n      enqueueSnackbar(\"Lỗi khi xác nhận điểm danh\", { variant: \"error\" });\n      return false;\n    }\n  };\n\n  // Kết thúc phiên điểm danh\n  const completeSession = async () => {\n    try {\n      // Hiển thị thông báo đang xử lý\n      enqueueSnackbar(\"Đang kết thúc phiên điểm danh...\", { variant: \"info\" });\n\n      // Gọi API kết thúc phiên\n      await axios.put(\n        `${API_URL}/attendance/sessions/${sessionId}`,\n        { status: \"completed\" },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n\n      enqueueSnackbar(\"Phiên điểm danh đã kết thúc thành công\", {\n        variant: \"success\",\n      });\n\n      // Chuyển hướng về trang lớp học\n      setTimeout(() => {\n        navigate(`/teacher/classes/${classId}`);\n      }, 1000);\n    } catch (error) {\n      console.error(\"Lỗi khi kết thúc phiên điểm danh:\", error);\n      enqueueSnackbar(\"Lỗi khi kết thúc phiên điểm danh\", { variant: \"error\" });\n    }\n  };\n\n  // Làm mới danh sách điểm danh\n  const refreshAttendanceLogs = async () => {\n    try {\n      enqueueSnackbar(\"Đang làm mới dữ liệu điểm danh...\", { variant: \"info\" });\n\n      // Tải song song dữ liệu logs và thông tin phiên\n      const [logsResponse, sessionResponse] = await Promise.all([\n        axios.get(`${API_URL}/attendance/logs/${sessionId}`, {\n          headers: { Authorization: `Bearer ${token}` },\n        }),\n        axios.get(`${API_URL}/attendance/sessions/${sessionId}`, {\n          headers: { Authorization: `Bearer ${token}` },\n        }),\n      ]);\n\n      // Cập nhật state\n      setAttendanceLogs(logsResponse.data.data);\n      setSessionInfo(sessionResponse.data.data);\n\n      enqueueSnackbar(\"Đã làm mới dữ liệu điểm danh\", { variant: \"success\" });\n    } catch (error) {\n      console.error(\"Lỗi khi làm mới dữ liệu:\", error);\n      enqueueSnackbar(\"Lỗi khi làm mới dữ liệu điểm danh\", {\n        variant: \"error\",\n      });\n    }\n  };\n\n  // Tối ưu hàm lấy thông tin phiên\n  const fetchSessionInfo = async () => {\n    try {\n      const sessionResponse = await axios.get(\n        `${API_URL}/attendance/sessions/${sessionId}`,\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      setSessionInfo(sessionResponse.data.data);\n      return sessionResponse.data.data;\n    } catch (error) {\n      console.error(\"Lỗi khi lấy thông tin phiên:\", error);\n      return null;\n    }\n  };\n\n  // Tối ưu hàm xử lý nhận diện khuôn mặt\n  const captureAndRecognize = async () => {\n    try {\n      setIsRecognizing(true);\n      enqueueSnackbar(\"Đang nhận diện khuôn mặt...\", { variant: \"info\" });\n\n      // Kiểm tra camera\n      if (!ensureCameraIsWorking()) {\n        enqueueSnackbar(\"Camera không hoạt động, vui lòng khởi động lại\", {\n          variant: \"error\",\n        });\n        setIsRecognizing(false);\n        return;\n      }\n\n      // Phát hiện khuôn mặt\n      const detections = await handleDetectFaces(false);\n\n      // Kiểm tra phát hiện khuôn mặt\n      if (!detections || detections.length === 0) {\n        enqueueSnackbar(\"Không phát hiện khuôn mặt nào trong hình\", {\n          variant: \"warning\",\n        });\n        setIsRecognizing(false);\n        return;\n      }\n\n      // Kiểm tra descriptor\n      if (!detections[0].descriptor) {\n        enqueueSnackbar(\n          \"Không thể trích xuất đặc trưng khuôn mặt để nhận diện\",\n          { variant: \"error\" }\n        );\n        setIsRecognizing(false);\n        return;\n      }\n\n      // Xử lý nhận diện với dữ liệu sinh viên\n      if (!classStudents || classStudents.length === 0) {\n        enqueueSnackbar(\"Không có dữ liệu sinh viên để so sánh\", {\n          variant: \"error\",\n        });\n        setIsRecognizing(false);\n        return;\n      }\n\n      // Chụp ảnh từ webcam\n      const imageBase64 = webcamRef.current?.getScreenshot();\n\n      // Lấy descriptor của khuôn mặt phát hiện được\n      const faceDescriptor = detections[0].descriptor;\n\n      // So sánh với dữ liệu sinh viên\n      const matchResults = [];\n\n      // Tạo một mảng promises để xử lý song song các tính toán\n      const comparePromises = classStudents.map(async (student) => {\n        // Trích xuất descriptors từ sinh viên\n        const studentDescriptors = extractStudentDescriptors(student);\n\n        if (studentDescriptors.length === 0) return null;\n\n        // Tính độ tương đồng tốt nhất\n        let bestMatch = 0;\n        for (const descriptor of studentDescriptors) {\n          try {\n            const distance = faceapi.euclideanDistance(\n              faceDescriptor,\n              descriptor\n            );\n            const similarity = Math.max(0, 1 - distance);\n            bestMatch = Math.max(bestMatch, similarity);\n          } catch (error) {\n            // Bỏ qua lỗi và tiếp tục với descriptor tiếp theo\n          }\n        }\n\n        return {\n          studentId: student._id,\n          name: student.full_name,\n          confidence: bestMatch,\n          studentCode: student.student_code,\n        };\n      });\n\n      // Đợi tất cả tính toán hoàn thành và lọc kết quả null\n      const results = (await Promise.all(comparePromises)).filter(\n        (result) => result !== null\n      );\n\n      // Sắp xếp kết quả theo độ tương đồng\n      results.sort((a, b) => b.confidence - a.confidence);\n      matchResults.push(...results);\n\n      // Lọc kết quả theo ngưỡng\n      const filteredResults = matchResults.filter(\n        (r) => r.confidence > RECOGNITION_THRESHOLD\n      );\n\n      // Cập nhật danh sách sinh viên được nhận diện\n      dispatch(setRecognizedStudents(filteredResults));\n\n      // Hiển thị kết quả\n      if (matchResults.length > 0) {\n        const topMatches = matchResults.slice(0, 3);\n\n        if (filteredResults.length > 0) {\n          const topMatch = filteredResults[0];\n          enqueueSnackbar(\n            `Đã nhận diện: ${topMatch.name} (${Math.round(\n              topMatch.confidence * 100\n            )}%)`,\n            { variant: \"success\" }\n          );\n\n          // Tự động điểm danh nếu độ tin cậy cao\n          if (topMatch.confidence > CONFIDENCE_THRESHOLD) {\n            handleMarkAttendance(topMatch.studentId, topMatch.confidence);\n          }\n        } else {\n          const matchDetails = topMatches\n            .map((m) => `${m.name}: ${(m.confidence * 100).toFixed(1)}%`)\n            .join(\", \");\n\n          enqueueSnackbar(\n            `Không nhận diện được sinh viên nào vượt ngưỡng. Gần nhất: ${matchDetails}`,\n            { variant: \"warning\" }\n          );\n        }\n      } else {\n        enqueueSnackbar(\"Không nhận diện được sinh viên nào\", {\n          variant: \"warning\",\n        });\n      }\n    } catch (error) {\n      console.error(\"Lỗi khi nhận diện khuôn mặt:\", error);\n      enqueueSnackbar(`Lỗi khi nhận diện: ${error.message}`, {\n        variant: \"error\",\n      });\n    } finally {\n      setIsRecognizing(false);\n    }\n  };\n\n  // Tối ưu hàm đánh dấu điểm danh\n  const handleMarkAttendance = async (studentId, confidence) => {\n    // Kiểm tra xem sinh viên đã được điểm danh chưa\n    const isAlreadyAttended = attendanceLogs.some(\n      (log) => log.student_id._id === studentId && log.status === \"present\"\n    );\n\n    if (isAlreadyAttended) return;\n\n    try {\n      // Chụp ảnh từ video element\n      const videoElement = isAutoMode\n        ? videoRef.current\n        : webcamRef.current?.video;\n      if (!videoElement) return;\n\n      let imageBase64 = null;\n\n      // Tạo ảnh chụp\n      if (!isAutoMode && webcamRef.current) {\n        imageBase64 = webcamRef.current.getScreenshot();\n      } else if (isAutoMode && videoElement) {\n        // Tạo canvas để chụp từ video\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = videoElement.videoWidth;\n        canvas.height = videoElement.videoHeight;\n        const ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(videoElement, 0, 0);\n        imageBase64 = canvas.toDataURL(\"image/jpeg\");\n      }\n\n      // Tìm sinh viên trong danh sách\n      const student = classStudents.find((s) => s._id === studentId);\n      if (!student) return;\n\n      // Trích xuất descriptor\n      const descriptors = extractStudentDescriptors(student);\n      const descriptor = descriptors.length > 0 ? descriptors[0] : null;\n\n      // Gọi API điểm danh\n      await markAttendance(studentId, descriptor, confidence, imageBase64);\n    } catch (error) {\n      console.error(\"Lỗi khi đánh dấu điểm danh:\", error);\n      enqueueSnackbar(\"Lỗi khi đánh dấu điểm danh\", { variant: \"error\" });\n    }\n  };\n\n  // Bật/tắt hiển thị landmark trên khuôn mặt\n  const toggleLandmarkDetection = () => {\n    const newState = !showLandmark;\n    setShowLandmark(newState);\n\n    // Bắt đầu hoặc dừng interval landmark detection\n    if (newState) {\n      startLandmarkDetection();\n    } else if (landmarkIntervalId) {\n      clearInterval(landmarkIntervalId);\n      setLandmarkIntervalId(null);\n\n      // Xóa canvas khi tắt landmarks\n      const canvasElement = canvasRef.current;\n      if (canvasElement) {\n        const ctx = canvasElement.getContext(\"2d\");\n        ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n      }\n    }\n  };\n\n  // Thêm hàm debug để kiểm tra cấu trúc dữ liệu khuôn mặt\n  const debugFaceFeatures = () => {\n    if (!classStudents || classStudents.length === 0) {\n      console.log(\n        \"[DEBUG] Không có sinh viên nào để kiểm tra dữ liệu khuôn mặt\"\n      );\n      return;\n    }\n\n    classStudents.forEach((student, index) => {\n      console.log(`[DEBUG] Sinh viên #${index + 1}: ${student.full_name}`);\n\n      // Kiểm tra dữ liệu faceFeatures\n      if (student.faceFeatures) {\n        console.log(`  - Có dữ liệu faceFeatures`);\n\n        // Kiểm tra descriptors\n        if (student.faceFeatures.descriptors) {\n          console.log(\n            `  - Có descriptors: ${student.faceFeatures.descriptors.length} nhóm`\n          );\n\n          student.faceFeatures.descriptors.forEach((group, groupIndex) => {\n            if (Array.isArray(group)) {\n              console.log(\n                `    - Nhóm #${groupIndex + 1}: ${group.length} descriptors`\n              );\n\n              group.forEach((descriptor, descIndex) => {\n                if (Array.isArray(descriptor)) {\n                  console.log(\n                    `      - Descriptor #${descIndex + 1}: ${\n                      descriptor.length\n                    } phần tử`\n                  );\n                } else {\n                  console.log(\n                    `      - Descriptor #${descIndex + 1}: Không phải mảng`\n                  );\n                }\n              });\n            } else {\n              console.log(`    - Nhóm #${groupIndex + 1}: Không phải mảng`);\n            }\n          });\n        } else {\n          console.log(`  - Không có dữ liệu descriptors`);\n        }\n      } else {\n        console.log(`  - Không có dữ liệu faceFeatures`);\n      }\n\n      // Kiểm tra dữ liệu cũ (faceDescriptors)\n      if (student.faceDescriptors) {\n        console.log(\n          `  - Có dữ liệu faceDescriptors (cấu trúc cũ): ${student.faceDescriptors.length} descriptors`\n        );\n      }\n    });\n  };\n\n  if (isLoading) {\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        minHeight=\"60vh\"\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  // Lấy danh sách sinh viên vắng mặt\n  const getAbsentStudents = () => {\n    if (!classInfo || !classInfo.students || !attendanceLogs) return [];\n\n    // Tạo Set các ID sinh viên đã điểm danh để tăng tốc độ tìm kiếm\n    const presentStudentIds = new Set(\n      attendanceLogs\n        .filter((log) => log.status === \"present\")\n        .map((log) => log.student_id._id)\n    );\n\n    // Lọc ra sinh viên chưa điểm danh\n    return classInfo.students.filter(\n      (student) => !presentStudentIds.has(student._id)\n    );\n  };\n\n  const absentStudents = getAbsentStudents();\n\n  // Điểm danh thủ công trong chế độ đơn giản\n  const showStudentList = () => {\n    if (!classInfo) {\n      enqueueSnackbar(\"Không có thông tin lớp học\", { variant: \"error\" });\n      return;\n    }\n\n    // Lấy danh sách sinh viên vắng mặt\n    const absentStudents = getAbsentStudents();\n\n    if (absentStudents.length === 0) {\n      enqueueSnackbar(\"Tất cả sinh viên đã được điểm danh\", {\n        variant: \"success\",\n      });\n      return;\n    }\n\n    // Mở dialog điểm danh thủ công với sinh viên đầu tiên trong danh sách\n    if (absentStudents.length > 0 && absentStudents[0]) {\n      openManualAttendanceDialog(absentStudents[0]);\n    }\n  };\n\n  // Tối ưu phần Webcam và Camera\n  const VideoDisplay = ({\n    isCameraReady,\n    isAutoMode,\n    webcamRef,\n    videoRef,\n    canvasRef,\n    onUserMedia,\n    onUserMediaError,\n  }) => {\n    // Component con để xử lý hiển thị video\n    return (\n      <Paper\n        elevation={3}\n        sx={{\n          position: \"relative\",\n          width: \"100%\",\n          height: \"400px\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          overflow: \"hidden\",\n          mb: 2,\n        }}\n      >\n        {isCameraReady ? (\n          <>\n            {isAutoMode ? (\n              // Video element cho chế độ tự động\n              <video\n                ref={videoRef}\n                style={{\n                  position: \"absolute\",\n                  width: \"100%\",\n                  height: \"100%\",\n                  objectFit: \"cover\",\n                }}\n                autoPlay\n                playsInline\n                muted\n              />\n            ) : (\n              // Webcam component cho chế độ thủ công\n              <Webcam\n                audio={false}\n                ref={webcamRef}\n                screenshotFormat=\"image/jpeg\"\n                width={640}\n                height={480}\n                videoConstraints={{\n                  width: 640,\n                  height: 480,\n                  facingMode: \"user\",\n                }}\n                style={{\n                  position: \"absolute\",\n                  width: \"100%\",\n                  height: \"100%\",\n                  objectFit: \"cover\",\n                }}\n                onUserMedia={onUserMedia}\n                onUserMediaError={onUserMediaError}\n              />\n            )}\n            {/* Canvas cho hiển thị landmarks */}\n            <canvas\n              ref={canvasRef}\n              style={{\n                position: \"absolute\",\n                top: 0,\n                left: 0,\n                width: \"100%\",\n                height: \"100%\",\n                objectFit: \"cover\",\n                zIndex: 10,\n              }}\n            />\n          </>\n        ) : (\n          <CameraLoadingPlaceholder />\n        )}\n      </Paper>\n    );\n  };\n\n  // Component hiển thị placeholder khi camera đang tải\n  const CameraLoadingPlaceholder = ({ initDirectCamera, showStudentList }) => (\n    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n      <CircularProgress size={50} />\n      <Typography mt={2}>Đang khởi tạo camera...</Typography>\n      <Typography variant=\"caption\" color=\"text.secondary\" sx={{ mt: 1 }}>\n        Chờ kết nối camera - Hãy đảm bảo bạn đã cấp quyền camera\n      </Typography>\n\n      <Box\n        sx={{\n          mt: 2,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          gap: 1,\n        }}\n      >\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          onClick={initDirectCamera}\n          startIcon={<CameraAlt />}\n        >\n          Khởi động camera\n        </Button>\n\n        <Button\n          variant=\"outlined\"\n          color=\"warning\"\n          size=\"small\"\n          onClick={showStudentList}\n          startIcon={<Edit />}\n        >\n          Điểm danh thủ công\n        </Button>\n\n        <Alert severity=\"info\" sx={{ mt: 2, maxWidth: 300 }}>\n          Nếu camera không hoạt động, vui lòng thử:\n          <ul style={{ margin: \"8px 0\", paddingLeft: \"20px\" }}>\n            <li>Kiểm tra quyền camera trên trình duyệt</li>\n            <li>Làm mới trang và thử lại</li>\n            <li>Đảm bảo không có ứng dụng khác đang sử dụng camera</li>\n          </ul>\n        </Alert>\n      </Box>\n    </Box>\n  );\n\n  // Component hiển thị danh sách sinh viên đã nhận diện\n  const RecognizedStudentsList = ({ students, onMarkAttendance }) => {\n    if (students.length === 0) return null;\n\n    return (\n      <Box mt={2}>\n        <Typography variant=\"subtitle1\" gutterBottom>\n          Đã nhận diện ({students.length})\n        </Typography>\n        <Grid container spacing={1}>\n          {students.map((student, index) => (\n            <Grid item xs={6} sm={4} key={index}>\n              <Paper\n                elevation={2}\n                sx={{\n                  p: 1,\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Typography variant=\"body2\" noWrap>\n                  {student.name}\n                </Typography>\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                  {Math.round(student.confidence * 100)}% match\n                </Typography>\n                <Button\n                  size=\"small\"\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  sx={{ mt: 1 }}\n                  onClick={() =>\n                    onMarkAttendance(student.studentId, student.confidence)\n                  }\n                >\n                  <Check fontSize=\"small\" sx={{ mr: 0.5 }} />\n                  Điểm danh\n                </Button>\n              </Paper>\n            </Grid>\n          ))}\n        </Grid>\n      </Box>\n    );\n  };\n\n  // Component hiển thị danh sách sinh viên đã điểm danh\n  const PresentStudentsList = ({ attendanceLogs, refreshAttendanceLogs }) => (\n    <Card sx={{ mb: 3 }}>\n      <CardContent>\n        <Box\n          display=\"flex\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          mb={2}\n        >\n          <Typography variant=\"h6\">\n            Có mặt (\n            {attendanceLogs.filter((log) => log.status === \"present\").length})\n          </Typography>\n          <IconButton\n            size=\"small\"\n            onClick={refreshAttendanceLogs}\n            title=\"Làm mới\"\n          >\n            <Refresh />\n          </IconButton>\n        </Box>\n\n        <List dense sx={{ maxHeight: \"300px\", overflow: \"auto\" }}>\n          {attendanceLogs\n            .filter((log) => log.status === \"present\")\n            .sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))\n            .map((log) => (\n              <ListItem\n                key={log._id}\n                secondaryAction={\n                  <Chip\n                    size=\"small\"\n                    icon={\n                      log.recognized ? <VerifiedUser fontSize=\"small\" /> : null\n                    }\n                    label={log.recognized ? \"Tự động\" : \"Thủ công\"}\n                    color={log.recognized ? \"success\" : \"primary\"}\n                  />\n                }\n              >\n                <ListItemAvatar>\n                  <Avatar\n                    alt={log.student_id.full_name}\n                    src={log.student_id.avatar_url}\n                  />\n                </ListItemAvatar>\n                <ListItemText\n                  primary={log.student_id.full_name}\n                  secondary={`${new Date(log.timestamp).toLocaleTimeString(\n                    \"vi-VN\"\n                  )}`}\n                />\n              </ListItem>\n            ))}\n\n          {attendanceLogs.filter((log) => log.status === \"present\").length ===\n            0 && (\n            <ListItem>\n              <ListItemText primary=\"Chưa có sinh viên nào điểm danh\" />\n            </ListItem>\n          )}\n        </List>\n      </CardContent>\n    </Card>\n  );\n\n  // Component hiển thị danh sách sinh viên vắng mặt\n  const AbsentStudentsList = ({ absentStudents, onOpenManualAttendance }) => (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h6\" gutterBottom>\n          Vắng mặt ({absentStudents.length})\n        </Typography>\n\n        <List dense sx={{ maxHeight: \"300px\", overflow: \"auto\" }}>\n          {absentStudents.map((student) => (\n            <ListItem\n              key={student._id}\n              secondaryAction={\n                <IconButton\n                  edge=\"end\"\n                  onClick={() => onOpenManualAttendance(student)}\n                  title=\"Điểm danh thủ công\"\n                >\n                  <Edit fontSize=\"small\" />\n                </IconButton>\n              }\n            >\n              <ListItemAvatar>\n                <Avatar alt={student.full_name} src={student.avatar_url} />\n              </ListItemAvatar>\n              <ListItemText\n                primary={student.full_name}\n                secondary={student.student_code}\n              />\n            </ListItem>\n          ))}\n\n          {absentStudents.length === 0 && (\n            <ListItem>\n              <ListItemText primary=\"Không có sinh viên nào vắng mặt\" />\n            </ListItem>\n          )}\n        </List>\n      </CardContent>\n    </Card>\n  );\n\n  // Component dialog điểm danh thủ công\n  const ManualAttendanceDialog = ({\n    open,\n    onClose,\n    student,\n    attendanceData,\n    onAttendanceChange,\n    onSubmit,\n  }) => (\n    <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\n      <DialogTitle>Điểm danh thủ công</DialogTitle>\n      <DialogContent>\n        <Box sx={{ p: 1 }}>\n          <Typography variant=\"subtitle1\" gutterBottom>\n            {student?.full_name} ({student?.student_code})\n          </Typography>\n\n          <FormControl fullWidth margin=\"normal\">\n            <InputLabel>Trạng thái</InputLabel>\n            <Select\n              name=\"status\"\n              value={attendanceData.status}\n              onChange={onAttendanceChange}\n              label=\"Trạng thái\"\n            >\n              <MenuItem value=\"present\">Có mặt</MenuItem>\n              <MenuItem value=\"absent\">Vắng mặt</MenuItem>\n              <MenuItem value=\"late\">Đi trễ</MenuItem>\n              <MenuItem value=\"early_leave\">Về sớm</MenuItem>\n            </Select>\n          </FormControl>\n\n          <TextField\n            fullWidth\n            margin=\"normal\"\n            name=\"note\"\n            label=\"Ghi chú\"\n            value={attendanceData.note}\n            onChange={onAttendanceChange}\n            multiline\n            rows={2}\n          />\n        </Box>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Hủy</Button>\n        <Button onClick={onSubmit} variant=\"contained\" color=\"primary\">\n          Xác nhận\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n\n  return (\n    <Box>\n      <Box\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        mb={2}\n      >\n        <Box>\n          <Typography variant=\"h5\">\n            Điểm Danh - {classInfo?.class_name}\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            Buổi {sessionInfo?.session_number} -{\" \"}\n            {new Date(sessionInfo?.date).toLocaleDateString(\"vi-VN\")}\n          </Typography>\n        </Box>\n        <Button\n          variant=\"outlined\"\n          startIcon={<ArrowBack />}\n          onClick={() => navigate(`/teacher/classes/${classId}`)}\n        >\n          Quay lại\n        </Button>\n      </Box>\n\n      <Grid container spacing={3} mt={1}>\n        <Grid item xs={12} md={8}>\n          <Card>\n            <CardContent>\n              <Box\n                display=\"flex\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n                mb={2}\n              >\n                <Typography variant=\"h6\">Camera nhận diện</Typography>\n                <Box>\n                  <Chip\n                    label={isAutoMode ? \"Tự động đang bật\" : \"Tự động đang tắt\"}\n                    color={isAutoMode ? \"success\" : \"default\"}\n                    sx={{ mr: 1 }}\n                  />\n                  <Button\n                    variant=\"outlined\"\n                    color={isAutoMode ? \"error\" : \"primary\"}\n                    onClick={() => {\n                      if (isAutoMode) {\n                        // Dừng tự động\n                        if (intervalId) {\n                          clearInterval(intervalId);\n                          setIntervalId(null);\n                        }\n                        setIsAutoMode(false);\n                        enqueueSnackbar(\"Đã tắt chế độ tự động điểm danh\", {\n                          variant: \"info\",\n                        });\n                      } else {\n                        // Bắt đầu tự động\n                        if (intervalId) {\n                          clearInterval(intervalId);\n                        }\n                        setLastDetectionTime(Date.now());\n                        const id = setInterval(() => {\n                          handleDetectFaces();\n                        }, AUTO_DETECT_INTERVAL);\n                        setIntervalId(id);\n                        setIsAutoMode(true);\n                        enqueueSnackbar(\"Đã bật chế độ tự động điểm danh\", {\n                          variant: \"info\",\n                        });\n                      }\n                    }}\n                  >\n                    {isAutoMode ? \"Tắt tự động\" : \"Bật tự động\"}\n                  </Button>\n                </Box>\n              </Box>\n            </CardContent>\n\n            {/* Sử dụng component VideoDisplay */}\n            <VideoDisplay\n              isCameraReady={isCameraReady}\n              isAutoMode={isAutoMode}\n              webcamRef={webcamRef}\n              videoRef={videoRef}\n              canvasRef={canvasRef}\n              onUserMedia={(stream) => {\n                console.log(\"Camera đã được cấp quyền và khởi tạo\", stream.id);\n                setTimeout(() => {\n                  if (webcamRef.current && webcamRef.current.video) {\n                    dispatch(setCameraReady(true));\n                    setLastDetectionTime(Date.now());\n                  }\n                }, 500);\n              }}\n              onUserMediaError={(err) => {\n                console.error(\"Lỗi khi truy cập camera:\", err);\n                enqueueSnackbar(\n                  `Không thể truy cập camera: ${\n                    err.name === \"NotAllowedError\"\n                      ? \"Bạn chưa cấp quyền truy cập camera\"\n                      : err.name === \"NotFoundError\"\n                      ? \"Không tìm thấy thiết bị camera\"\n                      : err.message || \"Lỗi không xác định\"\n                  }`,\n                  { variant: \"error\" }\n                );\n              }}\n            />\n\n            <Box display=\"flex\" justifyContent=\"space-between\" px={2} pb={2}>\n              <Button\n                variant=\"outlined\"\n                onClick={captureAndRecognize}\n                startIcon={<CameraAlt />}\n                disabled={!isCameraReady || isRecognizing || isAutoMode}\n              >\n                {isRecognizing ? (\n                  <CircularProgress size={24} color=\"inherit\" />\n                ) : (\n                  \"Chụp & Nhận diện\"\n                )}\n              </Button>\n\n              <Box>\n                {isCameraReady && (\n                  <>\n                    <Button\n                      variant=\"outlined\"\n                      color={showLandmark ? \"success\" : \"info\"}\n                      onClick={toggleLandmarkDetection}\n                      sx={{ mr: 1 }}\n                    >\n                      {showLandmark ? \"Tắt Landmark\" : \"Hiện Landmark\"}\n                    </Button>\n\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={completeSession}\n                      startIcon={<Save />}\n                      disabled={sessionInfo?.status === \"completed\"}\n                    >\n                      Kết thúc phiên\n                    </Button>\n                  </>\n                )}\n              </Box>\n            </Box>\n\n            {/* Sử dụng component RecognizedStudentsList */}\n            <Box px={2} pb={2}>\n              <RecognizedStudentsList\n                students={recognizedStudents}\n                onMarkAttendance={handleMarkAttendance}\n              />\n            </Box>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} md={4}>\n          {/* Sử dụng component PresentStudentsList */}\n          <PresentStudentsList\n            attendanceLogs={attendanceLogs.filter(\n              (log) => log.status === \"present\"\n            )}\n            refreshAttendanceLogs={refreshAttendanceLogs}\n          />\n\n          {/* Sử dụng component AbsentStudentsList */}\n          <AbsentStudentsList\n            absentStudents={absentStudents}\n            onOpenManualAttendance={openManualAttendanceDialog}\n          />\n        </Grid>\n      </Grid>\n\n      {/* Sử dụng component ManualAttendanceDialog */}\n      <ManualAttendanceDialog\n        open={manualDialogOpen}\n        onClose={handleManualDialogClose}\n        student={selectedStudent}\n        attendanceData={manualAttendanceData}\n        onAttendanceChange={handleManualAttendanceChange}\n        onSubmit={handleManualAttendanceSubmit}\n      />\n    </Box>\n  );\n};\n\nexport default AttendancePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}