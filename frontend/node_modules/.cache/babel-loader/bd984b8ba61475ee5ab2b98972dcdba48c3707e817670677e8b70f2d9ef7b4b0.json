{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kasiz\\\\Documents\\\\Studying\\\\FaceReg\\\\frontend\\\\src\\\\pages\\\\GoogleRedirectPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport axios from \"../utils/axios\";\nimport { setCredentials } from \"../redux/slices/authSlice\";\nimport { Container, Box, Typography, CircularProgress, Alert } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\nconst GoogleRedirectPage = () => {\n  _s();\n  const [status, setStatus] = useState(\"loading\");\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    handleGoogleCallback();\n  }, []);\n  const handleGoogleCallback = async () => {\n    try {\n      // Lấy thông tin từ URL\n      const queryParams = new URLSearchParams(location.search);\n      const token = queryParams.get(\"token\");\n      const statusParam = queryParams.get(\"status\");\n      const needsRegistration = queryParams.get(\"needsRegistration\") === \"true\";\n      const email = queryParams.get(\"email\");\n      const googleId = queryParams.get(\"googleId\");\n      const name = queryParams.get(\"name\");\n      const avatar = queryParams.get(\"avatar\");\n      const role = queryParams.get(\"role\");\n\n      // Nếu URL chứa token, có nghĩa là đăng nhập thành công\n      if (token) {\n        // Kiểm tra trạng thái người dùng\n        try {\n          const response = await axios.get(`${API_URL}/auth/me`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          if (response.data.success) {\n            const user = response.data.data;\n\n            // Kiểm tra trạng thái tài khoản\n            if (user.status === \"pending\") {\n              setStatus(\"pending\");\n              setMessage(\"Tài khoản của bạn đang chờ được phê duyệt. Vui lòng đợi.\");\n              setTimeout(() => {\n                navigate(`/pending-approval?role=${user.role}`);\n              }, 2000);\n            } else if (user.status === \"rejected\") {\n              setStatus(\"rejected\");\n              setMessage(\"Tài khoản của bạn đã bị từ chối. Vui lòng liên hệ quản trị viên.\");\n              setTimeout(() => {\n                navigate(`/login?error=rejected&role=${user.role}`);\n              }, 2000);\n            } else if (user.status === \"approved\") {\n              // Lưu thông tin đăng nhập\n              dispatch(setCredentials({\n                token,\n                user\n              }));\n              setStatus(\"success\");\n              setMessage(\"Đăng nhập thành công! Đang chuyển hướng...\");\n              setTimeout(() => {\n                navigate(\"/dashboard\");\n              }, 1000);\n            }\n          }\n        } catch (error) {\n          setStatus(\"error\");\n          setMessage(\"Không thể xác thực người dùng. Vui lòng thử lại.\");\n          setTimeout(() => {\n            navigate(\"/login\");\n          }, 2000);\n        }\n      }\n      // Nếu cần đăng ký\n      else if (needsRegistration && email && googleId) {\n        // Kiểm tra xem người dùng đã tồn tại chưa\n        try {\n          const response = await axios.get(`${API_URL}/auth/check-status?email=${email}`);\n          if (response.data.exists) {\n            // Nếu người dùng đã tồn tại\n            const user = response.data.user;\n            if (user.status === \"pending\") {\n              setStatus(\"pending\");\n              setMessage(\"Tài khoản của bạn đang chờ được phê duyệt. Vui lòng đợi.\");\n              setTimeout(() => {\n                navigate(`/pending-approval?role=${user.role}`);\n              }, 2000);\n            } else if (user.status === \"rejected\") {\n              setStatus(\"rejected\");\n              setMessage(\"Tài khoản của bạn đã bị từ chối. Vui lòng liên hệ quản trị viên.\");\n              setTimeout(() => {\n                navigate(`/login?error=rejected&role=${user.role}`);\n              }, 2000);\n            } else {\n              setStatus(\"redirect\");\n              setMessage(\"Đã tìm thấy tài khoản của bạn. Đang chuyển hướng để đăng nhập...\");\n              setTimeout(() => {\n                navigate(\"/login\");\n              }, 2000);\n            }\n          } else {\n            // Nếu người dùng chưa tồn tại, chuyển đến trang đăng ký\n            setStatus(\"redirect\");\n            setMessage(\"Chuyển hướng đến trang đăng ký...\");\n\n            // Chuyển hướng ngay lập tức\n            navigate(`/complete-registration?email=${email}&googleId=${googleId}&name=${encodeURIComponent(name || \"\")}&avatar=${encodeURIComponent(avatar || \"\")}&needsRegistration=true`);\n          }\n        } catch (error) {\n          console.error(\"Error checking user status:\", error);\n          setStatus(\"redirect\");\n          setMessage(\"Chuyển hướng đến trang đăng ký...\");\n\n          // Chuyển hướng ngay lập tức\n          navigate(`/complete-registration?email=${email}&googleId=${googleId}&name=${encodeURIComponent(name || \"\")}&avatar=${encodeURIComponent(avatar || \"\")}&needsRegistration=true`);\n        }\n      }\n      // Nếu có tham số status (thường là pending hoặc rejected)\n      else if (statusParam) {\n        if (statusParam === \"pending\") {\n          setStatus(\"pending\");\n          setMessage(`Tài khoản ${role === \"student\" ? \"sinh viên\" : \"giảng viên\"} của bạn đang chờ được phê duyệt.`);\n          setTimeout(() => {\n            navigate(`/pending-approval?role=${role || \"\"}`);\n          }, 2000);\n        } else if (statusParam === \"rejected\") {\n          setStatus(\"rejected\");\n          setMessage(`Tài khoản ${role === \"student\" ? \"sinh viên\" : \"giảng viên\"} của bạn đã bị từ chối.`);\n          setTimeout(() => {\n            navigate(`/login?error=rejected&role=${role || \"\"}`);\n          }, 2000);\n        }\n      }\n      // Nếu không có thông tin đăng nhập\n      else {\n        setStatus(\"error\");\n        setMessage(\"Không tìm thấy thông tin đăng nhập. Vui lòng thử lại.\");\n        setTimeout(() => {\n          navigate(\"/login\");\n        }, 2000);\n      }\n    } catch (error) {\n      console.error(\"Google redirect error:\", error);\n      setStatus(\"error\");\n      setMessage(\"Đã xảy ra lỗi trong quá trình đăng nhập. Vui lòng thử lại.\");\n      setTimeout(() => {\n        navigate(\"/login\");\n      }, 2000);\n    }\n  };\n\n  // Hiển thị thông báo dựa trên trạng thái\n  const getAlertSeverity = () => {\n    switch (status) {\n      case \"success\":\n        return \"success\";\n      case \"pending\":\n        return \"warning\";\n      case \"rejected\":\n        return \"error\";\n      case \"redirect\":\n        return \"info\";\n      case \"error\":\n        return \"error\";\n      default:\n        return \"info\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 8,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        p: 3,\n        borderRadius: 2,\n        boxShadow: 3,\n        bgcolor: \"background.paper\"\n      },\n      children: status === \"loading\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 60,\n          sx: {\n            mb: 3\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"\\u0110ang x\\u1EED l\\xFD \\u0111\\u0103ng nh\\u1EADp...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Alert, {\n        severity: getAlertSeverity(),\n        variant: \"filled\",\n        sx: {\n          width: \"100%\",\n          mb: 2\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleRedirectPage, \"QSenKN3rxsTNVhB8uAjSSHeEbKs=\", false, function () {\n  return [useNavigate, useLocation, useDispatch];\n});\n_c = GoogleRedirectPage;\nexport default GoogleRedirectPage;\nvar _c;\n$RefreshReg$(_c, \"GoogleRedirectPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","useDispatch","axios","setCredentials","Container","Box","Typography","CircularProgress","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","process","env","REACT_APP_API_URL","GoogleRedirectPage","_s","status","setStatus","message","setMessage","navigate","location","dispatch","handleGoogleCallback","queryParams","URLSearchParams","search","token","get","statusParam","needsRegistration","email","googleId","name","avatar","role","response","headers","Authorization","data","success","user","setTimeout","error","exists","encodeURIComponent","console","getAlertSeverity","maxWidth","children","sx","mt","display","flexDirection","alignItems","p","borderRadius","boxShadow","bgcolor","size","mb","fileName","_jsxFileName","lineNumber","columnNumber","variant","severity","width","_c","$RefreshReg$"],"sources":["C:/Users/kasiz/Documents/Studying/FaceReg/frontend/src/pages/GoogleRedirectPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport axios from \"../utils/axios\";\r\nimport { setCredentials } from \"../redux/slices/authSlice\";\r\nimport {\r\n  Container,\r\n  Box,\r\n  Typography,\r\n  CircularProgress,\r\n  Alert,\r\n} from \"@mui/material\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\r\n\r\nconst GoogleRedirectPage = () => {\r\n  const [status, setStatus] = useState(\"loading\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    handleGoogleCallback();\r\n  }, []);\r\n\r\n  const handleGoogleCallback = async () => {\r\n    try {\r\n      // Lấy thông tin từ URL\r\n      const queryParams = new URLSearchParams(location.search);\r\n      const token = queryParams.get(\"token\");\r\n      const statusParam = queryParams.get(\"status\");\r\n      const needsRegistration = queryParams.get(\"needsRegistration\") === \"true\";\r\n      const email = queryParams.get(\"email\");\r\n      const googleId = queryParams.get(\"googleId\");\r\n      const name = queryParams.get(\"name\");\r\n      const avatar = queryParams.get(\"avatar\");\r\n      const role = queryParams.get(\"role\");\r\n\r\n      // Nếu URL chứa token, có nghĩa là đăng nhập thành công\r\n      if (token) {\r\n        // Kiểm tra trạng thái người dùng\r\n        try {\r\n          const response = await axios.get(`${API_URL}/auth/me`, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          });\r\n\r\n          if (response.data.success) {\r\n            const user = response.data.data;\r\n\r\n            // Kiểm tra trạng thái tài khoản\r\n            if (user.status === \"pending\") {\r\n              setStatus(\"pending\");\r\n              setMessage(\r\n                \"Tài khoản của bạn đang chờ được phê duyệt. Vui lòng đợi.\"\r\n              );\r\n              setTimeout(() => {\r\n                navigate(`/pending-approval?role=${user.role}`);\r\n              }, 2000);\r\n            } else if (user.status === \"rejected\") {\r\n              setStatus(\"rejected\");\r\n              setMessage(\r\n                \"Tài khoản của bạn đã bị từ chối. Vui lòng liên hệ quản trị viên.\"\r\n              );\r\n              setTimeout(() => {\r\n                navigate(`/login?error=rejected&role=${user.role}`);\r\n              }, 2000);\r\n            } else if (user.status === \"approved\") {\r\n              // Lưu thông tin đăng nhập\r\n              dispatch(\r\n                setCredentials({\r\n                  token,\r\n                  user,\r\n                })\r\n              );\r\n              setStatus(\"success\");\r\n              setMessage(\"Đăng nhập thành công! Đang chuyển hướng...\");\r\n              setTimeout(() => {\r\n                navigate(\"/dashboard\");\r\n              }, 1000);\r\n            }\r\n          }\r\n        } catch (error) {\r\n          setStatus(\"error\");\r\n          setMessage(\"Không thể xác thực người dùng. Vui lòng thử lại.\");\r\n          setTimeout(() => {\r\n            navigate(\"/login\");\r\n          }, 2000);\r\n        }\r\n      }\r\n      // Nếu cần đăng ký\r\n      else if (needsRegistration && email && googleId) {\r\n        // Kiểm tra xem người dùng đã tồn tại chưa\r\n        try {\r\n          const response = await axios.get(\r\n            `${API_URL}/auth/check-status?email=${email}`\r\n          );\r\n\r\n          if (response.data.exists) {\r\n            // Nếu người dùng đã tồn tại\r\n            const user = response.data.user;\r\n\r\n            if (user.status === \"pending\") {\r\n              setStatus(\"pending\");\r\n              setMessage(\r\n                \"Tài khoản của bạn đang chờ được phê duyệt. Vui lòng đợi.\"\r\n              );\r\n              setTimeout(() => {\r\n                navigate(`/pending-approval?role=${user.role}`);\r\n              }, 2000);\r\n            } else if (user.status === \"rejected\") {\r\n              setStatus(\"rejected\");\r\n              setMessage(\r\n                \"Tài khoản của bạn đã bị từ chối. Vui lòng liên hệ quản trị viên.\"\r\n              );\r\n              setTimeout(() => {\r\n                navigate(`/login?error=rejected&role=${user.role}`);\r\n              }, 2000);\r\n            } else {\r\n              setStatus(\"redirect\");\r\n              setMessage(\r\n                \"Đã tìm thấy tài khoản của bạn. Đang chuyển hướng để đăng nhập...\"\r\n              );\r\n              setTimeout(() => {\r\n                navigate(\"/login\");\r\n              }, 2000);\r\n            }\r\n          } else {\r\n            // Nếu người dùng chưa tồn tại, chuyển đến trang đăng ký\r\n            setStatus(\"redirect\");\r\n            setMessage(\"Chuyển hướng đến trang đăng ký...\");\r\n\r\n            // Chuyển hướng ngay lập tức\r\n            navigate(\r\n              `/complete-registration?email=${email}&googleId=${googleId}&name=${encodeURIComponent(\r\n                name || \"\"\r\n              )}&avatar=${encodeURIComponent(\r\n                avatar || \"\"\r\n              )}&needsRegistration=true`\r\n            );\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error checking user status:\", error);\r\n          setStatus(\"redirect\");\r\n          setMessage(\"Chuyển hướng đến trang đăng ký...\");\r\n\r\n          // Chuyển hướng ngay lập tức\r\n          navigate(\r\n            `/complete-registration?email=${email}&googleId=${googleId}&name=${encodeURIComponent(\r\n              name || \"\"\r\n            )}&avatar=${encodeURIComponent(\r\n              avatar || \"\"\r\n            )}&needsRegistration=true`\r\n          );\r\n        }\r\n      }\r\n      // Nếu có tham số status (thường là pending hoặc rejected)\r\n      else if (statusParam) {\r\n        if (statusParam === \"pending\") {\r\n          setStatus(\"pending\");\r\n          setMessage(\r\n            `Tài khoản ${\r\n              role === \"student\" ? \"sinh viên\" : \"giảng viên\"\r\n            } của bạn đang chờ được phê duyệt.`\r\n          );\r\n          setTimeout(() => {\r\n            navigate(`/pending-approval?role=${role || \"\"}`);\r\n          }, 2000);\r\n        } else if (statusParam === \"rejected\") {\r\n          setStatus(\"rejected\");\r\n          setMessage(\r\n            `Tài khoản ${\r\n              role === \"student\" ? \"sinh viên\" : \"giảng viên\"\r\n            } của bạn đã bị từ chối.`\r\n          );\r\n          setTimeout(() => {\r\n            navigate(`/login?error=rejected&role=${role || \"\"}`);\r\n          }, 2000);\r\n        }\r\n      }\r\n      // Nếu không có thông tin đăng nhập\r\n      else {\r\n        setStatus(\"error\");\r\n        setMessage(\"Không tìm thấy thông tin đăng nhập. Vui lòng thử lại.\");\r\n        setTimeout(() => {\r\n          navigate(\"/login\");\r\n        }, 2000);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Google redirect error:\", error);\r\n      setStatus(\"error\");\r\n      setMessage(\"Đã xảy ra lỗi trong quá trình đăng nhập. Vui lòng thử lại.\");\r\n      setTimeout(() => {\r\n        navigate(\"/login\");\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  // Hiển thị thông báo dựa trên trạng thái\r\n  const getAlertSeverity = () => {\r\n    switch (status) {\r\n      case \"success\":\r\n        return \"success\";\r\n      case \"pending\":\r\n        return \"warning\";\r\n      case \"rejected\":\r\n        return \"error\";\r\n      case \"redirect\":\r\n        return \"info\";\r\n      case \"error\":\r\n        return \"error\";\r\n      default:\r\n        return \"info\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Box\r\n        sx={{\r\n          mt: 8,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          p: 3,\r\n          borderRadius: 2,\r\n          boxShadow: 3,\r\n          bgcolor: \"background.paper\",\r\n        }}\r\n      >\r\n        {status === \"loading\" ? (\r\n          <>\r\n            <CircularProgress size={60} sx={{ mb: 3 }} />\r\n            <Typography variant=\"h6\">Đang xử lý đăng nhập...</Typography>\r\n          </>\r\n        ) : (\r\n          <Alert\r\n            severity={getAlertSeverity()}\r\n            variant=\"filled\"\r\n            sx={{ width: \"100%\", mb: 2 }}\r\n          >\r\n            {message}\r\n          </Alert>\r\n        )}\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default GoogleRedirectPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}