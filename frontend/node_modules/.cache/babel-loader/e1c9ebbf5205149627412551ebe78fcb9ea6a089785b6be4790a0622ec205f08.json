{"ast":null,"code":"import{createSlice,createAsyncThunk}from\"@reduxjs/toolkit\";import axiosInstance from\"../../utils/axios\";// Hàm thay thế isValidObjectId từ mongoose\nconst isValidObjectId=id=>{// Kiểm tra xem id có phải là chuỗi hex 24 ký tự hay không\nreturn /^[0-9a-fA-F]{24}$/.test(id);};// Thunks cho Campus\nexport const fetchCampuses=createAsyncThunk(\"facility/fetchCampuses\",async(_ref,_ref2)=>{let{page=1,limit=10,search=\"\"}=_ref;let{rejectWithValue}=_ref2;try{let url=`facilities/campuses?page=${page}&limit=${limit}`;if(search){url+=`&search=${encodeURIComponent(search)}`;}const response=await axiosInstance.get(url);return response.data;}catch(error){var _error$response,_error$response$data,_error$response2,_error$response2$data;if(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)===\"jwt expired\"){return rejectWithValue(\"jwt expired\");}return rejectWithValue(((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||\"Không thể lấy danh sách cơ sở\");}});export const fetchAllCampuses=createAsyncThunk(\"facility/fetchAllCampuses\",async function(){let{page=1,limit=100,search=\"\"}=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let{rejectWithValue}=arguments.length>1?arguments[1]:undefined;try{// Thay đổi từ /facilities/campuses/all thành /facilities/campuses với tham số limit cao\nlet url=`facilities/campuses?limit=${limit}`;if(search){url+=`&search=${encodeURIComponent(search)}`;}const response=await axiosInstance.get(url);console.log(\"API response:\",response.data);return response.data;}catch(error){var _error$response3,_error$response3$data,_error$response4,_error$response4$data;console.error(\"API error:\",error);if(((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)===\"jwt expired\"){return rejectWithValue(\"jwt expired\");}return rejectWithValue(((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.message)||\"Không thể lấy danh sách cơ sở\");}});export const createCampus=createAsyncThunk(\"facility/createCampus\",async(campusData,_ref3)=>{let{rejectWithValue}=_ref3;try{// Validate required fields\nif(!campusData.name||!campusData.code){throw new Error(\"Tên và mã cơ sở là bắt buộc\");}const response=await axiosInstance.post(`facilities/campuses`,campusData);return response.data;}catch(error){var _error$response5,_error$response5$data,_error$response6,_error$response6$data;if(((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.message)===\"jwt expired\"){return rejectWithValue(\"jwt expired\");}return rejectWithValue(((_error$response6=error.response)===null||_error$response6===void 0?void 0:(_error$response6$data=_error$response6.data)===null||_error$response6$data===void 0?void 0:_error$response6$data.message)||\"Không thể tạo cơ sở mới\");}});export const updateCampus=createAsyncThunk(\"facility/updateCampus\",async(_ref4,_ref5)=>{let{id,data}=_ref4;let{rejectWithValue}=_ref5;try{// Validate required fields\nif(!data.name||!data.code){throw new Error(\"Tên và mã cơ sở là bắt buộc\");}const response=await axiosInstance.put(`facilities/campuses/${id}`,data);return response.data;}catch(error){var _error$response7,_error$response7$data,_error$response8,_error$response8$data;if(((_error$response7=error.response)===null||_error$response7===void 0?void 0:(_error$response7$data=_error$response7.data)===null||_error$response7$data===void 0?void 0:_error$response7$data.message)===\"jwt expired\"){return rejectWithValue(\"jwt expired\");}return rejectWithValue(((_error$response8=error.response)===null||_error$response8===void 0?void 0:(_error$response8$data=_error$response8.data)===null||_error$response8$data===void 0?void 0:_error$response8$data.message)||\"Không thể cập nhật cơ sở\");}});export const deleteCampus=createAsyncThunk(\"facility/deleteCampus\",async(campusId,_ref6)=>{let{rejectWithValue}=_ref6;try{await axiosInstance.delete(`facilities/campuses/${campusId}`);return campusId;}catch(error){var _error$response9,_error$response9$data,_error$response10,_error$response10$dat;if(((_error$response9=error.response)===null||_error$response9===void 0?void 0:(_error$response9$data=_error$response9.data)===null||_error$response9$data===void 0?void 0:_error$response9$data.message)===\"jwt expired\"){return rejectWithValue(\"jwt expired\");}return rejectWithValue(((_error$response10=error.response)===null||_error$response10===void 0?void 0:(_error$response10$dat=_error$response10.data)===null||_error$response10$dat===void 0?void 0:_error$response10$dat.message)||\"Không thể xóa cơ sở\");}});// Thunks cho Building\nexport const fetchBuildings=createAsyncThunk(\"facility/fetchBuildings\",async(_ref7,_ref8)=>{let{page=1,limit=10,search=\"\",campus_id=\"\"}=_ref7;let{rejectWithValue}=_ref8;try{let url=`facilities/buildings?page=${page}&limit=${limit}`;if(search){url+=`&search=${encodeURIComponent(search)}`;}if(campus_id){url+=`&campus_id=${campus_id}`;}const response=await axiosInstance.get(url);return response.data;}catch(error){var _error$response11,_error$response12,_error$response12$dat,_error$response13,_error$response13$dat;if(((_error$response11=error.response)===null||_error$response11===void 0?void 0:_error$response11.status)===401){return rejectWithValue(\"Token không hợp lệ hoặc đã hết hạn\");}if(((_error$response12=error.response)===null||_error$response12===void 0?void 0:(_error$response12$dat=_error$response12.data)===null||_error$response12$dat===void 0?void 0:_error$response12$dat.message)===\"jwt expired\"){return rejectWithValue(\"jwt expired\");}return rejectWithValue(((_error$response13=error.response)===null||_error$response13===void 0?void 0:(_error$response13$dat=_error$response13.data)===null||_error$response13$dat===void 0?void 0:_error$response13$dat.message)||\"Không thể tải danh sách tòa nhà\");}});export const createBuilding=createAsyncThunk(\"facility/createBuilding\",async(buildingData,_ref9)=>{let{rejectWithValue}=_ref9;try{// Kiểm tra dữ liệu đầu vào\nif(!buildingData.name||!buildingData.code){return rejectWithValue(\"Tên và mã tòa nhà không được để trống\");}// Đảm bảo campus_id là một MongoDB ObjectId (nếu có)\nif(buildingData.campus_id&&buildingData.campus_id.length!==24){return rejectWithValue(\"ID cơ sở không hợp lệ\");}const response=await axiosInstance.post(`facilities/buildings`,buildingData);return response.data;}catch(error){var _error$response14,_error$response15,_error$response15$dat,_error$response16,_error$response16$dat;if(((_error$response14=error.response)===null||_error$response14===void 0?void 0:_error$response14.status)===401){return rejectWithValue(\"Token không hợp lệ hoặc đã hết hạn\");}if(((_error$response15=error.response)===null||_error$response15===void 0?void 0:(_error$response15$dat=_error$response15.data)===null||_error$response15$dat===void 0?void 0:_error$response15$dat.message)===\"jwt expired\"){return rejectWithValue(\"jwt expired\");}return rejectWithValue(((_error$response16=error.response)===null||_error$response16===void 0?void 0:(_error$response16$dat=_error$response16.data)===null||_error$response16$dat===void 0?void 0:_error$response16$dat.message)||\"Không thể tạo tòa nhà mới\");}});export const updateBuilding=createAsyncThunk(\"facility/updateBuilding\",async(_ref10,_ref11)=>{let{id,buildingData}=_ref10;let{rejectWithValue}=_ref11;try{if(!id){return rejectWithValue(\"ID của tòa nhà là bắt buộc\");}if(!buildingData||!buildingData.name||!buildingData.code){return rejectWithValue(\"Tên và mã tòa nhà là các trường bắt buộc\");}// Kiểm tra campus_id nếu có\nif(buildingData.campus_id&&!isValidObjectId(buildingData.campus_id)){return rejectWithValue(\"ID cơ sở không hợp lệ\");}const response=await axiosInstance.put(`facilities/buildings/${id}`,buildingData);return response.data;}catch(error){var _error$response17,_error$response18,_error$response18$dat,_error$response19,_error$response19$dat;if(((_error$response17=error.response)===null||_error$response17===void 0?void 0:_error$response17.status)===401){return rejectWithValue(\"Token không hợp lệ hoặc đã hết hạn\");}if(((_error$response18=error.response)===null||_error$response18===void 0?void 0:(_error$response18$dat=_error$response18.data)===null||_error$response18$dat===void 0?void 0:_error$response18$dat.message)===\"jwt expired\"){return rejectWithValue(\"jwt expired\");}return rejectWithValue(((_error$response19=error.response)===null||_error$response19===void 0?void 0:(_error$response19$dat=_error$response19.data)===null||_error$response19$dat===void 0?void 0:_error$response19$dat.message)||\"Không thể cập nhật tòa nhà\");}});export const deleteBuilding=createAsyncThunk(\"facility/deleteBuilding\",async(id,_ref12)=>{let{rejectWithValue}=_ref12;try{if(!id){return rejectWithValue(\"ID của tòa nhà là bắt buộc\");}const response=await axiosInstance.delete(`facilities/buildings/${id}`);return response.data;}catch(error){var _error$response20,_error$response21,_error$response21$dat,_error$response22,_error$response22$dat;if(((_error$response20=error.response)===null||_error$response20===void 0?void 0:_error$response20.status)===401){return rejectWithValue(\"Token không hợp lệ hoặc đã hết hạn\");}if(((_error$response21=error.response)===null||_error$response21===void 0?void 0:(_error$response21$dat=_error$response21.data)===null||_error$response21$dat===void 0?void 0:_error$response21$dat.message)===\"jwt expired\"){return rejectWithValue(\"jwt expired\");}return rejectWithValue(((_error$response22=error.response)===null||_error$response22===void 0?void 0:(_error$response22$dat=_error$response22.data)===null||_error$response22$dat===void 0?void 0:_error$response22$dat.message)||\"Không thể xóa tòa nhà\");}});// Thunks cho Room\nexport const fetchRooms=createAsyncThunk(\"facility/fetchRooms\",async(_ref13,_ref14)=>{let{page=1,limit=10,search=\"\",building_id=\"\"}=_ref13;let{rejectWithValue}=_ref14;try{let url=`facilities/rooms?page=${page}&limit=${limit}`;if(search){url+=`&search=${encodeURIComponent(search)}`;}if(building_id){url+=`&building_id=${encodeURIComponent(building_id)}`;}const response=await axiosInstance.get(url);return response.data;}catch(error){var _error$response23,_error$response24,_error$response24$dat,_error$response25,_error$response25$dat;if(((_error$response23=error.response)===null||_error$response23===void 0?void 0:_error$response23.status)===401){return rejectWithValue(\"Token không hợp lệ hoặc đã hết hạn\");}if(((_error$response24=error.response)===null||_error$response24===void 0?void 0:(_error$response24$dat=_error$response24.data)===null||_error$response24$dat===void 0?void 0:_error$response24$dat.message)===\"jwt expired\"){return rejectWithValue(\"jwt expired\");}return rejectWithValue(((_error$response25=error.response)===null||_error$response25===void 0?void 0:(_error$response25$dat=_error$response25.data)===null||_error$response25$dat===void 0?void 0:_error$response25$dat.message)||\"Không thể tải danh sách phòng\");}});export const createRoom=createAsyncThunk(\"facility/createRoom\",async(roomData,_ref15)=>{let{rejectWithValue}=_ref15;try{// Kiểm tra dữ liệu đầu vào\nif(!roomData.room_number){return rejectWithValue(\"Số phòng không được để trống\");}// Đảm bảo building_id là một MongoDB ObjectId\nif(!roomData.building_id||roomData.building_id.length!==24){return rejectWithValue(\"ID tòa nhà không hợp lệ\");}// Format equipment theo đúng định dạng của schema\nconst formattedData={...roomData};if(Array.isArray(formattedData.equipment)){formattedData.equipment=formattedData.equipment.map(item=>({name:item,quantity:1,status:\"working\"}));}const response=await axiosInstance.post(`facilities/rooms`,formattedData);return response.data;}catch(error){var _error$response26,_error$response27,_error$response27$dat,_error$response28,_error$response28$dat;if(((_error$response26=error.response)===null||_error$response26===void 0?void 0:_error$response26.status)===401){return rejectWithValue(\"Token không hợp lệ hoặc đã hết hạn\");}if(((_error$response27=error.response)===null||_error$response27===void 0?void 0:(_error$response27$dat=_error$response27.data)===null||_error$response27$dat===void 0?void 0:_error$response27$dat.message)===\"jwt expired\"){return rejectWithValue(\"jwt expired\");}return rejectWithValue(((_error$response28=error.response)===null||_error$response28===void 0?void 0:(_error$response28$dat=_error$response28.data)===null||_error$response28$dat===void 0?void 0:_error$response28$dat.message)||\"Không thể tạo phòng mới\");}});export const updateRoom=createAsyncThunk(\"facility/updateRoom\",async(_ref16,_ref17)=>{let{id,data}=_ref16;let{rejectWithValue}=_ref17;try{if(!id){return rejectWithValue(\"ID của phòng là bắt buộc\");}// Đảm bảo các trường số được chuyển đổi đúng định dạng\nconst formattedData={...data,floor:Number(data.floor),capacity:Number(data.capacity),room_number:data.room_number.trim()};// Format equipment theo đúng định dạng của schema\nif(Array.isArray(formattedData.equipment)){formattedData.equipment=formattedData.equipment.map(item=>({name:item,quantity:1,status:\"working\"}));}console.log(\"Gửi dữ liệu cập nhật phòng:\",formattedData);const response=await axiosInstance.put(`facilities/rooms/${id}`,formattedData);return response.data;}catch(error){var _error$response29,_error$response30,_error$response31,_error$response31$dat,_error$response32,_error$response32$dat;console.error(\"Lỗi cập nhật phòng:\",error);console.error(\"Chi tiết lỗi:\",(_error$response29=error.response)===null||_error$response29===void 0?void 0:_error$response29.data);if(((_error$response30=error.response)===null||_error$response30===void 0?void 0:_error$response30.status)===401){return rejectWithValue(\"Token không hợp lệ hoặc đã hết hạn\");}if(((_error$response31=error.response)===null||_error$response31===void 0?void 0:(_error$response31$dat=_error$response31.data)===null||_error$response31$dat===void 0?void 0:_error$response31$dat.message)===\"jwt expired\"){return rejectWithValue(\"jwt expired\");}return rejectWithValue(((_error$response32=error.response)===null||_error$response32===void 0?void 0:(_error$response32$dat=_error$response32.data)===null||_error$response32$dat===void 0?void 0:_error$response32$dat.message)||\"Không thể cập nhật phòng\");}});export const deleteRoom=createAsyncThunk(\"facility/deleteRoom\",async(id,_ref18)=>{let{rejectWithValue}=_ref18;if(!id){return rejectWithValue(\"ID của phòng là bắt buộc\");}try{const response=await axiosInstance.delete(`facilities/rooms/${id}`);return response.data;}catch(error){var _error$response33,_error$response34,_error$response34$dat,_error$response35,_error$response35$dat;if(((_error$response33=error.response)===null||_error$response33===void 0?void 0:_error$response33.status)===401){return rejectWithValue(\"Token không hợp lệ hoặc đã hết hạn\");}if(((_error$response34=error.response)===null||_error$response34===void 0?void 0:(_error$response34$dat=_error$response34.data)===null||_error$response34$dat===void 0?void 0:_error$response34$dat.message)===\"jwt expired\"){return rejectWithValue(\"jwt expired\");}return rejectWithValue(((_error$response35=error.response)===null||_error$response35===void 0?void 0:(_error$response35$dat=_error$response35.data)===null||_error$response35$dat===void 0?void 0:_error$response35$dat.message)||\"Không thể xóa phòng\");}});// Thunks cho Room Schedules\nexport const fetchRoomSchedules=createAsyncThunk(\"facility/fetchRoomSchedules\",async(_ref19,_ref20)=>{let{page=1,limit=10,search=\"\",room_id=\"\"}=_ref19;let{rejectWithValue}=_ref20;try{let url=`facilities/room-schedules?page=${page}&limit=${limit}`;if(search){url+=`&search=${encodeURIComponent(search)}`;}if(room_id){url+=`&room_id=${room_id}`;}const response=await axiosInstance.get(url);return response.data;}catch(error){var _error$response36,_error$response37,_error$response37$dat,_error$response38,_error$response38$dat;if(((_error$response36=error.response)===null||_error$response36===void 0?void 0:_error$response36.status)===401){return rejectWithValue(\"Token không hợp lệ hoặc đã hết hạn\");}if(((_error$response37=error.response)===null||_error$response37===void 0?void 0:(_error$response37$dat=_error$response37.data)===null||_error$response37$dat===void 0?void 0:_error$response37$dat.message)===\"jwt expired\"){return rejectWithValue(\"jwt expired\");}return rejectWithValue(((_error$response38=error.response)===null||_error$response38===void 0?void 0:(_error$response38$dat=_error$response38.data)===null||_error$response38$dat===void 0?void 0:_error$response38$dat.message)||\"Không thể tải lịch sử dụng phòng\");}});// Initial state\nconst initialState={campuses:[],buildings:[],rooms:[],roomSchedules:{items:[],totalItems:0,hasMore:false},selectedCampus:null,selectedBuilding:null,selectedRoom:null,isLoading:false,error:null,campusPagination:{page:1,limit:10,totalPages:1,totalCount:0},buildingPagination:{page:1,limit:10,totalPages:1,totalCount:0},roomPagination:{page:1,limit:10,totalPages:1,totalCount:0}};// Slice\nconst facilitySlice=createSlice({name:\"facility\",initialState,reducers:{clearError:state=>{state.error=null;},setSelectedCampus:(state,action)=>{state.selectedCampus=action.payload;},setSelectedBuilding:(state,action)=>{state.selectedBuilding=action.payload;},setSelectedRoom:(state,action)=>{state.selectedRoom=action.payload;}},extraReducers:builder=>{builder// Campus reducers\n.addCase(fetchCampuses.pending,state=>{state.isLoading=true;state.error=null;}).addCase(fetchCampuses.fulfilled,(state,action)=>{var _action$payload,_action$payload2,_action$payload3,_action$payload4;state.isLoading=false;if((_action$payload=action.payload)!==null&&_action$payload!==void 0&&_action$payload.data){state.campuses=action.payload.data;}state.campusPagination={totalCount:((_action$payload2=action.payload)===null||_action$payload2===void 0?void 0:_action$payload2.totalItems)||0,currentPage:((_action$payload3=action.payload)===null||_action$payload3===void 0?void 0:_action$payload3.currentPage)||1,totalPages:((_action$payload4=action.payload)===null||_action$payload4===void 0?void 0:_action$payload4.totalPages)||1};}).addCase(fetchCampuses.rejected,(state,action)=>{state.isLoading=false;state.error=action.payload||\"Đã xảy ra lỗi khi tải danh sách cơ sở\";}).addCase(fetchAllCampuses.pending,state=>{state.isLoading=true;state.error=null;}).addCase(fetchAllCampuses.fulfilled,(state,action)=>{var _action$payload5;state.isLoading=false;console.log(\"fetchAllCampuses.fulfilled\",action.payload);if((_action$payload5=action.payload)!==null&&_action$payload5!==void 0&&_action$payload5.data){state.campuses=action.payload.data;}else if(Array.isArray(action.payload)){state.campuses=action.payload;}}).addCase(fetchAllCampuses.rejected,(state,action)=>{state.isLoading=false;state.error=action.payload;console.error(\"fetchAllCampuses.rejected\",action.payload);}).addCase(createCampus.pending,state=>{state.isLoading=true;state.error=null;}).addCase(createCampus.fulfilled,(state,action)=>{var _action$payload6;state.isLoading=false;if((_action$payload6=action.payload)!==null&&_action$payload6!==void 0&&_action$payload6.data){state.campuses=[action.payload.data,...state.campuses];}}).addCase(createCampus.rejected,(state,action)=>{state.isLoading=false;state.error=action.payload||\"Đã xảy ra lỗi khi tạo cơ sở mới\";}).addCase(updateCampus.pending,state=>{state.isLoading=true;state.error=null;}).addCase(updateCampus.fulfilled,(state,action)=>{state.isLoading=false;const updatedCampus=action.payload.data;state.campuses=state.campuses.map(campus=>campus._id===updatedCampus._id?updatedCampus:campus);}).addCase(updateCampus.rejected,(state,action)=>{state.isLoading=false;state.error=action.payload||\"Đã xảy ra lỗi khi cập nhật cơ sở\";}).addCase(deleteCampus.pending,state=>{state.isLoading=true;state.error=null;}).addCase(deleteCampus.fulfilled,(state,action)=>{state.isLoading=false;state.campuses=state.campuses.filter(campus=>campus._id!==action.payload);}).addCase(deleteCampus.rejected,(state,action)=>{state.isLoading=false;state.error=action.payload||\"Đã xảy ra lỗi khi xóa cơ sở\";})// Fetch All Buildings\n.addCase(fetchBuildings.pending,state=>{state.isLoading=true;state.error=null;}).addCase(fetchBuildings.fulfilled,(state,action)=>{state.isLoading=false;state.buildings=action.payload.data;state.buildingPagination={page:action.payload.page||1,limit:action.payload.limit||10,totalPages:action.payload.totalPages||1,totalCount:action.payload.totalCount||0};}).addCase(fetchBuildings.rejected,(state,action)=>{state.isLoading=false;state.error=action.payload;})// Create Building\n.addCase(createBuilding.pending,state=>{state.isLoading=true;state.error=null;}).addCase(createBuilding.fulfilled,(state,action)=>{var _action$payload7;state.isLoading=false;if((_action$payload7=action.payload)!==null&&_action$payload7!==void 0&&_action$payload7.data){state.buildings=[action.payload.data,...state.buildings];}state.buildingPagination.totalCount+=1;}).addCase(createBuilding.rejected,(state,action)=>{state.isLoading=false;state.error=action.payload;})// Update Building\n.addCase(updateBuilding.pending,state=>{state.isLoading=true;state.error=null;}).addCase(updateBuilding.fulfilled,(state,action)=>{state.isLoading=false;const updatedBuilding=action.payload.data;state.buildings=state.buildings.map(building=>building._id===updatedBuilding._id?updatedBuilding:building);}).addCase(updateBuilding.rejected,(state,action)=>{state.isLoading=false;state.error=action.payload;})// Delete Building\n.addCase(deleteBuilding.pending,state=>{state.isLoading=true;state.error=null;}).addCase(deleteBuilding.fulfilled,(state,action)=>{state.isLoading=false;state.buildings=state.buildings.filter(building=>building._id!==action.payload.id);state.buildingPagination.totalCount-=1;}).addCase(deleteBuilding.rejected,(state,action)=>{state.isLoading=false;state.error=action.payload;})// Fetch All Rooms\n.addCase(fetchRooms.pending,state=>{state.isLoading=true;state.error=null;}).addCase(fetchRooms.fulfilled,(state,action)=>{state.isLoading=false;state.rooms=action.payload.data;state.roomPagination={page:action.payload.page||1,limit:action.payload.limit||10,totalPages:action.payload.totalPages||1,totalCount:action.payload.totalCount||0};}).addCase(fetchRooms.rejected,(state,action)=>{state.isLoading=false;state.error=action.payload;})// Create Room\n.addCase(createRoom.pending,state=>{state.isLoading=true;state.error=null;}).addCase(createRoom.fulfilled,(state,action)=>{var _action$payload8;state.isLoading=false;if((_action$payload8=action.payload)!==null&&_action$payload8!==void 0&&_action$payload8.data){state.rooms=[action.payload.data,...state.rooms];}state.roomPagination.totalCount+=1;}).addCase(createRoom.rejected,(state,action)=>{state.isLoading=false;state.error=action.payload;})// Update Room\n.addCase(updateRoom.pending,state=>{state.isLoading=true;state.error=null;}).addCase(updateRoom.fulfilled,(state,action)=>{state.isLoading=false;const updatedRoom=action.payload.data;state.rooms=state.rooms.map(room=>room._id===updatedRoom._id?updatedRoom:room);}).addCase(updateRoom.rejected,(state,action)=>{state.isLoading=false;state.error=action.payload;})// Delete Room\n.addCase(deleteRoom.pending,state=>{state.isLoading=true;state.error=null;}).addCase(deleteRoom.fulfilled,(state,action)=>{state.isLoading=false;state.rooms=state.rooms.filter(room=>room._id!==action.payload.id);state.roomPagination.totalCount-=1;}).addCase(deleteRoom.rejected,(state,action)=>{state.isLoading=false;state.error=action.payload;})// Fetch Room Schedules\n.addCase(fetchRoomSchedules.pending,state=>{state.isLoading=true;state.error=null;}).addCase(fetchRoomSchedules.fulfilled,(state,action)=>{state.isLoading=false;state.roomSchedules.items=action.payload.data;state.roomSchedules.totalItems=action.payload.total;state.roomSchedules.hasMore=action.payload.hasMore;}).addCase(fetchRoomSchedules.rejected,(state,action)=>{state.isLoading=false;state.error=action.payload;});}});export const{clearError,setSelectedCampus,setSelectedBuilding,setSelectedRoom}=facilitySlice.actions;export default facilitySlice.reducer;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}