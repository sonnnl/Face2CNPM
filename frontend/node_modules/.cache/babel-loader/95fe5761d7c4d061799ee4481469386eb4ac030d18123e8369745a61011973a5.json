{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport axiosInstance from \"../../utils/axios\";\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\n\n// Thunks cho quản lý cơ sở\nexport const fetchAllCampuses = createAsyncThunk(\"facility/fetchAllCampuses\", async ({\n  page = 1,\n  limit = 10,\n  search = \"\"\n}, {\n  getState,\n  rejectWithValue\n}) => {\n  try {\n    const {\n      token\n    } = getState().auth;\n    const response = await axios.get(`${API_URL}/facilities/campuses?page=${page}&limit=${limit}&search=${search}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Không thể lấy danh sách cơ sở\");\n  }\n});\nexport const createCampus = createAsyncThunk(\"facility/createCampus\", async (campusData, {\n  getState,\n  rejectWithValue\n}) => {\n  try {\n    const {\n      token\n    } = getState().auth;\n    const response = await axios.post(`${API_URL}/facilities/campuses`, campusData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Không thể tạo cơ sở mới\");\n  }\n});\nexport const updateCampus = createAsyncThunk(\"facility/updateCampus\", async ({\n  campusId,\n  campusData\n}, {\n  getState,\n  rejectWithValue\n}) => {\n  try {\n    const {\n      token\n    } = getState().auth;\n    const response = await axios.put(`${API_URL}/facilities/campuses/${campusId}`, campusData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    return rejectWithValue(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || \"Không thể cập nhật cơ sở\");\n  }\n});\nexport const deleteCampus = createAsyncThunk(\"facility/deleteCampus\", async (campusId, {\n  getState,\n  rejectWithValue\n}) => {\n  try {\n    const {\n      token\n    } = getState().auth;\n    await axios.delete(`${API_URL}/facilities/campuses/${campusId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return campusId;\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n    return rejectWithValue(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || \"Không thể xóa cơ sở\");\n  }\n});\n\n// Thunks cho quản lý tòa nhà\nexport const fetchAllBuildings = createAsyncThunk(\"facility/fetchAllBuildings\", async (searchParams = {}, {\n  rejectWithValue,\n  getState\n}) => {\n  try {\n    // Tạo tham số truy vấn từ searchParams\n    const queryParams = new URLSearchParams();\n    if (searchParams.name) queryParams.append(\"name\", searchParams.name);\n    if (searchParams.code) queryParams.append(\"code\", searchParams.code);\n    if (searchParams.campus_id) queryParams.append(\"campus_id\", searchParams.campus_id);\n    if (searchParams.status) queryParams.append(\"status\", searchParams.status);\n    if (searchParams.page) queryParams.append(\"page\", searchParams.page);\n    if (searchParams.limit) queryParams.append(\"limit\", searchParams.limit);\n    const queryString = queryParams.toString();\n    const endpoint = `/facilities/buildings${queryString ? `?${queryString}` : \"\"}`;\n\n    // Sử dụng axiosInstance thay vì axios\n    const response = await axiosInstance.get(endpoint);\n    return response.data;\n  } catch (error) {\n    // Xử lý các loại lỗi\n    if (error.response) {\n      const {\n        status,\n        data\n      } = error.response;\n      switch (status) {\n        case 401:\n          return rejectWithValue(\"Không được phép truy cập, token không hợp lệ\");\n        case 403:\n          return rejectWithValue(\"Bạn không có quyền truy cập dữ liệu này\");\n        case 404:\n          return rejectWithValue(\"Không tìm thấy dữ liệu\");\n        case 500:\n          return rejectWithValue(\"Lỗi máy chủ, vui lòng thử lại sau\");\n        default:\n          return rejectWithValue(data.message || \"Không thể lấy danh sách tòa nhà\");\n      }\n    } else if (error.request) {\n      return rejectWithValue(\"Không thể kết nối đến máy chủ\");\n    } else {\n      return rejectWithValue(error.message || \"Đã xảy ra lỗi khi gửi yêu cầu\");\n    }\n  }\n});\nexport const createBuilding = createAsyncThunk(\"facility/createBuilding\", async (buildingData, {\n  rejectWithValue,\n  getState\n}) => {\n  try {\n    // Kiểm tra dữ liệu đầu vào cơ bản\n    if (!buildingData.name || !buildingData.name.trim()) {\n      return rejectWithValue(\"Tên tòa nhà không được để trống\");\n    }\n    if (!buildingData.code || !buildingData.code.trim()) {\n      return rejectWithValue(\"Mã tòa nhà không được để trống\");\n    }\n\n    // Lấy token từ state hoặc localStorage\n    const {\n      userToken\n    } = getState().auth;\n    const token = userToken || localStorage.getItem(\"userToken\") || localStorage.getItem(\"token\");\n    if (!token) {\n      return rejectWithValue(\"Vui lòng đăng nhập để thực hiện chức năng này\");\n    }\n\n    // Kiểm tra campus_id nếu được cung cấp\n    if (buildingData.campus_id && !/^[0-9a-fA-F]{24}$/.test(buildingData.campus_id)) {\n      return rejectWithValue(\"ID cơ sở không hợp lệ\");\n    }\n\n    // Gọi API để tạo tòa nhà sử dụng axiosInstance\n    const response = await axiosInstance.post(`/facilities/buildings`, buildingData);\n    return response.data;\n  } catch (error) {\n    // Xử lý các loại lỗi khác nhau\n    if (error.response) {\n      // Lỗi từ phía server\n      const {\n        status,\n        data\n      } = error.response;\n      switch (status) {\n        case 401:\n          return rejectWithValue(\"Không được phép truy cập, token không hợp lệ\");\n        case 403:\n          return rejectWithValue(\"Bạn không có quyền thực hiện chức năng này\");\n        case 404:\n          return rejectWithValue(\"Không tìm thấy API endpoint\");\n        case 409:\n          return rejectWithValue(data.message || \"Mã tòa nhà đã tồn tại\");\n        case 500:\n          return rejectWithValue(\"Lỗi máy chủ, vui lòng thử lại sau\");\n        default:\n          return rejectWithValue(data.message || \"Không thể tạo tòa nhà\");\n      }\n    } else if (error.request) {\n      // Lỗi không có phản hồi từ server\n      return rejectWithValue(\"Không thể kết nối đến máy chủ\");\n    } else {\n      // Lỗi trong quá trình thiết lập request\n      return rejectWithValue(error.message || \"Đã xảy ra lỗi khi gửi yêu cầu\");\n    }\n  }\n});\nexport const updateBuilding = createAsyncThunk(\"facility/updateBuilding\", async ({\n  id,\n  buildingData\n}, {\n  rejectWithValue,\n  getState\n}) => {\n  try {\n    if (!id) {\n      return rejectWithValue(\"ID tòa nhà không hợp lệ\");\n    }\n\n    // Kiểm tra dữ liệu đầu vào\n    if (buildingData.name && !buildingData.name.trim()) {\n      return rejectWithValue(\"Tên tòa nhà không được để trống\");\n    }\n    if (buildingData.code && !buildingData.code.trim()) {\n      return rejectWithValue(\"Mã tòa nhà không được để trống\");\n    }\n\n    // Kiểm tra campus_id nếu được cung cấp\n    if (buildingData.campus_id && !/^[0-9a-fA-F]{24}$/.test(buildingData.campus_id)) {\n      return rejectWithValue(\"ID cơ sở không hợp lệ\");\n    }\n\n    // Sử dụng axiosInstance thay vì axios\n    const response = await axiosInstance.put(`/facilities/buildings/${id}`, buildingData);\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      const {\n        status,\n        data\n      } = error.response;\n      switch (status) {\n        case 401:\n          return rejectWithValue(\"Không được phép truy cập, token không hợp lệ\");\n        case 403:\n          return rejectWithValue(\"Bạn không có quyền thực hiện chức năng này\");\n        case 404:\n          return rejectWithValue(\"Không tìm thấy tòa nhà\");\n        case 409:\n          return rejectWithValue(data.message || \"Mã tòa nhà đã tồn tại\");\n        case 500:\n          return rejectWithValue(\"Lỗi máy chủ, vui lòng thử lại sau\");\n        default:\n          return rejectWithValue(data.message || \"Không thể cập nhật tòa nhà\");\n      }\n    } else if (error.request) {\n      return rejectWithValue(\"Không thể kết nối đến máy chủ\");\n    } else {\n      return rejectWithValue(error.message || \"Đã xảy ra lỗi khi gửi yêu cầu\");\n    }\n  }\n});\nexport const deleteBuilding = createAsyncThunk(\"facility/deleteBuilding\", async (id, {\n  rejectWithValue,\n  getState\n}) => {\n  try {\n    if (!id) {\n      return rejectWithValue(\"ID tòa nhà không hợp lệ\");\n    }\n\n    // Sử dụng axiosInstance thay vì axios\n    const response = await axiosInstance.delete(`/facilities/buildings/${id}`);\n    return {\n      id,\n      message: response.data.message\n    };\n  } catch (error) {\n    if (error.response) {\n      const {\n        status,\n        data\n      } = error.response;\n      switch (status) {\n        case 401:\n          return rejectWithValue(\"Không được phép truy cập, token không hợp lệ\");\n        case 403:\n          return rejectWithValue(\"Bạn không có quyền thực hiện chức năng này\");\n        case 404:\n          return rejectWithValue(\"Không tìm thấy tòa nhà\");\n        case 409:\n          return rejectWithValue(data.message || \"Không thể xóa tòa nhà này do có phòng thuộc tòa nhà\");\n        case 500:\n          return rejectWithValue(\"Lỗi máy chủ, vui lòng thử lại sau\");\n        default:\n          return rejectWithValue(data.message || \"Không thể xóa tòa nhà\");\n      }\n    } else if (error.request) {\n      return rejectWithValue(\"Không thể kết nối đến máy chủ\");\n    } else {\n      return rejectWithValue(error.message || \"Đã xảy ra lỗi khi gửi yêu cầu\");\n    }\n  }\n});\n\n// Thunks cho quản lý phòng học\nexport const fetchAllRooms = createAsyncThunk(\"facility/fetchAllRooms\", async (searchParams = {}, {\n  rejectWithValue,\n  getState\n}) => {\n  try {\n    // Tạo tham số truy vấn từ searchParams\n    const queryParams = new URLSearchParams();\n    if (searchParams.search) queryParams.append(\"search\", searchParams.search);\n    if (searchParams.building_id) queryParams.append(\"building_id\", searchParams.building_id);\n    if (searchParams.room_type) queryParams.append(\"room_type\", searchParams.room_type);\n    if (searchParams.status) queryParams.append(\"status\", searchParams.status);\n    if (searchParams.capacity) queryParams.append(\"capacity\", searchParams.capacity);\n    if (searchParams.page) queryParams.append(\"page\", searchParams.page);\n    if (searchParams.limit) queryParams.append(\"limit\", searchParams.limit);\n    const queryString = queryParams.toString();\n    let endpoint = `/facilities/rooms`;\n\n    // Nếu có building_id trong URL thay vì query params\n    if (searchParams.buildingIdInUrl) {\n      endpoint = `/facilities/buildings/${searchParams.buildingIdInUrl}/rooms`;\n      // Xóa building_id khỏi query params nếu đã có trong URL\n      queryParams.delete(\"building_id\");\n    }\n    endpoint = `${endpoint}${queryString ? `?${queryString}` : \"\"}`;\n\n    // Sử dụng axiosInstance thay vì axios\n    const response = await axiosInstance.get(endpoint);\n    return response.data;\n  } catch (error) {\n    // Xử lý các loại lỗi\n    if (error.response) {\n      const {\n        status,\n        data\n      } = error.response;\n      switch (status) {\n        case 401:\n          return rejectWithValue(\"Không được phép truy cập, token không hợp lệ\");\n        case 403:\n          return rejectWithValue(\"Bạn không có quyền truy cập dữ liệu này\");\n        case 404:\n          return rejectWithValue(\"Không tìm thấy dữ liệu\");\n        case 500:\n          return rejectWithValue(\"Lỗi máy chủ, vui lòng thử lại sau\");\n        default:\n          return rejectWithValue(data.message || \"Không thể lấy danh sách phòng học\");\n      }\n    } else if (error.request) {\n      return rejectWithValue(\"Không thể kết nối đến máy chủ\");\n    } else {\n      return rejectWithValue(error.message || \"Đã xảy ra lỗi khi gửi yêu cầu\");\n    }\n  }\n});\nexport const createRoom = createAsyncThunk(\"facility/createRoom\", async (roomData, {\n  rejectWithValue,\n  getState\n}) => {\n  try {\n    // Kiểm tra dữ liệu đầu vào cơ bản\n    if (!roomData.room_number || !roomData.room_number.trim()) {\n      return rejectWithValue(\"Số phòng không được để trống\");\n    }\n    if (!roomData.building_id) {\n      return rejectWithValue(\"Vui lòng chọn tòa nhà\");\n    }\n\n    // Kiểm tra building_id có hợp lệ không\n    if (!/^[0-9a-fA-F]{24}$/.test(roomData.building_id)) {\n      return rejectWithValue(\"ID tòa nhà không hợp lệ\");\n    }\n\n    // Sử dụng axiosInstance thay vì axios\n    const response = await axiosInstance.post(`/facilities/rooms`, roomData);\n    return response.data;\n  } catch (error) {\n    // Xử lý các loại lỗi\n    if (error.response) {\n      const {\n        status,\n        data\n      } = error.response;\n      switch (status) {\n        case 401:\n          return rejectWithValue(\"Không được phép truy cập, token không hợp lệ\");\n        case 403:\n          return rejectWithValue(\"Bạn không có quyền thực hiện chức năng này\");\n        case 404:\n          return rejectWithValue(\"Không tìm thấy tòa nhà\");\n        case 400:\n          return rejectWithValue(data.message || \"Phòng học này đã tồn tại trong tòa nhà\");\n        case 500:\n          return rejectWithValue(\"Lỗi máy chủ, vui lòng thử lại sau\");\n        default:\n          return rejectWithValue(data.message || \"Không thể tạo phòng học mới\");\n      }\n    } else if (error.request) {\n      return rejectWithValue(\"Không thể kết nối đến máy chủ\");\n    } else {\n      return rejectWithValue(error.message || \"Đã xảy ra lỗi khi gửi yêu cầu\");\n    }\n  }\n});\nexport const updateRoom = createAsyncThunk(\"facility/updateRoom\", async ({\n  id,\n  roomData\n}, {\n  rejectWithValue,\n  getState\n}) => {\n  try {\n    if (!id) {\n      return rejectWithValue(\"ID phòng học không hợp lệ\");\n    }\n\n    // Kiểm tra dữ liệu đầu vào\n    if (roomData.room_number && !roomData.room_number.trim()) {\n      return rejectWithValue(\"Số phòng không được để trống\");\n    }\n\n    // Kiểm tra building_id nếu được cung cấp\n    if (roomData.building_id && !/^[0-9a-fA-F]{24}$/.test(roomData.building_id)) {\n      return rejectWithValue(\"ID tòa nhà không hợp lệ\");\n    }\n\n    // Sử dụng axiosInstance thay vì axios\n    const response = await axiosInstance.put(`/facilities/rooms/${id}`, roomData);\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      const {\n        status,\n        data\n      } = error.response;\n      switch (status) {\n        case 401:\n          return rejectWithValue(\"Không được phép truy cập, token không hợp lệ\");\n        case 403:\n          return rejectWithValue(\"Bạn không có quyền thực hiện chức năng này\");\n        case 404:\n          return rejectWithValue(\"Không tìm thấy phòng học\");\n        case 400:\n          return rejectWithValue(data.message || \"Phòng học này đã tồn tại trong tòa nhà\");\n        case 500:\n          return rejectWithValue(\"Lỗi máy chủ, vui lòng thử lại sau\");\n        default:\n          return rejectWithValue(data.message || \"Không thể cập nhật phòng học\");\n      }\n    } else if (error.request) {\n      return rejectWithValue(\"Không thể kết nối đến máy chủ\");\n    } else {\n      return rejectWithValue(error.message || \"Đã xảy ra lỗi khi gửi yêu cầu\");\n    }\n  }\n});\nexport const deleteRoom = createAsyncThunk(\"facility/deleteRoom\", async (id, {\n  rejectWithValue,\n  getState\n}) => {\n  try {\n    if (!id) {\n      return rejectWithValue(\"ID phòng học không hợp lệ\");\n    }\n\n    // Sử dụng axiosInstance thay vì axios\n    const response = await axiosInstance.delete(`/facilities/rooms/${id}`);\n    return {\n      id,\n      message: response.data.message\n    };\n  } catch (error) {\n    if (error.response) {\n      const {\n        status,\n        data\n      } = error.response;\n      switch (status) {\n        case 401:\n          return rejectWithValue(\"Không được phép truy cập, token không hợp lệ\");\n        case 403:\n          return rejectWithValue(\"Bạn không có quyền thực hiện chức năng này\");\n        case 404:\n          return rejectWithValue(\"Không tìm thấy phòng học\");\n        case 400:\n          return rejectWithValue(data.message || \"Không thể xóa phòng này vì có lịch học\");\n        case 500:\n          return rejectWithValue(\"Lỗi máy chủ, vui lòng thử lại sau\");\n        default:\n          return rejectWithValue(data.message || \"Không thể xóa phòng học\");\n      }\n    } else if (error.request) {\n      return rejectWithValue(\"Không thể kết nối đến máy chủ\");\n    } else {\n      return rejectWithValue(error.message || \"Đã xảy ra lỗi khi gửi yêu cầu\");\n    }\n  }\n});\n\n// Initial state\nconst initialState = {\n  campuses: [],\n  buildings: [],\n  rooms: [],\n  selectedCampus: null,\n  selectedBuilding: null,\n  selectedRoom: null,\n  isLoading: false,\n  error: null,\n  campusPagination: {\n    page: 1,\n    limit: 10,\n    totalPages: 1,\n    totalCount: 0\n  },\n  buildingPagination: {\n    page: 1,\n    limit: 10,\n    totalPages: 1,\n    totalCount: 0\n  },\n  roomPagination: {\n    page: 1,\n    limit: 10,\n    totalPages: 1,\n    totalCount: 0\n  }\n};\n\n// Slice\nconst facilitySlice = createSlice({\n  name: \"facility\",\n  initialState,\n  reducers: {\n    clearError: state => {\n      state.error = null;\n    },\n    setSelectedCampus: (state, action) => {\n      state.selectedCampus = action.payload;\n    },\n    setSelectedBuilding: (state, action) => {\n      state.selectedBuilding = action.payload;\n    },\n    setSelectedRoom: (state, action) => {\n      state.selectedRoom = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Fetch All Campuses\n    .addCase(fetchAllCampuses.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(fetchAllCampuses.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.campuses = action.payload.data;\n      state.campusPagination = {\n        page: action.payload.currentPage || 1,\n        limit: action.payload.limit || 10,\n        totalPages: action.payload.totalPages || 1,\n        totalCount: action.payload.total || 0\n      };\n    }).addCase(fetchAllCampuses.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    })\n\n    // Create Campus\n    .addCase(createCampus.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(createCampus.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.campuses.push(action.payload.data);\n      state.campusPagination.totalCount += 1;\n    }).addCase(createCampus.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    })\n\n    // Update Campus\n    .addCase(updateCampus.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(updateCampus.fulfilled, (state, action) => {\n      state.isLoading = false;\n      const updatedCampus = action.payload.data;\n      state.campuses = state.campuses.map(campus => campus._id === updatedCampus._id ? updatedCampus : campus);\n    }).addCase(updateCampus.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    })\n\n    // Delete Campus\n    .addCase(deleteCampus.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(deleteCampus.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.campuses = state.campuses.filter(campus => campus._id !== action.payload);\n      state.campusPagination.totalCount -= 1;\n    }).addCase(deleteCampus.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    })\n\n    // Fetch All Buildings\n    .addCase(fetchAllBuildings.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(fetchAllBuildings.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.buildings = action.payload.data;\n      state.buildingPagination = {\n        page: action.payload.page || 1,\n        limit: action.payload.limit || 10,\n        totalPages: action.payload.totalPages || 1,\n        totalCount: action.payload.totalCount || 0\n      };\n    }).addCase(fetchAllBuildings.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    })\n\n    // Create Building\n    .addCase(createBuilding.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(createBuilding.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.buildings.push(action.payload.data);\n      state.buildingPagination.totalCount += 1;\n    }).addCase(createBuilding.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    })\n\n    // Update Building\n    .addCase(updateBuilding.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(updateBuilding.fulfilled, (state, action) => {\n      state.isLoading = false;\n      const updatedBuilding = action.payload.data;\n      state.buildings = state.buildings.map(building => building._id === updatedBuilding._id ? updatedBuilding : building);\n    }).addCase(updateBuilding.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    })\n\n    // Delete Building\n    .addCase(deleteBuilding.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(deleteBuilding.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.buildings = state.buildings.filter(building => building._id !== action.payload.id);\n      state.buildingPagination.totalCount -= 1;\n    }).addCase(deleteBuilding.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    })\n\n    // Fetch All Rooms\n    .addCase(fetchAllRooms.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(fetchAllRooms.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.rooms = action.payload.data;\n      state.roomPagination = {\n        page: action.payload.page || 1,\n        limit: action.payload.limit || 10,\n        totalPages: action.payload.totalPages || 1,\n        totalCount: action.payload.totalCount || 0\n      };\n    }).addCase(fetchAllRooms.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    })\n\n    // Create Room\n    .addCase(createRoom.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(createRoom.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.rooms.push(action.payload.data);\n      state.roomPagination.totalCount += 1;\n    }).addCase(createRoom.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    })\n\n    // Update Room\n    .addCase(updateRoom.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(updateRoom.fulfilled, (state, action) => {\n      state.isLoading = false;\n      const updatedRoom = action.payload.data;\n      state.rooms = state.rooms.map(room => room._id === updatedRoom._id ? updatedRoom : room);\n    }).addCase(updateRoom.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    })\n\n    // Delete Room\n    .addCase(deleteRoom.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(deleteRoom.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.rooms = state.rooms.filter(room => room._id !== action.payload.id);\n      state.roomPagination.totalCount -= 1;\n    }).addCase(deleteRoom.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  clearError,\n  setSelectedCampus,\n  setSelectedBuilding,\n  setSelectedRoom\n} = facilitySlice.actions;\nexport default facilitySlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","axiosInstance","API_URL","process","env","REACT_APP_API_URL","fetchAllCampuses","page","limit","search","getState","rejectWithValue","token","auth","response","get","headers","Authorization","data","error","_error$response","_error$response$data","message","createCampus","campusData","post","_error$response2","_error$response2$data","updateCampus","campusId","put","_error$response3","_error$response3$data","deleteCampus","delete","_error$response4","_error$response4$data","fetchAllBuildings","searchParams","queryParams","URLSearchParams","name","append","code","campus_id","status","queryString","toString","endpoint","request","createBuilding","buildingData","trim","userToken","localStorage","getItem","test","updateBuilding","id","deleteBuilding","fetchAllRooms","building_id","room_type","capacity","buildingIdInUrl","createRoom","roomData","room_number","updateRoom","deleteRoom","initialState","campuses","buildings","rooms","selectedCampus","selectedBuilding","selectedRoom","isLoading","campusPagination","totalPages","totalCount","buildingPagination","roomPagination","facilitySlice","reducers","clearError","state","setSelectedCampus","action","payload","setSelectedBuilding","setSelectedRoom","extraReducers","builder","addCase","pending","fulfilled","currentPage","total","rejected","push","updatedCampus","map","campus","_id","filter","updatedBuilding","building","updatedRoom","room","actions","reducer"],"sources":["C:/Users/kasiz/Documents/Studying/FaceReg/frontend/src/redux/slices/facilitySlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport axiosInstance from \"../../utils/axios\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\r\n\r\n// Thunks cho quản lý cơ sở\r\nexport const fetchAllCampuses = createAsyncThunk(\r\n  \"facility/fetchAllCampuses\",\r\n  async (\r\n    { page = 1, limit = 10, search = \"\" },\r\n    { getState, rejectWithValue }\r\n  ) => {\r\n    try {\r\n      const { token } = getState().auth;\r\n      const response = await axios.get(\r\n        `${API_URL}/facilities/campuses?page=${page}&limit=${limit}&search=${search}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(\r\n        error.response?.data?.message || \"Không thể lấy danh sách cơ sở\"\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nexport const createCampus = createAsyncThunk(\r\n  \"facility/createCampus\",\r\n  async (campusData, { getState, rejectWithValue }) => {\r\n    try {\r\n      const { token } = getState().auth;\r\n      const response = await axios.post(\r\n        `${API_URL}/facilities/campuses`,\r\n        campusData,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(\r\n        error.response?.data?.message || \"Không thể tạo cơ sở mới\"\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nexport const updateCampus = createAsyncThunk(\r\n  \"facility/updateCampus\",\r\n  async ({ campusId, campusData }, { getState, rejectWithValue }) => {\r\n    try {\r\n      const { token } = getState().auth;\r\n      const response = await axios.put(\r\n        `${API_URL}/facilities/campuses/${campusId}`,\r\n        campusData,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(\r\n        error.response?.data?.message || \"Không thể cập nhật cơ sở\"\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nexport const deleteCampus = createAsyncThunk(\r\n  \"facility/deleteCampus\",\r\n  async (campusId, { getState, rejectWithValue }) => {\r\n    try {\r\n      const { token } = getState().auth;\r\n      await axios.delete(`${API_URL}/facilities/campuses/${campusId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      return campusId;\r\n    } catch (error) {\r\n      return rejectWithValue(\r\n        error.response?.data?.message || \"Không thể xóa cơ sở\"\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\n// Thunks cho quản lý tòa nhà\r\nexport const fetchAllBuildings = createAsyncThunk(\r\n  \"facility/fetchAllBuildings\",\r\n  async (searchParams = {}, { rejectWithValue, getState }) => {\r\n    try {\r\n      // Tạo tham số truy vấn từ searchParams\r\n      const queryParams = new URLSearchParams();\r\n      if (searchParams.name) queryParams.append(\"name\", searchParams.name);\r\n      if (searchParams.code) queryParams.append(\"code\", searchParams.code);\r\n      if (searchParams.campus_id)\r\n        queryParams.append(\"campus_id\", searchParams.campus_id);\r\n      if (searchParams.status)\r\n        queryParams.append(\"status\", searchParams.status);\r\n      if (searchParams.page) queryParams.append(\"page\", searchParams.page);\r\n      if (searchParams.limit) queryParams.append(\"limit\", searchParams.limit);\r\n\r\n      const queryString = queryParams.toString();\r\n      const endpoint = `/facilities/buildings${\r\n        queryString ? `?${queryString}` : \"\"\r\n      }`;\r\n\r\n      // Sử dụng axiosInstance thay vì axios\r\n      const response = await axiosInstance.get(endpoint);\r\n\r\n      return response.data;\r\n    } catch (error) {\r\n      // Xử lý các loại lỗi\r\n      if (error.response) {\r\n        const { status, data } = error.response;\r\n        switch (status) {\r\n          case 401:\r\n            return rejectWithValue(\r\n              \"Không được phép truy cập, token không hợp lệ\"\r\n            );\r\n          case 403:\r\n            return rejectWithValue(\"Bạn không có quyền truy cập dữ liệu này\");\r\n          case 404:\r\n            return rejectWithValue(\"Không tìm thấy dữ liệu\");\r\n          case 500:\r\n            return rejectWithValue(\"Lỗi máy chủ, vui lòng thử lại sau\");\r\n          default:\r\n            return rejectWithValue(\r\n              data.message || \"Không thể lấy danh sách tòa nhà\"\r\n            );\r\n        }\r\n      } else if (error.request) {\r\n        return rejectWithValue(\"Không thể kết nối đến máy chủ\");\r\n      } else {\r\n        return rejectWithValue(\r\n          error.message || \"Đã xảy ra lỗi khi gửi yêu cầu\"\r\n        );\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\nexport const createBuilding = createAsyncThunk(\r\n  \"facility/createBuilding\",\r\n  async (buildingData, { rejectWithValue, getState }) => {\r\n    try {\r\n      // Kiểm tra dữ liệu đầu vào cơ bản\r\n      if (!buildingData.name || !buildingData.name.trim()) {\r\n        return rejectWithValue(\"Tên tòa nhà không được để trống\");\r\n      }\r\n\r\n      if (!buildingData.code || !buildingData.code.trim()) {\r\n        return rejectWithValue(\"Mã tòa nhà không được để trống\");\r\n      }\r\n\r\n      // Lấy token từ state hoặc localStorage\r\n      const { userToken } = getState().auth;\r\n      const token =\r\n        userToken ||\r\n        localStorage.getItem(\"userToken\") ||\r\n        localStorage.getItem(\"token\");\r\n\r\n      if (!token) {\r\n        return rejectWithValue(\"Vui lòng đăng nhập để thực hiện chức năng này\");\r\n      }\r\n\r\n      // Kiểm tra campus_id nếu được cung cấp\r\n      if (\r\n        buildingData.campus_id &&\r\n        !/^[0-9a-fA-F]{24}$/.test(buildingData.campus_id)\r\n      ) {\r\n        return rejectWithValue(\"ID cơ sở không hợp lệ\");\r\n      }\r\n\r\n      // Gọi API để tạo tòa nhà sử dụng axiosInstance\r\n      const response = await axiosInstance.post(\r\n        `/facilities/buildings`,\r\n        buildingData\r\n      );\r\n\r\n      return response.data;\r\n    } catch (error) {\r\n      // Xử lý các loại lỗi khác nhau\r\n      if (error.response) {\r\n        // Lỗi từ phía server\r\n        const { status, data } = error.response;\r\n\r\n        switch (status) {\r\n          case 401:\r\n            return rejectWithValue(\r\n              \"Không được phép truy cập, token không hợp lệ\"\r\n            );\r\n          case 403:\r\n            return rejectWithValue(\r\n              \"Bạn không có quyền thực hiện chức năng này\"\r\n            );\r\n          case 404:\r\n            return rejectWithValue(\"Không tìm thấy API endpoint\");\r\n          case 409:\r\n            return rejectWithValue(data.message || \"Mã tòa nhà đã tồn tại\");\r\n          case 500:\r\n            return rejectWithValue(\"Lỗi máy chủ, vui lòng thử lại sau\");\r\n          default:\r\n            return rejectWithValue(data.message || \"Không thể tạo tòa nhà\");\r\n        }\r\n      } else if (error.request) {\r\n        // Lỗi không có phản hồi từ server\r\n        return rejectWithValue(\"Không thể kết nối đến máy chủ\");\r\n      } else {\r\n        // Lỗi trong quá trình thiết lập request\r\n        return rejectWithValue(\r\n          error.message || \"Đã xảy ra lỗi khi gửi yêu cầu\"\r\n        );\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\nexport const updateBuilding = createAsyncThunk(\r\n  \"facility/updateBuilding\",\r\n  async ({ id, buildingData }, { rejectWithValue, getState }) => {\r\n    try {\r\n      if (!id) {\r\n        return rejectWithValue(\"ID tòa nhà không hợp lệ\");\r\n      }\r\n\r\n      // Kiểm tra dữ liệu đầu vào\r\n      if (buildingData.name && !buildingData.name.trim()) {\r\n        return rejectWithValue(\"Tên tòa nhà không được để trống\");\r\n      }\r\n\r\n      if (buildingData.code && !buildingData.code.trim()) {\r\n        return rejectWithValue(\"Mã tòa nhà không được để trống\");\r\n      }\r\n\r\n      // Kiểm tra campus_id nếu được cung cấp\r\n      if (\r\n        buildingData.campus_id &&\r\n        !/^[0-9a-fA-F]{24}$/.test(buildingData.campus_id)\r\n      ) {\r\n        return rejectWithValue(\"ID cơ sở không hợp lệ\");\r\n      }\r\n\r\n      // Sử dụng axiosInstance thay vì axios\r\n      const response = await axiosInstance.put(\r\n        `/facilities/buildings/${id}`,\r\n        buildingData\r\n      );\r\n\r\n      return response.data;\r\n    } catch (error) {\r\n      if (error.response) {\r\n        const { status, data } = error.response;\r\n        switch (status) {\r\n          case 401:\r\n            return rejectWithValue(\r\n              \"Không được phép truy cập, token không hợp lệ\"\r\n            );\r\n          case 403:\r\n            return rejectWithValue(\r\n              \"Bạn không có quyền thực hiện chức năng này\"\r\n            );\r\n          case 404:\r\n            return rejectWithValue(\"Không tìm thấy tòa nhà\");\r\n          case 409:\r\n            return rejectWithValue(data.message || \"Mã tòa nhà đã tồn tại\");\r\n          case 500:\r\n            return rejectWithValue(\"Lỗi máy chủ, vui lòng thử lại sau\");\r\n          default:\r\n            return rejectWithValue(\r\n              data.message || \"Không thể cập nhật tòa nhà\"\r\n            );\r\n        }\r\n      } else if (error.request) {\r\n        return rejectWithValue(\"Không thể kết nối đến máy chủ\");\r\n      } else {\r\n        return rejectWithValue(\r\n          error.message || \"Đã xảy ra lỗi khi gửi yêu cầu\"\r\n        );\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\nexport const deleteBuilding = createAsyncThunk(\r\n  \"facility/deleteBuilding\",\r\n  async (id, { rejectWithValue, getState }) => {\r\n    try {\r\n      if (!id) {\r\n        return rejectWithValue(\"ID tòa nhà không hợp lệ\");\r\n      }\r\n\r\n      // Sử dụng axiosInstance thay vì axios\r\n      const response = await axiosInstance.delete(\r\n        `/facilities/buildings/${id}`\r\n      );\r\n\r\n      return { id, message: response.data.message };\r\n    } catch (error) {\r\n      if (error.response) {\r\n        const { status, data } = error.response;\r\n        switch (status) {\r\n          case 401:\r\n            return rejectWithValue(\r\n              \"Không được phép truy cập, token không hợp lệ\"\r\n            );\r\n          case 403:\r\n            return rejectWithValue(\r\n              \"Bạn không có quyền thực hiện chức năng này\"\r\n            );\r\n          case 404:\r\n            return rejectWithValue(\"Không tìm thấy tòa nhà\");\r\n          case 409:\r\n            return rejectWithValue(\r\n              data.message ||\r\n                \"Không thể xóa tòa nhà này do có phòng thuộc tòa nhà\"\r\n            );\r\n          case 500:\r\n            return rejectWithValue(\"Lỗi máy chủ, vui lòng thử lại sau\");\r\n          default:\r\n            return rejectWithValue(data.message || \"Không thể xóa tòa nhà\");\r\n        }\r\n      } else if (error.request) {\r\n        return rejectWithValue(\"Không thể kết nối đến máy chủ\");\r\n      } else {\r\n        return rejectWithValue(\r\n          error.message || \"Đã xảy ra lỗi khi gửi yêu cầu\"\r\n        );\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\n// Thunks cho quản lý phòng học\r\nexport const fetchAllRooms = createAsyncThunk(\r\n  \"facility/fetchAllRooms\",\r\n  async (searchParams = {}, { rejectWithValue, getState }) => {\r\n    try {\r\n      // Tạo tham số truy vấn từ searchParams\r\n      const queryParams = new URLSearchParams();\r\n      if (searchParams.search)\r\n        queryParams.append(\"search\", searchParams.search);\r\n      if (searchParams.building_id)\r\n        queryParams.append(\"building_id\", searchParams.building_id);\r\n      if (searchParams.room_type)\r\n        queryParams.append(\"room_type\", searchParams.room_type);\r\n      if (searchParams.status)\r\n        queryParams.append(\"status\", searchParams.status);\r\n      if (searchParams.capacity)\r\n        queryParams.append(\"capacity\", searchParams.capacity);\r\n      if (searchParams.page) queryParams.append(\"page\", searchParams.page);\r\n      if (searchParams.limit) queryParams.append(\"limit\", searchParams.limit);\r\n\r\n      const queryString = queryParams.toString();\r\n      let endpoint = `/facilities/rooms`;\r\n\r\n      // Nếu có building_id trong URL thay vì query params\r\n      if (searchParams.buildingIdInUrl) {\r\n        endpoint = `/facilities/buildings/${searchParams.buildingIdInUrl}/rooms`;\r\n        // Xóa building_id khỏi query params nếu đã có trong URL\r\n        queryParams.delete(\"building_id\");\r\n      }\r\n\r\n      endpoint = `${endpoint}${queryString ? `?${queryString}` : \"\"}`;\r\n\r\n      // Sử dụng axiosInstance thay vì axios\r\n      const response = await axiosInstance.get(endpoint);\r\n\r\n      return response.data;\r\n    } catch (error) {\r\n      // Xử lý các loại lỗi\r\n      if (error.response) {\r\n        const { status, data } = error.response;\r\n        switch (status) {\r\n          case 401:\r\n            return rejectWithValue(\r\n              \"Không được phép truy cập, token không hợp lệ\"\r\n            );\r\n          case 403:\r\n            return rejectWithValue(\"Bạn không có quyền truy cập dữ liệu này\");\r\n          case 404:\r\n            return rejectWithValue(\"Không tìm thấy dữ liệu\");\r\n          case 500:\r\n            return rejectWithValue(\"Lỗi máy chủ, vui lòng thử lại sau\");\r\n          default:\r\n            return rejectWithValue(\r\n              data.message || \"Không thể lấy danh sách phòng học\"\r\n            );\r\n        }\r\n      } else if (error.request) {\r\n        return rejectWithValue(\"Không thể kết nối đến máy chủ\");\r\n      } else {\r\n        return rejectWithValue(\r\n          error.message || \"Đã xảy ra lỗi khi gửi yêu cầu\"\r\n        );\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\nexport const createRoom = createAsyncThunk(\r\n  \"facility/createRoom\",\r\n  async (roomData, { rejectWithValue, getState }) => {\r\n    try {\r\n      // Kiểm tra dữ liệu đầu vào cơ bản\r\n      if (!roomData.room_number || !roomData.room_number.trim()) {\r\n        return rejectWithValue(\"Số phòng không được để trống\");\r\n      }\r\n\r\n      if (!roomData.building_id) {\r\n        return rejectWithValue(\"Vui lòng chọn tòa nhà\");\r\n      }\r\n\r\n      // Kiểm tra building_id có hợp lệ không\r\n      if (!/^[0-9a-fA-F]{24}$/.test(roomData.building_id)) {\r\n        return rejectWithValue(\"ID tòa nhà không hợp lệ\");\r\n      }\r\n\r\n      // Sử dụng axiosInstance thay vì axios\r\n      const response = await axiosInstance.post(`/facilities/rooms`, roomData);\r\n\r\n      return response.data;\r\n    } catch (error) {\r\n      // Xử lý các loại lỗi\r\n      if (error.response) {\r\n        const { status, data } = error.response;\r\n        switch (status) {\r\n          case 401:\r\n            return rejectWithValue(\r\n              \"Không được phép truy cập, token không hợp lệ\"\r\n            );\r\n          case 403:\r\n            return rejectWithValue(\r\n              \"Bạn không có quyền thực hiện chức năng này\"\r\n            );\r\n          case 404:\r\n            return rejectWithValue(\"Không tìm thấy tòa nhà\");\r\n          case 400:\r\n            return rejectWithValue(\r\n              data.message || \"Phòng học này đã tồn tại trong tòa nhà\"\r\n            );\r\n          case 500:\r\n            return rejectWithValue(\"Lỗi máy chủ, vui lòng thử lại sau\");\r\n          default:\r\n            return rejectWithValue(\r\n              data.message || \"Không thể tạo phòng học mới\"\r\n            );\r\n        }\r\n      } else if (error.request) {\r\n        return rejectWithValue(\"Không thể kết nối đến máy chủ\");\r\n      } else {\r\n        return rejectWithValue(\r\n          error.message || \"Đã xảy ra lỗi khi gửi yêu cầu\"\r\n        );\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\nexport const updateRoom = createAsyncThunk(\r\n  \"facility/updateRoom\",\r\n  async ({ id, roomData }, { rejectWithValue, getState }) => {\r\n    try {\r\n      if (!id) {\r\n        return rejectWithValue(\"ID phòng học không hợp lệ\");\r\n      }\r\n\r\n      // Kiểm tra dữ liệu đầu vào\r\n      if (roomData.room_number && !roomData.room_number.trim()) {\r\n        return rejectWithValue(\"Số phòng không được để trống\");\r\n      }\r\n\r\n      // Kiểm tra building_id nếu được cung cấp\r\n      if (\r\n        roomData.building_id &&\r\n        !/^[0-9a-fA-F]{24}$/.test(roomData.building_id)\r\n      ) {\r\n        return rejectWithValue(\"ID tòa nhà không hợp lệ\");\r\n      }\r\n\r\n      // Sử dụng axiosInstance thay vì axios\r\n      const response = await axiosInstance.put(\r\n        `/facilities/rooms/${id}`,\r\n        roomData\r\n      );\r\n\r\n      return response.data;\r\n    } catch (error) {\r\n      if (error.response) {\r\n        const { status, data } = error.response;\r\n        switch (status) {\r\n          case 401:\r\n            return rejectWithValue(\r\n              \"Không được phép truy cập, token không hợp lệ\"\r\n            );\r\n          case 403:\r\n            return rejectWithValue(\r\n              \"Bạn không có quyền thực hiện chức năng này\"\r\n            );\r\n          case 404:\r\n            return rejectWithValue(\"Không tìm thấy phòng học\");\r\n          case 400:\r\n            return rejectWithValue(\r\n              data.message || \"Phòng học này đã tồn tại trong tòa nhà\"\r\n            );\r\n          case 500:\r\n            return rejectWithValue(\"Lỗi máy chủ, vui lòng thử lại sau\");\r\n          default:\r\n            return rejectWithValue(\r\n              data.message || \"Không thể cập nhật phòng học\"\r\n            );\r\n        }\r\n      } else if (error.request) {\r\n        return rejectWithValue(\"Không thể kết nối đến máy chủ\");\r\n      } else {\r\n        return rejectWithValue(\r\n          error.message || \"Đã xảy ra lỗi khi gửi yêu cầu\"\r\n        );\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\nexport const deleteRoom = createAsyncThunk(\r\n  \"facility/deleteRoom\",\r\n  async (id, { rejectWithValue, getState }) => {\r\n    try {\r\n      if (!id) {\r\n        return rejectWithValue(\"ID phòng học không hợp lệ\");\r\n      }\r\n\r\n      // Sử dụng axiosInstance thay vì axios\r\n      const response = await axiosInstance.delete(`/facilities/rooms/${id}`);\r\n\r\n      return { id, message: response.data.message };\r\n    } catch (error) {\r\n      if (error.response) {\r\n        const { status, data } = error.response;\r\n        switch (status) {\r\n          case 401:\r\n            return rejectWithValue(\r\n              \"Không được phép truy cập, token không hợp lệ\"\r\n            );\r\n          case 403:\r\n            return rejectWithValue(\r\n              \"Bạn không có quyền thực hiện chức năng này\"\r\n            );\r\n          case 404:\r\n            return rejectWithValue(\"Không tìm thấy phòng học\");\r\n          case 400:\r\n            return rejectWithValue(\r\n              data.message || \"Không thể xóa phòng này vì có lịch học\"\r\n            );\r\n          case 500:\r\n            return rejectWithValue(\"Lỗi máy chủ, vui lòng thử lại sau\");\r\n          default:\r\n            return rejectWithValue(data.message || \"Không thể xóa phòng học\");\r\n        }\r\n      } else if (error.request) {\r\n        return rejectWithValue(\"Không thể kết nối đến máy chủ\");\r\n      } else {\r\n        return rejectWithValue(\r\n          error.message || \"Đã xảy ra lỗi khi gửi yêu cầu\"\r\n        );\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\n// Initial state\r\nconst initialState = {\r\n  campuses: [],\r\n  buildings: [],\r\n  rooms: [],\r\n  selectedCampus: null,\r\n  selectedBuilding: null,\r\n  selectedRoom: null,\r\n  isLoading: false,\r\n  error: null,\r\n  campusPagination: {\r\n    page: 1,\r\n    limit: 10,\r\n    totalPages: 1,\r\n    totalCount: 0,\r\n  },\r\n  buildingPagination: {\r\n    page: 1,\r\n    limit: 10,\r\n    totalPages: 1,\r\n    totalCount: 0,\r\n  },\r\n  roomPagination: {\r\n    page: 1,\r\n    limit: 10,\r\n    totalPages: 1,\r\n    totalCount: 0,\r\n  },\r\n};\r\n\r\n// Slice\r\nconst facilitySlice = createSlice({\r\n  name: \"facility\",\r\n  initialState,\r\n  reducers: {\r\n    clearError: (state) => {\r\n      state.error = null;\r\n    },\r\n    setSelectedCampus: (state, action) => {\r\n      state.selectedCampus = action.payload;\r\n    },\r\n    setSelectedBuilding: (state, action) => {\r\n      state.selectedBuilding = action.payload;\r\n    },\r\n    setSelectedRoom: (state, action) => {\r\n      state.selectedRoom = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Fetch All Campuses\r\n      .addCase(fetchAllCampuses.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchAllCampuses.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.campuses = action.payload.data;\r\n        state.campusPagination = {\r\n          page: action.payload.currentPage || 1,\r\n          limit: action.payload.limit || 10,\r\n          totalPages: action.payload.totalPages || 1,\r\n          totalCount: action.payload.total || 0,\r\n        };\r\n      })\r\n      .addCase(fetchAllCampuses.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload;\r\n      })\r\n\r\n      // Create Campus\r\n      .addCase(createCampus.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(createCampus.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.campuses.push(action.payload.data);\r\n        state.campusPagination.totalCount += 1;\r\n      })\r\n      .addCase(createCampus.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload;\r\n      })\r\n\r\n      // Update Campus\r\n      .addCase(updateCampus.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(updateCampus.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        const updatedCampus = action.payload.data;\r\n        state.campuses = state.campuses.map((campus) =>\r\n          campus._id === updatedCampus._id ? updatedCampus : campus\r\n        );\r\n      })\r\n      .addCase(updateCampus.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload;\r\n      })\r\n\r\n      // Delete Campus\r\n      .addCase(deleteCampus.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(deleteCampus.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.campuses = state.campuses.filter(\r\n          (campus) => campus._id !== action.payload\r\n        );\r\n        state.campusPagination.totalCount -= 1;\r\n      })\r\n      .addCase(deleteCampus.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload;\r\n      })\r\n\r\n      // Fetch All Buildings\r\n      .addCase(fetchAllBuildings.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchAllBuildings.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.buildings = action.payload.data;\r\n        state.buildingPagination = {\r\n          page: action.payload.page || 1,\r\n          limit: action.payload.limit || 10,\r\n          totalPages: action.payload.totalPages || 1,\r\n          totalCount: action.payload.totalCount || 0,\r\n        };\r\n      })\r\n      .addCase(fetchAllBuildings.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload;\r\n      })\r\n\r\n      // Create Building\r\n      .addCase(createBuilding.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(createBuilding.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.buildings.push(action.payload.data);\r\n        state.buildingPagination.totalCount += 1;\r\n      })\r\n      .addCase(createBuilding.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload;\r\n      })\r\n\r\n      // Update Building\r\n      .addCase(updateBuilding.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(updateBuilding.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        const updatedBuilding = action.payload.data;\r\n        state.buildings = state.buildings.map((building) =>\r\n          building._id === updatedBuilding._id ? updatedBuilding : building\r\n        );\r\n      })\r\n      .addCase(updateBuilding.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload;\r\n      })\r\n\r\n      // Delete Building\r\n      .addCase(deleteBuilding.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(deleteBuilding.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.buildings = state.buildings.filter(\r\n          (building) => building._id !== action.payload.id\r\n        );\r\n        state.buildingPagination.totalCount -= 1;\r\n      })\r\n      .addCase(deleteBuilding.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload;\r\n      })\r\n\r\n      // Fetch All Rooms\r\n      .addCase(fetchAllRooms.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchAllRooms.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.rooms = action.payload.data;\r\n        state.roomPagination = {\r\n          page: action.payload.page || 1,\r\n          limit: action.payload.limit || 10,\r\n          totalPages: action.payload.totalPages || 1,\r\n          totalCount: action.payload.totalCount || 0,\r\n        };\r\n      })\r\n      .addCase(fetchAllRooms.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload;\r\n      })\r\n\r\n      // Create Room\r\n      .addCase(createRoom.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(createRoom.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.rooms.push(action.payload.data);\r\n        state.roomPagination.totalCount += 1;\r\n      })\r\n      .addCase(createRoom.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload;\r\n      })\r\n\r\n      // Update Room\r\n      .addCase(updateRoom.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(updateRoom.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        const updatedRoom = action.payload.data;\r\n        state.rooms = state.rooms.map((room) =>\r\n          room._id === updatedRoom._id ? updatedRoom : room\r\n        );\r\n      })\r\n      .addCase(updateRoom.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload;\r\n      })\r\n\r\n      // Delete Room\r\n      .addCase(deleteRoom.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(deleteRoom.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.rooms = state.rooms.filter(\r\n          (room) => room._id !== action.payload.id\r\n        );\r\n        state.roomPagination.totalCount -= 1;\r\n      })\r\n      .addCase(deleteRoom.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const {\r\n  clearError,\r\n  setSelectedCampus,\r\n  setSelectedBuilding,\r\n  setSelectedRoom,\r\n} = facilitySlice.actions;\r\n\r\nexport default facilitySlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}