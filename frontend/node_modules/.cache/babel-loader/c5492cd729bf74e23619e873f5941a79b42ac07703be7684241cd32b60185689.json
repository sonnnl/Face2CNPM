{"ast":null,"code":"import React,{useState,useEffect,useRef}from\"react\";import{useParams,useNavigate}from\"react-router-dom\";import{useDispatch,useSelector}from\"react-redux\";import{useSnackbar}from\"notistack\";import{Box,Typography,Card,CardContent,Grid,Paper,Button,Divider,CircularProgress,List,ListItem,ListItemAvatar,ListItemText,Avatar,Chip,Dialog,DialogTitle,DialogContent,DialogActions,TextField,FormControl,InputLabel,Select,MenuItem,IconButton,Alert}from\"@mui/material\";import{CameraAlt,Check,Close,Edit,Refresh,Save,VerifiedUser,HourglassEmpty}from\"@mui/icons-material\";import Webcam from\"react-webcam\";import*as faceapi from\"face-api.js\";import{getClassFaceFeatures,verifyAttendance,manualAttendance,setModelLoaded,setCameraReady,setDetectedFaces,setRecognizedStudents,clearRecognitionState}from\"../../redux/slices/faceRecognitionSlice\";import axios from\"axios\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const API_URL=process.env.REACT_APP_API_URL||\"http://localhost:5000/api\";const AttendancePage=()=>{const{classId,sessionId}=useParams();const navigate=useNavigate();const dispatch=useDispatch();const{enqueueSnackbar}=useSnackbar();const webcamRef=useRef(null);const canvasRef=useRef(null);const[intervalId,setIntervalId]=useState(null);const{token}=useSelector(state=>state.auth);const{isModelLoaded,isCameraReady,detectedFaces,recognizedStudents,classStudents,isProcessing,error}=useSelector(state=>state.faceRecognition);const[classInfo,setClassInfo]=useState(null);const[sessionInfo,setSessionInfo]=useState(null);const[attendanceLogs,setAttendanceLogs]=useState([]);const[isLoading,setIsLoading]=useState(true);const[isRecognizing,setIsRecognizing]=useState(false);const[isAutoMode,setIsAutoMode]=useState(false);const[selectedStudent,setSelectedStudent]=useState(null);const[manualDialogOpen,setManualDialogOpen]=useState(false);const[manualAttendanceData,setManualAttendanceData]=useState({status:\"present\",note:\"\"});// Các hằng số cho nhận diện khuôn mặt\nconst RECOGNITION_THRESHOLD=0.6;// Ngưỡng nhận diện (càng thấp càng nghiêm ngặt)\nconst AUTO_DETECT_INTERVAL=1000;// 1 giây\n// Load class info, session info và models\nuseEffect(()=>{const loadInitialData=async()=>{try{setIsLoading(true);// Tải mô hình nhận diện khuôn mặt\nif(!isModelLoaded){await loadFaceRecognitionModels();}// Lấy thông tin lớp học\nconst classResponse=await axios.get(`${API_URL}/teaching-classes/${classId}`,{headers:{Authorization:`Bearer ${token}`}});setClassInfo(classResponse.data.data);// Lấy thông tin phiên điểm danh\nconst sessionResponse=await axios.get(`${API_URL}/attendance/sessions/${sessionId}`,{headers:{Authorization:`Bearer ${token}`}});setSessionInfo(sessionResponse.data.data);// Lấy danh sách điểm danh\nconst logsResponse=await axios.get(`${API_URL}/attendance/logs/${sessionId}`,{headers:{Authorization:`Bearer ${token}`}});setAttendanceLogs(logsResponse.data.data);// Lấy đặc trưng khuôn mặt của sinh viên trong lớp\ndispatch(getClassFaceFeatures(classId));setIsLoading(false);}catch(error){console.error(\"Lỗi khi tải dữ liệu:\",error);enqueueSnackbar(\"Lỗi khi tải dữ liệu\",{variant:\"error\"});setIsLoading(false);}};loadInitialData();// Clean up\nreturn()=>{if(intervalId){clearInterval(intervalId);}dispatch(clearRecognitionState());};},[classId,sessionId,token,dispatch,enqueueSnackbar,isModelLoaded,intervalId]);// Kiểm tra camera đã sẵn sàng chưa\nuseEffect(()=>{var _webcamRef$current,_webcamRef$current$vi;if(isModelLoaded&&((_webcamRef$current=webcamRef.current)===null||_webcamRef$current===void 0?void 0:(_webcamRef$current$vi=_webcamRef$current.video)===null||_webcamRef$current$vi===void 0?void 0:_webcamRef$current$vi.readyState)===4){dispatch(setCameraReady(true));}},[isModelLoaded,webcamRef,dispatch]);// Xử lý lỗi nếu có\nuseEffect(()=>{if(error){enqueueSnackbar(error,{variant:\"error\"});}},[error,enqueueSnackbar]);// Load các mô hình nhận diện khuôn mặt\nconst loadFaceRecognitionModels=async()=>{try{const MODEL_URL=\"/models\";await Promise.all([faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL),faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL)]);dispatch(setModelLoaded(true));enqueueSnackbar(\"Tải mô hình nhận diện thành công\",{variant:\"success\"});return true;}catch(error){console.error(\"Lỗi khi tải mô hình:\",error);enqueueSnackbar(\"Không thể tải mô hình nhận diện\",{variant:\"error\"});return false;}};// Nhận diện khuôn mặt\nconst recognizeFaces=async()=>{if(!webcamRef.current||!canvasRef.current||classStudents.length===0)return;const webcam=webcamRef.current;const canvas=canvasRef.current;if(webcam.video.readyState!==4){return;}setIsRecognizing(true);try{const videoEl=webcam.video;// Phát hiện khuôn mặt\nconst detections=await faceapi.detectAllFaces(videoEl,new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceDescriptors();dispatch(setDetectedFaces(detections));// Hiển thị phát hiện\nconst displaySize={width:videoEl.width,height:videoEl.height};faceapi.matchDimensions(canvas,displaySize);const resizedDetections=faceapi.resizeResults(detections,displaySize);const ctx=canvas.getContext(\"2d\");ctx.clearRect(0,0,canvas.width,canvas.height);// Tạo FaceMatcher từ dữ liệu sinh viên\nconst labeledDescriptors=classStudents.map(student=>{const descriptors=student.faceDescriptors.map(descriptor=>new Float32Array(descriptor));return new faceapi.LabeledFaceDescriptors(student._id,descriptors);});if(labeledDescriptors.length>0){const faceMatcher=new faceapi.FaceMatcher(labeledDescriptors,RECOGNITION_THRESHOLD);// Nhận diện từng khuôn mặt\nconst recognized=[];resizedDetections.forEach(detection=>{var _classStudents$find;const bestMatch=faceMatcher.findBestMatch(detection.descriptor);const{label,distance}=bestMatch;const drawBox=new faceapi.draw.DrawBox(detection.detection.box,{label:label!==\"unknown\"?`${((_classStudents$find=classStudents.find(s=>s._id===label))===null||_classStudents$find===void 0?void 0:_classStudents$find.full_name)||\"Unknown\"} (${Math.round((1-distance)*100)}%)`:\"Unknown\",boxColor:label!==\"unknown\"?\"green\":\"red\"});drawBox.draw(canvas);if(label!==\"unknown\"){const student=classStudents.find(s=>s._id===label);if(student){recognized.push({studentId:label,confidence:1-distance,name:student.full_name,descriptor:Array.from(detection.descriptor)});}}});dispatch(setRecognizedStudents(recognized));// Tự động điểm danh nếu đang ở chế độ tự động\nif(isAutoMode&&recognized.length>0){for(const recognizedStudent of recognized){// Chỉ điểm danh nếu độ tin cậy > 0.7 (tương đương với khoảng cách < 0.3)\nif(recognizedStudent.confidence>0.7){const isAlreadyAttended=attendanceLogs.some(log=>log.student_id._id===recognizedStudent.studentId&&log.status===\"present\");if(!isAlreadyAttended){const imageBase64=webcam.getScreenshot();await markAttendance(recognizedStudent.studentId,recognizedStudent.descriptor,recognizedStudent.confidence,imageBase64);}}}}}}catch(error){console.error(\"Lỗi khi nhận diện khuôn mặt:\",error);}finally{setIsRecognizing(false);}};// Bắt đầu chế độ tự động nhận diện\nconst startAutoDetection=()=>{if(intervalId){clearInterval(intervalId);}const id=setInterval(()=>{recognizeFaces();},AUTO_DETECT_INTERVAL);setIntervalId(id);setIsAutoMode(true);enqueueSnackbar(\"Đã bật chế độ tự động điểm danh\",{variant:\"info\"});};// Dừng chế độ tự động nhận diện\nconst stopAutoDetection=()=>{if(intervalId){clearInterval(intervalId);setIntervalId(null);}setIsAutoMode(false);enqueueSnackbar(\"Đã tắt chế độ tự động điểm danh\",{variant:\"info\"});};// Điểm danh thủ công\nconst openManualAttendanceDialog=student=>{setSelectedStudent(student);setManualAttendanceData({status:\"present\",note:\"\"});setManualDialogOpen(true);};const handleManualDialogClose=()=>{setManualDialogOpen(false);};const handleManualAttendanceChange=e=>{setManualAttendanceData({...manualAttendanceData,[e.target.name]:e.target.value});};const handleManualAttendanceSubmit=async()=>{if(!selectedStudent)return;try{const result=await dispatch(manualAttendance({sessionId,studentId:selectedStudent._id,status:manualAttendanceData.status,note:manualAttendanceData.note})).unwrap();// Cập nhật logs điểm danh\nif(result&&result.data){const updatedLogs=attendanceLogs.filter(log=>log.student_id._id!==selectedStudent._id);updatedLogs.push({...result.data,student_id:selectedStudent});setAttendanceLogs(updatedLogs);}enqueueSnackbar(\"Điểm danh thủ công thành công\",{variant:\"success\"});handleManualDialogClose();// Cập nhật lại thông tin phiên điểm danh\nconst sessionResponse=await axios.get(`${API_URL}/attendance/sessions/${sessionId}`,{headers:{Authorization:`Bearer ${token}`}});setSessionInfo(sessionResponse.data.data);}catch(error){console.error(\"Lỗi khi điểm danh thủ công:\",error);enqueueSnackbar(\"Lỗi khi điểm danh thủ công\",{variant:\"error\"});}};// Đánh dấu điểm danh từ nhận diện khuôn mặt\nconst markAttendance=async(studentId,faceDescriptor,confidence,imageBase64)=>{try{const result=await dispatch(verifyAttendance({sessionId,studentId,faceDescriptor,confidence,imageBase64})).unwrap();// Cập nhật logs điểm danh\nif(result&&result.data){const student=classStudents.find(s=>s._id===studentId);if(student){const updatedLogs=attendanceLogs.filter(log=>log.student_id._id!==studentId);updatedLogs.push({...result.data,student_id:student});setAttendanceLogs(updatedLogs);enqueueSnackbar(`Đã điểm danh cho ${student.full_name}`,{variant:\"success\"});}}// Cập nhật lại thông tin phiên điểm danh\nconst sessionResponse=await axios.get(`${API_URL}/attendance/sessions/${sessionId}`,{headers:{Authorization:`Bearer ${token}`}});setSessionInfo(sessionResponse.data.data);return true;}catch(error){console.error(\"Lỗi khi xác nhận điểm danh:\",error);enqueueSnackbar(\"Lỗi khi xác nhận điểm danh\",{variant:\"error\"});return false;}};// Kết thúc phiên điểm danh\nconst completeSession=async()=>{try{await axios.put(`${API_URL}/attendance/sessions/${sessionId}`,{status:\"completed\"},{headers:{Authorization:`Bearer ${token}`}});enqueueSnackbar(\"Phiên điểm danh đã kết thúc\",{variant:\"success\"});navigate(`/teacher/classes/${classId}`);}catch(error){console.error(\"Lỗi khi kết thúc phiên điểm danh:\",error);enqueueSnackbar(\"Lỗi khi kết thúc phiên điểm danh\",{variant:\"error\"});}};// Làm mới danh sách điểm danh\nconst refreshAttendanceLogs=async()=>{try{const logsResponse=await axios.get(`${API_URL}/attendance/logs/${sessionId}`,{headers:{Authorization:`Bearer ${token}`}});setAttendanceLogs(logsResponse.data.data);const sessionResponse=await axios.get(`${API_URL}/attendance/sessions/${sessionId}`,{headers:{Authorization:`Bearer ${token}`}});setSessionInfo(sessionResponse.data.data);enqueueSnackbar(\"Đã làm mới dữ liệu điểm danh\",{variant:\"success\"});}catch(error){console.error(\"Lỗi khi làm mới dữ liệu:\",error);enqueueSnackbar(\"Lỗi khi làm mới dữ liệu\",{variant:\"error\"});}};// Chụp ảnh và nhận diện thủ công\nconst captureAndRecognize=async()=>{await recognizeFaces();};if(isLoading){return/*#__PURE__*/_jsx(Box,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",minHeight:\"60vh\",children:/*#__PURE__*/_jsx(CircularProgress,{})});}// Lấy danh sách sinh viên vắng mặt\nconst getAbsentStudents=()=>{if(!classInfo||!sessionInfo)return[];const presentStudentIds=attendanceLogs.filter(log=>log.status===\"present\").map(log=>log.student_id._id);return classInfo.students.filter(student=>!presentStudentIds.includes(student._id));};const absentStudents=getAbsentStudents();return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h5\",gutterBottom:true,children:[\"\\u0110i\\u1EC3m Danh - \",classInfo===null||classInfo===void 0?void 0:classInfo.class_name]}),/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle1\",color:\"textSecondary\",gutterBottom:true,children:[\"Bu\\u1ED5i \",sessionInfo===null||sessionInfo===void 0?void 0:sessionInfo.session_number,\" -\",\" \",new Date(sessionInfo===null||sessionInfo===void 0?void 0:sessionInfo.date).toLocaleDateString(\"vi-VN\")]}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,mt:1,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:8,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Box,{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\",mb:2,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Camera nh\\u1EADn di\\u1EC7n\"}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Chip,{label:isAutoMode?\"Tự động đang bật\":\"Tự động đang tắt\",color:isAutoMode?\"success\":\"default\",sx:{mr:1}}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:isAutoMode?\"error\":\"primary\",onClick:isAutoMode?stopAutoDetection:startAutoDetection,startIcon:isAutoMode?/*#__PURE__*/_jsx(Close,{}):/*#__PURE__*/_jsx(HourglassEmpty,{}),disabled:!isCameraReady||!isModelLoaded,size:\"small\",children:isAutoMode?\"Tắt tự động\":\"Bật tự động\"})]})]}),/*#__PURE__*/_jsx(Paper,{elevation:3,sx:{position:\"relative\",width:\"100%\",height:\"400px\",display:\"flex\",justifyContent:\"center\",alignItems:\"center\",overflow:\"hidden\",mb:2},children:isCameraReady?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Webcam,{audio:false,ref:webcamRef,screenshotFormat:\"image/jpeg\",videoConstraints:{width:640,height:480,facingMode:\"user\"},style:{position:\"absolute\",width:\"100%\",height:\"100%\",objectFit:\"cover\"},onUserMedia:()=>dispatch(setCameraReady(true))}),/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,style:{position:\"absolute\",top:0,left:0,width:\"100%\",height:\"100%\"}})]}):/*#__PURE__*/_jsxs(Box,{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(CircularProgress,{size:50}),/*#__PURE__*/_jsx(Typography,{mt:2,children:\"\\u0110ang kh\\u1EDFi t\\u1EA1o camera...\"})]})}),/*#__PURE__*/_jsxs(Box,{display:\"flex\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:captureAndRecognize,startIcon:/*#__PURE__*/_jsx(CameraAlt,{}),disabled:!isCameraReady||isRecognizing||isAutoMode,children:isRecognizing?/*#__PURE__*/_jsx(CircularProgress,{size:24,color:\"inherit\"}):\"Chụp & Nhận diện\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:completeSession,startIcon:/*#__PURE__*/_jsx(Save,{}),disabled:(sessionInfo===null||sessionInfo===void 0?void 0:sessionInfo.status)===\"completed\",children:\"K\\u1EBFt th\\xFAc phi\\xEAn\"})]}),recognizedStudents.length>0&&/*#__PURE__*/_jsxs(Box,{mt:2,children:[/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle1\",gutterBottom:true,children:[\"\\u0110\\xE3 nh\\u1EADn di\\u1EC7n (\",recognizedStudents.length,\")\"]}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:1,children:recognizedStudents.map((student,index)=>/*#__PURE__*/_jsx(Grid,{item:true,xs:6,sm:4,children:/*#__PURE__*/_jsxs(Paper,{elevation:2,sx:{p:1,display:\"flex\",flexDirection:\"column\",alignItems:\"center\"},children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",noWrap:true,children:student.name}),/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",color:\"textSecondary\",children:[Math.round(student.confidence*100),\"% match\"]}),/*#__PURE__*/_jsxs(Button,{size:\"small\",variant:\"outlined\",color:\"primary\",sx:{mt:1},onClick:()=>{var _webcamRef$current2;return markAttendance(student.studentId,student.descriptor,student.confidence,(_webcamRef$current2=webcamRef.current)===null||_webcamRef$current2===void 0?void 0:_webcamRef$current2.getScreenshot());},children:[/*#__PURE__*/_jsx(Check,{fontSize:\"small\",sx:{mr:0.5}}),\"\\u0110i\\u1EC3m danh\"]})]})},index))})]})]})})}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:4,children:[/*#__PURE__*/_jsx(Card,{sx:{mb:3},children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Box,{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\",mb:2,children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[\"C\\xF3 m\\u1EB7t (\",attendanceLogs.filter(log=>log.status===\"present\").length,\"/\",classInfo===null||classInfo===void 0?void 0:classInfo.students.length,\")\"]}),/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:refreshAttendanceLogs,children:/*#__PURE__*/_jsx(Refresh,{})})]}),/*#__PURE__*/_jsxs(List,{dense:true,children:[attendanceLogs.filter(log=>log.status===\"present\").sort((a,b)=>new Date(b.timestamp)-new Date(a.timestamp)).map(log=>/*#__PURE__*/_jsxs(ListItem,{secondaryAction:/*#__PURE__*/_jsx(Chip,{size:\"small\",icon:log.recognized?/*#__PURE__*/_jsx(VerifiedUser,{fontSize:\"small\"}):null,label:log.recognized?\"Tự động\":\"Thủ công\",color:log.recognized?\"success\":\"primary\"}),children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Avatar,{alt:log.student_id.full_name,src:log.student_id.avatar_url})}),/*#__PURE__*/_jsx(ListItemText,{primary:log.student_id.full_name,secondary:`${new Date(log.timestamp).toLocaleTimeString(\"vi-VN\")}`})]},log._id)),attendanceLogs.filter(log=>log.status===\"present\").length===0&&/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsx(ListItemText,{primary:\"Ch\\u01B0a c\\xF3 sinh vi\\xEAn n\\xE0o \\u0111i\\u1EC3m danh\"})})]})]})}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",gutterBottom:true,children:[\"V\\u1EAFng m\\u1EB7t (\",absentStudents.length,\"/\",classInfo===null||classInfo===void 0?void 0:classInfo.students.length,\")\"]}),/*#__PURE__*/_jsxs(List,{dense:true,children:[absentStudents.map(student=>/*#__PURE__*/_jsxs(ListItem,{secondaryAction:/*#__PURE__*/_jsx(IconButton,{edge:\"end\",onClick:()=>openManualAttendanceDialog(student),children:/*#__PURE__*/_jsx(Edit,{fontSize:\"small\"})}),children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Avatar,{alt:student.full_name,src:student.avatar_url})}),/*#__PURE__*/_jsx(ListItemText,{primary:student.full_name,secondary:student.student_code})]},student._id)),absentStudents.length===0&&/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsx(ListItemText,{primary:\"Kh\\xF4ng c\\xF3 sinh vi\\xEAn n\\xE0o v\\u1EAFng m\\u1EB7t\"})})]})]})})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:manualDialogOpen,onClose:handleManualDialogClose,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"\\u0110i\\u1EC3m danh th\\u1EE7 c\\xF4ng\"}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(Box,{sx:{p:1},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle1\",gutterBottom:true,children:[selectedStudent===null||selectedStudent===void 0?void 0:selectedStudent.full_name,\" (\",selectedStudent===null||selectedStudent===void 0?void 0:selectedStudent.student_code,\")\"]}),/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,margin:\"normal\",children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Tr\\u1EA1ng th\\xE1i\"}),/*#__PURE__*/_jsxs(Select,{name:\"status\",value:manualAttendanceData.status,onChange:handleManualAttendanceChange,label:\"Tr\\u1EA1ng th\\xE1i\",children:[/*#__PURE__*/_jsx(MenuItem,{value:\"present\",children:\"C\\xF3 m\\u1EB7t\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"absent\",children:\"V\\u1EAFng m\\u1EB7t\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"late\",children:\"\\u0110i tr\\u1EC5\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"early_leave\",children:\"V\\u1EC1 s\\u1EDBm\"})]})]}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,margin:\"normal\",name:\"note\",label:\"Ghi ch\\xFA\",value:manualAttendanceData.note,onChange:handleManualAttendanceChange,multiline:true,rows:2})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleManualDialogClose,children:\"H\\u1EE7y\"}),/*#__PURE__*/_jsx(Button,{onClick:handleManualAttendanceSubmit,variant:\"contained\",children:\"X\\xE1c nh\\u1EADn\"})]})]})]});};export default AttendancePage;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}