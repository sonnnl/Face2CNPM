{"ast":null,"code":"import axiosInstance from \"../utils/axios\"; // Đổi tên import để rõ ràng hơn là axiosInstance\n\n// Hàm lấy danh sách tất cả giảng viên (cần được bảo vệ ở backend nếu cần)\nexport const getTeachers = async () => {\n  try {\n    const response = await axiosInstance.get(\"/teachers\"); // Sử dụng axiosInstance\n    return response.data;\n  } catch (error) {\n    console.error(\"Lỗi khi lấy danh sách giảng viên:\", error.response || error.message);\n    throw error;\n  }\n};\n\n/**\r\n * Lấy danh sách các lớp mà một giáo viên đang dạy.\r\n * @param {string} teacherId - ID của giáo viên.\r\n */\nexport const getTeacherTeachingClasses = async teacherId => {\n  try {\n    const response = await axiosInstance.get(`/classes/teaching/teacher/${teacherId}`);\n    return response.data; // Thường thì dữ liệu bạn cần nằm trong response.data\n  } catch (error) {\n    console.error(`Lỗi khi lấy các lớp đang dạy của giáo viên ${teacherId}:`, error.response || error.message);\n    throw error;\n  }\n};\n\n// Hàm lấy các phiên điểm danh gần đây của giáo viên\n/**\r\n * Lấy các phiên điểm danh gần đây của giáo viên.\r\n * @param {string} teacherId - ID của giáo viên.\r\n * @param {number} limit - Số lượng phiên muốn lấy.\r\n */\nexport const getTeacherRecentAttendanceSessions = async (teacherId, limit = 5) => {\n  try {\n    const response = await axiosInstance.get(`/attendance/sessions?teacher=${teacherId}&limit=${limit}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Lỗi khi lấy các phiên điểm danh gần đây của giáo viên ${teacherId}:`, error.response || error.message);\n    throw error;\n  }\n};\n\n// Có thể thêm các hàm khác liên quan đến giảng viên ở đây sau này\n// ví dụ: getTeacherById(id), updateTeacher(id, data), ...","map":{"version":3,"names":["axiosInstance","getTeachers","response","get","data","error","console","message","getTeacherTeachingClasses","teacherId","getTeacherRecentAttendanceSessions","limit"],"sources":["C:/Users/kasiz/Documents/Studying/FaceReg/frontend/src/services/teacherService.js"],"sourcesContent":["import axiosInstance from \"../utils/axios\"; // Đổi tên import để rõ ràng hơn là axiosInstance\r\n\r\n// Hàm lấy danh sách tất cả giảng viên (cần được bảo vệ ở backend nếu cần)\r\nexport const getTeachers = async () => {\r\n  try {\r\n    const response = await axiosInstance.get(\"/teachers\"); // Sử dụng axiosInstance\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\r\n      \"Lỗi khi lấy danh sách giảng viên:\",\r\n      error.response || error.message\r\n    );\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Lấy danh sách các lớp mà một giáo viên đang dạy.\r\n * @param {string} teacherId - ID của giáo viên.\r\n */\r\nexport const getTeacherTeachingClasses = async (teacherId) => {\r\n  try {\r\n    const response = await axiosInstance.get(\r\n      `/classes/teaching/teacher/${teacherId}`\r\n    );\r\n    return response.data; // Thường thì dữ liệu bạn cần nằm trong response.data\r\n  } catch (error) {\r\n    console.error(\r\n      `Lỗi khi lấy các lớp đang dạy của giáo viên ${teacherId}:`,\r\n      error.response || error.message\r\n    );\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Hàm lấy các phiên điểm danh gần đây của giáo viên\r\n/**\r\n * Lấy các phiên điểm danh gần đây của giáo viên.\r\n * @param {string} teacherId - ID của giáo viên.\r\n * @param {number} limit - Số lượng phiên muốn lấy.\r\n */\r\nexport const getTeacherRecentAttendanceSessions = async (\r\n  teacherId,\r\n  limit = 5\r\n) => {\r\n  try {\r\n    const response = await axiosInstance.get(\r\n      `/attendance/sessions?teacher=${teacherId}&limit=${limit}`\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\r\n      `Lỗi khi lấy các phiên điểm danh gần đây của giáo viên ${teacherId}:`,\r\n      error.response || error.message\r\n    );\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Có thể thêm các hàm khác liên quan đến giảng viên ở đây sau này\r\n// ví dụ: getTeacherById(id), updateTeacher(id, data), ...\r\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,gBAAgB,CAAC,CAAC;;AAE5C;AACA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;IACvD,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CACX,mCAAmC,EACnCA,KAAK,CAACH,QAAQ,IAAIG,KAAK,CAACE,OAC1B,CAAC;IACD,MAAMF,KAAK;EACb;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMG,yBAAyB,GAAG,MAAOC,SAAS,IAAK;EAC5D,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAG,CACtC,6BAA6BM,SAAS,EACxC,CAAC;IACD,OAAOP,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CACX,8CAA8CI,SAAS,GAAG,EAC1DJ,KAAK,CAACH,QAAQ,IAAIG,KAAK,CAACE,OAC1B,CAAC;IACD,MAAMF,KAAK;EACb;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMK,kCAAkC,GAAG,MAAAA,CAChDD,SAAS,EACTE,KAAK,GAAG,CAAC,KACN;EACH,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAG,CACtC,gCAAgCM,SAAS,UAAUE,KAAK,EAC1D,CAAC;IACD,OAAOT,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CACX,yDAAyDI,SAAS,GAAG,EACrEJ,KAAK,CAACH,QAAQ,IAAIG,KAAK,CAACE,OAC1B,CAAC;IACD,MAAMF,KAAK;EACb;AACF,CAAC;;AAED;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}