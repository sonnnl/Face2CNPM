{"ast":null,"code":"import{createSlice,createAsyncThunk}from\"@reduxjs/toolkit\";import axios from\"axios\";const API_URL=process.env.REACT_APP_API_URL||\"http://localhost:5000/api\";// Thunks\nexport const saveFaceFeatures=createAsyncThunk(\"faceRecognition/saveFaceFeatures\",async(_ref,_ref2)=>{let{userId,faceDescriptors}=_ref;let{getState,rejectWithValue}=_ref2;try{const{token}=getState().auth;const response=await axios.post(`${API_URL}/face-recognition/save-features`,{userId,faceDescriptors},{headers:{Authorization:`Bearer ${token}`}});return response.data;}catch(error){var _error$response,_error$response$data;return rejectWithValue(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||\"Không thể lưu đặc trưng khuôn mặt\");}});export const getClassFaceFeatures=createAsyncThunk(\"faceRecognition/getClassFaceFeatures\",async(classId,_ref3)=>{let{getState,rejectWithValue}=_ref3;try{const{token}=getState().auth;const response=await axios.get(`${API_URL}/face-recognition/class-features/${classId}`,{headers:{Authorization:`Bearer ${token}`}});console.log(\"[DEBUG] API response from redux slice:\",response.data);return response.data;}catch(error){var _error$response2,_error$response2$data;console.error(\"[DEBUG] API error in redux slice:\",error);return rejectWithValue(((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||\"Không thể lấy dữ liệu khuôn mặt của lớp\");}});export const verifyAttendance=createAsyncThunk(\"faceRecognition/verifyAttendance\",async(_ref4,_ref5)=>{let{sessionId,studentId,faceDescriptor,confidence,imageBase64}=_ref4;let{getState,rejectWithValue}=_ref5;try{const{token}=getState().auth;const response=await axios.post(`${API_URL}/face-recognition/verify-attendance`,{sessionId,studentId,faceDescriptor,confidence:confidence||0,imageBase64},{headers:{Authorization:`Bearer ${token}`}});return response.data;}catch(error){var _error$response3,_error$response3$data;return rejectWithValue(((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)||\"Không thể xác nhận điểm danh\");}});export const manualAttendance=createAsyncThunk(\"faceRecognition/manualAttendance\",async(_ref6,_ref7)=>{let{sessionId,studentId,status,note}=_ref6;let{getState,rejectWithValue}=_ref7;try{const{token}=getState().auth;const response=await axios.post(`${API_URL}/face-recognition/manual-attendance`,{sessionId,studentId,status,note},{headers:{Authorization:`Bearer ${token}`}});return response.data;}catch(error){var _error$response4,_error$response4$data;return rejectWithValue(((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.message)||\"Không thể điểm danh thủ công\");}});// Initial state\nconst initialState={isModelLoaded:false,isCameraReady:false,detectedFaces:[],recognizedStudents:[],classStudents:[],isProcessing:false,error:null,lastAttendanceResult:null};// Slice\nconst faceRecognitionSlice=createSlice({name:\"faceRecognition\",initialState,reducers:{setModelLoaded:(state,action)=>{state.isModelLoaded=action.payload;},setCameraReady:(state,action)=>{state.isCameraReady=action.payload;},setDetectedFaces:(state,action)=>{state.detectedFaces=action.payload;},setRecognizedStudents:(state,action)=>{state.recognizedStudents=action.payload;},clearRecognitionState:state=>{state.detectedFaces=[];state.recognizedStudents=[];state.lastAttendanceResult=null;state.error=null;},clearError:state=>{state.error=null;}},extraReducers:builder=>{builder// Save Face Features\n.addCase(saveFaceFeatures.pending,state=>{state.isProcessing=true;state.error=null;}).addCase(saveFaceFeatures.fulfilled,state=>{state.isProcessing=false;}).addCase(saveFaceFeatures.rejected,(state,action)=>{state.isProcessing=false;state.error=action.payload;})// Get Class Face Features\n.addCase(getClassFaceFeatures.pending,state=>{state.isProcessing=true;state.error=null;}).addCase(getClassFaceFeatures.fulfilled,(state,action)=>{state.isProcessing=false;if(Array.isArray(action.payload)){state.classStudents=action.payload;}else if(action.payload&&action.payload.data&&Array.isArray(action.payload.data)){state.classStudents=action.payload.data;}else if(action.payload&&action.payload.students&&Array.isArray(action.payload.students)){state.classStudents=action.payload.students;}else{console.error(\"[DEBUG] Cấu trúc dữ liệu API không phù hợp:\",action.payload);state.classStudents=[];}console.log(\"[DEBUG] classStudents đã được cập nhật:\",state.classStudents);}).addCase(getClassFaceFeatures.rejected,(state,action)=>{state.isProcessing=false;state.error=action.payload;})// Verify Attendance\n.addCase(verifyAttendance.pending,state=>{state.isProcessing=true;state.error=null;}).addCase(verifyAttendance.fulfilled,(state,action)=>{state.isProcessing=false;state.lastAttendanceResult=action.payload.data;}).addCase(verifyAttendance.rejected,(state,action)=>{state.isProcessing=false;state.error=action.payload;})// Manual Attendance\n.addCase(manualAttendance.pending,state=>{state.isProcessing=true;state.error=null;}).addCase(manualAttendance.fulfilled,(state,action)=>{state.isProcessing=false;state.lastAttendanceResult=action.payload.data;}).addCase(manualAttendance.rejected,(state,action)=>{state.isProcessing=false;state.error=action.payload;});}});export const{setModelLoaded,setCameraReady,setDetectedFaces,setRecognizedStudents,clearRecognitionState,clearError}=faceRecognitionSlice.actions;export default faceRecognitionSlice.reducer;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}