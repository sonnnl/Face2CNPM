{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kasiz\\\\Documents\\\\Studying\\\\FaceReg\\\\frontend\\\\src\\\\components\\\\FaceRegistrationComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, lazy, Suspense } from \"react\";\nimport { useSnackbar } from \"notistack\";\nimport { Box, Typography, Button, CircularProgress, Alert, Card, CardContent, FormControlLabel, Switch } from \"@mui/material\";\nimport { Camera, CheckCircle, Error } from \"@mui/icons-material\";\nimport { loadModels, detectFace } from \"../utils/faceUtils\";\nimport * as faceapi from \"face-api.js\";\n\n// Lazy load Webcam\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Webcam = /*#__PURE__*/lazy(_c = () => import(\"react-webcam\"));\n_c2 = Webcam;\nconst FaceRegistrationComponent = ({\n  onFaceDataCapture,\n  maxImages = 3\n}) => {\n  _s();\n  var _webcamRef$current2, _webcamRef$current2$v;\n  // Refs\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // State\n  const [isLoading, setIsLoading] = useState(false);\n  const [modelsLoaded, setModelsLoaded] = useState(false);\n  const [isCameraReady, setIsCameraReady] = useState(false);\n  const [capturedImages, setCapturedImages] = useState([]);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [showLandmarks, setShowLandmarks] = useState(true);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [detectionInterval, setDetectionInterval] = useState(null);\n\n  // Load face recognition models\n  useEffect(() => {\n    const initModels = async () => {\n      try {\n        setIsLoading(true);\n        await loadModels();\n        setModelsLoaded(true);\n        enqueueSnackbar(\"Đã tải mô hình nhận diện khuôn mặt\", {\n          variant: \"success\"\n        });\n      } catch (error) {\n        console.error(\"Lỗi khi tải mô hình:\", error);\n        setError(\"Không thể tải mô hình nhận diện khuôn mặt. Vui lòng tải lại trang.\");\n        enqueueSnackbar(\"Lỗi khi tải mô hình nhận diện\", {\n          variant: \"error\"\n        });\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    initModels();\n  }, [enqueueSnackbar]);\n\n  // Check if camera is ready\n  useEffect(() => {\n    var _webcamRef$current, _webcamRef$current$vi;\n    if (((_webcamRef$current = webcamRef.current) === null || _webcamRef$current === void 0 ? void 0 : (_webcamRef$current$vi = _webcamRef$current.video) === null || _webcamRef$current$vi === void 0 ? void 0 : _webcamRef$current$vi.readyState) === 4) {\n      setIsCameraReady(true);\n    }\n  }, [(_webcamRef$current2 = webcamRef.current) === null || _webcamRef$current2 === void 0 ? void 0 : (_webcamRef$current2$v = _webcamRef$current2.video) === null || _webcamRef$current2$v === void 0 ? void 0 : _webcamRef$current2$v.readyState]);\n\n  // Run face detection in real-time\n  useEffect(() => {\n    let intervalId;\n    const runFaceDetection = async () => {\n      if (webcamRef.current && webcamRef.current.video && canvasRef.current && modelsLoaded && isCameraReady && showLandmarks && !isProcessing) {\n        const video = webcamRef.current.video;\n        const canvas = canvasRef.current;\n\n        // Match dimensions\n        const displaySize = {\n          width: video.width,\n          height: video.height\n        };\n        faceapi.matchDimensions(canvas, displaySize);\n        try {\n          // Detect face with landmarks\n          const detections = await faceapi.detectSingleFace(video, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks();\n          if (detections) {\n            // Clear canvas and draw landmarks\n            const ctx = canvas.getContext(\"2d\");\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n            // Resize detection results\n            const resizedDetections = faceapi.resizeResults(detections, displaySize);\n\n            // Draw detection results\n            faceapi.draw.drawDetections(canvas, resizedDetections);\n            faceapi.draw.drawFaceLandmarks(canvas, resizedDetections);\n          }\n        } catch (error) {\n          console.error(\"Error detecting face in real-time:\", error);\n        }\n      }\n    };\n    if (modelsLoaded && isCameraReady && showLandmarks) {\n      intervalId = setInterval(runFaceDetection, 100);\n    }\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [modelsLoaded, isCameraReady, showLandmarks, isProcessing]);\n\n  // Capture and detect face\n  const captureImage = async () => {\n    if (!webcamRef.current || !isCameraReady) {\n      enqueueSnackbar(\"Camera chưa sẵn sàng, vui lòng thử lại\", {\n        variant: \"warning\"\n      });\n      return;\n    }\n    try {\n      setIsProcessing(true);\n      // Capture image\n      const imageSrc = webcamRef.current.getScreenshot();\n      if (!imageSrc) {\n        enqueueSnackbar(\"Không thể chụp ảnh, vui lòng thử lại\", {\n          variant: \"error\"\n        });\n        setIsProcessing(false);\n        return;\n      }\n\n      // Detect face\n      const detections = await detectFace(imageSrc);\n      if (!detections) {\n        enqueueSnackbar(\"Không phát hiện được khuôn mặt, vui lòng thử lại và đảm bảo khuôn mặt của bạn nằm trong khung hình\", {\n          variant: \"warning\"\n        });\n        setIsProcessing(false);\n        return;\n      }\n\n      // Save image and face info\n      const newImage = {\n        img: imageSrc,\n        descriptor: Array.from(detections.descriptor)\n      };\n      setCapturedImages(prev => [...prev, newImage]);\n      enqueueSnackbar(`Đã chụp ảnh ${capturedImages.length + 1}/${maxImages}`, {\n        variant: \"success\"\n      });\n\n      // If enough images, pass data to parent\n      if (capturedImages.length + 1 >= maxImages) {\n        onFaceDataCapture([...capturedImages, newImage]);\n      }\n    } catch (error) {\n      console.error(\"Lỗi khi chụp ảnh:\", error);\n      enqueueSnackbar(\"Đã xảy ra lỗi khi chụp ảnh\", {\n        variant: \"error\"\n      });\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  const resetCapture = () => {\n    setCapturedImages([]);\n  };\n\n  // Webcam config\n  const videoConstraints = {\n    width: 320,\n    height: 320,\n    facingMode: \"user\"\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    variant: \"outlined\",\n    sx: {\n      mb: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"\\u0110\\u0103ng k\\xFD khu\\xF4n m\\u1EB7t\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          paragraph: true,\n          children: [\"Vui l\\xF2ng ch\\u1EE5p \", maxImages, \" \\u1EA3nh khu\\xF4n m\\u1EB7t c\\u1EE7a b\\u1EA1n t\\u1EEB c\\xE1c g\\xF3c kh\\xE1c nhau \\u0111\\u1EC3 h\\u1EC7 th\\u1ED1ng nh\\u1EADn di\\u1EC7n t\\u1ED1t h\\u01A1n.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"info\",\n          sx: {\n            mb: 2\n          },\n          children: [\"\\u0110\\xE3 ch\\u1EE5p: \", capturedImages.length, \"/\", maxImages, \" \\u1EA3nh\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Switch, {\n            checked: showLandmarks,\n            onChange: e => setShowLandmarks(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this),\n          label: \"Hi\\u1EC3n th\\u1ECB landmark khu\\xF4n m\\u1EB7t\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          mb: 2\n        },\n        children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Suspense, {\n          fallback: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 33\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              border: \"2px solid #ddd\",\n              borderRadius: 2,\n              overflow: \"hidden\",\n              width: 320,\n              height: 320,\n              position: \"relative\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Webcam, {\n              audio: false,\n              ref: webcamRef,\n              screenshotFormat: \"image/jpeg\",\n              videoConstraints: videoConstraints,\n              style: {\n                width: \"100%\",\n                height: \"100%\"\n              },\n              onUserMedia: () => setIsCameraReady(true),\n              width: 320,\n              height: 320\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: canvasRef,\n              style: {\n                position: \"absolute\",\n                top: 0,\n                left: 0\n              },\n              width: 320,\n              height: 320\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this), capturedImages.length >= maxImages && /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                position: \"absolute\",\n                top: 0,\n                left: 0,\n                width: \"100%\",\n                height: \"100%\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                backgroundColor: \"rgba(0, 0, 0, 0.6)\"\n              },\n              children: /*#__PURE__*/_jsxDEV(CheckCircle, {\n                color: \"success\",\n                sx: {\n                  fontSize: 48,\n                  color: \"#4caf50\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(Camera, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 24\n          }, this),\n          disabled: isProcessing || !modelsLoaded || !isCameraReady || capturedImages.length >= maxImages,\n          onClick: captureImage,\n          children: isProcessing ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24,\n            color: \"inherit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this) : \"Chụp ảnh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: resetCapture,\n          disabled: isProcessing || capturedImages.length === 0,\n          children: \"Ch\\u1EE5p l\\u1EA1i\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), capturedImages.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2,\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          gap: 1\n        },\n        children: capturedImages.map((img, index) => /*#__PURE__*/_jsxDEV(Box, {\n          component: \"img\",\n          src: img.img,\n          alt: `Captured ${index + 1}`,\n          sx: {\n            width: 80,\n            height: 80,\n            objectFit: \"cover\",\n            borderRadius: 1\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n};\n_s(FaceRegistrationComponent, \"f66ZUmamJQ3Z9a7jgwDjdXSwslU=\", false, function () {\n  return [useSnackbar];\n});\n_c3 = FaceRegistrationComponent;\nexport default FaceRegistrationComponent;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Webcam$lazy\");\n$RefreshReg$(_c2, \"Webcam\");\n$RefreshReg$(_c3, \"FaceRegistrationComponent\");","map":{"version":3,"names":["React","useState","useEffect","useRef","lazy","Suspense","useSnackbar","Box","Typography","Button","CircularProgress","Alert","Card","CardContent","FormControlLabel","Switch","Camera","CheckCircle","Error","loadModels","detectFace","faceapi","jsxDEV","_jsxDEV","Webcam","_c","_c2","FaceRegistrationComponent","onFaceDataCapture","maxImages","_s","_webcamRef$current2","_webcamRef$current2$v","webcamRef","canvasRef","isLoading","setIsLoading","modelsLoaded","setModelsLoaded","isCameraReady","setIsCameraReady","capturedImages","setCapturedImages","isProcessing","setIsProcessing","error","setError","showLandmarks","setShowLandmarks","enqueueSnackbar","detectionInterval","setDetectionInterval","initModels","variant","console","_webcamRef$current","_webcamRef$current$vi","current","video","readyState","intervalId","runFaceDetection","canvas","displaySize","width","height","matchDimensions","detections","detectSingleFace","TinyFaceDetectorOptions","withFaceLandmarks","ctx","getContext","clearRect","resizedDetections","resizeResults","draw","drawDetections","drawFaceLandmarks","setInterval","clearInterval","captureImage","imageSrc","getScreenshot","newImage","img","descriptor","Array","from","prev","length","resetCapture","videoConstraints","facingMode","sx","mb","children","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","severity","color","paragraph","control","checked","onChange","e","target","label","display","flexDirection","alignItems","justifyContent","fallback","border","borderRadius","overflow","position","audio","ref","screenshotFormat","style","onUserMedia","top","left","backgroundColor","fontSize","gap","startIcon","disabled","onClick","size","mt","flexWrap","map","index","component","src","alt","objectFit","_c3","$RefreshReg$"],"sources":["C:/Users/kasiz/Documents/Studying/FaceReg/frontend/src/components/FaceRegistrationComponent.js"],"sourcesContent":["import React, { useState, useEffect, useRef, lazy, Suspense } from \"react\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  CircularProgress,\r\n  Alert,\r\n  Card,\r\n  CardContent,\r\n  FormControlLabel,\r\n  Switch,\r\n} from \"@mui/material\";\r\nimport { Camera, CheckCircle, Error } from \"@mui/icons-material\";\r\nimport { loadModels, detectFace } from \"../utils/faceUtils\";\r\nimport * as faceapi from \"face-api.js\";\r\n\r\n// Lazy load Webcam\r\nconst Webcam = lazy(() => import(\"react-webcam\"));\r\n\r\nconst FaceRegistrationComponent = ({ onFaceDataCapture, maxImages = 3 }) => {\r\n  // Refs\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  // State\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [modelsLoaded, setModelsLoaded] = useState(false);\r\n  const [isCameraReady, setIsCameraReady] = useState(false);\r\n  const [capturedImages, setCapturedImages] = useState([]);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [showLandmarks, setShowLandmarks] = useState(true);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [detectionInterval, setDetectionInterval] = useState(null);\r\n\r\n  // Load face recognition models\r\n  useEffect(() => {\r\n    const initModels = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        await loadModels();\r\n        setModelsLoaded(true);\r\n        enqueueSnackbar(\"Đã tải mô hình nhận diện khuôn mặt\", {\r\n          variant: \"success\",\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Lỗi khi tải mô hình:\", error);\r\n        setError(\r\n          \"Không thể tải mô hình nhận diện khuôn mặt. Vui lòng tải lại trang.\"\r\n        );\r\n        enqueueSnackbar(\"Lỗi khi tải mô hình nhận diện\", {\r\n          variant: \"error\",\r\n        });\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    initModels();\r\n  }, [enqueueSnackbar]);\r\n\r\n  // Check if camera is ready\r\n  useEffect(() => {\r\n    if (webcamRef.current?.video?.readyState === 4) {\r\n      setIsCameraReady(true);\r\n    }\r\n  }, [webcamRef.current?.video?.readyState]);\r\n\r\n  // Run face detection in real-time\r\n  useEffect(() => {\r\n    let intervalId;\r\n\r\n    const runFaceDetection = async () => {\r\n      if (\r\n        webcamRef.current &&\r\n        webcamRef.current.video &&\r\n        canvasRef.current &&\r\n        modelsLoaded &&\r\n        isCameraReady &&\r\n        showLandmarks &&\r\n        !isProcessing\r\n      ) {\r\n        const video = webcamRef.current.video;\r\n        const canvas = canvasRef.current;\r\n\r\n        // Match dimensions\r\n        const displaySize = { width: video.width, height: video.height };\r\n        faceapi.matchDimensions(canvas, displaySize);\r\n\r\n        try {\r\n          // Detect face with landmarks\r\n          const detections = await faceapi\r\n            .detectSingleFace(video, new faceapi.TinyFaceDetectorOptions())\r\n            .withFaceLandmarks();\r\n\r\n          if (detections) {\r\n            // Clear canvas and draw landmarks\r\n            const ctx = canvas.getContext(\"2d\");\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n            // Resize detection results\r\n            const resizedDetections = faceapi.resizeResults(\r\n              detections,\r\n              displaySize\r\n            );\r\n\r\n            // Draw detection results\r\n            faceapi.draw.drawDetections(canvas, resizedDetections);\r\n            faceapi.draw.drawFaceLandmarks(canvas, resizedDetections);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error detecting face in real-time:\", error);\r\n        }\r\n      }\r\n    };\r\n\r\n    if (modelsLoaded && isCameraReady && showLandmarks) {\r\n      intervalId = setInterval(runFaceDetection, 100);\r\n    }\r\n\r\n    return () => {\r\n      if (intervalId) {\r\n        clearInterval(intervalId);\r\n      }\r\n    };\r\n  }, [modelsLoaded, isCameraReady, showLandmarks, isProcessing]);\r\n\r\n  // Capture and detect face\r\n  const captureImage = async () => {\r\n    if (!webcamRef.current || !isCameraReady) {\r\n      enqueueSnackbar(\"Camera chưa sẵn sàng, vui lòng thử lại\", {\r\n        variant: \"warning\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsProcessing(true);\r\n      // Capture image\r\n      const imageSrc = webcamRef.current.getScreenshot();\r\n      if (!imageSrc) {\r\n        enqueueSnackbar(\"Không thể chụp ảnh, vui lòng thử lại\", {\r\n          variant: \"error\",\r\n        });\r\n        setIsProcessing(false);\r\n        return;\r\n      }\r\n\r\n      // Detect face\r\n      const detections = await detectFace(imageSrc);\r\n\r\n      if (!detections) {\r\n        enqueueSnackbar(\r\n          \"Không phát hiện được khuôn mặt, vui lòng thử lại và đảm bảo khuôn mặt của bạn nằm trong khung hình\",\r\n          { variant: \"warning\" }\r\n        );\r\n        setIsProcessing(false);\r\n        return;\r\n      }\r\n\r\n      // Save image and face info\r\n      const newImage = {\r\n        img: imageSrc,\r\n        descriptor: Array.from(detections.descriptor),\r\n      };\r\n\r\n      setCapturedImages((prev) => [...prev, newImage]);\r\n\r\n      enqueueSnackbar(`Đã chụp ảnh ${capturedImages.length + 1}/${maxImages}`, {\r\n        variant: \"success\",\r\n      });\r\n\r\n      // If enough images, pass data to parent\r\n      if (capturedImages.length + 1 >= maxImages) {\r\n        onFaceDataCapture([...capturedImages, newImage]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi chụp ảnh:\", error);\r\n      enqueueSnackbar(\"Đã xảy ra lỗi khi chụp ảnh\", { variant: \"error\" });\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  const resetCapture = () => {\r\n    setCapturedImages([]);\r\n  };\r\n\r\n  // Webcam config\r\n  const videoConstraints = {\r\n    width: 320,\r\n    height: 320,\r\n    facingMode: \"user\",\r\n  };\r\n\r\n  return (\r\n    <Card variant=\"outlined\" sx={{ mb: 3 }}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Đăng ký khuôn mặt\r\n        </Typography>\r\n\r\n        {error && (\r\n          <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n            {error}\r\n          </Alert>\r\n        )}\r\n\r\n        <Box sx={{ mb: 2 }}>\r\n          <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\r\n            Vui lòng chụp {maxImages} ảnh khuôn mặt của bạn từ các góc khác nhau\r\n            để hệ thống nhận diện tốt hơn.\r\n          </Typography>\r\n\r\n          <Alert severity=\"info\" sx={{ mb: 2 }}>\r\n            Đã chụp: {capturedImages.length}/{maxImages} ảnh\r\n          </Alert>\r\n\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={showLandmarks}\r\n                onChange={(e) => setShowLandmarks(e.target.checked)}\r\n              />\r\n            }\r\n            label=\"Hiển thị landmark khuôn mặt\"\r\n          />\r\n        </Box>\r\n\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            mb: 2,\r\n          }}\r\n        >\r\n          {isLoading ? (\r\n            <CircularProgress />\r\n          ) : (\r\n            <Suspense fallback={<CircularProgress />}>\r\n              <Box\r\n                sx={{\r\n                  border: \"2px solid #ddd\",\r\n                  borderRadius: 2,\r\n                  overflow: \"hidden\",\r\n                  width: 320,\r\n                  height: 320,\r\n                  position: \"relative\",\r\n                }}\r\n              >\r\n                <Webcam\r\n                  audio={false}\r\n                  ref={webcamRef}\r\n                  screenshotFormat=\"image/jpeg\"\r\n                  videoConstraints={videoConstraints}\r\n                  style={{ width: \"100%\", height: \"100%\" }}\r\n                  onUserMedia={() => setIsCameraReady(true)}\r\n                  width={320}\r\n                  height={320}\r\n                />\r\n                <canvas\r\n                  ref={canvasRef}\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                  }}\r\n                  width={320}\r\n                  height={320}\r\n                />\r\n                {capturedImages.length >= maxImages && (\r\n                  <Box\r\n                    sx={{\r\n                      position: \"absolute\",\r\n                      top: 0,\r\n                      left: 0,\r\n                      width: \"100%\",\r\n                      height: \"100%\",\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      backgroundColor: \"rgba(0, 0, 0, 0.6)\",\r\n                    }}\r\n                  >\r\n                    <CheckCircle\r\n                      color=\"success\"\r\n                      sx={{ fontSize: 48, color: \"#4caf50\" }}\r\n                    />\r\n                  </Box>\r\n                )}\r\n              </Box>\r\n            </Suspense>\r\n          )}\r\n        </Box>\r\n\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            gap: 2,\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            startIcon={<Camera />}\r\n            disabled={\r\n              isProcessing ||\r\n              !modelsLoaded ||\r\n              !isCameraReady ||\r\n              capturedImages.length >= maxImages\r\n            }\r\n            onClick={captureImage}\r\n          >\r\n            {isProcessing ? (\r\n              <CircularProgress size={24} color=\"inherit\" />\r\n            ) : (\r\n              \"Chụp ảnh\"\r\n            )}\r\n          </Button>\r\n\r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={resetCapture}\r\n            disabled={isProcessing || capturedImages.length === 0}\r\n          >\r\n            Chụp lại\r\n          </Button>\r\n        </Box>\r\n\r\n        {capturedImages.length > 0 && (\r\n          <Box sx={{ mt: 2, display: \"flex\", flexWrap: \"wrap\", gap: 1 }}>\r\n            {capturedImages.map((img, index) => (\r\n              <Box\r\n                key={index}\r\n                component=\"img\"\r\n                src={img.img}\r\n                alt={`Captured ${index + 1}`}\r\n                sx={{\r\n                  width: 80,\r\n                  height: 80,\r\n                  objectFit: \"cover\",\r\n                  borderRadius: 1,\r\n                }}\r\n              />\r\n            ))}\r\n          </Box>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default FaceRegistrationComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}