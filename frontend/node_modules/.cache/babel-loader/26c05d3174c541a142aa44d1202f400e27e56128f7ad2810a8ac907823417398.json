{"ast":null,"code":"import axios from \"axios\";\nimport jwtDecode from \"jwt-decode\";\nimport { toast } from \"react-hot-toast\";\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\n\n// Kiểm tra token đã hết hạn hay chưa\nconst isTokenExpired = token => {\n  if (!token) return true;\n  try {\n    const decoded = jwtDecode(token);\n    return decoded.exp < Date.now() / 1000;\n  } catch (error) {\n    console.error(\"Token decode error:\", error);\n    return true;\n  }\n};\n\n// Tạo axios instance với cấu hình chung\nconst axiosInstance = axios.create({\n  baseURL: API_URL,\n  timeout: 10000,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Thêm interceptor cho request\naxiosInstance.interceptors.request.use(config => {\n  // Lấy token từ localStorage\n  const token = localStorage.getItem(\"token\") || localStorage.getItem(\"userToken\");\n\n  // Kiểm tra token hết hạn trước khi gửi request\n  if (token && isTokenExpired(token)) {\n    // Xóa token và thông báo hết hạn\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"userToken\");\n\n    // Chuyển hướng tới trang đăng nhập nếu không phải đang ở trang đăng nhập\n    if (!window.location.pathname.includes(\"/login\")) {\n      toast.error(\"Phiên đăng nhập đã hết hạn, vui lòng đăng nhập lại\");\n      window.location.href = \"/login\";\n    }\n\n    // Không gửi token hết hạn trong request\n    return config;\n  }\n\n  // Thêm token vào header nếu có\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  // Xử lý lỗi request\n  return Promise.reject(error);\n});\n\n// Thêm interceptor cho response\naxiosInstance.interceptors.response.use(response => {\n  // Trả về dữ liệu response\n  return response;\n}, error => {\n  // Xử lý các loại lỗi response\n  if (error.response) {\n    // Server trả về response với status code nằm ngoài phạm vi 2xx\n    const {\n      status,\n      data\n    } = error.response;\n    switch (status) {\n      case 401:\n        // Token hết hạn hoặc không hợp lệ\n        if ((data === null || data === void 0 ? void 0 : data.errorType) === \"TOKEN_EXPIRED\") {\n          // Trường hợp token hết hạn\n          toast.error(\"Phiên đăng nhập đã hết hạn, vui lòng đăng nhập lại\");\n        } else {\n          // Các lỗi xác thực khác\n          toast.error((data === null || data === void 0 ? void 0 : data.message) || \"Vui lòng đăng nhập lại\");\n        }\n\n        // Xóa token và thông tin đăng nhập\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"userToken\");\n\n        // Chuyển hướng đến trang đăng nhập nếu không phải đang ở trang đăng nhập\n        if (!window.location.pathname.includes(\"/login\")) {\n          window.location.href = \"/login\";\n        }\n        break;\n      case 403:\n        toast.error(\"Bạn không có quyền thực hiện thao tác này\");\n        break;\n      case 404:\n        toast.error(\"Không tìm thấy tài nguyên yêu cầu\");\n        break;\n      case 500:\n        toast.error(\"Lỗi máy chủ, vui lòng thử lại sau\");\n        break;\n      default:\n        toast.error((data === null || data === void 0 ? void 0 : data.message) || \"Đã xảy ra lỗi\");\n        break;\n    }\n  } else if (error.request) {\n    // Request đã được gửi nhưng không nhận được response\n    toast.error(\"Không thể kết nối đến máy chủ, vui lòng kiểm tra kết nối mạng\");\n  } else {\n    // Có lỗi khi thiết lập request\n    toast.error(\"Đã xảy ra lỗi khi gửi yêu cầu\");\n  }\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","jwtDecode","toast","API_URL","process","env","REACT_APP_API_URL","isTokenExpired","token","decoded","exp","Date","now","error","console","axiosInstance","create","baseURL","timeout","headers","interceptors","request","use","config","localStorage","getItem","removeItem","window","location","pathname","includes","href","Authorization","Promise","reject","response","status","data","errorType","message"],"sources":["C:/Users/kasiz/Documents/Studying/FaceReg/frontend/src/utils/axios.js"],"sourcesContent":["import axios from \"axios\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { toast } from \"react-hot-toast\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\r\n\r\n// Kiểm tra token đã hết hạn hay chưa\r\nconst isTokenExpired = (token) => {\r\n  if (!token) return true;\r\n\r\n  try {\r\n    const decoded = jwtDecode(token);\r\n    return decoded.exp < Date.now() / 1000;\r\n  } catch (error) {\r\n    console.error(\"Token decode error:\", error);\r\n    return true;\r\n  }\r\n};\r\n\r\n// Tạo axios instance với cấu hình chung\r\nconst axiosInstance = axios.create({\r\n  baseURL: API_URL,\r\n  timeout: 10000,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// Thêm interceptor cho request\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    // Lấy token từ localStorage\r\n    const token =\r\n      localStorage.getItem(\"token\") || localStorage.getItem(\"userToken\");\r\n\r\n    // Kiểm tra token hết hạn trước khi gửi request\r\n    if (token && isTokenExpired(token)) {\r\n      // Xóa token và thông báo hết hạn\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"userToken\");\r\n\r\n      // Chuyển hướng tới trang đăng nhập nếu không phải đang ở trang đăng nhập\r\n      if (!window.location.pathname.includes(\"/login\")) {\r\n        toast.error(\"Phiên đăng nhập đã hết hạn, vui lòng đăng nhập lại\");\r\n        window.location.href = \"/login\";\r\n      }\r\n\r\n      // Không gửi token hết hạn trong request\r\n      return config;\r\n    }\r\n\r\n    // Thêm token vào header nếu có\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n\r\n    return config;\r\n  },\r\n  (error) => {\r\n    // Xử lý lỗi request\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Thêm interceptor cho response\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    // Trả về dữ liệu response\r\n    return response;\r\n  },\r\n  (error) => {\r\n    // Xử lý các loại lỗi response\r\n    if (error.response) {\r\n      // Server trả về response với status code nằm ngoài phạm vi 2xx\r\n      const { status, data } = error.response;\r\n\r\n      switch (status) {\r\n        case 401:\r\n          // Token hết hạn hoặc không hợp lệ\r\n          if (data?.errorType === \"TOKEN_EXPIRED\") {\r\n            // Trường hợp token hết hạn\r\n            toast.error(\"Phiên đăng nhập đã hết hạn, vui lòng đăng nhập lại\");\r\n          } else {\r\n            // Các lỗi xác thực khác\r\n            toast.error(data?.message || \"Vui lòng đăng nhập lại\");\r\n          }\r\n\r\n          // Xóa token và thông tin đăng nhập\r\n          localStorage.removeItem(\"token\");\r\n          localStorage.removeItem(\"userToken\");\r\n\r\n          // Chuyển hướng đến trang đăng nhập nếu không phải đang ở trang đăng nhập\r\n          if (!window.location.pathname.includes(\"/login\")) {\r\n            window.location.href = \"/login\";\r\n          }\r\n          break;\r\n        case 403:\r\n          toast.error(\"Bạn không có quyền thực hiện thao tác này\");\r\n          break;\r\n        case 404:\r\n          toast.error(\"Không tìm thấy tài nguyên yêu cầu\");\r\n          break;\r\n        case 500:\r\n          toast.error(\"Lỗi máy chủ, vui lòng thử lại sau\");\r\n          break;\r\n        default:\r\n          toast.error(data?.message || \"Đã xảy ra lỗi\");\r\n          break;\r\n      }\r\n    } else if (error.request) {\r\n      // Request đã được gửi nhưng không nhận được response\r\n      toast.error(\r\n        \"Không thể kết nối đến máy chủ, vui lòng kiểm tra kết nối mạng\"\r\n      );\r\n    } else {\r\n      // Có lỗi khi thiết lập request\r\n      toast.error(\"Đã xảy ra lỗi khi gửi yêu cầu\");\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}