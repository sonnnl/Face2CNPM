{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kasiz\\\\Documents\\\\Studying\\\\FaceReg\\\\frontend\\\\src\\\\pages\\\\teacher\\\\ClassDetailPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { useSnackbar } from \"notistack\";\nimport axios from \"axios\";\nimport { Box, Typography, Card, CardContent, Grid, Paper, Button, Tabs, Tab, CircularProgress, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Chip, IconButton, Dialog, DialogTitle, DialogContent, DialogActions, TextField, FormControl, InputLabel, Select, MenuItem, List, ListItem, ListItemText, ListItemSecondaryAction, Divider, Alert, Tooltip, Checkbox, FormHelperText, AlertTitle, ListItemIcon } from \"@mui/material\";\nimport { PersonAdd, Delete, Add, Edit, PlayArrow, Stop, CheckCircle, Warning, Info, CalendarToday, AccessTime, Download, School, Settings, Event, Person, Room } from \"@mui/icons-material\";\nimport { getTeachingClassById, updateTeachingClass, checkScheduleConflicts } from \"../../services/api\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\nfunction a11yProps(index) {\n  return {\n    id: `class-tab-${index}`,\n    \"aria-controls\": `class-tabpanel-${index}`\n  };\n}\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `class-tabpanel-${index}`,\n    \"aria-labelledby\": `class-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 27\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_c = TabPanel;\nconst TeacherClassDetailPage = () => {\n  _s();\n  var _classInfo$subject_id2, _classInfo$semester_i2, _classInfo$main_class2, _classInfo$teacher_id2;\n  const {\n    classId\n  } = useParams();\n  const id = classId; // Đảm bảo sử dụng đúng tên param\n  const navigate = useNavigate();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const {\n    token\n  } = useSelector(state => state.auth);\n\n  // State cho dữ liệu\n  const [classInfo, setClassInfo] = useState(null);\n  const [students, setStudents] = useState([]);\n  const [attendanceSessions, setAttendanceSessions] = useState([]);\n  const [attendanceStats, setAttendanceStats] = useState({\n    total: 0,\n    pending: 0,\n    completed: 0\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [editMode, setEditMode] = useState(false);\n  const [isUpdating, setIsUpdating] = useState(false);\n\n  // State cho UI\n  const [tabValue, setTabValue] = useState(0);\n  const [openSessionDialog, setOpenSessionDialog] = useState(false);\n  const [sessionFormData, setSessionFormData] = useState({\n    title: \"\",\n    date: new Date().toISOString().split(\"T\")[0],\n    start_time: \"07:00\",\n    end_time: \"08:40\",\n    room: \"\",\n    start_period: 1,\n    end_period: 2,\n    notes: \"\"\n  });\n\n  // State cho thêm sinh viên\n  const [openAddStudentDialog, setOpenAddStudentDialog] = useState(false);\n  const [availableStudents, setAvailableStudents] = useState([]);\n  const [selectedStudents, setSelectedStudents] = useState([]);\n  const [searchStudent, setSearchStudent] = useState(\"\");\n  const [mainClasses, setMainClasses] = useState([]);\n  const [selectedMainClass, setSelectedMainClass] = useState(\"\");\n  const [isLoadingStudents, setIsLoadingStudents] = useState(false);\n\n  // State cho chỉnh sửa thông tin lớp học\n  const [openEditClassDialog, setOpenEditClassDialog] = useState(false);\n  const [editClassData, setEditClassData] = useState(null);\n  const [isSubmittingEdit, setIsSubmittingEdit] = useState(false);\n  const [subjects, setSubjects] = useState([]);\n  const [semesters, setSemesters] = useState([]);\n\n  // Thêm state để lưu danh sách phòng học\n  const [rooms, setRooms] = useState([]);\n  const [campuses, setCampuses] = useState([]);\n  const [buildings, setBuildings] = useState([]);\n  const [selectedCampus, setSelectedCampus] = useState(\"\");\n  const [selectedBuilding, setSelectedBuilding] = useState(\"\");\n\n  // Thêm state để quản lý lịch học\n  const [scheduleDays, setScheduleDays] = useState([]);\n\n  // Thêm state để lưu cảnh báo xung đột lịch\n  const [conflictWarnings, setConflictWarnings] = useState([]);\n  const [checkingConflicts, setCheckingConflicts] = useState(false);\n\n  // Thêm hàm fetch danh sách phòng học\n  const fetchRooms = async buildingId => {\n    try {\n      let url = `${API_URL}/facilities/rooms`;\n\n      // Nếu có buildingId, tải phòng theo tòa nhà\n      if (buildingId) {\n        url = `${API_URL}/facilities/rooms/building/${buildingId}`;\n      } else {\n        // Nếu không có buildingId, tải tất cả phòng\n        url = `${API_URL}/facilities/rooms?limit=1000`;\n      }\n      const response = await axios.get(url, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // console.log(\"Dữ liệu phòng học từ API:\", response.data);\n\n      if (response.data.success && Array.isArray(response.data.data)) {\n        // Lưu trữ dữ liệu phòng học và ghi log để kiểm tra\n        setRooms(response.data.data);\n        // console.log(\"Đã cập nhật state rooms:\", response.data.data);\n      } else {\n        setRooms([]);\n        console.error(\"API không trả về dữ liệu phòng học hợp lệ:\", response.data);\n        enqueueSnackbar(\"Không thể tải danh sách phòng học (dữ liệu không hợp lệ)\", {\n          variant: \"warning\"\n        });\n      }\n    } catch (error) {\n      console.error(\"Lỗi khi tải danh sách phòng học:\", error);\n      enqueueSnackbar(\"Không thể tải danh sách phòng học\", {\n        variant: \"error\"\n      });\n      setRooms([]);\n    }\n  };\n\n  // Load dữ liệu ban đầu\n  const fetchClassData = useCallback(async () => {\n    try {\n      var _sessionsResponse$dat, _sessionsResponse$dat2;\n      setIsLoading(true);\n\n      // Kiểm tra id có tồn tại không\n      if (!id) {\n        enqueueSnackbar(\"ID lớp học không hợp lệ\", {\n          variant: \"error\"\n        });\n        navigate(\"/teacher/classes\");\n        return;\n      }\n\n      // Lấy thông tin lớp học\n      const classResponse = await axios.get(`${API_URL}/classes/teaching/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          Accept: \"application/json\"\n        }\n      });\n\n      // Log dữ liệu để xem cấu trúc\n      // console.log(\"Dữ liệu lớp học nhận về:\", classResponse.data);\n\n      // Kiểm tra nếu không có dữ liệu trả về\n      if (!classResponse.data.success || !classResponse.data.data) {\n        enqueueSnackbar(\"Không tìm thấy thông tin lớp học\", {\n          variant: \"error\"\n        });\n        navigate(\"/teacher/classes\");\n        return;\n      }\n      setClassInfo(classResponse.data.data);\n\n      // Fetch rooms right after setting class info to ensure it's done before rendering\n      await fetchRooms();\n\n      // Lấy danh sách phiên điểm danh\n      const sessionsResponse = await axios.get(`${API_URL}/attendance/teaching-class/${id}/sessions`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setAttendanceSessions(sessionsResponse.data.data || []);\n\n      // Tính toán thống kê điểm danh\n      const stats = {\n        total: ((_sessionsResponse$dat = sessionsResponse.data.data) === null || _sessionsResponse$dat === void 0 ? void 0 : _sessionsResponse$dat.length) || 0,\n        pending: 0,\n        completed: 0\n      };\n      (_sessionsResponse$dat2 = sessionsResponse.data.data) === null || _sessionsResponse$dat2 === void 0 ? void 0 : _sessionsResponse$dat2.forEach(session => {\n        if (session.status === \"completed\") {\n          stats.completed++;\n        } else {\n          stats.pending++;\n        }\n      });\n      setAttendanceStats(stats);\n\n      // Vì API getClassStudents không trả về đầy đủ thông tin, chúng ta sẽ lấy chi tiết từng sinh viên\n      if (classResponse.data.data.students && classResponse.data.data.students.length > 0) {\n        try {\n          // Lấy danh sách sinh viên cơ bản\n          const studentsResponse = await axios.get(`${API_URL}/classes/teaching/${id}/students`, {\n            headers: {\n              Authorization: `Bearer ${token}`,\n              Accept: \"application/json\"\n            }\n          });\n\n          // console.log(\"Dữ liệu sinh viên cơ bản:\", studentsResponse.data);\n\n          // Lưu danh sách sinh viên cơ bản trước\n          let studentsWithBasicInfo = [];\n          if (studentsResponse.data.success && studentsResponse.data.data) {\n            studentsWithBasicInfo = studentsResponse.data.data;\n          } else {\n            studentsWithBasicInfo = classResponse.data.data.students || [];\n          }\n\n          // Lấy chi tiết cho từng sinh viên (bao gồm faceFeatures)\n          const detailedStudents = await Promise.all(studentsWithBasicInfo.map(async student => {\n            try {\n              // Gọi API để lấy thông tin chi tiết của sinh viên\n              const studentDetailResponse = await axios.get(`${API_URL}/users/${student._id}`, {\n                headers: {\n                  Authorization: `Bearer ${token}`,\n                  Accept: \"application/json\"\n                }\n              });\n\n              // console.log(\n              //   `Thông tin chi tiết của sinh viên ${student.full_name}:`,\n              //   studentDetailResponse.data\n              // );\n\n              if (studentDetailResponse.data.success && studentDetailResponse.data.data) {\n                // Kết hợp dữ liệu từ API chi tiết sinh viên với dữ liệu cơ bản\n                const detailedInfo = studentDetailResponse.data.data;\n\n                // Kiểm tra dữ liệu khuôn mặt\n                const hasFaceData = !!(detailedInfo.faceFeatures && detailedInfo.faceFeatures.descriptors && detailedInfo.faceFeatures.descriptors.length > 0);\n\n                // console.log(\n                //   `Sinh viên ${detailedInfo.full_name} có dữ liệu khuôn mặt: ${hasFaceData}`\n                // );\n\n                return {\n                  ...student,\n                  ...detailedInfo,\n                  has_face_data: hasFaceData\n                };\n              } else {\n                // Nếu không lấy được chi tiết, sử dụng thông tin cơ bản\n                return {\n                  ...student,\n                  has_face_data: false\n                };\n              }\n            } catch (error) {\n              console.error(`Lỗi khi lấy thông tin chi tiết của sinh viên ${student._id}:`, error);\n              return {\n                ...student,\n                has_face_data: false\n              };\n            }\n          }));\n          setStudents(detailedStudents);\n        } catch (error) {\n          console.error(\"Lỗi khi lấy danh sách sinh viên:\", error);\n          // Sử dụng danh sách cơ bản nếu có lỗi\n          setStudents(classResponse.data.data.students || []);\n        }\n      } else {\n        setStudents([]);\n      }\n    } catch (error) {\n      console.error(\"Lỗi khi tải dữ liệu lớp học:\", error);\n      // Xử lý các loại lỗi từ API\n      if (error.response) {\n        // Nếu máy chủ phản hồi với mã lỗi\n        if (error.response.status === 404) {\n          enqueueSnackbar(\"Không tìm thấy lớp học với ID đã cho\", {\n            variant: \"error\"\n          });\n        } else if (error.response.status === 400) {\n          enqueueSnackbar(\"ID lớp học không hợp lệ\", {\n            variant: \"error\"\n          });\n        } else {\n          var _error$response$data;\n          enqueueSnackbar(((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Lỗi khi tải dữ liệu lớp học\", {\n            variant: \"error\"\n          });\n        }\n      } else {\n        enqueueSnackbar(\"Không thể kết nối đến máy chủ\", {\n          variant: \"error\"\n        });\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  }, [id, token, enqueueSnackbar, navigate]);\n  useEffect(() => {\n    fetchClassData();\n  }, [fetchClassData]);\n\n  // Thay đổi tab\n  const handleChangeTab = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  // Mở dialog tạo phiên điểm danh\n  const handleOpenSessionDialog = () => {\n    // Tải danh sách phòng học\n    fetchRooms();\n    setSessionFormData({\n      title: `Buổi học ${attendanceSessions.length + 1}`,\n      date: new Date().toISOString().split(\"T\")[0],\n      start_time: \"07:00\",\n      end_time: \"08:40\",\n      room: \"\",\n      start_period: 1,\n      end_period: 2,\n      notes: \"\"\n    });\n    setOpenSessionDialog(true);\n  };\n\n  // Đóng dialog tạo phiên điểm danh\n  const handleCloseSessionDialog = () => {\n    setOpenSessionDialog(false);\n  };\n\n  // Cập nhật form dữ liệu phiên điểm danh\n  const handleSessionFormChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSessionFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Tạo phiên điểm danh mới\n  const handleCreateSession = async () => {\n    try {\n      const {\n        title,\n        date,\n        start_time,\n        end_time,\n        room,\n        start_period,\n        end_period,\n        notes\n      } = sessionFormData;\n\n      // Kiểm tra dữ liệu\n      if (!date || !start_time || !end_time) {\n        enqueueSnackbar(\"Vui lòng điền đầy đủ thông tin\", {\n          variant: \"error\"\n        });\n        return;\n      }\n\n      // Tạo đối tượng để gửi lên API\n      const sessionData = {\n        title,\n        date,\n        start_time,\n        end_time,\n        teaching_class_id: id,\n        start_period: parseInt(start_period, 10) || 1,\n        end_period: parseInt(end_period, 10) || 2,\n        notes\n      };\n\n      // Thêm room nếu có\n      if (room) {\n        sessionData.room = room;\n      }\n      const response = await axios.post(`${API_URL}/attendance/sessions`, sessionData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      enqueueSnackbar(\"Tạo phiên điểm danh thành công\", {\n        variant: \"success\"\n      });\n      setOpenSessionDialog(false);\n\n      // Cập nhật danh sách phiên\n      setAttendanceSessions(prev => [...prev, response.data.data]);\n      setAttendanceStats(prev => ({\n        ...prev,\n        total: prev.total + 1,\n        pending: prev.pending + 1\n      }));\n    } catch (error) {\n      var _error$response, _error$response$data2;\n      console.error(\"Lỗi khi tạo phiên điểm danh:\", error);\n      enqueueSnackbar(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data2 = _error$response.data) === null || _error$response$data2 === void 0 ? void 0 : _error$response$data2.message) || \"Lỗi khi tạo phiên điểm danh\", {\n        variant: \"error\"\n      });\n    }\n  };\n\n  // Cập nhật phiên điểm danh\n  const handleUpdateSession = async () => {\n    try {\n      const {\n        _id,\n        title,\n        date,\n        start_time,\n        end_time,\n        room,\n        start_period,\n        end_period,\n        notes\n      } = sessionFormData;\n\n      // Kiểm tra dữ liệu\n      if (!date || !start_time || !end_time) {\n        enqueueSnackbar(\"Vui lòng điền đầy đủ thông tin\", {\n          variant: \"error\"\n        });\n        return;\n      }\n\n      // Tạo đối tượng để gửi lên API\n      const sessionData = {\n        title,\n        date,\n        start_time,\n        end_time,\n        start_period: parseInt(start_period, 10) || 1,\n        end_period: parseInt(end_period, 10) || 2,\n        notes\n      };\n\n      // Thêm room nếu có\n      if (room) {\n        sessionData.room = room;\n      }\n\n      // Gọi API cập nhật\n      const response = await axios.put(`${API_URL}/attendance/sessions/${_id}`, sessionData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      enqueueSnackbar(\"Cập nhật phiên điểm danh thành công\", {\n        variant: \"success\"\n      });\n      setOpenSessionDialog(false);\n\n      // Cập nhật danh sách phiên\n      setAttendanceSessions(prev => prev.map(session => session._id === _id ? response.data.data : session));\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error(\"Lỗi khi cập nhật phiên điểm danh:\", error);\n      enqueueSnackbar(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Lỗi khi cập nhật phiên điểm danh\", {\n        variant: \"error\"\n      });\n    }\n  };\n\n  // Bắt đầu phiên điểm danh\n  const handleStartSession = async sessionId => {\n    try {\n      // Kiểm tra tính hợp lệ của session\n      if (!sessionId) {\n        enqueueSnackbar(\"ID phiên điểm danh không hợp lệ\", {\n          variant: \"error\"\n        });\n        return;\n      }\n\n      // Kiểm tra trạng thái phiên điểm danh\n      const session = attendanceSessions.find(s => s._id === sessionId);\n      if (!session) {\n        enqueueSnackbar(\"Không tìm thấy thông tin phiên điểm danh\", {\n          variant: \"error\"\n        });\n        return;\n      }\n\n      // Nếu phiên chưa bắt đầu hoặc đang ở trạng thái pending, cập nhật trạng thái thành active\n      if (session.status === \"pending\") {\n        try {\n          await axios.put(`${API_URL}/attendance/sessions/${sessionId}/status`, {\n            status: \"active\"\n          }, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n\n          // Cập nhật lại trạng thái trong state\n          setAttendanceSessions(prev => prev.map(s => s._id === sessionId ? {\n            ...s,\n            status: \"active\"\n          } : s));\n        } catch (error) {\n          console.error(\"Lỗi khi cập nhật trạng thái phiên:\", error);\n          // Vẫn tiếp tục điều hướng dù có lỗi\n        }\n      }\n      enqueueSnackbar(`Đang chuyển đến trang điểm danh`, {\n        variant: \"info\"\n      });\n      navigate(`/teacher/attendance/${id}/${sessionId}`);\n    } catch (error) {\n      console.error(\"Lỗi khi bắt đầu phiên điểm danh:\", error);\n      enqueueSnackbar(\"Có lỗi xảy ra khi bắt đầu phiên điểm danh\", {\n        variant: \"error\"\n      });\n    }\n  };\n\n  // Mở dialog thêm sinh viên\n  const handleOpenAddStudentDialog = async () => {\n    try {\n      var _mainClassResponse$da;\n      setIsLoadingStudents(true);\n      // Lấy danh sách lớp chính\n      const mainClassResponse = await axios.get(`${API_URL}/classes/main?all=true`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          Accept: \"application/json\"\n        }\n      });\n\n      // console.log(\"Danh sách lớp chính:\", mainClassResponse.data);\n\n      if (!((_mainClassResponse$da = mainClassResponse.data) !== null && _mainClassResponse$da !== void 0 && _mainClassResponse$da.data)) {\n        enqueueSnackbar(\"Không thể tải danh sách lớp chính\", {\n          variant: \"error\"\n        });\n        return;\n      }\n      setMainClasses(mainClassResponse.data.data || []);\n      setAvailableStudents([]);\n      setSelectedStudents([]);\n      setSelectedMainClass(\"\");\n      setOpenAddStudentDialog(true);\n    } catch (error) {\n      console.error(\"Lỗi khi tải danh sách lớp chính:\", error);\n      enqueueSnackbar(\"Không thể tải danh sách lớp chính. Vui lòng thử lại sau.\", {\n        variant: \"error\"\n      });\n    } finally {\n      setIsLoadingStudents(false);\n    }\n  };\n\n  // Lấy danh sách sinh viên từ lớp chính\n  const handleMainClassChange = async e => {\n    const mainClassId = e.target.value;\n    setSelectedMainClass(mainClassId);\n    if (!mainClassId) {\n      setAvailableStudents([]);\n      return;\n    }\n    try {\n      var _studentsResponse$dat;\n      setIsLoadingStudents(true);\n      const studentsResponse = await axios.get(`${API_URL}/classes/main/${mainClassId}/approved-students`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          Accept: \"application/json\"\n        }\n      });\n\n      // console.log(\"Danh sách sinh viên lớp chính:\", studentsResponse.data);\n\n      if (!((_studentsResponse$dat = studentsResponse.data) !== null && _studentsResponse$dat !== void 0 && _studentsResponse$dat.data)) {\n        enqueueSnackbar(\"Không thể tải danh sách sinh viên từ lớp chính\", {\n          variant: \"error\"\n        });\n        return;\n      }\n\n      // Lọc sinh viên chưa có trong lớp\n      const currentStudentIds = students.map(s => s._id);\n      const filteredStudents = studentsResponse.data.data.students.filter(s => !currentStudentIds.includes(s._id));\n      setAvailableStudents(filteredStudents);\n    } catch (error) {\n      console.error(\"Lỗi khi tải danh sách sinh viên từ lớp chính:\", error);\n      enqueueSnackbar(\"Không thể tải danh sách sinh viên từ lớp chính\", {\n        variant: \"error\"\n      });\n      setAvailableStudents([]);\n    } finally {\n      setIsLoadingStudents(false);\n    }\n  };\n\n  // Đóng dialog thêm sinh viên\n  const handleCloseAddStudentDialog = () => {\n    setOpenAddStudentDialog(false);\n  };\n\n  // Xử lý chọn sinh viên để thêm\n  const handleSelectStudent = studentId => {\n    if (selectedStudents.includes(studentId)) {\n      setSelectedStudents(selectedStudents.filter(id => id !== studentId));\n    } else {\n      setSelectedStudents([...selectedStudents, studentId]);\n    }\n  };\n\n  // Thêm sinh viên vào lớp\n  const handleAddStudents = async () => {\n    try {\n      if (selectedStudents.length === 0) {\n        enqueueSnackbar(\"Vui lòng chọn ít nhất một sinh viên\", {\n          variant: \"warning\"\n        });\n        return;\n      }\n\n      // Gọi API thêm sinh viên\n      await axios.post(`${API_URL}/classes/teaching/${id}/students/batch`, {\n        student_ids: selectedStudents\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      enqueueSnackbar(`Đã thêm ${selectedStudents.length} sinh viên vào lớp`, {\n        variant: \"success\"\n      });\n      setOpenAddStudentDialog(false);\n\n      // Cập nhật lại danh sách sinh viên\n      fetchClassData();\n    } catch (error) {\n      console.error(\"Lỗi khi thêm sinh viên:\", error);\n      if (error.response) {\n        var _error$response$data3;\n        enqueueSnackbar(`Lỗi: ${error.response.status} - ${((_error$response$data3 = error.response.data) === null || _error$response$data3 === void 0 ? void 0 : _error$response$data3.message) || \"Không thể thêm sinh viên\"}`, {\n          variant: \"error\"\n        });\n      } else {\n        enqueueSnackbar(\"Lỗi kết nối khi thêm sinh viên vào lớp\", {\n          variant: \"error\"\n        });\n      }\n    }\n  };\n\n  // Xóa sinh viên khỏi lớp\n  const handleRemoveStudent = async studentId => {\n    if (!window.confirm(\"Bạn có chắc chắn muốn xóa sinh viên này khỏi lớp không?\")) {\n      return;\n    }\n    try {\n      await axios.delete(`${API_URL}/classes/teaching/${id}/students/${studentId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      enqueueSnackbar(\"Đã xóa sinh viên khỏi lớp\", {\n        variant: \"success\"\n      });\n\n      // Cập nhật lại danh sách sinh viên\n      setStudents(students.filter(s => s._id !== studentId));\n    } catch (error) {\n      console.error(\"Lỗi khi xóa sinh viên:\", error);\n      enqueueSnackbar(\"Lỗi khi xóa sinh viên khỏi lớp\", {\n        variant: \"error\"\n      });\n    }\n  };\n\n  // Xuất danh sách sinh viên\n  const handleExportStudentList = () => {\n    try {\n      const studentsData = students.map((student, index) => {\n        var _student$school_info;\n        // Kiểm tra có face data từ cả hai nguồn có thể\n        const hasFaceData = student.has_face_data || !!(student.faceFeatures && student.faceFeatures.descriptors && student.faceFeatures.descriptors.length > 0);\n        return {\n          STT: index + 1,\n          \"Mã SV\": ((_student$school_info = student.school_info) === null || _student$school_info === void 0 ? void 0 : _student$school_info.student_id) || \"N/A\",\n          \"Họ và tên\": student.full_name || student.name,\n          Email: student.email,\n          \"Đăng ký khuôn mặt\": hasFaceData ? \"Đã đăng ký\" : \"Chưa đăng ký\"\n        };\n      });\n      const header = [\"STT\", \"Mã SV\", \"Họ và tên\", \"Email\", \"Đăng ký khuôn mặt\"];\n      const csvContent = \"data:text/csv;charset=utf-8,\" + [header.join(\",\"), ...studentsData.map(row => [row.STT, row[\"Mã SV\"], row[\"Họ và tên\"], row.Email, row[\"Đăng ký khuôn mặt\"]].join(\",\"))].join(\"\\n\");\n      const encodedUri = encodeURI(csvContent);\n      const link = document.createElement(\"a\");\n      link.setAttribute(\"href\", encodedUri);\n      link.setAttribute(\"download\", `danh_sach_sinh_vien_${classInfo === null || classInfo === void 0 ? void 0 : classInfo.class_name}.csv`);\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      enqueueSnackbar(\"Xuất danh sách sinh viên thành công\", {\n        variant: \"success\"\n      });\n    } catch (error) {\n      console.error(\"Lỗi khi xuất danh sách:\", error);\n      enqueueSnackbar(\"Lỗi khi xuất danh sách sinh viên\", {\n        variant: \"error\"\n      });\n    }\n  };\n\n  // Lọc sinh viên theo từ khóa tìm kiếm\n  const filteredAvailableStudents = availableStudents.filter(student => {\n    var _student$school_info2, _student$school_info3;\n    return student.full_name.toLowerCase().includes(searchStudent.toLowerCase()) || ((_student$school_info2 = student.school_info) === null || _student$school_info2 === void 0 ? void 0 : (_student$school_info3 = _student$school_info2.student_id) === null || _student$school_info3 === void 0 ? void 0 : _student$school_info3.toLowerCase().includes(searchStudent.toLowerCase())) || student.email.toLowerCase().includes(searchStudent.toLowerCase());\n  });\n\n  // Tải dữ liệu tham chiếu cho form chỉnh sửa\n  const fetchReferenceDataForEdit = async () => {\n    try {\n      const [subjectsRes, semestersRes, mainClassesRes, campusesRes] = await Promise.all([axios.get(`${API_URL}/subjects`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }), axios.get(`${API_URL}/semesters`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }), axios.get(`${API_URL}/classes/main?all=true`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }), axios.get(`${API_URL}/facilities/campuses`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })]);\n      setSubjects(subjectsRes.data.data || []);\n      setSemesters(semestersRes.data.data || []);\n      setMainClasses(mainClassesRes.data.data || []);\n      setCampuses(campusesRes.data.data || []);\n\n      // Nếu lớp học có thông tin campus và building, tải danh sách building và room tương ứng\n      if (classInfo && classInfo.room) {\n        try {\n          const roomDetails = await axios.get(`${API_URL}/facilities/rooms/${classInfo.room}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          if (roomDetails.data.success && roomDetails.data.data) {\n            const room = roomDetails.data.data;\n            if (room.building_id) {\n              var _room$building_id$cam, _room$building_id$cam2;\n              setSelectedCampus(((_room$building_id$cam = room.building_id.campus_id) === null || _room$building_id$cam === void 0 ? void 0 : _room$building_id$cam._id) || \"\");\n\n              // Tải danh sách buildings của campus\n              const buildingsRes = await axios.get(`${API_URL}/facilities/buildings/campuses/${(_room$building_id$cam2 = room.building_id.campus_id) === null || _room$building_id$cam2 === void 0 ? void 0 : _room$building_id$cam2._id}`, {\n                headers: {\n                  Authorization: `Bearer ${token}`\n                }\n              });\n              setBuildings(buildingsRes.data.data || []);\n              setSelectedBuilding(room.building_id._id || \"\");\n\n              // Tải danh sách rooms của building\n              const roomsRes = await axios.get(`${API_URL}/facilities/rooms/building/${room.building_id._id}`, {\n                headers: {\n                  Authorization: `Bearer ${token}`\n                }\n              });\n              setRooms(roomsRes.data.data || []);\n            }\n          }\n        } catch (error) {\n          console.error(\"Lỗi khi tải thông tin phòng học:\", error);\n        }\n      }\n    } catch (error) {\n      console.error(\"Lỗi khi tải dữ liệu tham chiếu:\", error);\n      enqueueSnackbar(\"Lỗi khi tải dữ liệu tham chiếu\", {\n        variant: \"error\"\n      });\n    }\n  };\n\n  // Tải danh sách tòa nhà khi chọn campus\n  const fetchBuildings = async campusId => {\n    if (!campusId) {\n      setBuildings([]);\n      setSelectedBuilding(\"\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${API_URL}/facilities/buildings/campuses/${campusId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setBuildings(response.data.data || []);\n    } catch (error) {\n      console.error(\"Lỗi khi tải danh sách tòa nhà:\", error);\n      enqueueSnackbar(\"Lỗi khi tải danh sách tòa nhà\", {\n        variant: \"error\"\n      });\n    }\n  };\n\n  // Mở dialog chỉnh sửa lớp học\n  const handleOpenEditClassDialog = () => {\n    var _classInfo$subject_id, _classInfo$main_class, _classInfo$semester_i, _classInfo$room;\n    // Chuẩn bị dữ liệu ban đầu cho form\n    setEditClassData({\n      class_name: classInfo.class_name || \"\",\n      class_code: classInfo.class_code || \"\",\n      subject_id: ((_classInfo$subject_id = classInfo.subject_id) === null || _classInfo$subject_id === void 0 ? void 0 : _classInfo$subject_id._id) || \"\",\n      main_class_id: ((_classInfo$main_class = classInfo.main_class_id) === null || _classInfo$main_class === void 0 ? void 0 : _classInfo$main_class._id) || \"\",\n      semester_id: ((_classInfo$semester_i = classInfo.semester_id) === null || _classInfo$semester_i === void 0 ? void 0 : _classInfo$semester_i._id) || \"\",\n      total_sessions: classInfo.total_sessions || 15,\n      room_id: ((_classInfo$room = classInfo.room) === null || _classInfo$room === void 0 ? void 0 : _classInfo$room._id) || \"\",\n      course_start_date: classInfo.course_start_date ? classInfo.course_start_date.split(\"T\")[0] : \"\",\n      course_end_date: classInfo.course_end_date ? classInfo.course_end_date.split(\"T\")[0] : \"\",\n      auto_generate_sessions: classInfo.auto_generate_sessions !== false,\n      schedule: classInfo.schedule || []\n    });\n\n    // Chuẩn bị lịch học từ classInfo\n    if (classInfo.schedule && classInfo.schedule.length > 0) {\n      setScheduleDays(classInfo.schedule);\n    } else {\n      var _classInfo$room2;\n      // Nếu không có lịch học, tạo lịch mặc định dựa trên ngày bắt đầu\n      const dayOfWeek = classInfo.course_start_date ? getDayOfWeekFromDate(classInfo.course_start_date.split(\"T\")[0]) : 1;\n      setScheduleDays([{\n        day_of_week: dayOfWeek,\n        start_period: 1,\n        end_period: 2,\n        start_time: \"07:00\",\n        end_time: \"08:40\",\n        room_id: ((_classInfo$room2 = classInfo.room) === null || _classInfo$room2 === void 0 ? void 0 : _classInfo$room2._id) || \"\",\n        is_recurring: true,\n        specific_dates: [],\n        excluded_dates: []\n      }]);\n    }\n\n    // Tải dữ liệu tham chiếu\n    fetchReferenceDataForEdit();\n\n    // Mở dialog\n    setOpenEditClassDialog(true);\n  };\n\n  // Đóng dialog chỉnh sửa lớp học\n  const handleCloseEditClassDialog = () => {\n    setOpenEditClassDialog(false);\n    setEditClassData(null);\n  };\n\n  // Xử lý thay đổi các trường trong form chỉnh sửa\n  const handleEditClassChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditClassData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Xử lý thay đổi campus\n  const handleCampusChange = e => {\n    const campusId = e.target.value;\n    setSelectedCampus(campusId);\n    fetchBuildings(campusId);\n    setSelectedBuilding(\"\");\n    setEditClassData(prev => ({\n      ...prev,\n      room_id: \"\"\n    }));\n  };\n\n  // Xử lý thay đổi building\n  const handleBuildingChange = e => {\n    const buildingId = e.target.value;\n    setSelectedBuilding(buildingId);\n    fetchRooms(buildingId);\n    setEditClassData(prev => ({\n      ...prev,\n      room_id: \"\"\n    }));\n  };\n\n  // Thêm function để kiểm tra xung đột lịch\n  const checkConflicts = async (scheduleToCheck = scheduleDays) => {\n    // Xóa cảnh báo xung đột cũ\n    setConflictWarnings([]);\n    try {\n      var _classInfo$teacher_id;\n      setCheckingConflicts(true);\n\n      // Kiểm tra xem có thông tin đủ để check không\n      if (!(classInfo !== null && classInfo !== void 0 && (_classInfo$teacher_id = classInfo.teacher_id) !== null && _classInfo$teacher_id !== void 0 && _classInfo$teacher_id._id) || !scheduleToCheck || scheduleToCheck.length === 0 || scheduleToCheck.some(day => !day.room_id)) {\n        return;\n      }\n      const response = await checkScheduleConflicts({\n        teacher_id: classInfo.teacher_id._id,\n        schedule: scheduleToCheck,\n        class_id: id // Loại trừ chính lớp này khi kiểm tra\n      });\n      if (response.data.has_conflicts) {\n        setConflictWarnings(response.data.conflicts);\n      }\n    } catch (error) {\n      console.error(\"Lỗi khi kiểm tra xung đột lịch học:\", error);\n      enqueueSnackbar(\"Lỗi khi kiểm tra xung đột lịch học\", {\n        variant: \"error\"\n      });\n    } finally {\n      setCheckingConflicts(false);\n    }\n  };\n\n  // Cập nhật hàm handleScheduleChange để check xung đột\n  const handleScheduleChange = (index, field, value) => {\n    const updatedSchedule = [...scheduleDays];\n    updatedSchedule[index] = {\n      ...updatedSchedule[index],\n      [field]: value\n    };\n    setScheduleDays(updatedSchedule);\n\n    // Tính lại ngày kết thúc khi lịch học thay đổi\n    setEditClassData(prev => ({\n      ...prev,\n      course_end_date: calculateEndDate(prev.course_start_date, updatedSchedule, prev.total_sessions)\n    }));\n\n    // Kiểm tra xung đột nếu thay đổi phòng học hoặc thời gian\n    if (field === \"room_id\" || field === \"day_of_week\" || field === \"start_period\" || field === \"end_period\" || field === \"start_time\" || field === \"end_time\") {\n      // Đặt timeout để tránh gọi API quá nhiều khi người dùng thay đổi nhiều lần\n      setTimeout(() => {\n        if (updatedSchedule[index].room_id && updatedSchedule[index].day_of_week !== undefined) {\n          checkConflicts(updatedSchedule);\n        }\n      }, 500);\n    }\n  };\n\n  // Cập nhật hàm handleUpdateClass\n  const handleUpdateClass = async () => {\n    if (!editClassData.class_name || !editClassData.class_code) {\n      enqueueSnackbar(\"Vui lòng điền đầy đủ thông tin bắt buộc\", {\n        variant: \"warning\"\n      });\n      return;\n    }\n\n    // Kiểm tra room_id trong từng schedule item\n    for (const day of scheduleDays) {\n      if (!day.room_id) {\n        enqueueSnackbar(`Vui lòng chọn phòng học cho buổi học vào ${getDayOfWeekName(day.day_of_week)}`, {\n          variant: \"warning\"\n        });\n        return;\n      }\n    }\n\n    // Kiểm tra xung đột lịch cuối cùng trước khi cập nhật lớp\n    try {\n      setCheckingConflicts(true);\n      const response = await checkScheduleConflicts({\n        teacher_id: classInfo.teacher_id._id,\n        schedule: scheduleDays,\n        class_id: id\n      });\n      if (response.data.has_conflicts) {\n        setConflictWarnings(response.data.conflicts);\n\n        // Hiển thị thông báo xác nhận nếu có xung đột\n        if (window.confirm(\"Phát hiện xung đột lịch học. Bạn vẫn muốn cập nhật lịch học này không?\\n\\n\" + response.data.conflicts.map(c => c.message).join(\"\\n\"))) {\n          // Tiếp tục cập nhật lớp nếu người dùng xác nhận\n          await updateClassData();\n        }\n      } else {\n        // Không có xung đột, cập nhật lớp\n        await updateClassData();\n      }\n    } catch (error) {\n      console.error(\"Lỗi khi kiểm tra xung đột lịch học:\", error);\n      // Vẫn cập nhật lớp ngay cả khi không thể kiểm tra xung đột\n      await updateClassData();\n    } finally {\n      setCheckingConflicts(false);\n    }\n  };\n\n  // Tách logic cập nhật lớp thành hàm riêng\n  const updateClassData = async () => {\n    setIsUpdating(true);\n    try {\n      // Tạo đối tượng dữ liệu để cập nhật\n      const updateData = {\n        ...editClassData,\n        schedule: scheduleDays\n      };\n\n      // Xóa các trường không cần thiết\n      delete updateData.teacher_id;\n      delete updateData.createdAt;\n      delete updateData.updatedAt;\n      await updateTeachingClass(id, updateData);\n      enqueueSnackbar(\"Cập nhật lớp học thành công\", {\n        variant: \"success\"\n      });\n      setEditMode(false);\n      fetchClassData(); // Tải lại dữ liệu lớp học\n      setConflictWarnings([]); // Xóa cảnh báo xung đột\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error(\"Lỗi khi cập nhật lớp học:\", error);\n      enqueueSnackbar(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || \"Lỗi khi cập nhật lớp học\", {\n        variant: \"error\"\n      });\n    } finally {\n      setIsUpdating(false);\n    }\n  };\n\n  // Lấy thứ trong tuần từ ngày\n  const getDayOfWeekFromDate = dateString => {\n    if (!dateString) return 1; // Mặc định là thứ 2 nếu không có ngày\n\n    const date = new Date(dateString);\n    // getDay() trả về 0 cho Chủ Nhật, 1-6 cho Thứ 2 đến Thứ 7\n    const day = date.getDay();\n\n    // Chuyển đổi để 0 = Chủ Nhật, 1 = Thứ Hai, ...\n    return day;\n  };\n\n  // Lấy tên của thứ trong tuần\n  const getDayOfWeekName = dayOfWeek => {\n    const days = [\"Chủ Nhật\", \"Thứ Hai\", \"Thứ Ba\", \"Thứ Tư\", \"Thứ Năm\", \"Thứ Sáu\", \"Thứ Bảy\"];\n    return days[dayOfWeek];\n  };\n\n  // Thêm lịch học\n  const addScheduleDay = () => {\n    // Lấy ngày bắt đầu\n    const startDate = editClassData.course_start_date;\n    if (!startDate) {\n      enqueueSnackbar(\"Vui lòng chọn ngày bắt đầu trước\", {\n        variant: \"warning\"\n      });\n      return;\n    }\n\n    // Lấy thứ từ ngày bắt đầu\n    const baseDayOfWeek = getDayOfWeekFromDate(startDate);\n\n    // Tìm thứ tiếp theo chưa có trong lịch\n    const existingDays = scheduleDays.map(day => day.day_of_week);\n    let nextDay = (baseDayOfWeek + 1) % 7; // Thứ tiếp theo\n\n    // Tìm một thứ chưa có trong lịch hiện tại\n    for (let i = 0; i < 7; i++) {\n      if (!existingDays.includes(nextDay)) {\n        break;\n      }\n      nextDay = (nextDay + 1) % 7;\n    }\n\n    // Nếu đã có đủ 7 ngày trong tuần, thì dùng thứ 2\n    if (existingDays.length >= 7) {\n      nextDay = 1;\n    }\n    const updatedSchedule = [...scheduleDays, {\n      day_of_week: nextDay,\n      start_period: 1,\n      end_period: 2,\n      start_time: \"07:00\",\n      end_time: \"08:40\",\n      room_id: editClassData.room_id,\n      is_recurring: true,\n      specific_dates: [],\n      excluded_dates: []\n    }];\n    setScheduleDays(updatedSchedule);\n\n    // Tính lại ngày kết thúc sau khi thêm buổi học\n    setEditClassData(prev => ({\n      ...prev,\n      course_end_date: calculateEndDate(prev.course_start_date, updatedSchedule, prev.total_sessions)\n    }));\n  };\n\n  // Xóa lịch học\n  const removeScheduleDay = index => {\n    if (scheduleDays.length > 1) {\n      const updatedSchedule = scheduleDays.filter((_, i) => i !== index);\n      setScheduleDays(updatedSchedule);\n\n      // Tính lại ngày kết thúc sau khi xóa buổi học\n      setEditClassData(prev => ({\n        ...prev,\n        course_end_date: calculateEndDate(prev.course_start_date, updatedSchedule, prev.total_sessions)\n      }));\n    }\n  };\n\n  // Tính ngày kết thúc dựa trên ngày bắt đầu và lịch học\n  const calculateEndDate = (startDate, schedule, totalSessions) => {\n    if (!startDate || !schedule || schedule.length === 0 || !totalSessions) {\n      return \"\";\n    }\n    try {\n      // Chuyển ngày bắt đầu thành đối tượng Date\n      const start = new Date(startDate);\n      if (isNaN(start.getTime())) {\n        return \"\";\n      }\n\n      // Tổng số tuần cần thiết = tổng số buổi học / số buổi học mỗi tuần\n      const sessionsPerWeek = schedule.length;\n      const weeksNeeded = Math.ceil(totalSessions / sessionsPerWeek);\n\n      // Tạo mảng chứa các ngày trong tuần từ lịch học (0-6, với 0 là Chủ Nhật)\n      const daysOfWeek = schedule.map(day => day.day_of_week);\n\n      // Sắp xếp các ngày trong tuần\n      daysOfWeek.sort((a, b) => a - b);\n\n      // Tìm ngày đầu tiên trong lịch học sau ngày bắt đầu\n      let currentDate = new Date(start);\n\n      // Đếm số buổi học đã xếp lịch\n      let sessionCount = 0;\n\n      // Lặp qua từng tuần\n      for (let week = 0; week < weeksNeeded * 2; week++) {\n        // Nhân 2 để đảm bảo đủ số buổi\n        // Lặp qua các ngày trong tuần từ lịch học\n        for (let dayIndex = 0; dayIndex < daysOfWeek.length; dayIndex++) {\n          const targetDayOfWeek = daysOfWeek[dayIndex];\n\n          // Tìm ngày tiếp theo có thứ phù hợp\n          while (currentDate.getDay() !== targetDayOfWeek) {\n            currentDate.setDate(currentDate.getDate() + 1);\n          }\n          sessionCount++;\n\n          // Nếu đã đủ số buổi học, trả về ngày hiện tại\n          if (sessionCount >= totalSessions) {\n            return currentDate.toISOString().split(\"T\")[0];\n          }\n\n          // Di chuyển đến ngày tiếp theo\n          currentDate.setDate(currentDate.getDate() + 1);\n        }\n      }\n\n      // Nếu không tính được, trả về chuỗi rỗng\n      return \"\";\n    } catch (error) {\n      console.error(\"Lỗi khi tính ngày kết thúc:\", error);\n      return \"\";\n    }\n  };\n\n  // Xử lý thay đổi ngày bắt đầu\n  const handleStartDateChange = e => {\n    const startDate = e.target.value;\n\n    // Lấy thứ từ ngày bắt đầu\n    const dayOfWeek = getDayOfWeekFromDate(startDate);\n\n    // Cập nhật lịch học với thứ mới\n    const updatedSchedule = [{\n      day_of_week: dayOfWeek,\n      start_period: 1,\n      end_period: 2,\n      start_time: \"07:00\",\n      end_time: \"08:40\",\n      room_id: editClassData.room_id,\n      is_recurring: true,\n      specific_dates: [],\n      excluded_dates: []\n    }];\n\n    // Cập nhật lịch học\n    setScheduleDays(updatedSchedule);\n\n    // Cập nhật ngày bắt đầu và tính ngày kết thúc\n    setEditClassData(prev => ({\n      ...prev,\n      course_start_date: startDate,\n      course_end_date: calculateEndDate(startDate, updatedSchedule, prev.total_sessions)\n    }));\n  };\n\n  // Xử lý thay đổi số buổi học\n  const handleTotalSessionsChange = e => {\n    const totalSessions = e.target.value;\n    setEditClassData(prev => ({\n      ...prev,\n      total_sessions: totalSessions,\n      // Tính lại ngày kết thúc khi thay đổi số buổi học\n      course_end_date: calculateEndDate(prev.course_start_date, scheduleDays, totalSessions)\n    }));\n  };\n\n  // Thêm phần render cảnh báo xung đột lịch\n  const renderConflictWarnings = () => {\n    if (conflictWarnings.length === 0) {\n      return null;\n    }\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"warning\",\n      sx: {\n        mt: 2,\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n        children: \"Ph\\xE1t hi\\u1EC7n xung \\u0111\\u1ED9t l\\u1ECBch h\\u1ECDc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1437,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        dense: true,\n        children: conflictWarnings.map((conflict, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: conflict.type === \"teacher\" ? /*#__PURE__*/_jsxDEV(Person, {\n              color: \"error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1443,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Room, {\n              color: \"error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1445,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1441,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: conflict.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1448,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1440,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1438,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1436,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3,\n      bgcolor: \"grey.50\",\n      minHeight: \"100vh\"\n    },\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1460,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1459,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          sx: {\n            fontWeight: \"bold\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(School, {\n            sx: {\n              mr: 1,\n              verticalAlign: \"middle\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1466,\n            columnNumber: 15\n          }, this), (classInfo === null || classInfo === void 0 ? void 0 : classInfo.class_name) || \"Chi tiết lớp học\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1465,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: () => setEditMode(true),\n            disabled: editMode || isLoading,\n            startIcon: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1475,\n              columnNumber: 28\n            }, this),\n            sx: {\n              mr: 1\n            },\n            children: \"Ch\\u1EC9nh s\\u1EEDa l\\u1EDBp h\\u1ECDc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1470,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1469,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1464,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 3,\n          mb: 3,\n          borderRadius: 2,\n          boxShadow: 3\n        },\n        elevation: 3,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 3,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              sx: {\n                color: \"text.secondary\",\n                mb: 1\n              },\n              children: \"M\\xE3 l\\u1EDBp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1490,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                fontWeight: \"medium\"\n              },\n              children: (classInfo === null || classInfo === void 0 ? void 0 : classInfo.class_code) || \"Không có\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1496,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1489,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 3,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              sx: {\n                color: \"text.secondary\",\n                mb: 1\n              },\n              children: \"M\\xF4n h\\u1ECDc\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1501,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                fontWeight: \"medium\"\n              },\n              children: (classInfo === null || classInfo === void 0 ? void 0 : (_classInfo$subject_id2 = classInfo.subject_id) === null || _classInfo$subject_id2 === void 0 ? void 0 : _classInfo$subject_id2.name) || \"Không xác định\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1507,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1500,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 3,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              sx: {\n                color: \"text.secondary\",\n                mb: 1\n              },\n              children: \"K\\u1EF3 h\\u1ECDc\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1512,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              label: classInfo !== null && classInfo !== void 0 && (_classInfo$semester_i2 = classInfo.semester_id) !== null && _classInfo$semester_i2 !== void 0 && _classInfo$semester_i2.name ? `${classInfo.semester_id.name} (${classInfo.semester_id.academic_year || classInfo.semester_id.year})` : \"Không xác định\",\n              color: \"primary\",\n              variant: \"outlined\",\n              size: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1518,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1511,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 3,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              sx: {\n                color: \"text.secondary\",\n                mb: 1\n              },\n              children: \"L\\u1EDBp ch\\xEDnh\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1533,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              label: (classInfo === null || classInfo === void 0 ? void 0 : (_classInfo$main_class2 = classInfo.main_class_id) === null || _classInfo$main_class2 === void 0 ? void 0 : _classInfo$main_class2.name) || \"Không thuộc lớp chính nào\",\n              color: \"info\",\n              variant: classInfo !== null && classInfo !== void 0 && classInfo.main_class_id ? \"filled\" : \"outlined\",\n              size: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1539,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1532,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 3,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              sx: {\n                color: \"text.secondary\",\n                mb: 1\n              },\n              children: \"Gi\\u1EA3ng vi\\xEAn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1550,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                fontWeight: \"medium\"\n              },\n              children: (classInfo === null || classInfo === void 0 ? void 0 : (_classInfo$teacher_id2 = classInfo.teacher_id) === null || _classInfo$teacher_id2 === void 0 ? void 0 : _classInfo$teacher_id2.full_name) || \"Không xác định\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1556,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1549,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 3,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              sx: {\n                color: \"text.secondary\",\n                mb: 1\n              },\n              children: \"Ng\\xE0y b\\u1EAFt \\u0111\\u1EA7u - K\\u1EBFt th\\xFAc\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1561,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                fontWeight: \"medium\"\n              },\n              children: [classInfo !== null && classInfo !== void 0 && classInfo.course_start_date ? new Date(classInfo.course_start_date).toLocaleDateString(\"vi-VN\") : \"N/A\", \" \", \"-\", \" \", classInfo !== null && classInfo !== void 0 && classInfo.course_end_date ? new Date(classInfo.course_end_date).toLocaleDateString(\"vi-VN\") : \"N/A\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1567,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1560,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 3,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              sx: {\n                color: \"text.secondary\",\n                mb: 1\n              },\n              children: \"S\\u1ED1 bu\\u1ED5i h\\u1ECDc\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1582,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                fontWeight: \"medium\"\n              },\n              children: (classInfo === null || classInfo === void 0 ? void 0 : classInfo.total_sessions) || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1588,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1581,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 3,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              sx: {\n                color: \"text.secondary\",\n                mb: 1\n              },\n              children: \"S\\u1ED1 l\\u01B0\\u1EE3ng sinh vi\\xEAn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1593,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                fontWeight: \"medium\"\n              },\n              children: Array.isArray(classInfo === null || classInfo === void 0 ? void 0 : classInfo.students) ? classInfo.students.length : 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1599,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1592,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1488,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1484,\n        columnNumber: 11\n      }, this), editMode && renderConflictWarnings(), editMode && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3,\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: () => {\n            var _classInfo$schedule;\n            setEditMode(false);\n            setEditClassData({\n              ...classInfo\n            });\n            setScheduleDays(((_classInfo$schedule = classInfo.schedule) === null || _classInfo$schedule === void 0 ? void 0 : _classInfo$schedule.map(item => ({\n              ...item\n            }))) || []);\n            setConflictWarnings([]); // Xóa cảnh báo khi hủy\n          },\n          disabled: isUpdating || checkingConflicts,\n          children: \"H\\u1EE7y\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1621,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleUpdateClass,\n          disabled: isUpdating || checkingConflicts,\n          startIcon: isUpdating || checkingConflicts ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1641,\n            columnNumber: 21\n          }, this) : null,\n          children: isUpdating ? \"Đang cập nhật...\" : checkingConflicts ? \"Đang kiểm tra...\" : \"Lưu thay đổi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1635,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1613,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: \"100%\",\n          mt: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            borderBottom: 1,\n            borderColor: \"divider\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Tabs, {\n            value: tabValue,\n            onChange: handleChangeTab,\n            \"aria-label\": \"class tabs\",\n            variant: \"scrollable\",\n            scrollButtons: \"auto\",\n            children: [/*#__PURE__*/_jsxDEV(Tab, {\n              label: \"L\\u1ECBch h\\u1ECDc\",\n              ...a11yProps(0),\n              icon: /*#__PURE__*/_jsxDEV(Event, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1667,\n                columnNumber: 25\n              }, this),\n              iconPosition: \"start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1664,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Bu\\u1ED5i \\u0111i\\u1EC3m danh\",\n              ...a11yProps(1),\n              icon: /*#__PURE__*/_jsxDEV(CalendarToday, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1673,\n                columnNumber: 25\n              }, this),\n              iconPosition: \"start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1670,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Sinh vi\\xEAn\",\n              ...a11yProps(2),\n              icon: /*#__PURE__*/_jsxDEV(School, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1679,\n                columnNumber: 25\n              }, this),\n              iconPosition: \"start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1676,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Th\\u1ED1ng k\\xEA\",\n              ...a11yProps(3),\n              icon: /*#__PURE__*/_jsxDEV(Info, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1685,\n                columnNumber: 25\n              }, this),\n              iconPosition: \"start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1682,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              label: \"C\\u1EA5u h\\xECnh\",\n              ...a11yProps(4),\n              icon: /*#__PURE__*/_jsxDEV(Settings, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1691,\n                columnNumber: 25\n              }, this),\n              iconPosition: \"start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1688,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1657,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1656,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1655,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1457,\n    columnNumber: 5\n  }, this);\n};\n_s(TeacherClassDetailPage, \"75tOdWRFf+52OjAauCmVhHg4Utw=\", false, function () {\n  return [useParams, useNavigate, useSnackbar, useSelector];\n});\n_c2 = TeacherClassDetailPage;\nexport default TeacherClassDetailPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"TeacherClassDetailPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","useNavigate","useSelector","useSnackbar","axios","Box","Typography","Card","CardContent","Grid","Paper","Button","Tabs","Tab","CircularProgress","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Chip","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","TextField","FormControl","InputLabel","Select","MenuItem","List","ListItem","ListItemText","ListItemSecondaryAction","Divider","Alert","Tooltip","Checkbox","FormHelperText","AlertTitle","ListItemIcon","PersonAdd","Delete","Add","Edit","PlayArrow","Stop","CheckCircle","Warning","Info","CalendarToday","AccessTime","Download","School","Settings","Event","Person","Room","getTeachingClassById","updateTeachingClass","checkScheduleConflicts","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","process","env","REACT_APP_API_URL","a11yProps","index","id","TabPanel","props","children","value","other","role","hidden","sx","p","fileName","_jsxFileName","lineNumber","columnNumber","_c","TeacherClassDetailPage","_s","_classInfo$subject_id2","_classInfo$semester_i2","_classInfo$main_class2","_classInfo$teacher_id2","classId","navigate","enqueueSnackbar","token","state","auth","classInfo","setClassInfo","students","setStudents","attendanceSessions","setAttendanceSessions","attendanceStats","setAttendanceStats","total","pending","completed","isLoading","setIsLoading","editMode","setEditMode","isUpdating","setIsUpdating","tabValue","setTabValue","openSessionDialog","setOpenSessionDialog","sessionFormData","setSessionFormData","title","date","Date","toISOString","split","start_time","end_time","room","start_period","end_period","notes","openAddStudentDialog","setOpenAddStudentDialog","availableStudents","setAvailableStudents","selectedStudents","setSelectedStudents","searchStudent","setSearchStudent","mainClasses","setMainClasses","selectedMainClass","setSelectedMainClass","isLoadingStudents","setIsLoadingStudents","openEditClassDialog","setOpenEditClassDialog","editClassData","setEditClassData","isSubmittingEdit","setIsSubmittingEdit","subjects","setSubjects","semesters","setSemesters","rooms","setRooms","campuses","setCampuses","buildings","setBuildings","selectedCampus","setSelectedCampus","selectedBuilding","setSelectedBuilding","scheduleDays","setScheduleDays","conflictWarnings","setConflictWarnings","checkingConflicts","setCheckingConflicts","fetchRooms","buildingId","url","response","get","headers","Authorization","data","success","Array","isArray","console","error","variant","fetchClassData","_sessionsResponse$dat","_sessionsResponse$dat2","classResponse","Accept","sessionsResponse","stats","length","forEach","session","status","studentsResponse","studentsWithBasicInfo","detailedStudents","Promise","all","map","student","studentDetailResponse","_id","detailedInfo","hasFaceData","faceFeatures","descriptors","has_face_data","_error$response$data","message","handleChangeTab","event","newValue","handleOpenSessionDialog","handleCloseSessionDialog","handleSessionFormChange","e","name","target","prev","handleCreateSession","sessionData","teaching_class_id","parseInt","post","_error$response","_error$response$data2","handleUpdateSession","put","_error$response2","_error$response2$data","handleStartSession","sessionId","find","s","handleOpenAddStudentDialog","_mainClassResponse$da","mainClassResponse","handleMainClassChange","mainClassId","_studentsResponse$dat","currentStudentIds","filteredStudents","filter","includes","handleCloseAddStudentDialog","handleSelectStudent","studentId","handleAddStudents","student_ids","_error$response$data3","handleRemoveStudent","window","confirm","delete","handleExportStudentList","studentsData","_student$school_info","STT","school_info","student_id","full_name","Email","email","header","csvContent","join","row","encodedUri","encodeURI","link","document","createElement","setAttribute","class_name","body","appendChild","click","removeChild","filteredAvailableStudents","_student$school_info2","_student$school_info3","toLowerCase","fetchReferenceDataForEdit","subjectsRes","semestersRes","mainClassesRes","campusesRes","roomDetails","building_id","_room$building_id$cam","_room$building_id$cam2","campus_id","buildingsRes","roomsRes","fetchBuildings","campusId","handleOpenEditClassDialog","_classInfo$subject_id","_classInfo$main_class","_classInfo$semester_i","_classInfo$room","class_code","subject_id","main_class_id","semester_id","total_sessions","room_id","course_start_date","course_end_date","auto_generate_sessions","schedule","_classInfo$room2","dayOfWeek","getDayOfWeekFromDate","day_of_week","is_recurring","specific_dates","excluded_dates","handleCloseEditClassDialog","handleEditClassChange","handleCampusChange","handleBuildingChange","checkConflicts","scheduleToCheck","_classInfo$teacher_id","teacher_id","some","day","class_id","has_conflicts","conflicts","handleScheduleChange","field","updatedSchedule","calculateEndDate","setTimeout","undefined","handleUpdateClass","getDayOfWeekName","c","updateClassData","updateData","createdAt","updatedAt","_error$response3","_error$response3$data","dateString","getDay","days","addScheduleDay","startDate","baseDayOfWeek","existingDays","nextDay","i","removeScheduleDay","_","totalSessions","start","isNaN","getTime","sessionsPerWeek","weeksNeeded","Math","ceil","daysOfWeek","sort","a","b","currentDate","sessionCount","week","dayIndex","targetDayOfWeek","setDate","getDate","handleStartDateChange","handleTotalSessionsChange","renderConflictWarnings","severity","mt","mb","dense","conflict","type","color","primary","bgcolor","minHeight","display","justifyContent","gutterBottom","fontWeight","mr","verticalAlign","onClick","disabled","startIcon","borderRadius","boxShadow","elevation","container","spacing","item","xs","sm","md","label","academic_year","year","size","toLocaleDateString","gap","_classInfo$schedule","width","borderBottom","borderColor","onChange","scrollButtons","icon","iconPosition","_c2","$RefreshReg$"],"sources":["C:/Users/kasiz/Documents/Studying/FaceReg/frontend/src/pages/teacher/ClassDetailPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { useSnackbar } from \"notistack\";\nimport axios from \"axios\";\nimport {\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  Grid,\n  Paper,\n  Button,\n  Tabs,\n  Tab,\n  CircularProgress,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Chip,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  Divider,\n  Alert,\n  Tooltip,\n  Checkbox,\n  FormHelperText,\n  AlertTitle,\n  ListItemIcon,\n} from \"@mui/material\";\nimport {\n  PersonAdd,\n  Delete,\n  Add,\n  Edit,\n  PlayArrow,\n  Stop,\n  CheckCircle,\n  Warning,\n  Info,\n  CalendarToday,\n  AccessTime,\n  Download,\n  School,\n  Settings,\n  Event,\n  Person,\n  Room,\n} from \"@mui/icons-material\";\nimport {\n  getTeachingClassById,\n  updateTeachingClass,\n  checkScheduleConflicts,\n} from \"../../services/api\";\n\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\n\nfunction a11yProps(index) {\n  return {\n    id: `class-tab-${index}`,\n    \"aria-controls\": `class-tabpanel-${index}`,\n  };\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`class-tabpanel-${index}`}\n      aria-labelledby={`class-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\n    </div>\n  );\n}\n\nconst TeacherClassDetailPage = () => {\n  const { classId } = useParams();\n  const id = classId; // Đảm bảo sử dụng đúng tên param\n  const navigate = useNavigate();\n  const { enqueueSnackbar } = useSnackbar();\n  const { token } = useSelector((state) => state.auth);\n\n  // State cho dữ liệu\n  const [classInfo, setClassInfo] = useState(null);\n  const [students, setStudents] = useState([]);\n  const [attendanceSessions, setAttendanceSessions] = useState([]);\n  const [attendanceStats, setAttendanceStats] = useState({\n    total: 0,\n    pending: 0,\n    completed: 0,\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [editMode, setEditMode] = useState(false);\n  const [isUpdating, setIsUpdating] = useState(false);\n\n  // State cho UI\n  const [tabValue, setTabValue] = useState(0);\n  const [openSessionDialog, setOpenSessionDialog] = useState(false);\n  const [sessionFormData, setSessionFormData] = useState({\n    title: \"\",\n    date: new Date().toISOString().split(\"T\")[0],\n    start_time: \"07:00\",\n    end_time: \"08:40\",\n    room: \"\",\n    start_period: 1,\n    end_period: 2,\n    notes: \"\",\n  });\n\n  // State cho thêm sinh viên\n  const [openAddStudentDialog, setOpenAddStudentDialog] = useState(false);\n  const [availableStudents, setAvailableStudents] = useState([]);\n  const [selectedStudents, setSelectedStudents] = useState([]);\n  const [searchStudent, setSearchStudent] = useState(\"\");\n  const [mainClasses, setMainClasses] = useState([]);\n  const [selectedMainClass, setSelectedMainClass] = useState(\"\");\n  const [isLoadingStudents, setIsLoadingStudents] = useState(false);\n\n  // State cho chỉnh sửa thông tin lớp học\n  const [openEditClassDialog, setOpenEditClassDialog] = useState(false);\n  const [editClassData, setEditClassData] = useState(null);\n  const [isSubmittingEdit, setIsSubmittingEdit] = useState(false);\n  const [subjects, setSubjects] = useState([]);\n  const [semesters, setSemesters] = useState([]);\n\n  // Thêm state để lưu danh sách phòng học\n  const [rooms, setRooms] = useState([]);\n  const [campuses, setCampuses] = useState([]);\n  const [buildings, setBuildings] = useState([]);\n  const [selectedCampus, setSelectedCampus] = useState(\"\");\n  const [selectedBuilding, setSelectedBuilding] = useState(\"\");\n\n  // Thêm state để quản lý lịch học\n  const [scheduleDays, setScheduleDays] = useState([]);\n\n  // Thêm state để lưu cảnh báo xung đột lịch\n  const [conflictWarnings, setConflictWarnings] = useState([]);\n  const [checkingConflicts, setCheckingConflicts] = useState(false);\n\n  // Thêm hàm fetch danh sách phòng học\n  const fetchRooms = async (buildingId) => {\n    try {\n      let url = `${API_URL}/facilities/rooms`;\n\n      // Nếu có buildingId, tải phòng theo tòa nhà\n      if (buildingId) {\n        url = `${API_URL}/facilities/rooms/building/${buildingId}`;\n      } else {\n        // Nếu không có buildingId, tải tất cả phòng\n        url = `${API_URL}/facilities/rooms?limit=1000`;\n      }\n\n      const response = await axios.get(url, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n\n      // console.log(\"Dữ liệu phòng học từ API:\", response.data);\n\n      if (response.data.success && Array.isArray(response.data.data)) {\n        // Lưu trữ dữ liệu phòng học và ghi log để kiểm tra\n        setRooms(response.data.data);\n        // console.log(\"Đã cập nhật state rooms:\", response.data.data);\n      } else {\n        setRooms([]);\n        console.error(\n          \"API không trả về dữ liệu phòng học hợp lệ:\",\n          response.data\n        );\n        enqueueSnackbar(\n          \"Không thể tải danh sách phòng học (dữ liệu không hợp lệ)\",\n          { variant: \"warning\" }\n        );\n      }\n    } catch (error) {\n      console.error(\"Lỗi khi tải danh sách phòng học:\", error);\n      enqueueSnackbar(\"Không thể tải danh sách phòng học\", {\n        variant: \"error\",\n      });\n      setRooms([]);\n    }\n  };\n\n  // Load dữ liệu ban đầu\n  const fetchClassData = useCallback(async () => {\n    try {\n      setIsLoading(true);\n\n      // Kiểm tra id có tồn tại không\n      if (!id) {\n        enqueueSnackbar(\"ID lớp học không hợp lệ\", { variant: \"error\" });\n        navigate(\"/teacher/classes\");\n        return;\n      }\n\n      // Lấy thông tin lớp học\n      const classResponse = await axios.get(\n        `${API_URL}/classes/teaching/${id}`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            Accept: \"application/json\",\n          },\n        }\n      );\n\n      // Log dữ liệu để xem cấu trúc\n      // console.log(\"Dữ liệu lớp học nhận về:\", classResponse.data);\n\n      // Kiểm tra nếu không có dữ liệu trả về\n      if (!classResponse.data.success || !classResponse.data.data) {\n        enqueueSnackbar(\"Không tìm thấy thông tin lớp học\", {\n          variant: \"error\",\n        });\n        navigate(\"/teacher/classes\");\n        return;\n      }\n\n      setClassInfo(classResponse.data.data);\n\n      // Fetch rooms right after setting class info to ensure it's done before rendering\n      await fetchRooms();\n\n      // Lấy danh sách phiên điểm danh\n      const sessionsResponse = await axios.get(\n        `${API_URL}/attendance/teaching-class/${id}/sessions`,\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      setAttendanceSessions(sessionsResponse.data.data || []);\n\n      // Tính toán thống kê điểm danh\n      const stats = {\n        total: sessionsResponse.data.data?.length || 0,\n        pending: 0,\n        completed: 0,\n      };\n\n      sessionsResponse.data.data?.forEach((session) => {\n        if (session.status === \"completed\") {\n          stats.completed++;\n        } else {\n          stats.pending++;\n        }\n      });\n\n      setAttendanceStats(stats);\n\n      // Vì API getClassStudents không trả về đầy đủ thông tin, chúng ta sẽ lấy chi tiết từng sinh viên\n      if (\n        classResponse.data.data.students &&\n        classResponse.data.data.students.length > 0\n      ) {\n        try {\n          // Lấy danh sách sinh viên cơ bản\n          const studentsResponse = await axios.get(\n            `${API_URL}/classes/teaching/${id}/students`,\n            {\n              headers: {\n                Authorization: `Bearer ${token}`,\n                Accept: \"application/json\",\n              },\n            }\n          );\n\n          // console.log(\"Dữ liệu sinh viên cơ bản:\", studentsResponse.data);\n\n          // Lưu danh sách sinh viên cơ bản trước\n          let studentsWithBasicInfo = [];\n          if (studentsResponse.data.success && studentsResponse.data.data) {\n            studentsWithBasicInfo = studentsResponse.data.data;\n          } else {\n            studentsWithBasicInfo = classResponse.data.data.students || [];\n          }\n\n          // Lấy chi tiết cho từng sinh viên (bao gồm faceFeatures)\n          const detailedStudents = await Promise.all(\n            studentsWithBasicInfo.map(async (student) => {\n              try {\n                // Gọi API để lấy thông tin chi tiết của sinh viên\n                const studentDetailResponse = await axios.get(\n                  `${API_URL}/users/${student._id}`,\n                  {\n                    headers: {\n                      Authorization: `Bearer ${token}`,\n                      Accept: \"application/json\",\n                    },\n                  }\n                );\n\n                // console.log(\n                //   `Thông tin chi tiết của sinh viên ${student.full_name}:`,\n                //   studentDetailResponse.data\n                // );\n\n                if (\n                  studentDetailResponse.data.success &&\n                  studentDetailResponse.data.data\n                ) {\n                  // Kết hợp dữ liệu từ API chi tiết sinh viên với dữ liệu cơ bản\n                  const detailedInfo = studentDetailResponse.data.data;\n\n                  // Kiểm tra dữ liệu khuôn mặt\n                  const hasFaceData = !!(\n                    detailedInfo.faceFeatures &&\n                    detailedInfo.faceFeatures.descriptors &&\n                    detailedInfo.faceFeatures.descriptors.length > 0\n                  );\n\n                  // console.log(\n                  //   `Sinh viên ${detailedInfo.full_name} có dữ liệu khuôn mặt: ${hasFaceData}`\n                  // );\n\n                  return {\n                    ...student,\n                    ...detailedInfo,\n                    has_face_data: hasFaceData,\n                  };\n                } else {\n                  // Nếu không lấy được chi tiết, sử dụng thông tin cơ bản\n                  return {\n                    ...student,\n                    has_face_data: false,\n                  };\n                }\n              } catch (error) {\n                console.error(\n                  `Lỗi khi lấy thông tin chi tiết của sinh viên ${student._id}:`,\n                  error\n                );\n                return {\n                  ...student,\n                  has_face_data: false,\n                };\n              }\n            })\n          );\n\n          setStudents(detailedStudents);\n        } catch (error) {\n          console.error(\"Lỗi khi lấy danh sách sinh viên:\", error);\n          // Sử dụng danh sách cơ bản nếu có lỗi\n          setStudents(classResponse.data.data.students || []);\n        }\n      } else {\n        setStudents([]);\n      }\n    } catch (error) {\n      console.error(\"Lỗi khi tải dữ liệu lớp học:\", error);\n      // Xử lý các loại lỗi từ API\n      if (error.response) {\n        // Nếu máy chủ phản hồi với mã lỗi\n        if (error.response.status === 404) {\n          enqueueSnackbar(\"Không tìm thấy lớp học với ID đã cho\", {\n            variant: \"error\",\n          });\n        } else if (error.response.status === 400) {\n          enqueueSnackbar(\"ID lớp học không hợp lệ\", { variant: \"error\" });\n        } else {\n          enqueueSnackbar(\n            error.response.data?.message || \"Lỗi khi tải dữ liệu lớp học\",\n            { variant: \"error\" }\n          );\n        }\n      } else {\n        enqueueSnackbar(\"Không thể kết nối đến máy chủ\", { variant: \"error\" });\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  }, [id, token, enqueueSnackbar, navigate]);\n\n  useEffect(() => {\n    fetchClassData();\n  }, [fetchClassData]);\n\n  // Thay đổi tab\n  const handleChangeTab = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  // Mở dialog tạo phiên điểm danh\n  const handleOpenSessionDialog = () => {\n    // Tải danh sách phòng học\n    fetchRooms();\n\n    setSessionFormData({\n      title: `Buổi học ${attendanceSessions.length + 1}`,\n      date: new Date().toISOString().split(\"T\")[0],\n      start_time: \"07:00\",\n      end_time: \"08:40\",\n      room: \"\",\n      start_period: 1,\n      end_period: 2,\n      notes: \"\",\n    });\n    setOpenSessionDialog(true);\n  };\n\n  // Đóng dialog tạo phiên điểm danh\n  const handleCloseSessionDialog = () => {\n    setOpenSessionDialog(false);\n  };\n\n  // Cập nhật form dữ liệu phiên điểm danh\n  const handleSessionFormChange = (e) => {\n    const { name, value } = e.target;\n    setSessionFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  // Tạo phiên điểm danh mới\n  const handleCreateSession = async () => {\n    try {\n      const {\n        title,\n        date,\n        start_time,\n        end_time,\n        room,\n        start_period,\n        end_period,\n        notes,\n      } = sessionFormData;\n\n      // Kiểm tra dữ liệu\n      if (!date || !start_time || !end_time) {\n        enqueueSnackbar(\"Vui lòng điền đầy đủ thông tin\", { variant: \"error\" });\n        return;\n      }\n\n      // Tạo đối tượng để gửi lên API\n      const sessionData = {\n        title,\n        date,\n        start_time,\n        end_time,\n        teaching_class_id: id,\n        start_period: parseInt(start_period, 10) || 1,\n        end_period: parseInt(end_period, 10) || 2,\n        notes,\n      };\n\n      // Thêm room nếu có\n      if (room) {\n        sessionData.room = room;\n      }\n\n      const response = await axios.post(\n        `${API_URL}/attendance/sessions`,\n        sessionData,\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n\n      enqueueSnackbar(\"Tạo phiên điểm danh thành công\", {\n        variant: \"success\",\n      });\n      setOpenSessionDialog(false);\n\n      // Cập nhật danh sách phiên\n      setAttendanceSessions((prev) => [...prev, response.data.data]);\n      setAttendanceStats((prev) => ({\n        ...prev,\n        total: prev.total + 1,\n        pending: prev.pending + 1,\n      }));\n    } catch (error) {\n      console.error(\"Lỗi khi tạo phiên điểm danh:\", error);\n      enqueueSnackbar(\n        error.response?.data?.message || \"Lỗi khi tạo phiên điểm danh\",\n        { variant: \"error\" }\n      );\n    }\n  };\n\n  // Cập nhật phiên điểm danh\n  const handleUpdateSession = async () => {\n    try {\n      const {\n        _id,\n        title,\n        date,\n        start_time,\n        end_time,\n        room,\n        start_period,\n        end_period,\n        notes,\n      } = sessionFormData;\n\n      // Kiểm tra dữ liệu\n      if (!date || !start_time || !end_time) {\n        enqueueSnackbar(\"Vui lòng điền đầy đủ thông tin\", { variant: \"error\" });\n        return;\n      }\n\n      // Tạo đối tượng để gửi lên API\n      const sessionData = {\n        title,\n        date,\n        start_time,\n        end_time,\n        start_period: parseInt(start_period, 10) || 1,\n        end_period: parseInt(end_period, 10) || 2,\n        notes,\n      };\n\n      // Thêm room nếu có\n      if (room) {\n        sessionData.room = room;\n      }\n\n      // Gọi API cập nhật\n      const response = await axios.put(\n        `${API_URL}/attendance/sessions/${_id}`,\n        sessionData,\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n\n      enqueueSnackbar(\"Cập nhật phiên điểm danh thành công\", {\n        variant: \"success\",\n      });\n      setOpenSessionDialog(false);\n\n      // Cập nhật danh sách phiên\n      setAttendanceSessions((prev) =>\n        prev.map((session) =>\n          session._id === _id ? response.data.data : session\n        )\n      );\n    } catch (error) {\n      console.error(\"Lỗi khi cập nhật phiên điểm danh:\", error);\n      enqueueSnackbar(\n        error.response?.data?.message || \"Lỗi khi cập nhật phiên điểm danh\",\n        { variant: \"error\" }\n      );\n    }\n  };\n\n  // Bắt đầu phiên điểm danh\n  const handleStartSession = async (sessionId) => {\n    try {\n      // Kiểm tra tính hợp lệ của session\n      if (!sessionId) {\n        enqueueSnackbar(\"ID phiên điểm danh không hợp lệ\", {\n          variant: \"error\",\n        });\n        return;\n      }\n\n      // Kiểm tra trạng thái phiên điểm danh\n      const session = attendanceSessions.find((s) => s._id === sessionId);\n      if (!session) {\n        enqueueSnackbar(\"Không tìm thấy thông tin phiên điểm danh\", {\n          variant: \"error\",\n        });\n        return;\n      }\n\n      // Nếu phiên chưa bắt đầu hoặc đang ở trạng thái pending, cập nhật trạng thái thành active\n      if (session.status === \"pending\") {\n        try {\n          await axios.put(\n            `${API_URL}/attendance/sessions/${sessionId}/status`,\n            { status: \"active\" },\n            { headers: { Authorization: `Bearer ${token}` } }\n          );\n\n          // Cập nhật lại trạng thái trong state\n          setAttendanceSessions((prev) =>\n            prev.map((s) =>\n              s._id === sessionId ? { ...s, status: \"active\" } : s\n            )\n          );\n        } catch (error) {\n          console.error(\"Lỗi khi cập nhật trạng thái phiên:\", error);\n          // Vẫn tiếp tục điều hướng dù có lỗi\n        }\n      }\n\n      enqueueSnackbar(`Đang chuyển đến trang điểm danh`, { variant: \"info\" });\n      navigate(`/teacher/attendance/${id}/${sessionId}`);\n    } catch (error) {\n      console.error(\"Lỗi khi bắt đầu phiên điểm danh:\", error);\n      enqueueSnackbar(\"Có lỗi xảy ra khi bắt đầu phiên điểm danh\", {\n        variant: \"error\",\n      });\n    }\n  };\n\n  // Mở dialog thêm sinh viên\n  const handleOpenAddStudentDialog = async () => {\n    try {\n      setIsLoadingStudents(true);\n      // Lấy danh sách lớp chính\n      const mainClassResponse = await axios.get(\n        `${API_URL}/classes/main?all=true`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            Accept: \"application/json\",\n          },\n        }\n      );\n\n      // console.log(\"Danh sách lớp chính:\", mainClassResponse.data);\n\n      if (!mainClassResponse.data?.data) {\n        enqueueSnackbar(\"Không thể tải danh sách lớp chính\", {\n          variant: \"error\",\n        });\n        return;\n      }\n\n      setMainClasses(mainClassResponse.data.data || []);\n      setAvailableStudents([]);\n      setSelectedStudents([]);\n      setSelectedMainClass(\"\");\n      setOpenAddStudentDialog(true);\n    } catch (error) {\n      console.error(\"Lỗi khi tải danh sách lớp chính:\", error);\n      enqueueSnackbar(\n        \"Không thể tải danh sách lớp chính. Vui lòng thử lại sau.\",\n        { variant: \"error\" }\n      );\n    } finally {\n      setIsLoadingStudents(false);\n    }\n  };\n\n  // Lấy danh sách sinh viên từ lớp chính\n  const handleMainClassChange = async (e) => {\n    const mainClassId = e.target.value;\n    setSelectedMainClass(mainClassId);\n\n    if (!mainClassId) {\n      setAvailableStudents([]);\n      return;\n    }\n\n    try {\n      setIsLoadingStudents(true);\n      const studentsResponse = await axios.get(\n        `${API_URL}/classes/main/${mainClassId}/approved-students`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            Accept: \"application/json\",\n          },\n        }\n      );\n\n      // console.log(\"Danh sách sinh viên lớp chính:\", studentsResponse.data);\n\n      if (!studentsResponse.data?.data) {\n        enqueueSnackbar(\"Không thể tải danh sách sinh viên từ lớp chính\", {\n          variant: \"error\",\n        });\n        return;\n      }\n\n      // Lọc sinh viên chưa có trong lớp\n      const currentStudentIds = students.map((s) => s._id);\n      const filteredStudents = studentsResponse.data.data.students.filter(\n        (s) => !currentStudentIds.includes(s._id)\n      );\n\n      setAvailableStudents(filteredStudents);\n    } catch (error) {\n      console.error(\"Lỗi khi tải danh sách sinh viên từ lớp chính:\", error);\n      enqueueSnackbar(\"Không thể tải danh sách sinh viên từ lớp chính\", {\n        variant: \"error\",\n      });\n      setAvailableStudents([]);\n    } finally {\n      setIsLoadingStudents(false);\n    }\n  };\n\n  // Đóng dialog thêm sinh viên\n  const handleCloseAddStudentDialog = () => {\n    setOpenAddStudentDialog(false);\n  };\n\n  // Xử lý chọn sinh viên để thêm\n  const handleSelectStudent = (studentId) => {\n    if (selectedStudents.includes(studentId)) {\n      setSelectedStudents(selectedStudents.filter((id) => id !== studentId));\n    } else {\n      setSelectedStudents([...selectedStudents, studentId]);\n    }\n  };\n\n  // Thêm sinh viên vào lớp\n  const handleAddStudents = async () => {\n    try {\n      if (selectedStudents.length === 0) {\n        enqueueSnackbar(\"Vui lòng chọn ít nhất một sinh viên\", {\n          variant: \"warning\",\n        });\n        return;\n      }\n\n      // Gọi API thêm sinh viên\n      await axios.post(\n        `${API_URL}/classes/teaching/${id}/students/batch`,\n        {\n          student_ids: selectedStudents,\n        },\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n\n      enqueueSnackbar(`Đã thêm ${selectedStudents.length} sinh viên vào lớp`, {\n        variant: \"success\",\n      });\n      setOpenAddStudentDialog(false);\n\n      // Cập nhật lại danh sách sinh viên\n      fetchClassData();\n    } catch (error) {\n      console.error(\"Lỗi khi thêm sinh viên:\", error);\n\n      if (error.response) {\n        enqueueSnackbar(\n          `Lỗi: ${error.response.status} - ${\n            error.response.data?.message || \"Không thể thêm sinh viên\"\n          }`,\n          { variant: \"error\" }\n        );\n      } else {\n        enqueueSnackbar(\"Lỗi kết nối khi thêm sinh viên vào lớp\", {\n          variant: \"error\",\n        });\n      }\n    }\n  };\n\n  // Xóa sinh viên khỏi lớp\n  const handleRemoveStudent = async (studentId) => {\n    if (\n      !window.confirm(\"Bạn có chắc chắn muốn xóa sinh viên này khỏi lớp không?\")\n    ) {\n      return;\n    }\n\n    try {\n      await axios.delete(\n        `${API_URL}/classes/teaching/${id}/students/${studentId}`,\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n\n      enqueueSnackbar(\"Đã xóa sinh viên khỏi lớp\", { variant: \"success\" });\n\n      // Cập nhật lại danh sách sinh viên\n      setStudents(students.filter((s) => s._id !== studentId));\n    } catch (error) {\n      console.error(\"Lỗi khi xóa sinh viên:\", error);\n      enqueueSnackbar(\"Lỗi khi xóa sinh viên khỏi lớp\", { variant: \"error\" });\n    }\n  };\n\n  // Xuất danh sách sinh viên\n  const handleExportStudentList = () => {\n    try {\n      const studentsData = students.map((student, index) => {\n        // Kiểm tra có face data từ cả hai nguồn có thể\n        const hasFaceData =\n          student.has_face_data ||\n          !!(\n            student.faceFeatures &&\n            student.faceFeatures.descriptors &&\n            student.faceFeatures.descriptors.length > 0\n          );\n\n        return {\n          STT: index + 1,\n          \"Mã SV\": student.school_info?.student_id || \"N/A\",\n          \"Họ và tên\": student.full_name || student.name,\n          Email: student.email,\n          \"Đăng ký khuôn mặt\": hasFaceData ? \"Đã đăng ký\" : \"Chưa đăng ký\",\n        };\n      });\n\n      const header = [\n        \"STT\",\n        \"Mã SV\",\n        \"Họ và tên\",\n        \"Email\",\n        \"Đăng ký khuôn mặt\",\n      ];\n      const csvContent =\n        \"data:text/csv;charset=utf-8,\" +\n        [\n          header.join(\",\"),\n          ...studentsData.map((row) =>\n            [\n              row.STT,\n              row[\"Mã SV\"],\n              row[\"Họ và tên\"],\n              row.Email,\n              row[\"Đăng ký khuôn mặt\"],\n            ].join(\",\")\n          ),\n        ].join(\"\\n\");\n\n      const encodedUri = encodeURI(csvContent);\n      const link = document.createElement(\"a\");\n      link.setAttribute(\"href\", encodedUri);\n      link.setAttribute(\n        \"download\",\n        `danh_sach_sinh_vien_${classInfo?.class_name}.csv`\n      );\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n\n      enqueueSnackbar(\"Xuất danh sách sinh viên thành công\", {\n        variant: \"success\",\n      });\n    } catch (error) {\n      console.error(\"Lỗi khi xuất danh sách:\", error);\n      enqueueSnackbar(\"Lỗi khi xuất danh sách sinh viên\", { variant: \"error\" });\n    }\n  };\n\n  // Lọc sinh viên theo từ khóa tìm kiếm\n  const filteredAvailableStudents = availableStudents.filter(\n    (student) =>\n      student.full_name.toLowerCase().includes(searchStudent.toLowerCase()) ||\n      student.school_info?.student_id\n        ?.toLowerCase()\n        .includes(searchStudent.toLowerCase()) ||\n      student.email.toLowerCase().includes(searchStudent.toLowerCase())\n  );\n\n  // Tải dữ liệu tham chiếu cho form chỉnh sửa\n  const fetchReferenceDataForEdit = async () => {\n    try {\n      const [subjectsRes, semestersRes, mainClassesRes, campusesRes] =\n        await Promise.all([\n          axios.get(`${API_URL}/subjects`, {\n            headers: { Authorization: `Bearer ${token}` },\n          }),\n          axios.get(`${API_URL}/semesters`, {\n            headers: { Authorization: `Bearer ${token}` },\n          }),\n          axios.get(`${API_URL}/classes/main?all=true`, {\n            headers: { Authorization: `Bearer ${token}` },\n          }),\n          axios.get(`${API_URL}/facilities/campuses`, {\n            headers: { Authorization: `Bearer ${token}` },\n          }),\n        ]);\n\n      setSubjects(subjectsRes.data.data || []);\n      setSemesters(semestersRes.data.data || []);\n      setMainClasses(mainClassesRes.data.data || []);\n      setCampuses(campusesRes.data.data || []);\n\n      // Nếu lớp học có thông tin campus và building, tải danh sách building và room tương ứng\n      if (classInfo && classInfo.room) {\n        try {\n          const roomDetails = await axios.get(\n            `${API_URL}/facilities/rooms/${classInfo.room}`,\n            {\n              headers: { Authorization: `Bearer ${token}` },\n            }\n          );\n\n          if (roomDetails.data.success && roomDetails.data.data) {\n            const room = roomDetails.data.data;\n            if (room.building_id) {\n              setSelectedCampus(room.building_id.campus_id?._id || \"\");\n\n              // Tải danh sách buildings của campus\n              const buildingsRes = await axios.get(\n                `${API_URL}/facilities/buildings/campuses/${room.building_id.campus_id?._id}`,\n                { headers: { Authorization: `Bearer ${token}` } }\n              );\n              setBuildings(buildingsRes.data.data || []);\n\n              setSelectedBuilding(room.building_id._id || \"\");\n\n              // Tải danh sách rooms của building\n              const roomsRes = await axios.get(\n                `${API_URL}/facilities/rooms/building/${room.building_id._id}`,\n                { headers: { Authorization: `Bearer ${token}` } }\n              );\n              setRooms(roomsRes.data.data || []);\n            }\n          }\n        } catch (error) {\n          console.error(\"Lỗi khi tải thông tin phòng học:\", error);\n        }\n      }\n    } catch (error) {\n      console.error(\"Lỗi khi tải dữ liệu tham chiếu:\", error);\n      enqueueSnackbar(\"Lỗi khi tải dữ liệu tham chiếu\", { variant: \"error\" });\n    }\n  };\n\n  // Tải danh sách tòa nhà khi chọn campus\n  const fetchBuildings = async (campusId) => {\n    if (!campusId) {\n      setBuildings([]);\n      setSelectedBuilding(\"\");\n      return;\n    }\n\n    try {\n      const response = await axios.get(\n        `${API_URL}/facilities/buildings/campuses/${campusId}`,\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      setBuildings(response.data.data || []);\n    } catch (error) {\n      console.error(\"Lỗi khi tải danh sách tòa nhà:\", error);\n      enqueueSnackbar(\"Lỗi khi tải danh sách tòa nhà\", { variant: \"error\" });\n    }\n  };\n\n  // Mở dialog chỉnh sửa lớp học\n  const handleOpenEditClassDialog = () => {\n    // Chuẩn bị dữ liệu ban đầu cho form\n    setEditClassData({\n      class_name: classInfo.class_name || \"\",\n      class_code: classInfo.class_code || \"\",\n      subject_id: classInfo.subject_id?._id || \"\",\n      main_class_id: classInfo.main_class_id?._id || \"\",\n      semester_id: classInfo.semester_id?._id || \"\",\n      total_sessions: classInfo.total_sessions || 15,\n      room_id: classInfo.room?._id || \"\",\n      course_start_date: classInfo.course_start_date\n        ? classInfo.course_start_date.split(\"T\")[0]\n        : \"\",\n      course_end_date: classInfo.course_end_date\n        ? classInfo.course_end_date.split(\"T\")[0]\n        : \"\",\n      auto_generate_sessions: classInfo.auto_generate_sessions !== false,\n      schedule: classInfo.schedule || [],\n    });\n\n    // Chuẩn bị lịch học từ classInfo\n    if (classInfo.schedule && classInfo.schedule.length > 0) {\n      setScheduleDays(classInfo.schedule);\n    } else {\n      // Nếu không có lịch học, tạo lịch mặc định dựa trên ngày bắt đầu\n      const dayOfWeek = classInfo.course_start_date\n        ? getDayOfWeekFromDate(classInfo.course_start_date.split(\"T\")[0])\n        : 1;\n\n      setScheduleDays([\n        {\n          day_of_week: dayOfWeek,\n          start_period: 1,\n          end_period: 2,\n          start_time: \"07:00\",\n          end_time: \"08:40\",\n          room_id: classInfo.room?._id || \"\",\n          is_recurring: true,\n          specific_dates: [],\n          excluded_dates: [],\n        },\n      ]);\n    }\n\n    // Tải dữ liệu tham chiếu\n    fetchReferenceDataForEdit();\n\n    // Mở dialog\n    setOpenEditClassDialog(true);\n  };\n\n  // Đóng dialog chỉnh sửa lớp học\n  const handleCloseEditClassDialog = () => {\n    setOpenEditClassDialog(false);\n    setEditClassData(null);\n  };\n\n  // Xử lý thay đổi các trường trong form chỉnh sửa\n  const handleEditClassChange = (e) => {\n    const { name, value } = e.target;\n    setEditClassData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  // Xử lý thay đổi campus\n  const handleCampusChange = (e) => {\n    const campusId = e.target.value;\n    setSelectedCampus(campusId);\n    fetchBuildings(campusId);\n    setSelectedBuilding(\"\");\n    setEditClassData((prev) => ({\n      ...prev,\n      room_id: \"\",\n    }));\n  };\n\n  // Xử lý thay đổi building\n  const handleBuildingChange = (e) => {\n    const buildingId = e.target.value;\n    setSelectedBuilding(buildingId);\n    fetchRooms(buildingId);\n    setEditClassData((prev) => ({\n      ...prev,\n      room_id: \"\",\n    }));\n  };\n\n  // Thêm function để kiểm tra xung đột lịch\n  const checkConflicts = async (scheduleToCheck = scheduleDays) => {\n    // Xóa cảnh báo xung đột cũ\n    setConflictWarnings([]);\n\n    try {\n      setCheckingConflicts(true);\n\n      // Kiểm tra xem có thông tin đủ để check không\n      if (\n        !classInfo?.teacher_id?._id ||\n        !scheduleToCheck ||\n        scheduleToCheck.length === 0 ||\n        scheduleToCheck.some((day) => !day.room_id)\n      ) {\n        return;\n      }\n\n      const response = await checkScheduleConflicts({\n        teacher_id: classInfo.teacher_id._id,\n        schedule: scheduleToCheck,\n        class_id: id, // Loại trừ chính lớp này khi kiểm tra\n      });\n\n      if (response.data.has_conflicts) {\n        setConflictWarnings(response.data.conflicts);\n      }\n    } catch (error) {\n      console.error(\"Lỗi khi kiểm tra xung đột lịch học:\", error);\n      enqueueSnackbar(\"Lỗi khi kiểm tra xung đột lịch học\", {\n        variant: \"error\",\n      });\n    } finally {\n      setCheckingConflicts(false);\n    }\n  };\n\n  // Cập nhật hàm handleScheduleChange để check xung đột\n  const handleScheduleChange = (index, field, value) => {\n    const updatedSchedule = [...scheduleDays];\n    updatedSchedule[index] = {\n      ...updatedSchedule[index],\n      [field]: value,\n    };\n    setScheduleDays(updatedSchedule);\n\n    // Tính lại ngày kết thúc khi lịch học thay đổi\n    setEditClassData((prev) => ({\n      ...prev,\n      course_end_date: calculateEndDate(\n        prev.course_start_date,\n        updatedSchedule,\n        prev.total_sessions\n      ),\n    }));\n\n    // Kiểm tra xung đột nếu thay đổi phòng học hoặc thời gian\n    if (\n      field === \"room_id\" ||\n      field === \"day_of_week\" ||\n      field === \"start_period\" ||\n      field === \"end_period\" ||\n      field === \"start_time\" ||\n      field === \"end_time\"\n    ) {\n      // Đặt timeout để tránh gọi API quá nhiều khi người dùng thay đổi nhiều lần\n      setTimeout(() => {\n        if (\n          updatedSchedule[index].room_id &&\n          updatedSchedule[index].day_of_week !== undefined\n        ) {\n          checkConflicts(updatedSchedule);\n        }\n      }, 500);\n    }\n  };\n\n  // Cập nhật hàm handleUpdateClass\n  const handleUpdateClass = async () => {\n    if (!editClassData.class_name || !editClassData.class_code) {\n      enqueueSnackbar(\"Vui lòng điền đầy đủ thông tin bắt buộc\", {\n        variant: \"warning\",\n      });\n      return;\n    }\n\n    // Kiểm tra room_id trong từng schedule item\n    for (const day of scheduleDays) {\n      if (!day.room_id) {\n        enqueueSnackbar(\n          `Vui lòng chọn phòng học cho buổi học vào ${getDayOfWeekName(\n            day.day_of_week\n          )}`,\n          { variant: \"warning\" }\n        );\n        return;\n      }\n    }\n\n    // Kiểm tra xung đột lịch cuối cùng trước khi cập nhật lớp\n    try {\n      setCheckingConflicts(true);\n      const response = await checkScheduleConflicts({\n        teacher_id: classInfo.teacher_id._id,\n        schedule: scheduleDays,\n        class_id: id,\n      });\n\n      if (response.data.has_conflicts) {\n        setConflictWarnings(response.data.conflicts);\n\n        // Hiển thị thông báo xác nhận nếu có xung đột\n        if (\n          window.confirm(\n            \"Phát hiện xung đột lịch học. Bạn vẫn muốn cập nhật lịch học này không?\\n\\n\" +\n              response.data.conflicts.map((c) => c.message).join(\"\\n\")\n          )\n        ) {\n          // Tiếp tục cập nhật lớp nếu người dùng xác nhận\n          await updateClassData();\n        }\n      } else {\n        // Không có xung đột, cập nhật lớp\n        await updateClassData();\n      }\n    } catch (error) {\n      console.error(\"Lỗi khi kiểm tra xung đột lịch học:\", error);\n      // Vẫn cập nhật lớp ngay cả khi không thể kiểm tra xung đột\n      await updateClassData();\n    } finally {\n      setCheckingConflicts(false);\n    }\n  };\n\n  // Tách logic cập nhật lớp thành hàm riêng\n  const updateClassData = async () => {\n    setIsUpdating(true);\n    try {\n      // Tạo đối tượng dữ liệu để cập nhật\n      const updateData = {\n        ...editClassData,\n        schedule: scheduleDays,\n      };\n\n      // Xóa các trường không cần thiết\n      delete updateData.teacher_id;\n      delete updateData.createdAt;\n      delete updateData.updatedAt;\n\n      await updateTeachingClass(id, updateData);\n\n      enqueueSnackbar(\"Cập nhật lớp học thành công\", {\n        variant: \"success\",\n      });\n      setEditMode(false);\n      fetchClassData(); // Tải lại dữ liệu lớp học\n      setConflictWarnings([]); // Xóa cảnh báo xung đột\n    } catch (error) {\n      console.error(\"Lỗi khi cập nhật lớp học:\", error);\n      enqueueSnackbar(\n        error.response?.data?.message || \"Lỗi khi cập nhật lớp học\",\n        { variant: \"error\" }\n      );\n    } finally {\n      setIsUpdating(false);\n    }\n  };\n\n  // Lấy thứ trong tuần từ ngày\n  const getDayOfWeekFromDate = (dateString) => {\n    if (!dateString) return 1; // Mặc định là thứ 2 nếu không có ngày\n\n    const date = new Date(dateString);\n    // getDay() trả về 0 cho Chủ Nhật, 1-6 cho Thứ 2 đến Thứ 7\n    const day = date.getDay();\n\n    // Chuyển đổi để 0 = Chủ Nhật, 1 = Thứ Hai, ...\n    return day;\n  };\n\n  // Lấy tên của thứ trong tuần\n  const getDayOfWeekName = (dayOfWeek) => {\n    const days = [\n      \"Chủ Nhật\",\n      \"Thứ Hai\",\n      \"Thứ Ba\",\n      \"Thứ Tư\",\n      \"Thứ Năm\",\n      \"Thứ Sáu\",\n      \"Thứ Bảy\",\n    ];\n    return days[dayOfWeek];\n  };\n\n  // Thêm lịch học\n  const addScheduleDay = () => {\n    // Lấy ngày bắt đầu\n    const startDate = editClassData.course_start_date;\n    if (!startDate) {\n      enqueueSnackbar(\"Vui lòng chọn ngày bắt đầu trước\", {\n        variant: \"warning\",\n      });\n      return;\n    }\n\n    // Lấy thứ từ ngày bắt đầu\n    const baseDayOfWeek = getDayOfWeekFromDate(startDate);\n\n    // Tìm thứ tiếp theo chưa có trong lịch\n    const existingDays = scheduleDays.map((day) => day.day_of_week);\n    let nextDay = (baseDayOfWeek + 1) % 7; // Thứ tiếp theo\n\n    // Tìm một thứ chưa có trong lịch hiện tại\n    for (let i = 0; i < 7; i++) {\n      if (!existingDays.includes(nextDay)) {\n        break;\n      }\n      nextDay = (nextDay + 1) % 7;\n    }\n\n    // Nếu đã có đủ 7 ngày trong tuần, thì dùng thứ 2\n    if (existingDays.length >= 7) {\n      nextDay = 1;\n    }\n\n    const updatedSchedule = [\n      ...scheduleDays,\n      {\n        day_of_week: nextDay,\n        start_period: 1,\n        end_period: 2,\n        start_time: \"07:00\",\n        end_time: \"08:40\",\n        room_id: editClassData.room_id,\n        is_recurring: true,\n        specific_dates: [],\n        excluded_dates: [],\n      },\n    ];\n\n    setScheduleDays(updatedSchedule);\n\n    // Tính lại ngày kết thúc sau khi thêm buổi học\n    setEditClassData((prev) => ({\n      ...prev,\n      course_end_date: calculateEndDate(\n        prev.course_start_date,\n        updatedSchedule,\n        prev.total_sessions\n      ),\n    }));\n  };\n\n  // Xóa lịch học\n  const removeScheduleDay = (index) => {\n    if (scheduleDays.length > 1) {\n      const updatedSchedule = scheduleDays.filter((_, i) => i !== index);\n      setScheduleDays(updatedSchedule);\n\n      // Tính lại ngày kết thúc sau khi xóa buổi học\n      setEditClassData((prev) => ({\n        ...prev,\n        course_end_date: calculateEndDate(\n          prev.course_start_date,\n          updatedSchedule,\n          prev.total_sessions\n        ),\n      }));\n    }\n  };\n\n  // Tính ngày kết thúc dựa trên ngày bắt đầu và lịch học\n  const calculateEndDate = (startDate, schedule, totalSessions) => {\n    if (!startDate || !schedule || schedule.length === 0 || !totalSessions) {\n      return \"\";\n    }\n\n    try {\n      // Chuyển ngày bắt đầu thành đối tượng Date\n      const start = new Date(startDate);\n      if (isNaN(start.getTime())) {\n        return \"\";\n      }\n\n      // Tổng số tuần cần thiết = tổng số buổi học / số buổi học mỗi tuần\n      const sessionsPerWeek = schedule.length;\n      const weeksNeeded = Math.ceil(totalSessions / sessionsPerWeek);\n\n      // Tạo mảng chứa các ngày trong tuần từ lịch học (0-6, với 0 là Chủ Nhật)\n      const daysOfWeek = schedule.map((day) => day.day_of_week);\n\n      // Sắp xếp các ngày trong tuần\n      daysOfWeek.sort((a, b) => a - b);\n\n      // Tìm ngày đầu tiên trong lịch học sau ngày bắt đầu\n      let currentDate = new Date(start);\n\n      // Đếm số buổi học đã xếp lịch\n      let sessionCount = 0;\n\n      // Lặp qua từng tuần\n      for (let week = 0; week < weeksNeeded * 2; week++) {\n        // Nhân 2 để đảm bảo đủ số buổi\n        // Lặp qua các ngày trong tuần từ lịch học\n        for (let dayIndex = 0; dayIndex < daysOfWeek.length; dayIndex++) {\n          const targetDayOfWeek = daysOfWeek[dayIndex];\n\n          // Tìm ngày tiếp theo có thứ phù hợp\n          while (currentDate.getDay() !== targetDayOfWeek) {\n            currentDate.setDate(currentDate.getDate() + 1);\n          }\n\n          sessionCount++;\n\n          // Nếu đã đủ số buổi học, trả về ngày hiện tại\n          if (sessionCount >= totalSessions) {\n            return currentDate.toISOString().split(\"T\")[0];\n          }\n\n          // Di chuyển đến ngày tiếp theo\n          currentDate.setDate(currentDate.getDate() + 1);\n        }\n      }\n\n      // Nếu không tính được, trả về chuỗi rỗng\n      return \"\";\n    } catch (error) {\n      console.error(\"Lỗi khi tính ngày kết thúc:\", error);\n      return \"\";\n    }\n  };\n\n  // Xử lý thay đổi ngày bắt đầu\n  const handleStartDateChange = (e) => {\n    const startDate = e.target.value;\n\n    // Lấy thứ từ ngày bắt đầu\n    const dayOfWeek = getDayOfWeekFromDate(startDate);\n\n    // Cập nhật lịch học với thứ mới\n    const updatedSchedule = [\n      {\n        day_of_week: dayOfWeek,\n        start_period: 1,\n        end_period: 2,\n        start_time: \"07:00\",\n        end_time: \"08:40\",\n        room_id: editClassData.room_id,\n        is_recurring: true,\n        specific_dates: [],\n        excluded_dates: [],\n      },\n    ];\n\n    // Cập nhật lịch học\n    setScheduleDays(updatedSchedule);\n\n    // Cập nhật ngày bắt đầu và tính ngày kết thúc\n    setEditClassData((prev) => ({\n      ...prev,\n      course_start_date: startDate,\n      course_end_date: calculateEndDate(\n        startDate,\n        updatedSchedule,\n        prev.total_sessions\n      ),\n    }));\n  };\n\n  // Xử lý thay đổi số buổi học\n  const handleTotalSessionsChange = (e) => {\n    const totalSessions = e.target.value;\n\n    setEditClassData((prev) => ({\n      ...prev,\n      total_sessions: totalSessions,\n      // Tính lại ngày kết thúc khi thay đổi số buổi học\n      course_end_date: calculateEndDate(\n        prev.course_start_date,\n        scheduleDays,\n        totalSessions\n      ),\n    }));\n  };\n\n  // Thêm phần render cảnh báo xung đột lịch\n  const renderConflictWarnings = () => {\n    if (conflictWarnings.length === 0) {\n      return null;\n    }\n\n    return (\n      <Alert severity=\"warning\" sx={{ mt: 2, mb: 2 }}>\n        <AlertTitle>Phát hiện xung đột lịch học</AlertTitle>\n        <List dense>\n          {conflictWarnings.map((conflict, index) => (\n            <ListItem key={index}>\n              <ListItemIcon>\n                {conflict.type === \"teacher\" ? (\n                  <Person color=\"error\" />\n                ) : (\n                  <Room color=\"error\" />\n                )}\n              </ListItemIcon>\n              <ListItemText primary={conflict.message} />\n            </ListItem>\n          ))}\n        </List>\n      </Alert>\n    );\n  };\n\n  return (\n    <Box sx={{ p: 3, bgcolor: \"grey.50\", minHeight: \"100vh\" }}>\n      {isLoading ? (\n        <Box sx={{ display: \"flex\", justifyContent: \"center\", p: 3 }}>\n          <CircularProgress />\n        </Box>\n      ) : (\n        <>\n          <Box sx={{ display: \"flex\", justifyContent: \"space-between\", mb: 3 }}>\n            <Typography variant=\"h4\" gutterBottom sx={{ fontWeight: \"bold\" }}>\n              <School sx={{ mr: 1, verticalAlign: \"middle\" }} />\n              {classInfo?.class_name || \"Chi tiết lớp học\"}\n            </Typography>\n            <Box>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => setEditMode(true)}\n                disabled={editMode || isLoading}\n                startIcon={<Edit />}\n                sx={{ mr: 1 }}\n              >\n                Chỉnh sửa lớp học\n              </Button>\n            </Box>\n          </Box>\n\n          {/* Hiển thị thông tin cơ bản về lớp học */}\n          <Paper\n            sx={{ p: 3, mb: 3, borderRadius: 2, boxShadow: 3 }}\n            elevation={3}\n          >\n            <Grid container spacing={3}>\n              <Grid item xs={12} sm={6} md={3}>\n                <Typography\n                  variant=\"subtitle2\"\n                  sx={{ color: \"text.secondary\", mb: 1 }}\n                >\n                  Mã lớp\n                </Typography>\n                <Typography variant=\"body1\" sx={{ fontWeight: \"medium\" }}>\n                  {classInfo?.class_code || \"Không có\"}\n                </Typography>\n              </Grid>\n              <Grid item xs={12} sm={6} md={3}>\n                <Typography\n                  variant=\"subtitle2\"\n                  sx={{ color: \"text.secondary\", mb: 1 }}\n                >\n                  Môn học\n                </Typography>\n                <Typography variant=\"body1\" sx={{ fontWeight: \"medium\" }}>\n                  {classInfo?.subject_id?.name || \"Không xác định\"}\n                </Typography>\n              </Grid>\n              <Grid item xs={12} sm={6} md={3}>\n                <Typography\n                  variant=\"subtitle2\"\n                  sx={{ color: \"text.secondary\", mb: 1 }}\n                >\n                  Kỳ học\n                </Typography>\n                <Chip\n                  label={\n                    classInfo?.semester_id?.name\n                      ? `${classInfo.semester_id.name} (${\n                          classInfo.semester_id.academic_year ||\n                          classInfo.semester_id.year\n                        })`\n                      : \"Không xác định\"\n                  }\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                />\n              </Grid>\n              <Grid item xs={12} sm={6} md={3}>\n                <Typography\n                  variant=\"subtitle2\"\n                  sx={{ color: \"text.secondary\", mb: 1 }}\n                >\n                  Lớp chính\n                </Typography>\n                <Chip\n                  label={\n                    classInfo?.main_class_id?.name ||\n                    \"Không thuộc lớp chính nào\"\n                  }\n                  color=\"info\"\n                  variant={classInfo?.main_class_id ? \"filled\" : \"outlined\"}\n                  size=\"small\"\n                />\n              </Grid>\n              <Grid item xs={12} sm={6} md={3}>\n                <Typography\n                  variant=\"subtitle2\"\n                  sx={{ color: \"text.secondary\", mb: 1 }}\n                >\n                  Giảng viên\n                </Typography>\n                <Typography variant=\"body1\" sx={{ fontWeight: \"medium\" }}>\n                  {classInfo?.teacher_id?.full_name || \"Không xác định\"}\n                </Typography>\n              </Grid>\n              <Grid item xs={12} sm={6} md={3}>\n                <Typography\n                  variant=\"subtitle2\"\n                  sx={{ color: \"text.secondary\", mb: 1 }}\n                >\n                  Ngày bắt đầu - Kết thúc\n                </Typography>\n                <Typography variant=\"body1\" sx={{ fontWeight: \"medium\" }}>\n                  {classInfo?.course_start_date\n                    ? new Date(classInfo.course_start_date).toLocaleDateString(\n                        \"vi-VN\"\n                      )\n                    : \"N/A\"}{\" \"}\n                  -{\" \"}\n                  {classInfo?.course_end_date\n                    ? new Date(classInfo.course_end_date).toLocaleDateString(\n                        \"vi-VN\"\n                      )\n                    : \"N/A\"}\n                </Typography>\n              </Grid>\n              <Grid item xs={12} sm={6} md={3}>\n                <Typography\n                  variant=\"subtitle2\"\n                  sx={{ color: \"text.secondary\", mb: 1 }}\n                >\n                  Số buổi học\n                </Typography>\n                <Typography variant=\"body1\" sx={{ fontWeight: \"medium\" }}>\n                  {classInfo?.total_sessions || 0}\n                </Typography>\n              </Grid>\n              <Grid item xs={12} sm={6} md={3}>\n                <Typography\n                  variant=\"subtitle2\"\n                  sx={{ color: \"text.secondary\", mb: 1 }}\n                >\n                  Số lượng sinh viên\n                </Typography>\n                <Typography variant=\"body1\" sx={{ fontWeight: \"medium\" }}>\n                  {Array.isArray(classInfo?.students)\n                    ? classInfo.students.length\n                    : 0}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Paper>\n\n          {/* Hiển thị cảnh báo xung đột lịch nếu đang trong chế độ chỉnh sửa */}\n          {editMode && renderConflictWarnings()}\n\n          {/* Các nút hành động khi chỉnh sửa */}\n          {editMode && (\n            <Box\n              sx={{\n                mt: 3,\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n                gap: 2,\n              }}\n            >\n              <Button\n                variant=\"outlined\"\n                onClick={() => {\n                  setEditMode(false);\n                  setEditClassData({ ...classInfo });\n                  setScheduleDays(\n                    classInfo.schedule?.map((item) => ({ ...item })) || []\n                  );\n                  setConflictWarnings([]); // Xóa cảnh báo khi hủy\n                }}\n                disabled={isUpdating || checkingConflicts}\n              >\n                Hủy\n              </Button>\n              <Button\n                variant=\"contained\"\n                onClick={handleUpdateClass}\n                disabled={isUpdating || checkingConflicts}\n                startIcon={\n                  isUpdating || checkingConflicts ? (\n                    <CircularProgress size={20} />\n                  ) : null\n                }\n              >\n                {isUpdating\n                  ? \"Đang cập nhật...\"\n                  : checkingConflicts\n                  ? \"Đang kiểm tra...\"\n                  : \"Lưu thay đổi\"}\n              </Button>\n            </Box>\n          )}\n\n          {/* Tabs */}\n          <Box sx={{ width: \"100%\", mt: 3 }}>\n            <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n              <Tabs\n                value={tabValue}\n                onChange={handleChangeTab}\n                aria-label=\"class tabs\"\n                variant=\"scrollable\"\n                scrollButtons=\"auto\"\n              >\n                <Tab\n                  label=\"Lịch học\"\n                  {...a11yProps(0)}\n                  icon={<Event />}\n                  iconPosition=\"start\"\n                />\n                <Tab\n                  label=\"Buổi điểm danh\"\n                  {...a11yProps(1)}\n                  icon={<CalendarToday />}\n                  iconPosition=\"start\"\n                />\n                <Tab\n                  label=\"Sinh viên\"\n                  {...a11yProps(2)}\n                  icon={<School />}\n                  iconPosition=\"start\"\n                />\n                <Tab\n                  label=\"Thống kê\"\n                  {...a11yProps(3)}\n                  icon={<Info />}\n                  iconPosition=\"start\"\n                />\n                <Tab\n                  label=\"Cấu hình\"\n                  {...a11yProps(4)}\n                  icon={<Settings />}\n                  iconPosition=\"start\"\n                />\n              </Tabs>\n            </Box>\n            {/* Các TabPanel ở đây */}\n          </Box>\n        </>\n      )}\n    </Box>\n  );\n};\n\nexport default TeacherClassDetailPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}