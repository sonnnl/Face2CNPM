{"ast":null,"code":"import axios from \"../utils/axios\";\nimport { API_URL } from \"../config/config\";\n\n/**\r\n * Service để quản lý các chức năng liên quan đến sinh viên\r\n */\nclass StudentService {\n  /**\r\n   * Lấy danh sách lớp học của sinh viên\r\n   * @param {string} studentId - ID của sinh viên\r\n   * @param {string} token - JWT token\r\n   * @param {Object} options - Các tùy chọn tìm kiếm và phân trang\r\n   * @returns {Promise} - Kết quả lớp học\r\n   */\n  async getStudentClasses(studentId, token, options = {}) {\n    try {\n      const {\n        page = 1,\n        limit = 10,\n        search = \"\",\n        semester = \"\",\n        academicYear = \"\"\n      } = options;\n      let url = `${API_URL}/classes/teaching/student/${studentId}?page=${page}&limit=${limit}`;\n      if (search) {\n        url += `&search=${encodeURIComponent(search)}`;\n      }\n      if (semester) {\n        url += `&semester=${semester}`;\n      }\n      if (academicYear) {\n        url += `&academic_year=${academicYear}`;\n      }\n      const response = await axios.get(url, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return {\n        success: true,\n        data: response.data.data || [],\n        total: response.data.count || 0\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Lỗi khi lấy danh sách lớp học:\", error);\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Lỗi khi lấy danh sách lớp học\",\n        data: [],\n        total: 0\n      };\n    }\n  }\n\n  /**\r\n   * Lấy thống kê điểm danh của sinh viên trong một lớp học\r\n   * @param {string} studentId - ID của sinh viên\r\n   * @param {string} classId - ID của lớp học\r\n   * @param {string} token - JWT token\r\n   * @returns {Promise} - Kết quả thống kê điểm danh\r\n   */\n  async getAttendanceStats(studentId, classId, token) {\n    try {\n      const response = await axios.get(`${API_URL}/attendance/student/${studentId}/logs?teaching_class=${classId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // Tính toán thống kê\n      const logs = response.data.data || [];\n      const totalSessions = logs.length;\n      let present = 0;\n      let absent = 0;\n      let late = 0;\n      logs.forEach(log => {\n        if (log.status === \"present\") present++;else if (log.status === \"late\") late++;else if (log.status === \"absent\") absent++;\n      });\n      const presentPercentage = totalSessions > 0 ? present / totalSessions * 100 : 0;\n      const latePercentage = totalSessions > 0 ? late / totalSessions * 100 : 0;\n      const absentPercentage = totalSessions > 0 ? absent / totalSessions * 100 : 0;\n      const attendanceRate = totalSessions > 0 ? (present + late) / totalSessions * 100 : 0;\n      return {\n        success: true,\n        data: {\n          logs,\n          stats: {\n            total: totalSessions,\n            present,\n            absent,\n            late,\n            presentPercentage,\n            latePercentage,\n            absentPercentage,\n            attendanceRate\n          }\n        }\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error(`Lỗi khi lấy thống kê điểm danh cho lớp ${classId}:`, error);\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Lỗi khi lấy thống kê điểm danh\",\n        data: {\n          logs: [],\n          stats: {\n            total: 0,\n            present: 0,\n            absent: 0,\n            late: 0,\n            presentPercentage: 0,\n            latePercentage: 0,\n            absentPercentage: 0,\n            attendanceRate: 0\n          }\n        }\n      };\n    }\n  }\n\n  /**\r\n   * Lấy chi tiết điểm danh của sinh viên trong một lớp học\r\n   * @param {string} studentId - ID của sinh viên\r\n   * @param {string} classId - ID của lớp học\r\n   * @param {string} token - JWT token\r\n   * @param {Object} options - Các tùy chọn tìm kiếm và phân trang\r\n   * @returns {Promise} - Kết quả chi tiết điểm danh\r\n   */\n  async getAttendanceDetails(studentId, classId, token, options = {}) {\n    try {\n      const {\n        page = 1,\n        limit = 10,\n        sortBy = \"date\",\n        sortOrder = \"desc\"\n      } = options;\n      let url = `${API_URL}/attendance/student/${studentId}/logs?teaching_class=${classId}&page=${page}&limit=${limit}&sort=${sortBy}&order=${sortOrder}`;\n      const response = await axios.get(url, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return {\n        success: true,\n        data: response.data.data || [],\n        total: response.data.count || 0\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error(`Lỗi khi lấy chi tiết điểm danh cho lớp ${classId}:`, error);\n      return {\n        success: false,\n        error: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || \"Lỗi khi lấy chi tiết điểm danh\",\n        data: [],\n        total: 0\n      };\n    }\n  }\n\n  /**\r\n   * Tính điểm chuyên cần dựa trên số buổi vắng\r\n   * @param {number} absences - Số buổi vắng\r\n   * @returns {number} - Điểm chuyên cần (thang điểm 10)\r\n   */\n  calculateAttendanceScore(absences) {\n    // Trừ 2 điểm cho mỗi buổi vắng, tối đa 10 điểm\n    const score = Math.max(0, 10 - absences * 2);\n    return Math.round(score * 10) / 10; // Làm tròn đến 1 chữ số thập phân\n  }\n\n  /**\r\n   * Xác định trạng thái điểm danh dựa trên tỷ lệ tham gia\r\n   * @param {Object} stats - Thống kê điểm danh\r\n   * @returns {Object} - Trạng thái tham gia và thông báo\r\n   */\n  getAttendanceStatus(stats) {\n    const rate = stats.attendanceRate || 0;\n    if (rate >= 80) {\n      return {\n        status: \"success\",\n        message: \"Tốt\"\n      };\n    } else if (rate >= 60) {\n      return {\n        status: \"warning\",\n        message: \"Cần cải thiện\"\n      };\n    } else {\n      return {\n        status: \"error\",\n        message: \"Nguy hiểm\"\n      };\n    }\n  }\n}\nexport default new StudentService();","map":{"version":3,"names":["axios","API_URL","StudentService","getStudentClasses","studentId","token","options","page","limit","search","semester","academicYear","url","encodeURIComponent","response","get","headers","Authorization","success","data","total","count","error","_error$response","_error$response$data","console","message","getAttendanceStats","classId","logs","totalSessions","length","present","absent","late","forEach","log","status","presentPercentage","latePercentage","absentPercentage","attendanceRate","stats","_error$response2","_error$response2$data","getAttendanceDetails","sortBy","sortOrder","_error$response3","_error$response3$data","calculateAttendanceScore","absences","score","Math","max","round","getAttendanceStatus","rate"],"sources":["C:/Users/kasiz/Documents/Studying/FaceReg/frontend/src/services/studentService.js"],"sourcesContent":["import axios from \"../utils/axios\";\r\nimport { API_URL } from \"../config/config\";\r\n\r\n/**\r\n * Service để quản lý các chức năng liên quan đến sinh viên\r\n */\r\nclass StudentService {\r\n  /**\r\n   * Lấy danh sách lớp học của sinh viên\r\n   * @param {string} studentId - ID của sinh viên\r\n   * @param {string} token - JWT token\r\n   * @param {Object} options - Các tùy chọn tìm kiếm và phân trang\r\n   * @returns {Promise} - Kết quả lớp học\r\n   */\r\n  async getStudentClasses(studentId, token, options = {}) {\r\n    try {\r\n      const {\r\n        page = 1,\r\n        limit = 10,\r\n        search = \"\",\r\n        semester = \"\",\r\n        academicYear = \"\",\r\n      } = options;\r\n\r\n      let url = `${API_URL}/classes/teaching/student/${studentId}?page=${page}&limit=${limit}`;\r\n\r\n      if (search) {\r\n        url += `&search=${encodeURIComponent(search)}`;\r\n      }\r\n\r\n      if (semester) {\r\n        url += `&semester=${semester}`;\r\n      }\r\n\r\n      if (academicYear) {\r\n        url += `&academic_year=${academicYear}`;\r\n      }\r\n\r\n      const response = await axios.get(url, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n\r\n      return {\r\n        success: true,\r\n        data: response.data.data || [],\r\n        total: response.data.count || 0,\r\n      };\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi lấy danh sách lớp học:\", error);\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || \"Lỗi khi lấy danh sách lớp học\",\r\n        data: [],\r\n        total: 0,\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Lấy thống kê điểm danh của sinh viên trong một lớp học\r\n   * @param {string} studentId - ID của sinh viên\r\n   * @param {string} classId - ID của lớp học\r\n   * @param {string} token - JWT token\r\n   * @returns {Promise} - Kết quả thống kê điểm danh\r\n   */\r\n  async getAttendanceStats(studentId, classId, token) {\r\n    try {\r\n      const response = await axios.get(\r\n        `${API_URL}/attendance/student/${studentId}/logs?teaching_class=${classId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n\r\n      // Tính toán thống kê\r\n      const logs = response.data.data || [];\r\n      const totalSessions = logs.length;\r\n      let present = 0;\r\n      let absent = 0;\r\n      let late = 0;\r\n\r\n      logs.forEach((log) => {\r\n        if (log.status === \"present\") present++;\r\n        else if (log.status === \"late\") late++;\r\n        else if (log.status === \"absent\") absent++;\r\n      });\r\n\r\n      const presentPercentage =\r\n        totalSessions > 0 ? (present / totalSessions) * 100 : 0;\r\n      const latePercentage =\r\n        totalSessions > 0 ? (late / totalSessions) * 100 : 0;\r\n      const absentPercentage =\r\n        totalSessions > 0 ? (absent / totalSessions) * 100 : 0;\r\n      const attendanceRate =\r\n        totalSessions > 0 ? ((present + late) / totalSessions) * 100 : 0;\r\n\r\n      return {\r\n        success: true,\r\n        data: {\r\n          logs,\r\n          stats: {\r\n            total: totalSessions,\r\n            present,\r\n            absent,\r\n            late,\r\n            presentPercentage,\r\n            latePercentage,\r\n            absentPercentage,\r\n            attendanceRate,\r\n          },\r\n        },\r\n      };\r\n    } catch (error) {\r\n      console.error(\r\n        `Lỗi khi lấy thống kê điểm danh cho lớp ${classId}:`,\r\n        error\r\n      );\r\n      return {\r\n        success: false,\r\n        error:\r\n          error.response?.data?.message || \"Lỗi khi lấy thống kê điểm danh\",\r\n        data: {\r\n          logs: [],\r\n          stats: {\r\n            total: 0,\r\n            present: 0,\r\n            absent: 0,\r\n            late: 0,\r\n            presentPercentage: 0,\r\n            latePercentage: 0,\r\n            absentPercentage: 0,\r\n            attendanceRate: 0,\r\n          },\r\n        },\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Lấy chi tiết điểm danh của sinh viên trong một lớp học\r\n   * @param {string} studentId - ID của sinh viên\r\n   * @param {string} classId - ID của lớp học\r\n   * @param {string} token - JWT token\r\n   * @param {Object} options - Các tùy chọn tìm kiếm và phân trang\r\n   * @returns {Promise} - Kết quả chi tiết điểm danh\r\n   */\r\n  async getAttendanceDetails(studentId, classId, token, options = {}) {\r\n    try {\r\n      const {\r\n        page = 1,\r\n        limit = 10,\r\n        sortBy = \"date\",\r\n        sortOrder = \"desc\",\r\n      } = options;\r\n\r\n      let url = `${API_URL}/attendance/student/${studentId}/logs?teaching_class=${classId}&page=${page}&limit=${limit}&sort=${sortBy}&order=${sortOrder}`;\r\n\r\n      const response = await axios.get(url, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n\r\n      return {\r\n        success: true,\r\n        data: response.data.data || [],\r\n        total: response.data.count || 0,\r\n      };\r\n    } catch (error) {\r\n      console.error(\r\n        `Lỗi khi lấy chi tiết điểm danh cho lớp ${classId}:`,\r\n        error\r\n      );\r\n      return {\r\n        success: false,\r\n        error:\r\n          error.response?.data?.message || \"Lỗi khi lấy chi tiết điểm danh\",\r\n        data: [],\r\n        total: 0,\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Tính điểm chuyên cần dựa trên số buổi vắng\r\n   * @param {number} absences - Số buổi vắng\r\n   * @returns {number} - Điểm chuyên cần (thang điểm 10)\r\n   */\r\n  calculateAttendanceScore(absences) {\r\n    // Trừ 2 điểm cho mỗi buổi vắng, tối đa 10 điểm\r\n    const score = Math.max(0, 10 - absences * 2);\r\n    return Math.round(score * 10) / 10; // Làm tròn đến 1 chữ số thập phân\r\n  }\r\n\r\n  /**\r\n   * Xác định trạng thái điểm danh dựa trên tỷ lệ tham gia\r\n   * @param {Object} stats - Thống kê điểm danh\r\n   * @returns {Object} - Trạng thái tham gia và thông báo\r\n   */\r\n  getAttendanceStatus(stats) {\r\n    const rate = stats.attendanceRate || 0;\r\n\r\n    if (rate >= 80) {\r\n      return { status: \"success\", message: \"Tốt\" };\r\n    } else if (rate >= 60) {\r\n      return { status: \"warning\", message: \"Cần cải thiện\" };\r\n    } else {\r\n      return { status: \"error\", message: \"Nguy hiểm\" };\r\n    }\r\n  }\r\n}\r\n\r\nexport default new StudentService();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}