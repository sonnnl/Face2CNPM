{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kasiz\\\\Documents\\\\Studying\\\\FaceReg\\\\frontend\\\\src\\\\pages\\\\teacher\\\\AttendancePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useSnackbar } from \"notistack\";\nimport { Box, Typography, Card, CardContent, Grid, Paper, Button, Divider, CircularProgress, List, ListItem, ListItemAvatar, ListItemText, Avatar, Chip, Dialog, DialogTitle, DialogContent, DialogActions, TextField, FormControl, InputLabel, Select, MenuItem, IconButton, Alert } from \"@mui/material\";\nimport { CameraAlt, Check, Close, Edit, Refresh, Save, VerifiedUser, HourglassEmpty } from \"@mui/icons-material\";\nimport Webcam from \"react-webcam\";\nimport * as faceapi from \"face-api.js\";\nimport { getClassFaceFeatures, verifyAttendance, manualAttendance, setModelLoaded, setCameraReady, setDetectedFaces, setRecognizedStudents, clearRecognitionState } from \"../../redux/slices/faceRecognitionSlice\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\nconst AttendancePage = () => {\n  _s();\n  const {\n    classId,\n    sessionId\n  } = useParams();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const videoRef = useRef(null);\n  const [intervalId, setIntervalId] = useState(null);\n  const [showLandmark, setShowLandmark] = useState(false);\n  const [landmarkIntervalId, setLandmarkIntervalId] = useState(null);\n  const {\n    token\n  } = useSelector(state => state.auth);\n  const {\n    isModelLoaded,\n    isCameraReady,\n    detectedFaces,\n    recognizedStudents,\n    classStudents,\n    isProcessing,\n    error\n  } = useSelector(state => state.faceRecognition);\n  const [classInfo, setClassInfo] = useState(null);\n  const [sessionInfo, setSessionInfo] = useState(null);\n  const [attendanceLogs, setAttendanceLogs] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isRecognizing, setIsRecognizing] = useState(false);\n  const [isAutoMode, setIsAutoMode] = useState(false);\n  const [selectedStudent, setSelectedStudent] = useState(null);\n  const [manualDialogOpen, setManualDialogOpen] = useState(false);\n  const [manualAttendanceData, setManualAttendanceData] = useState({\n    status: \"present\",\n    note: \"\"\n  });\n\n  // Các hằng số cho nhận diện khuôn mặt\n  const RECOGNITION_THRESHOLD = 0.6; // Ngưỡng nhận diện (càng thấp càng nghiêm ngặt)\n  const AUTO_DETECT_INTERVAL = 1000; // 1 giây\n\n  // Load class info, session info và models\n  useEffect(() => {\n    const loadInitialData = async () => {\n      try {\n        setIsLoading(true);\n\n        // Bắt đầu tải dữ liệu và models song song\n        const loadModelsPromise = !isModelLoaded ? loadFaceRecognitionModels() : Promise.resolve(true);\n\n        // Lấy thông tin lớp học\n        const classPromise = axios.get(`${API_URL}/classes/teaching/${classId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Lấy thông tin phiên điểm danh\n        const sessionPromise = axios.get(`${API_URL}/attendance/sessions/${sessionId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Lấy danh sách điểm danh\n        const logsPromise = axios.get(`${API_URL}/attendance/logs/${sessionId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Chờ tất cả API calls hoàn thành\n        const [classResponse, sessionResponse, logsResponse] = await Promise.all([classPromise, sessionPromise, logsPromise]);\n        setClassInfo(classResponse.data.data);\n        setSessionInfo(sessionResponse.data.data);\n        setAttendanceLogs(logsResponse.data.data);\n\n        // Lấy đặc trưng khuôn mặt của sinh viên trong lớp\n        dispatch(getClassFaceFeatures(classId));\n\n        // Không chờ đợi model load xong mới hiển thị UI\n        setIsLoading(false);\n\n        // Model sẽ load song song\n        await loadModelsPromise;\n      } catch (error) {\n        console.error(\"Lỗi khi tải dữ liệu:\", error);\n        enqueueSnackbar(\"Lỗi khi tải dữ liệu\", {\n          variant: \"error\"\n        });\n        setIsLoading(false);\n      }\n    };\n    loadInitialData();\n\n    // Clean up\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n\n      // Dừng landmark interval nếu đang chạy\n      if (landmarkIntervalId) {\n        clearInterval(landmarkIntervalId);\n      }\n\n      // Dừng camera stream nếu đang chạy\n      if (webcamRef.current && webcamRef.current.video && webcamRef.current.video.srcObject) {\n        const tracks = webcamRef.current.video.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n      if (videoRef.current && videoRef.current.srcObject) {\n        const tracks = videoRef.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n      dispatch(clearRecognitionState());\n    };\n  }, [classId, sessionId, token, dispatch, enqueueSnackbar, isModelLoaded, intervalId, landmarkIntervalId]);\n\n  // Load các mô hình nhận diện khuôn mặt\n  const loadFaceRecognitionModels = async () => {\n    try {\n      const MODEL_URL = \"/models\";\n      console.log(\"Bắt đầu tải models từ:\", MODEL_URL);\n\n      // Thêm timeout để đảm bảo có đủ thời gian tải models\n      const modelPromises = [faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL), faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL), faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL)];\n\n      // Kiểm tra xem các models đã được tải chưa\n      const modelStatuses = [faceapi.nets.tinyFaceDetector.isLoaded, faceapi.nets.faceLandmark68Net.isLoaded, faceapi.nets.faceRecognitionNet.isLoaded];\n      if (modelStatuses.every(status => status)) {\n        console.log(\"Các models đã được tải từ trước\");\n        dispatch(setModelLoaded(true));\n        return true;\n      }\n      await Promise.all(modelPromises);\n      console.log(\"Đã tải xong models thành công\");\n      dispatch(setModelLoaded(true));\n      enqueueSnackbar(\"Tải mô hình nhận diện thành công\", {\n        variant: \"success\"\n      });\n      return true;\n    } catch (error) {\n      console.error(\"Lỗi khi tải mô hình:\", error);\n      enqueueSnackbar(\"Không thể tải mô hình nhận diện\", {\n        variant: \"error\"\n      });\n      return false;\n    }\n  };\n\n  // Nhận diện khuôn mặt\n  const recognizeFaces = async () => {\n    var _webcamRef$current;\n    // Xác định nguồn video (webcam hoặc video đơn giản)\n    const videoElement = isAutoMode ? videoRef.current : (_webcamRef$current = webcamRef.current) === null || _webcamRef$current === void 0 ? void 0 : _webcamRef$current.video;\n    if (!videoElement || !canvasRef.current || classStudents.length === 0) {\n      console.error(\"Không có video element hoặc canvas hoặc danh sách sinh viên rỗng\");\n      return;\n    }\n    if (videoElement.readyState !== 4) {\n      console.log(\"Video chưa sẵn sàng, readyState =\", videoElement.readyState);\n      return;\n    }\n    setIsRecognizing(true);\n    try {\n      // Phát hiện khuôn mặt\n      const detections = await faceapi.detectAllFaces(videoElement, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceDescriptors();\n      console.log(\"Đã phát hiện\", detections.length, \"khuôn mặt\");\n      dispatch(setDetectedFaces(detections));\n\n      // Hiển thị phát hiện\n      const displaySize = {\n        width: videoElement.videoWidth || videoElement.width,\n        height: videoElement.videoHeight || videoElement.height\n      };\n      faceapi.matchDimensions(canvasRef.current, displaySize);\n      const resizedDetections = faceapi.resizeResults(detections, displaySize);\n      const ctx = canvasRef.current.getContext(\"2d\");\n      ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n      // Tạo FaceMatcher từ dữ liệu sinh viên\n      const labeledDescriptors = classStudents.map(student => {\n        const descriptors = student.faceDescriptors.map(descriptor => new Float32Array(descriptor));\n        return new faceapi.LabeledFaceDescriptors(student._id, descriptors);\n      });\n      if (labeledDescriptors.length > 0) {\n        const faceMatcher = new faceapi.FaceMatcher(labeledDescriptors, RECOGNITION_THRESHOLD);\n\n        // Nhận diện từng khuôn mặt\n        const recognized = [];\n        resizedDetections.forEach(detection => {\n          var _classStudents$find;\n          const bestMatch = faceMatcher.findBestMatch(detection.descriptor);\n          const {\n            label,\n            distance\n          } = bestMatch;\n          const drawBox = new faceapi.draw.DrawBox(detection.detection.box, {\n            label: label !== \"unknown\" ? `${((_classStudents$find = classStudents.find(s => s._id === label)) === null || _classStudents$find === void 0 ? void 0 : _classStudents$find.full_name) || \"Unknown\"} (${Math.round((1 - distance) * 100)}%)` : \"Unknown\",\n            boxColor: label !== \"unknown\" ? \"green\" : \"red\"\n          });\n          drawBox.draw(canvasRef.current);\n\n          // Vẽ landmarks nếu được yêu cầu\n          if (showLandmark) {\n            faceapi.draw.drawFaceLandmarks(canvasRef.current, [detection]);\n          }\n          if (label !== \"unknown\") {\n            const student = classStudents.find(s => s._id === label);\n            if (student) {\n              recognized.push({\n                studentId: label,\n                confidence: 1 - distance,\n                name: student.full_name,\n                descriptor: Array.from(detection.descriptor)\n              });\n            }\n          }\n        });\n        dispatch(setRecognizedStudents(recognized));\n\n        // Tự động điểm danh nếu đang ở chế độ tự động\n        if (isAutoMode && recognized.length > 0) {\n          for (const recognizedStudent of recognized) {\n            // Chỉ điểm danh nếu độ tin cậy > 0.7 (tương đương với khoảng cách < 0.3)\n            if (recognizedStudent.confidence > 0.7) {\n              const isAlreadyAttended = attendanceLogs.some(log => log.student_id._id === recognizedStudent.studentId && log.status === \"present\");\n              if (!isAlreadyAttended) {\n                let imageBase64 = null;\n                if (!isAutoMode && webcamRef.current) {\n                  imageBase64 = webcamRef.current.getScreenshot();\n                } else if (isAutoMode) {\n                  // Tạo ảnh chụp từ video element\n                  const canvas = document.createElement(\"canvas\");\n                  canvas.width = videoElement.videoWidth;\n                  canvas.height = videoElement.videoHeight;\n                  const ctx = canvas.getContext(\"2d\");\n                  ctx.drawImage(videoElement, 0, 0);\n                  imageBase64 = canvas.toDataURL(\"image/jpeg\");\n                }\n                await markAttendance(recognizedStudent.studentId, recognizedStudent.descriptor, recognizedStudent.confidence, imageBase64);\n              }\n            }\n          }\n        }\n      }\n    } catch (error) {\n      console.error(\"Lỗi khi nhận diện khuôn mặt:\", error);\n    } finally {\n      setIsRecognizing(false);\n    }\n  };\n\n  // Điểm danh thủ công\n  const openManualAttendanceDialog = student => {\n    setSelectedStudent(student);\n    setManualAttendanceData({\n      status: \"present\",\n      note: \"\"\n    });\n    setManualDialogOpen(true);\n  };\n  const handleManualDialogClose = () => {\n    setManualDialogOpen(false);\n  };\n  const handleManualAttendanceChange = e => {\n    setManualAttendanceData({\n      ...manualAttendanceData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleManualAttendanceSubmit = async () => {\n    if (!selectedStudent) return;\n    try {\n      const result = await dispatch(manualAttendance({\n        sessionId,\n        studentId: selectedStudent._id,\n        status: manualAttendanceData.status,\n        note: manualAttendanceData.note\n      })).unwrap();\n\n      // Cập nhật logs điểm danh\n      if (result && result.data) {\n        const updatedLogs = attendanceLogs.filter(log => log.student_id._id !== selectedStudent._id);\n        updatedLogs.push({\n          ...result.data,\n          student_id: selectedStudent\n        });\n        setAttendanceLogs(updatedLogs);\n      }\n      enqueueSnackbar(\"Điểm danh thủ công thành công\", {\n        variant: \"success\"\n      });\n      handleManualDialogClose();\n\n      // Cập nhật lại thông tin phiên điểm danh\n      const sessionResponse = await axios.get(`${API_URL}/attendance/sessions/${sessionId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSessionInfo(sessionResponse.data.data);\n    } catch (error) {\n      console.error(\"Lỗi khi điểm danh thủ công:\", error);\n      enqueueSnackbar(\"Lỗi khi điểm danh thủ công\", {\n        variant: \"error\"\n      });\n    }\n  };\n\n  // Đánh dấu điểm danh từ nhận diện khuôn mặt\n  const markAttendance = async (studentId, faceDescriptor, confidence, imageBase64) => {\n    try {\n      const result = await dispatch(verifyAttendance({\n        sessionId,\n        studentId,\n        faceDescriptor,\n        confidence,\n        imageBase64\n      })).unwrap();\n\n      // Cập nhật logs điểm danh\n      if (result && result.data) {\n        const student = classStudents.find(s => s._id === studentId);\n        if (student) {\n          const updatedLogs = attendanceLogs.filter(log => log.student_id._id !== studentId);\n          updatedLogs.push({\n            ...result.data,\n            student_id: student\n          });\n          setAttendanceLogs(updatedLogs);\n          enqueueSnackbar(`Đã điểm danh cho ${student.full_name}`, {\n            variant: \"success\"\n          });\n        }\n      }\n\n      // Cập nhật lại thông tin phiên điểm danh\n      const sessionResponse = await axios.get(`${API_URL}/attendance/sessions/${sessionId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSessionInfo(sessionResponse.data.data);\n      return true;\n    } catch (error) {\n      console.error(\"Lỗi khi xác nhận điểm danh:\", error);\n      enqueueSnackbar(\"Lỗi khi xác nhận điểm danh\", {\n        variant: \"error\"\n      });\n      return false;\n    }\n  };\n\n  // Kết thúc phiên điểm danh\n  const completeSession = async () => {\n    try {\n      await axios.put(`${API_URL}/attendance/sessions/${sessionId}`, {\n        status: \"completed\"\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      enqueueSnackbar(\"Phiên điểm danh đã kết thúc\", {\n        variant: \"success\"\n      });\n      navigate(`/teacher/classes/${classId}`);\n    } catch (error) {\n      console.error(\"Lỗi khi kết thúc phiên điểm danh:\", error);\n      enqueueSnackbar(\"Lỗi khi kết thúc phiên điểm danh\", {\n        variant: \"error\"\n      });\n    }\n  };\n\n  // Làm mới danh sách điểm danh\n  const refreshAttendanceLogs = async () => {\n    try {\n      const logsResponse = await axios.get(`${API_URL}/attendance/logs/${sessionId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setAttendanceLogs(logsResponse.data.data);\n      const sessionResponse = await axios.get(`${API_URL}/attendance/sessions/${sessionId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSessionInfo(sessionResponse.data.data);\n      enqueueSnackbar(\"Đã làm mới dữ liệu điểm danh\", {\n        variant: \"success\"\n      });\n    } catch (error) {\n      console.error(\"Lỗi khi làm mới dữ liệu:\", error);\n      enqueueSnackbar(\"Lỗi khi làm mới dữ liệu\", {\n        variant: \"error\"\n      });\n    }\n  };\n\n  // Chụp ảnh và nhận diện thủ công\n  const captureAndRecognize = async () => {\n    await recognizeFaces();\n  };\n\n  // Hàm khởi tạo camera trực tiếp - nút duy nhất cho camera\n  const initDirectCamera = () => {\n    try {\n      // Tải model nhận diện\n      loadFaceRecognitionModels();\n\n      // Truy cập camera trực tiếp thông qua MediaDevices API\n      navigator.mediaDevices.getUserMedia({\n        video: {\n          width: {\n            ideal: 1280\n          },\n          height: {\n            ideal: 720\n          },\n          facingMode: \"user\"\n        },\n        audio: false\n      }).then(stream => {\n        console.log(\"Đã nhận được stream camera trực tiếp\", stream.id);\n\n        // Nếu đang sử dụng webcam component\n        if (webcamRef.current && webcamRef.current.video) {\n          webcamRef.current.video.srcObject = stream;\n        }\n        // Hoặc nếu đang sử dụng video element\n        else if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n          videoRef.current.onloadedmetadata = () => {\n            videoRef.current.play().catch(err => console.error(\"Lỗi khi play video:\", err));\n          };\n        }\n\n        // Đánh dấu camera và model đã sẵn sàng\n        dispatch(setModelLoaded(true));\n        dispatch(setCameraReady(true));\n        enqueueSnackbar(\"Đã kết nối camera thành công\", {\n          variant: \"success\"\n        });\n\n        // Bật hiển thị landmark sau khi camera khởi động\n        setTimeout(() => {\n          if (!landmarkIntervalId) {\n            toggleLandmarkDetection();\n          }\n        }, 1000);\n      }).catch(err => {\n        console.error(\"Lỗi truy cập camera:\", err);\n        enqueueSnackbar(`Không thể truy cập camera: ${err.message}`, {\n          variant: \"error\"\n        });\n      });\n    } catch (err) {\n      console.error(\"Lỗi khi khởi tạo camera trực tiếp:\", err);\n      enqueueSnackbar(`Lỗi: ${err.message}`, {\n        variant: \"error\"\n      });\n    }\n  };\n\n  // Điểm danh thủ công trong chế độ đơn giản\n  const showStudentList = () => {\n    if (!classInfo) return;\n\n    // Hiển thị danh sách sinh viên để điểm danh thủ công\n    const absentStudents = getAbsentStudents();\n    if (absentStudents.length === 0) {\n      enqueueSnackbar(\"Tất cả sinh viên đã được điểm danh\", {\n        variant: \"success\"\n      });\n      return;\n    }\n\n    // Hiển thị dialog chọn sinh viên để điểm danh\n    if (absentStudents.length > 0 && absentStudents[0]) {\n      openManualAttendanceDialog(absentStudents[0]);\n    }\n  };\n\n  // Sửa hàm toggle landmark để có tỷ lệ chính xác\n  const toggleLandmarkDetection = () => {\n    if (landmarkIntervalId) {\n      clearInterval(landmarkIntervalId);\n      setLandmarkIntervalId(null);\n      setShowLandmark(false);\n\n      // Xóa landmarks hiện tại\n      if (canvasRef.current) {\n        const ctx = canvasRef.current.getContext(\"2d\");\n        ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      }\n      enqueueSnackbar(\"Đã tắt hiển thị landmarks\", {\n        variant: \"info\"\n      });\n    } else {\n      setShowLandmark(true);\n      const id = setInterval(async () => {\n        var _webcamRef$current2;\n        const videoElement = isAutoMode ? videoRef.current : (_webcamRef$current2 = webcamRef.current) === null || _webcamRef$current2 === void 0 ? void 0 : _webcamRef$current2.video;\n        if (!videoElement || videoElement.readyState !== 4 || !canvasRef.current) return;\n        try {\n          // Chỉ phát hiện khuôn mặt và landmark, không cần descriptor (nhanh hơn)\n          const detections = await faceapi.detectAllFaces(videoElement, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks();\n          if (detections.length === 0) return;\n\n          // Lấy kích thước thực của video và canvas\n          const videoWidth = videoElement.videoWidth || videoElement.width;\n          const videoHeight = videoElement.videoHeight || videoElement.height;\n\n          // Lấy kích thước hiển thị của video và canvas\n          const displaySize = {\n            width: videoElement.clientWidth || canvasRef.current.clientWidth,\n            height: videoElement.clientHeight || canvasRef.current.clientHeight\n          };\n\n          // Đặt kích thước canvas bằng với kích thước hiển thị\n          canvasRef.current.width = displaySize.width;\n          canvasRef.current.height = displaySize.height;\n\n          // Tính toán tỷ lệ giữa kích thước thực và kích thước hiển thị\n          const scaleX = displaySize.width / videoWidth;\n          const scaleY = displaySize.height / videoHeight;\n\n          // Điều chỉnh kích thước phát hiện để phù hợp với kích thước hiển thị\n          const resizedDetections = faceapi.resizeResults(detections, displaySize);\n\n          // Xóa canvas\n          const ctx = canvasRef.current.getContext(\"2d\");\n          ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n          // Vẽ boxes và landmarks trực tiếp từ kết quả đã điều chỉnh kích thước\n          faceapi.draw.drawDetections(canvasRef.current, resizedDetections);\n          faceapi.draw.drawFaceLandmarks(canvasRef.current, resizedDetections, {\n            drawLines: true,\n            color: \"red\"\n          });\n        } catch (err) {\n          console.error(\"Lỗi khi phát hiện landmarks:\", err);\n        }\n      }, 80); // 12 FPS\n\n      setLandmarkIntervalId(id);\n      enqueueSnackbar(\"Đã bật hiển thị landmarks realtime\", {\n        variant: \"success\"\n      });\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"60vh\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 720,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Lấy danh sách sinh viên vắng mặt\n  const getAbsentStudents = () => {\n    if (!classInfo || !sessionInfo) return [];\n    const presentStudentIds = attendanceLogs.filter(log => log.status === \"present\").map(log => log.student_id._id);\n    return classInfo.students.filter(student => !presentStudentIds.includes(student._id));\n  };\n  const absentStudents = getAbsentStudents();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: [\"\\u0110i\\u1EC3m Danh - \", classInfo === null || classInfo === void 0 ? void 0 : classInfo.class_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 748,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      color: \"textSecondary\",\n      gutterBottom: true,\n      children: [\"Bu\\u1ED5i \", sessionInfo === null || sessionInfo === void 0 ? void 0 : sessionInfo.session_number, \" -\", \" \", new Date(sessionInfo === null || sessionInfo === void 0 ? void 0 : sessionInfo.date).toLocaleDateString(\"vi-VN\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 751,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      mt: 1,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              mb: 2,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Camera nh\\u1EADn di\\u1EC7n\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 766,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Chip, {\n                  label: isAutoMode ? \"Tự động đang bật\" : \"Tự động đang tắt\",\n                  color: isAutoMode ? \"success\" : \"default\",\n                  sx: {\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 768,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: isAutoMode ? \"error\" : \"primary\",\n                  onClick: isAutoMode ? () => {\n                    // Dừng tự động\n                    if (intervalId) {\n                      clearInterval(intervalId);\n                      setIntervalId(null);\n                    }\n                    setIsAutoMode(false);\n                    enqueueSnackbar(\"Đã tắt chế độ tự động điểm danh\", {\n                      variant: \"info\"\n                    });\n                  } : () => {\n                    // Bắt đầu tự động\n                    if (intervalId) {\n                      clearInterval(intervalId);\n                    }\n                    const id = setInterval(() => {\n                      recognizeFaces();\n                    }, AUTO_DETECT_INTERVAL);\n                    setIntervalId(id);\n                    setIsAutoMode(true);\n                    enqueueSnackbar(\"Đã bật chế độ tự động điểm danh\", {\n                      variant: \"info\"\n                    });\n                  },\n                  children: isAutoMode ? \"Tắt tự động\" : \"Bật tự động\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 773,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 767,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 760,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 759,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            sx: {\n              position: \"relative\",\n              width: \"100%\",\n              height: \"400px\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              overflow: \"hidden\",\n              mb: 2\n            },\n            children: isCameraReady ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [isAutoMode ?\n              /*#__PURE__*/\n              // Sử dụng video element trực tiếp thay vì Webcam component\n              _jsxDEV(\"video\", {\n                ref: videoRef,\n                style: {\n                  position: \"absolute\",\n                  width: \"100%\",\n                  height: \"100%\",\n                  objectFit: \"cover\"\n                },\n                autoPlay: true,\n                playsInline: true,\n                muted: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 828,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Webcam, {\n                audio: false,\n                ref: webcamRef,\n                screenshotFormat: \"image/jpeg\",\n                width: 640,\n                height: 480,\n                videoConstraints: {\n                  width: 640,\n                  height: 480,\n                  facingMode: \"user\"\n                },\n                style: {\n                  position: \"absolute\",\n                  width: \"100%\",\n                  height: \"100%\",\n                  objectFit: \"cover\"\n                },\n                onUserMedia: stream => {\n                  console.log(\"Camera đã được cấp quyền và khởi tạo\", stream.id);\n                  // Đảm bảo readyState được kiểm tra khi stream đã sẵn sàng\n                  setTimeout(() => {\n                    if (webcamRef.current && webcamRef.current.video) {\n                      console.log(\"Stream ready, readyState=\", webcamRef.current.video.readyState);\n                      dispatch(setCameraReady(true));\n                    }\n                  }, 500);\n                },\n                onUserMediaError: err => {\n                  console.error(\"Lỗi khi truy cập camera:\", err);\n                  enqueueSnackbar(`Không thể truy cập camera: ${err.name === \"NotAllowedError\" ? \"Bạn chưa cấp quyền truy cập camera\" : err.name === \"NotFoundError\" ? \"Không tìm thấy thiết bị camera\" : err.message || \"Lỗi không xác định\"}`, {\n                    variant: \"error\"\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 841,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n                ref: canvasRef,\n                style: {\n                  position: \"absolute\",\n                  top: 0,\n                  left: 0,\n                  width: \"100%\",\n                  height: \"100%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 892,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 50\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 905,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                mt: 2,\n                children: \"\\u0110ang kh\\u1EDFi t\\u1EA1o camera...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 906,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                color: \"text.secondary\",\n                sx: {\n                  mt: 1\n                },\n                children: isModelLoaded ? \"Chờ kết nối camera - Hãy đảm bảo bạn đã cấp quyền camera\" : \"Đang tải mô hình nhận diện khuôn mặt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 907,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mt: 2,\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  size: \"small\",\n                  sx: {\n                    mb: 1\n                  },\n                  onClick: initDirectCamera,\n                  children: \"Kh\\u1EDFi \\u0111\\u1ED9ng camera tr\\u1EF1c ti\\u1EBFp\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 925,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 917,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 904,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 811,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              onClick: captureAndRecognize,\n              startIcon: /*#__PURE__*/_jsxDEV(CameraAlt, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 943,\n                columnNumber: 28\n              }, this),\n              disabled: !isCameraReady || isRecognizing || isAutoMode,\n              children: isRecognizing ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 24,\n                color: \"inherit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 947,\n                columnNumber: 19\n              }, this) : \"Chụp & Nhận diện\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 940,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: [isCameraReady && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: showLandmark ? \"success\" : \"info\",\n                  onClick: toggleLandmarkDetection,\n                  sx: {\n                    mr: 1\n                  },\n                  children: showLandmark ? \"Tắt Landmark\" : \"Hiện Landmark\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 956,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: isAutoMode ? \"error\" : \"primary\",\n                  onClick: isAutoMode ? () => {\n                    // Dừng tự động\n                    if (intervalId) {\n                      clearInterval(intervalId);\n                      setIntervalId(null);\n                    }\n                    setIsAutoMode(false);\n                    enqueueSnackbar(\"Đã tắt chế độ tự động điểm danh\", {\n                      variant: \"info\"\n                    });\n                  } : () => {\n                    // Bắt đầu tự động\n                    if (intervalId) {\n                      clearInterval(intervalId);\n                    }\n                    const id = setInterval(() => {\n                      recognizeFaces();\n                    }, AUTO_DETECT_INTERVAL);\n                    setIntervalId(id);\n                    setIsAutoMode(true);\n                    enqueueSnackbar(\"Đã bật chế độ tự động điểm danh\", {\n                      variant: \"info\"\n                    });\n                  },\n                  sx: {\n                    mr: 1\n                  },\n                  children: isAutoMode ? \"Tắt tự động\" : \"Bật tự động\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 965,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: completeSession,\n                startIcon: /*#__PURE__*/_jsxDEV(Save, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1009,\n                  columnNumber: 30\n                }, this),\n                disabled: (sessionInfo === null || sessionInfo === void 0 ? void 0 : sessionInfo.status) === \"completed\",\n                children: \"K\\u1EBFt th\\xFAc phi\\xEAn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1005,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 953,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 939,\n            columnNumber: 13\n          }, this), recognizedStudents.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n            mt: 2,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: [\"\\u0110\\xE3 nh\\u1EADn di\\u1EC7n (\", recognizedStudents.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1019,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 1,\n              children: recognizedStudents.map((student, index) => /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                sm: 4,\n                children: /*#__PURE__*/_jsxDEV(Paper, {\n                  elevation: 2,\n                  sx: {\n                    p: 1,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    noWrap: true,\n                    children: student.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1034,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    color: \"textSecondary\",\n                    children: [Math.round(student.confidence * 100), \"% match\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1037,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    variant: \"outlined\",\n                    color: \"primary\",\n                    sx: {\n                      mt: 1\n                    },\n                    onClick: () => {\n                      var _webcamRef$current3;\n                      return markAttendance(student.studentId, student.descriptor, student.confidence, (_webcamRef$current3 = webcamRef.current) === null || _webcamRef$current3 === void 0 ? void 0 : _webcamRef$current3.getScreenshot());\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Check, {\n                      fontSize: \"small\",\n                      sx: {\n                        mr: 0.5\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1054,\n                      columnNumber: 27\n                    }, this), \"\\u0110i\\u1EC3m danh\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1040,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1025,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1024,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1022,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1018,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 757,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            mb: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              mb: 2,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: [\"C\\xF3 m\\u1EB7t (\", attendanceLogs.filter(log => log.status === \"present\").length, \"/\", classInfo === null || classInfo === void 0 ? void 0 : classInfo.students.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1075,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"small\",\n                onClick: refreshAttendanceLogs,\n                children: /*#__PURE__*/_jsxDEV(Refresh, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1084,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1083,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1069,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              dense: true,\n              children: [attendanceLogs.filter(log => log.status === \"present\").sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp)).map(log => /*#__PURE__*/_jsxDEV(ListItem, {\n                secondaryAction: /*#__PURE__*/_jsxDEV(Chip, {\n                  size: \"small\",\n                  icon: log.recognized ? /*#__PURE__*/_jsxDEV(VerifiedUser, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1100,\n                    columnNumber: 31\n                  }, this) : null,\n                  label: log.recognized ? \"Tự động\" : \"Thủ công\",\n                  color: log.recognized ? \"success\" : \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1096,\n                  columnNumber: 25\n                }, this),\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    alt: log.student_id.full_name,\n                    src: log.student_id.avatar_url\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1109,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1108,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: log.student_id.full_name,\n                  secondary: `${new Date(log.timestamp).toLocaleTimeString(\"vi-VN\")}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1114,\n                  columnNumber: 23\n                }, this)]\n              }, log._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1093,\n                columnNumber: 21\n              }, this)), attendanceLogs.filter(log => log.status === \"present\").length === 0 && /*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: \"Ch\\u01B0a c\\xF3 sinh vi\\xEAn n\\xE0o \\u0111i\\u1EC3m danh\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1126,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1125,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1088,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1068,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1067,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: [\"V\\u1EAFng m\\u1EB7t (\", absentStudents.length, \"/\", classInfo === null || classInfo === void 0 ? void 0 : classInfo.students.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              dense: true,\n              children: [absentStudents.map(student => /*#__PURE__*/_jsxDEV(ListItem, {\n                secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n                  edge: \"end\",\n                  onClick: () => openManualAttendanceDialog(student),\n                  children: /*#__PURE__*/_jsxDEV(Edit, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1148,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1144,\n                  columnNumber: 23\n                }, this),\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    alt: student.full_name,\n                    src: student.avatar_url\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1153,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1152,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: student.full_name,\n                  secondary: student.student_code\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1158,\n                  columnNumber: 21\n                }, this)]\n              }, student._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1141,\n                columnNumber: 19\n              }, this)), absentStudents.length === 0 && /*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: \"Kh\\xF4ng c\\xF3 sinh vi\\xEAn n\\xE0o v\\u1EAFng m\\u1EB7t\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1167,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1166,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1139,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1066,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: manualDialogOpen,\n      onClose: handleManualDialogClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"\\u0110i\\u1EC3m danh th\\u1EE7 c\\xF4ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: [selectedStudent === null || selectedStudent === void 0 ? void 0 : selectedStudent.full_name, \" (\", selectedStudent === null || selectedStudent === void 0 ? void 0 : selectedStudent.student_code, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            margin: \"normal\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Tr\\u1EA1ng th\\xE1i\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              name: \"status\",\n              value: manualAttendanceData.status,\n              onChange: handleManualAttendanceChange,\n              label: \"Tr\\u1EA1ng th\\xE1i\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"present\",\n                children: \"C\\xF3 m\\u1EB7t\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1193,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"absent\",\n                children: \"V\\u1EAFng m\\u1EB7t\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1194,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"late\",\n                children: \"\\u0110i tr\\u1EC5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1195,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"early_leave\",\n                children: \"V\\u1EC1 s\\u1EDBm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1196,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1187,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            margin: \"normal\",\n            name: \"note\",\n            label: \"Ghi ch\\xFA\",\n            value: manualAttendanceData.note,\n            onChange: handleManualAttendanceChange,\n            multiline: true,\n            rows: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleManualDialogClose,\n          children: \"H\\u1EE7y\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleManualAttendanceSubmit,\n          variant: \"contained\",\n          children: \"X\\xE1c nh\\u1EADn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 747,\n    columnNumber: 5\n  }, this);\n};\n_s(AttendancePage, \"xF2uNwGAKlt1XU8f7AkoFEYVw9M=\", false, function () {\n  return [useParams, useNavigate, useDispatch, useSnackbar, useSelector, useSelector];\n});\n_c = AttendancePage;\nexport default AttendancePage;\nvar _c;\n$RefreshReg$(_c, \"AttendancePage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","useDispatch","useSelector","useSnackbar","Box","Typography","Card","CardContent","Grid","Paper","Button","Divider","CircularProgress","List","ListItem","ListItemAvatar","ListItemText","Avatar","Chip","Dialog","DialogTitle","DialogContent","DialogActions","TextField","FormControl","InputLabel","Select","MenuItem","IconButton","Alert","CameraAlt","Check","Close","Edit","Refresh","Save","VerifiedUser","HourglassEmpty","Webcam","faceapi","getClassFaceFeatures","verifyAttendance","manualAttendance","setModelLoaded","setCameraReady","setDetectedFaces","setRecognizedStudents","clearRecognitionState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","process","env","REACT_APP_API_URL","AttendancePage","_s","classId","sessionId","navigate","dispatch","enqueueSnackbar","webcamRef","canvasRef","videoRef","intervalId","setIntervalId","showLandmark","setShowLandmark","landmarkIntervalId","setLandmarkIntervalId","token","state","auth","isModelLoaded","isCameraReady","detectedFaces","recognizedStudents","classStudents","isProcessing","error","faceRecognition","classInfo","setClassInfo","sessionInfo","setSessionInfo","attendanceLogs","setAttendanceLogs","isLoading","setIsLoading","isRecognizing","setIsRecognizing","isAutoMode","setIsAutoMode","selectedStudent","setSelectedStudent","manualDialogOpen","setManualDialogOpen","manualAttendanceData","setManualAttendanceData","status","note","RECOGNITION_THRESHOLD","AUTO_DETECT_INTERVAL","loadInitialData","loadModelsPromise","loadFaceRecognitionModels","Promise","resolve","classPromise","get","headers","Authorization","sessionPromise","logsPromise","classResponse","sessionResponse","logsResponse","all","data","console","variant","clearInterval","current","video","srcObject","tracks","getTracks","forEach","track","stop","MODEL_URL","log","modelPromises","nets","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","modelStatuses","isLoaded","every","recognizeFaces","_webcamRef$current","videoElement","length","readyState","detections","detectAllFaces","TinyFaceDetectorOptions","withFaceLandmarks","withFaceDescriptors","displaySize","width","videoWidth","height","videoHeight","matchDimensions","resizedDetections","resizeResults","ctx","getContext","clearRect","labeledDescriptors","map","student","descriptors","faceDescriptors","descriptor","Float32Array","LabeledFaceDescriptors","_id","faceMatcher","FaceMatcher","recognized","detection","_classStudents$find","bestMatch","findBestMatch","label","distance","drawBox","draw","DrawBox","box","find","s","full_name","Math","round","boxColor","drawFaceLandmarks","push","studentId","confidence","name","Array","from","recognizedStudent","isAlreadyAttended","some","student_id","imageBase64","getScreenshot","canvas","document","createElement","drawImage","toDataURL","markAttendance","openManualAttendanceDialog","handleManualDialogClose","handleManualAttendanceChange","e","target","value","handleManualAttendanceSubmit","result","unwrap","updatedLogs","filter","faceDescriptor","completeSession","put","refreshAttendanceLogs","captureAndRecognize","initDirectCamera","navigator","mediaDevices","getUserMedia","ideal","facingMode","audio","then","stream","id","onloadedmetadata","play","catch","err","setTimeout","toggleLandmarkDetection","message","showStudentList","absentStudents","getAbsentStudents","setInterval","_webcamRef$current2","clientWidth","clientHeight","scaleX","scaleY","drawDetections","drawLines","color","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","presentStudentIds","students","includes","gutterBottom","class_name","session_number","Date","date","toLocaleDateString","container","spacing","mt","item","xs","md","mb","sx","mr","onClick","elevation","position","overflow","ref","style","objectFit","autoPlay","playsInline","muted","screenshotFormat","videoConstraints","onUserMedia","onUserMediaError","top","left","flexDirection","size","startIcon","disabled","index","sm","p","noWrap","_webcamRef$current3","fontSize","dense","sort","a","b","timestamp","secondaryAction","icon","alt","src","avatar_url","primary","secondary","toLocaleTimeString","edge","student_code","open","onClose","fullWidth","margin","onChange","multiline","rows","_c","$RefreshReg$"],"sources":["C:/Users/kasiz/Documents/Studying/FaceReg/frontend/src/pages/teacher/AttendancePage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Paper,\r\n  Button,\r\n  Divider,\r\n  CircularProgress,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Avatar,\r\n  Chip,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  IconButton,\r\n  Alert,\r\n} from \"@mui/material\";\r\nimport {\r\n  CameraAlt,\r\n  Check,\r\n  Close,\r\n  Edit,\r\n  Refresh,\r\n  Save,\r\n  VerifiedUser,\r\n  HourglassEmpty,\r\n} from \"@mui/icons-material\";\r\nimport Webcam from \"react-webcam\";\r\nimport * as faceapi from \"face-api.js\";\r\nimport {\r\n  getClassFaceFeatures,\r\n  verifyAttendance,\r\n  manualAttendance,\r\n  setModelLoaded,\r\n  setCameraReady,\r\n  setDetectedFaces,\r\n  setRecognizedStudents,\r\n  clearRecognitionState,\r\n} from \"../../redux/slices/faceRecognitionSlice\";\r\nimport axios from \"axios\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\r\n\r\nconst AttendancePage = () => {\r\n  const { classId, sessionId } = useParams();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const videoRef = useRef(null);\r\n  const [intervalId, setIntervalId] = useState(null);\r\n  const [showLandmark, setShowLandmark] = useState(false);\r\n  const [landmarkIntervalId, setLandmarkIntervalId] = useState(null);\r\n\r\n  const { token } = useSelector((state) => state.auth);\r\n  const {\r\n    isModelLoaded,\r\n    isCameraReady,\r\n    detectedFaces,\r\n    recognizedStudents,\r\n    classStudents,\r\n    isProcessing,\r\n    error,\r\n  } = useSelector((state) => state.faceRecognition);\r\n\r\n  const [classInfo, setClassInfo] = useState(null);\r\n  const [sessionInfo, setSessionInfo] = useState(null);\r\n  const [attendanceLogs, setAttendanceLogs] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isRecognizing, setIsRecognizing] = useState(false);\r\n  const [isAutoMode, setIsAutoMode] = useState(false);\r\n  const [selectedStudent, setSelectedStudent] = useState(null);\r\n  const [manualDialogOpen, setManualDialogOpen] = useState(false);\r\n  const [manualAttendanceData, setManualAttendanceData] = useState({\r\n    status: \"present\",\r\n    note: \"\",\r\n  });\r\n\r\n  // Các hằng số cho nhận diện khuôn mặt\r\n  const RECOGNITION_THRESHOLD = 0.6; // Ngưỡng nhận diện (càng thấp càng nghiêm ngặt)\r\n  const AUTO_DETECT_INTERVAL = 1000; // 1 giây\r\n\r\n  // Load class info, session info và models\r\n  useEffect(() => {\r\n    const loadInitialData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n\r\n        // Bắt đầu tải dữ liệu và models song song\r\n        const loadModelsPromise = !isModelLoaded\r\n          ? loadFaceRecognitionModels()\r\n          : Promise.resolve(true);\r\n\r\n        // Lấy thông tin lớp học\r\n        const classPromise = axios.get(\r\n          `${API_URL}/classes/teaching/${classId}`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        );\r\n\r\n        // Lấy thông tin phiên điểm danh\r\n        const sessionPromise = axios.get(\r\n          `${API_URL}/attendance/sessions/${sessionId}`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        );\r\n\r\n        // Lấy danh sách điểm danh\r\n        const logsPromise = axios.get(\r\n          `${API_URL}/attendance/logs/${sessionId}`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        );\r\n\r\n        // Chờ tất cả API calls hoàn thành\r\n        const [classResponse, sessionResponse, logsResponse] =\r\n          await Promise.all([classPromise, sessionPromise, logsPromise]);\r\n\r\n        setClassInfo(classResponse.data.data);\r\n        setSessionInfo(sessionResponse.data.data);\r\n        setAttendanceLogs(logsResponse.data.data);\r\n\r\n        // Lấy đặc trưng khuôn mặt của sinh viên trong lớp\r\n        dispatch(getClassFaceFeatures(classId));\r\n\r\n        // Không chờ đợi model load xong mới hiển thị UI\r\n        setIsLoading(false);\r\n\r\n        // Model sẽ load song song\r\n        await loadModelsPromise;\r\n      } catch (error) {\r\n        console.error(\"Lỗi khi tải dữ liệu:\", error);\r\n        enqueueSnackbar(\"Lỗi khi tải dữ liệu\", { variant: \"error\" });\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    loadInitialData();\r\n\r\n    // Clean up\r\n    return () => {\r\n      if (intervalId) {\r\n        clearInterval(intervalId);\r\n      }\r\n\r\n      // Dừng landmark interval nếu đang chạy\r\n      if (landmarkIntervalId) {\r\n        clearInterval(landmarkIntervalId);\r\n      }\r\n\r\n      // Dừng camera stream nếu đang chạy\r\n      if (\r\n        webcamRef.current &&\r\n        webcamRef.current.video &&\r\n        webcamRef.current.video.srcObject\r\n      ) {\r\n        const tracks = webcamRef.current.video.srcObject.getTracks();\r\n        tracks.forEach((track) => track.stop());\r\n      }\r\n\r\n      if (videoRef.current && videoRef.current.srcObject) {\r\n        const tracks = videoRef.current.srcObject.getTracks();\r\n        tracks.forEach((track) => track.stop());\r\n      }\r\n\r\n      dispatch(clearRecognitionState());\r\n    };\r\n  }, [\r\n    classId,\r\n    sessionId,\r\n    token,\r\n    dispatch,\r\n    enqueueSnackbar,\r\n    isModelLoaded,\r\n    intervalId,\r\n    landmarkIntervalId,\r\n  ]);\r\n\r\n  // Load các mô hình nhận diện khuôn mặt\r\n  const loadFaceRecognitionModels = async () => {\r\n    try {\r\n      const MODEL_URL = \"/models\";\r\n      console.log(\"Bắt đầu tải models từ:\", MODEL_URL);\r\n\r\n      // Thêm timeout để đảm bảo có đủ thời gian tải models\r\n      const modelPromises = [\r\n        faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL),\r\n        faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),\r\n        faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL),\r\n      ];\r\n\r\n      // Kiểm tra xem các models đã được tải chưa\r\n      const modelStatuses = [\r\n        faceapi.nets.tinyFaceDetector.isLoaded,\r\n        faceapi.nets.faceLandmark68Net.isLoaded,\r\n        faceapi.nets.faceRecognitionNet.isLoaded,\r\n      ];\r\n\r\n      if (modelStatuses.every((status) => status)) {\r\n        console.log(\"Các models đã được tải từ trước\");\r\n        dispatch(setModelLoaded(true));\r\n        return true;\r\n      }\r\n\r\n      await Promise.all(modelPromises);\r\n\r\n      console.log(\"Đã tải xong models thành công\");\r\n      dispatch(setModelLoaded(true));\r\n      enqueueSnackbar(\"Tải mô hình nhận diện thành công\", {\r\n        variant: \"success\",\r\n      });\r\n      return true;\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi tải mô hình:\", error);\r\n      enqueueSnackbar(\"Không thể tải mô hình nhận diện\", { variant: \"error\" });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Nhận diện khuôn mặt\r\n  const recognizeFaces = async () => {\r\n    // Xác định nguồn video (webcam hoặc video đơn giản)\r\n    const videoElement = isAutoMode\r\n      ? videoRef.current\r\n      : webcamRef.current?.video;\r\n\r\n    if (!videoElement || !canvasRef.current || classStudents.length === 0) {\r\n      console.error(\r\n        \"Không có video element hoặc canvas hoặc danh sách sinh viên rỗng\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (videoElement.readyState !== 4) {\r\n      console.log(\"Video chưa sẵn sàng, readyState =\", videoElement.readyState);\r\n      return;\r\n    }\r\n\r\n    setIsRecognizing(true);\r\n\r\n    try {\r\n      // Phát hiện khuôn mặt\r\n      const detections = await faceapi\r\n        .detectAllFaces(videoElement, new faceapi.TinyFaceDetectorOptions())\r\n        .withFaceLandmarks()\r\n        .withFaceDescriptors();\r\n\r\n      console.log(\"Đã phát hiện\", detections.length, \"khuôn mặt\");\r\n      dispatch(setDetectedFaces(detections));\r\n\r\n      // Hiển thị phát hiện\r\n      const displaySize = {\r\n        width: videoElement.videoWidth || videoElement.width,\r\n        height: videoElement.videoHeight || videoElement.height,\r\n      };\r\n\r\n      faceapi.matchDimensions(canvasRef.current, displaySize);\r\n\r\n      const resizedDetections = faceapi.resizeResults(detections, displaySize);\r\n\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n      ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n\r\n      // Tạo FaceMatcher từ dữ liệu sinh viên\r\n      const labeledDescriptors = classStudents.map((student) => {\r\n        const descriptors = student.faceDescriptors.map(\r\n          (descriptor) => new Float32Array(descriptor)\r\n        );\r\n        return new faceapi.LabeledFaceDescriptors(student._id, descriptors);\r\n      });\r\n\r\n      if (labeledDescriptors.length > 0) {\r\n        const faceMatcher = new faceapi.FaceMatcher(\r\n          labeledDescriptors,\r\n          RECOGNITION_THRESHOLD\r\n        );\r\n\r\n        // Nhận diện từng khuôn mặt\r\n        const recognized = [];\r\n\r\n        resizedDetections.forEach((detection) => {\r\n          const bestMatch = faceMatcher.findBestMatch(detection.descriptor);\r\n          const { label, distance } = bestMatch;\r\n\r\n          const drawBox = new faceapi.draw.DrawBox(detection.detection.box, {\r\n            label:\r\n              label !== \"unknown\"\r\n                ? `${\r\n                    classStudents.find((s) => s._id === label)?.full_name ||\r\n                    \"Unknown\"\r\n                  } (${Math.round((1 - distance) * 100)}%)`\r\n                : \"Unknown\",\r\n            boxColor: label !== \"unknown\" ? \"green\" : \"red\",\r\n          });\r\n\r\n          drawBox.draw(canvasRef.current);\r\n\r\n          // Vẽ landmarks nếu được yêu cầu\r\n          if (showLandmark) {\r\n            faceapi.draw.drawFaceLandmarks(canvasRef.current, [detection]);\r\n          }\r\n\r\n          if (label !== \"unknown\") {\r\n            const student = classStudents.find((s) => s._id === label);\r\n            if (student) {\r\n              recognized.push({\r\n                studentId: label,\r\n                confidence: 1 - distance,\r\n                name: student.full_name,\r\n                descriptor: Array.from(detection.descriptor),\r\n              });\r\n            }\r\n          }\r\n        });\r\n\r\n        dispatch(setRecognizedStudents(recognized));\r\n\r\n        // Tự động điểm danh nếu đang ở chế độ tự động\r\n        if (isAutoMode && recognized.length > 0) {\r\n          for (const recognizedStudent of recognized) {\r\n            // Chỉ điểm danh nếu độ tin cậy > 0.7 (tương đương với khoảng cách < 0.3)\r\n            if (recognizedStudent.confidence > 0.7) {\r\n              const isAlreadyAttended = attendanceLogs.some(\r\n                (log) =>\r\n                  log.student_id._id === recognizedStudent.studentId &&\r\n                  log.status === \"present\"\r\n              );\r\n\r\n              if (!isAlreadyAttended) {\r\n                let imageBase64 = null;\r\n                if (!isAutoMode && webcamRef.current) {\r\n                  imageBase64 = webcamRef.current.getScreenshot();\r\n                } else if (isAutoMode) {\r\n                  // Tạo ảnh chụp từ video element\r\n                  const canvas = document.createElement(\"canvas\");\r\n                  canvas.width = videoElement.videoWidth;\r\n                  canvas.height = videoElement.videoHeight;\r\n                  const ctx = canvas.getContext(\"2d\");\r\n                  ctx.drawImage(videoElement, 0, 0);\r\n                  imageBase64 = canvas.toDataURL(\"image/jpeg\");\r\n                }\r\n\r\n                await markAttendance(\r\n                  recognizedStudent.studentId,\r\n                  recognizedStudent.descriptor,\r\n                  recognizedStudent.confidence,\r\n                  imageBase64\r\n                );\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi nhận diện khuôn mặt:\", error);\r\n    } finally {\r\n      setIsRecognizing(false);\r\n    }\r\n  };\r\n\r\n  // Điểm danh thủ công\r\n  const openManualAttendanceDialog = (student) => {\r\n    setSelectedStudent(student);\r\n    setManualAttendanceData({\r\n      status: \"present\",\r\n      note: \"\",\r\n    });\r\n    setManualDialogOpen(true);\r\n  };\r\n\r\n  const handleManualDialogClose = () => {\r\n    setManualDialogOpen(false);\r\n  };\r\n\r\n  const handleManualAttendanceChange = (e) => {\r\n    setManualAttendanceData({\r\n      ...manualAttendanceData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleManualAttendanceSubmit = async () => {\r\n    if (!selectedStudent) return;\r\n\r\n    try {\r\n      const result = await dispatch(\r\n        manualAttendance({\r\n          sessionId,\r\n          studentId: selectedStudent._id,\r\n          status: manualAttendanceData.status,\r\n          note: manualAttendanceData.note,\r\n        })\r\n      ).unwrap();\r\n\r\n      // Cập nhật logs điểm danh\r\n      if (result && result.data) {\r\n        const updatedLogs = attendanceLogs.filter(\r\n          (log) => log.student_id._id !== selectedStudent._id\r\n        );\r\n\r\n        updatedLogs.push({\r\n          ...result.data,\r\n          student_id: selectedStudent,\r\n        });\r\n\r\n        setAttendanceLogs(updatedLogs);\r\n      }\r\n\r\n      enqueueSnackbar(\"Điểm danh thủ công thành công\", { variant: \"success\" });\r\n      handleManualDialogClose();\r\n\r\n      // Cập nhật lại thông tin phiên điểm danh\r\n      const sessionResponse = await axios.get(\r\n        `${API_URL}/attendance/sessions/${sessionId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      setSessionInfo(sessionResponse.data.data);\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi điểm danh thủ công:\", error);\r\n      enqueueSnackbar(\"Lỗi khi điểm danh thủ công\", { variant: \"error\" });\r\n    }\r\n  };\r\n\r\n  // Đánh dấu điểm danh từ nhận diện khuôn mặt\r\n  const markAttendance = async (\r\n    studentId,\r\n    faceDescriptor,\r\n    confidence,\r\n    imageBase64\r\n  ) => {\r\n    try {\r\n      const result = await dispatch(\r\n        verifyAttendance({\r\n          sessionId,\r\n          studentId,\r\n          faceDescriptor,\r\n          confidence,\r\n          imageBase64,\r\n        })\r\n      ).unwrap();\r\n\r\n      // Cập nhật logs điểm danh\r\n      if (result && result.data) {\r\n        const student = classStudents.find((s) => s._id === studentId);\r\n\r\n        if (student) {\r\n          const updatedLogs = attendanceLogs.filter(\r\n            (log) => log.student_id._id !== studentId\r\n          );\r\n\r\n          updatedLogs.push({\r\n            ...result.data,\r\n            student_id: student,\r\n          });\r\n\r\n          setAttendanceLogs(updatedLogs);\r\n\r\n          enqueueSnackbar(`Đã điểm danh cho ${student.full_name}`, {\r\n            variant: \"success\",\r\n          });\r\n        }\r\n      }\r\n\r\n      // Cập nhật lại thông tin phiên điểm danh\r\n      const sessionResponse = await axios.get(\r\n        `${API_URL}/attendance/sessions/${sessionId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      setSessionInfo(sessionResponse.data.data);\r\n\r\n      return true;\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi xác nhận điểm danh:\", error);\r\n      enqueueSnackbar(\"Lỗi khi xác nhận điểm danh\", { variant: \"error\" });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Kết thúc phiên điểm danh\r\n  const completeSession = async () => {\r\n    try {\r\n      await axios.put(\r\n        `${API_URL}/attendance/sessions/${sessionId}`,\r\n        { status: \"completed\" },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n\r\n      enqueueSnackbar(\"Phiên điểm danh đã kết thúc\", { variant: \"success\" });\r\n      navigate(`/teacher/classes/${classId}`);\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi kết thúc phiên điểm danh:\", error);\r\n      enqueueSnackbar(\"Lỗi khi kết thúc phiên điểm danh\", { variant: \"error\" });\r\n    }\r\n  };\r\n\r\n  // Làm mới danh sách điểm danh\r\n  const refreshAttendanceLogs = async () => {\r\n    try {\r\n      const logsResponse = await axios.get(\r\n        `${API_URL}/attendance/logs/${sessionId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      setAttendanceLogs(logsResponse.data.data);\r\n\r\n      const sessionResponse = await axios.get(\r\n        `${API_URL}/attendance/sessions/${sessionId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      setSessionInfo(sessionResponse.data.data);\r\n\r\n      enqueueSnackbar(\"Đã làm mới dữ liệu điểm danh\", { variant: \"success\" });\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi làm mới dữ liệu:\", error);\r\n      enqueueSnackbar(\"Lỗi khi làm mới dữ liệu\", { variant: \"error\" });\r\n    }\r\n  };\r\n\r\n  // Chụp ảnh và nhận diện thủ công\r\n  const captureAndRecognize = async () => {\r\n    await recognizeFaces();\r\n  };\r\n\r\n  // Hàm khởi tạo camera trực tiếp - nút duy nhất cho camera\r\n  const initDirectCamera = () => {\r\n    try {\r\n      // Tải model nhận diện\r\n      loadFaceRecognitionModels();\r\n\r\n      // Truy cập camera trực tiếp thông qua MediaDevices API\r\n      navigator.mediaDevices\r\n        .getUserMedia({\r\n          video: {\r\n            width: { ideal: 1280 },\r\n            height: { ideal: 720 },\r\n            facingMode: \"user\",\r\n          },\r\n          audio: false,\r\n        })\r\n        .then((stream) => {\r\n          console.log(\"Đã nhận được stream camera trực tiếp\", stream.id);\r\n\r\n          // Nếu đang sử dụng webcam component\r\n          if (webcamRef.current && webcamRef.current.video) {\r\n            webcamRef.current.video.srcObject = stream;\r\n          }\r\n          // Hoặc nếu đang sử dụng video element\r\n          else if (videoRef.current) {\r\n            videoRef.current.srcObject = stream;\r\n            videoRef.current.onloadedmetadata = () => {\r\n              videoRef.current\r\n                .play()\r\n                .catch((err) => console.error(\"Lỗi khi play video:\", err));\r\n            };\r\n          }\r\n\r\n          // Đánh dấu camera và model đã sẵn sàng\r\n          dispatch(setModelLoaded(true));\r\n          dispatch(setCameraReady(true));\r\n\r\n          enqueueSnackbar(\"Đã kết nối camera thành công\", {\r\n            variant: \"success\",\r\n          });\r\n\r\n          // Bật hiển thị landmark sau khi camera khởi động\r\n          setTimeout(() => {\r\n            if (!landmarkIntervalId) {\r\n              toggleLandmarkDetection();\r\n            }\r\n          }, 1000);\r\n        })\r\n        .catch((err) => {\r\n          console.error(\"Lỗi truy cập camera:\", err);\r\n          enqueueSnackbar(`Không thể truy cập camera: ${err.message}`, {\r\n            variant: \"error\",\r\n          });\r\n        });\r\n    } catch (err) {\r\n      console.error(\"Lỗi khi khởi tạo camera trực tiếp:\", err);\r\n      enqueueSnackbar(`Lỗi: ${err.message}`, { variant: \"error\" });\r\n    }\r\n  };\r\n\r\n  // Điểm danh thủ công trong chế độ đơn giản\r\n  const showStudentList = () => {\r\n    if (!classInfo) return;\r\n\r\n    // Hiển thị danh sách sinh viên để điểm danh thủ công\r\n    const absentStudents = getAbsentStudents();\r\n    if (absentStudents.length === 0) {\r\n      enqueueSnackbar(\"Tất cả sinh viên đã được điểm danh\", {\r\n        variant: \"success\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Hiển thị dialog chọn sinh viên để điểm danh\r\n    if (absentStudents.length > 0 && absentStudents[0]) {\r\n      openManualAttendanceDialog(absentStudents[0]);\r\n    }\r\n  };\r\n\r\n  // Sửa hàm toggle landmark để có tỷ lệ chính xác\r\n  const toggleLandmarkDetection = () => {\r\n    if (landmarkIntervalId) {\r\n      clearInterval(landmarkIntervalId);\r\n      setLandmarkIntervalId(null);\r\n      setShowLandmark(false);\r\n\r\n      // Xóa landmarks hiện tại\r\n      if (canvasRef.current) {\r\n        const ctx = canvasRef.current.getContext(\"2d\");\r\n        ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n      }\r\n\r\n      enqueueSnackbar(\"Đã tắt hiển thị landmarks\", { variant: \"info\" });\r\n    } else {\r\n      setShowLandmark(true);\r\n\r\n      const id = setInterval(async () => {\r\n        const videoElement = isAutoMode\r\n          ? videoRef.current\r\n          : webcamRef.current?.video;\r\n\r\n        if (\r\n          !videoElement ||\r\n          videoElement.readyState !== 4 ||\r\n          !canvasRef.current\r\n        )\r\n          return;\r\n\r\n        try {\r\n          // Chỉ phát hiện khuôn mặt và landmark, không cần descriptor (nhanh hơn)\r\n          const detections = await faceapi\r\n            .detectAllFaces(videoElement, new faceapi.TinyFaceDetectorOptions())\r\n            .withFaceLandmarks();\r\n\r\n          if (detections.length === 0) return;\r\n\r\n          // Lấy kích thước thực của video và canvas\r\n          const videoWidth = videoElement.videoWidth || videoElement.width;\r\n          const videoHeight = videoElement.videoHeight || videoElement.height;\r\n\r\n          // Lấy kích thước hiển thị của video và canvas\r\n          const displaySize = {\r\n            width: videoElement.clientWidth || canvasRef.current.clientWidth,\r\n            height: videoElement.clientHeight || canvasRef.current.clientHeight,\r\n          };\r\n\r\n          // Đặt kích thước canvas bằng với kích thước hiển thị\r\n          canvasRef.current.width = displaySize.width;\r\n          canvasRef.current.height = displaySize.height;\r\n\r\n          // Tính toán tỷ lệ giữa kích thước thực và kích thước hiển thị\r\n          const scaleX = displaySize.width / videoWidth;\r\n          const scaleY = displaySize.height / videoHeight;\r\n\r\n          // Điều chỉnh kích thước phát hiện để phù hợp với kích thước hiển thị\r\n          const resizedDetections = faceapi.resizeResults(\r\n            detections,\r\n            displaySize\r\n          );\r\n\r\n          // Xóa canvas\r\n          const ctx = canvasRef.current.getContext(\"2d\");\r\n          ctx.clearRect(\r\n            0,\r\n            0,\r\n            canvasRef.current.width,\r\n            canvasRef.current.height\r\n          );\r\n\r\n          // Vẽ boxes và landmarks trực tiếp từ kết quả đã điều chỉnh kích thước\r\n          faceapi.draw.drawDetections(canvasRef.current, resizedDetections);\r\n          faceapi.draw.drawFaceLandmarks(canvasRef.current, resizedDetections, {\r\n            drawLines: true,\r\n            color: \"red\",\r\n          });\r\n        } catch (err) {\r\n          console.error(\"Lỗi khi phát hiện landmarks:\", err);\r\n        }\r\n      }, 80); // 12 FPS\r\n\r\n      setLandmarkIntervalId(id);\r\n      enqueueSnackbar(\"Đã bật hiển thị landmarks realtime\", {\r\n        variant: \"success\",\r\n      });\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        minHeight=\"60vh\"\r\n      >\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  // Lấy danh sách sinh viên vắng mặt\r\n  const getAbsentStudents = () => {\r\n    if (!classInfo || !sessionInfo) return [];\r\n\r\n    const presentStudentIds = attendanceLogs\r\n      .filter((log) => log.status === \"present\")\r\n      .map((log) => log.student_id._id);\r\n\r\n    return classInfo.students.filter(\r\n      (student) => !presentStudentIds.includes(student._id)\r\n    );\r\n  };\r\n\r\n  const absentStudents = getAbsentStudents();\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Điểm Danh - {classInfo?.class_name}\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" color=\"textSecondary\" gutterBottom>\r\n        Buổi {sessionInfo?.session_number} -{\" \"}\r\n        {new Date(sessionInfo?.date).toLocaleDateString(\"vi-VN\")}\r\n      </Typography>\r\n\r\n      <Grid container spacing={3} mt={1}>\r\n        <Grid item xs={12} md={8}>\r\n          <Card>\r\n            <CardContent>\r\n              <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                mb={2}\r\n              >\r\n                <Typography variant=\"h6\">Camera nhận diện</Typography>\r\n                <Box>\r\n                  <Chip\r\n                    label={isAutoMode ? \"Tự động đang bật\" : \"Tự động đang tắt\"}\r\n                    color={isAutoMode ? \"success\" : \"default\"}\r\n                    sx={{ mr: 1 }}\r\n                  />\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color={isAutoMode ? \"error\" : \"primary\"}\r\n                    onClick={\r\n                      isAutoMode\r\n                        ? () => {\r\n                            // Dừng tự động\r\n                            if (intervalId) {\r\n                              clearInterval(intervalId);\r\n                              setIntervalId(null);\r\n                            }\r\n                            setIsAutoMode(false);\r\n                            enqueueSnackbar(\"Đã tắt chế độ tự động điểm danh\", {\r\n                              variant: \"info\",\r\n                            });\r\n                          }\r\n                        : () => {\r\n                            // Bắt đầu tự động\r\n                            if (intervalId) {\r\n                              clearInterval(intervalId);\r\n                            }\r\n                            const id = setInterval(() => {\r\n                              recognizeFaces();\r\n                            }, AUTO_DETECT_INTERVAL);\r\n                            setIntervalId(id);\r\n                            setIsAutoMode(true);\r\n                            enqueueSnackbar(\"Đã bật chế độ tự động điểm danh\", {\r\n                              variant: \"info\",\r\n                            });\r\n                          }\r\n                    }\r\n                  >\r\n                    {isAutoMode ? \"Tắt tự động\" : \"Bật tự động\"}\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            </CardContent>\r\n\r\n            <Paper\r\n              elevation={3}\r\n              sx={{\r\n                position: \"relative\",\r\n                width: \"100%\",\r\n                height: \"400px\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                overflow: \"hidden\",\r\n                mb: 2,\r\n              }}\r\n            >\r\n              {isCameraReady ? (\r\n                <>\r\n                  {isAutoMode ? (\r\n                    // Sử dụng video element trực tiếp thay vì Webcam component\r\n                    <video\r\n                      ref={videoRef}\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        objectFit: \"cover\",\r\n                      }}\r\n                      autoPlay\r\n                      playsInline\r\n                      muted\r\n                    />\r\n                  ) : (\r\n                    <Webcam\r\n                      audio={false}\r\n                      ref={webcamRef}\r\n                      screenshotFormat=\"image/jpeg\"\r\n                      width={640}\r\n                      height={480}\r\n                      videoConstraints={{\r\n                        width: 640,\r\n                        height: 480,\r\n                        facingMode: \"user\",\r\n                      }}\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        objectFit: \"cover\",\r\n                      }}\r\n                      onUserMedia={(stream) => {\r\n                        console.log(\r\n                          \"Camera đã được cấp quyền và khởi tạo\",\r\n                          stream.id\r\n                        );\r\n                        // Đảm bảo readyState được kiểm tra khi stream đã sẵn sàng\r\n                        setTimeout(() => {\r\n                          if (webcamRef.current && webcamRef.current.video) {\r\n                            console.log(\r\n                              \"Stream ready, readyState=\",\r\n                              webcamRef.current.video.readyState\r\n                            );\r\n                            dispatch(setCameraReady(true));\r\n                          }\r\n                        }, 500);\r\n                      }}\r\n                      onUserMediaError={(err) => {\r\n                        console.error(\"Lỗi khi truy cập camera:\", err);\r\n                        enqueueSnackbar(\r\n                          `Không thể truy cập camera: ${\r\n                            err.name === \"NotAllowedError\"\r\n                              ? \"Bạn chưa cấp quyền truy cập camera\"\r\n                              : err.name === \"NotFoundError\"\r\n                              ? \"Không tìm thấy thiết bị camera\"\r\n                              : err.message || \"Lỗi không xác định\"\r\n                          }`,\r\n                          {\r\n                            variant: \"error\",\r\n                          }\r\n                        );\r\n                      }}\r\n                    />\r\n                  )}\r\n                  {/* Canvas hiển thị ở cả hai chế độ */}\r\n                  <canvas\r\n                    ref={canvasRef}\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      top: 0,\r\n                      left: 0,\r\n                      width: \"100%\",\r\n                      height: \"100%\",\r\n                    }}\r\n                  />\r\n                </>\r\n              ) : (\r\n                <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n                  <CircularProgress size={50} />\r\n                  <Typography mt={2}>Đang khởi tạo camera...</Typography>\r\n                  <Typography\r\n                    variant=\"caption\"\r\n                    color=\"text.secondary\"\r\n                    sx={{ mt: 1 }}\r\n                  >\r\n                    {isModelLoaded\r\n                      ? \"Chờ kết nối camera - Hãy đảm bảo bạn đã cấp quyền camera\"\r\n                      : \"Đang tải mô hình nhận diện khuôn mặt\"}\r\n                  </Typography>\r\n\r\n                  <Box\r\n                    sx={{\r\n                      mt: 2,\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      sx={{ mb: 1 }}\r\n                      onClick={initDirectCamera}\r\n                    >\r\n                      Khởi động camera trực tiếp\r\n                    </Button>\r\n                  </Box>\r\n                </Box>\r\n              )}\r\n            </Paper>\r\n\r\n            <Box display=\"flex\" justifyContent=\"space-between\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                onClick={captureAndRecognize}\r\n                startIcon={<CameraAlt />}\r\n                disabled={!isCameraReady || isRecognizing || isAutoMode}\r\n              >\r\n                {isRecognizing ? (\r\n                  <CircularProgress size={24} color=\"inherit\" />\r\n                ) : (\r\n                  \"Chụp & Nhận diện\"\r\n                )}\r\n              </Button>\r\n\r\n              <Box>\r\n                {isCameraReady && (\r\n                  <>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color={showLandmark ? \"success\" : \"info\"}\r\n                      onClick={toggleLandmarkDetection}\r\n                      sx={{ mr: 1 }}\r\n                    >\r\n                      {showLandmark ? \"Tắt Landmark\" : \"Hiện Landmark\"}\r\n                    </Button>\r\n\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color={isAutoMode ? \"error\" : \"primary\"}\r\n                      onClick={\r\n                        isAutoMode\r\n                          ? () => {\r\n                              // Dừng tự động\r\n                              if (intervalId) {\r\n                                clearInterval(intervalId);\r\n                                setIntervalId(null);\r\n                              }\r\n                              setIsAutoMode(false);\r\n                              enqueueSnackbar(\r\n                                \"Đã tắt chế độ tự động điểm danh\",\r\n                                { variant: \"info\" }\r\n                              );\r\n                            }\r\n                          : () => {\r\n                              // Bắt đầu tự động\r\n                              if (intervalId) {\r\n                                clearInterval(intervalId);\r\n                              }\r\n                              const id = setInterval(() => {\r\n                                recognizeFaces();\r\n                              }, AUTO_DETECT_INTERVAL);\r\n                              setIntervalId(id);\r\n                              setIsAutoMode(true);\r\n                              enqueueSnackbar(\r\n                                \"Đã bật chế độ tự động điểm danh\",\r\n                                { variant: \"info\" }\r\n                              );\r\n                            }\r\n                      }\r\n                      sx={{ mr: 1 }}\r\n                    >\r\n                      {isAutoMode ? \"Tắt tự động\" : \"Bật tự động\"}\r\n                    </Button>\r\n                  </>\r\n                )}\r\n\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={completeSession}\r\n                  startIcon={<Save />}\r\n                  disabled={sessionInfo?.status === \"completed\"}\r\n                >\r\n                  Kết thúc phiên\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n\r\n            {recognizedStudents.length > 0 && (\r\n              <Box mt={2}>\r\n                <Typography variant=\"subtitle1\" gutterBottom>\r\n                  Đã nhận diện ({recognizedStudents.length})\r\n                </Typography>\r\n                <Grid container spacing={1}>\r\n                  {recognizedStudents.map((student, index) => (\r\n                    <Grid item xs={6} sm={4} key={index}>\r\n                      <Paper\r\n                        elevation={2}\r\n                        sx={{\r\n                          p: 1,\r\n                          display: \"flex\",\r\n                          flexDirection: \"column\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        <Typography variant=\"body2\" noWrap>\r\n                          {student.name}\r\n                        </Typography>\r\n                        <Typography variant=\"caption\" color=\"textSecondary\">\r\n                          {Math.round(student.confidence * 100)}% match\r\n                        </Typography>\r\n                        <Button\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          color=\"primary\"\r\n                          sx={{ mt: 1 }}\r\n                          onClick={() =>\r\n                            markAttendance(\r\n                              student.studentId,\r\n                              student.descriptor,\r\n                              student.confidence,\r\n                              webcamRef.current?.getScreenshot()\r\n                            )\r\n                          }\r\n                        >\r\n                          <Check fontSize=\"small\" sx={{ mr: 0.5 }} />\r\n                          Điểm danh\r\n                        </Button>\r\n                      </Paper>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </Box>\r\n            )}\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={4}>\r\n          <Card sx={{ mb: 3 }}>\r\n            <CardContent>\r\n              <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                mb={2}\r\n              >\r\n                <Typography variant=\"h6\">\r\n                  Có mặt (\r\n                  {\r\n                    attendanceLogs.filter((log) => log.status === \"present\")\r\n                      .length\r\n                  }\r\n                  /{classInfo?.students.length})\r\n                </Typography>\r\n                <IconButton size=\"small\" onClick={refreshAttendanceLogs}>\r\n                  <Refresh />\r\n                </IconButton>\r\n              </Box>\r\n\r\n              <List dense>\r\n                {attendanceLogs\r\n                  .filter((log) => log.status === \"present\")\r\n                  .sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))\r\n                  .map((log) => (\r\n                    <ListItem\r\n                      key={log._id}\r\n                      secondaryAction={\r\n                        <Chip\r\n                          size=\"small\"\r\n                          icon={\r\n                            log.recognized ? (\r\n                              <VerifiedUser fontSize=\"small\" />\r\n                            ) : null\r\n                          }\r\n                          label={log.recognized ? \"Tự động\" : \"Thủ công\"}\r\n                          color={log.recognized ? \"success\" : \"primary\"}\r\n                        />\r\n                      }\r\n                    >\r\n                      <ListItemAvatar>\r\n                        <Avatar\r\n                          alt={log.student_id.full_name}\r\n                          src={log.student_id.avatar_url}\r\n                        />\r\n                      </ListItemAvatar>\r\n                      <ListItemText\r\n                        primary={log.student_id.full_name}\r\n                        secondary={`${new Date(\r\n                          log.timestamp\r\n                        ).toLocaleTimeString(\"vi-VN\")}`}\r\n                      />\r\n                    </ListItem>\r\n                  ))}\r\n\r\n                {attendanceLogs.filter((log) => log.status === \"present\")\r\n                  .length === 0 && (\r\n                  <ListItem>\r\n                    <ListItemText primary=\"Chưa có sinh viên nào điểm danh\" />\r\n                  </ListItem>\r\n                )}\r\n              </List>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Vắng mặt ({absentStudents.length}/{classInfo?.students.length})\r\n              </Typography>\r\n\r\n              <List dense>\r\n                {absentStudents.map((student) => (\r\n                  <ListItem\r\n                    key={student._id}\r\n                    secondaryAction={\r\n                      <IconButton\r\n                        edge=\"end\"\r\n                        onClick={() => openManualAttendanceDialog(student)}\r\n                      >\r\n                        <Edit fontSize=\"small\" />\r\n                      </IconButton>\r\n                    }\r\n                  >\r\n                    <ListItemAvatar>\r\n                      <Avatar\r\n                        alt={student.full_name}\r\n                        src={student.avatar_url}\r\n                      />\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={student.full_name}\r\n                      secondary={student.student_code}\r\n                    />\r\n                  </ListItem>\r\n                ))}\r\n\r\n                {absentStudents.length === 0 && (\r\n                  <ListItem>\r\n                    <ListItemText primary=\"Không có sinh viên nào vắng mặt\" />\r\n                  </ListItem>\r\n                )}\r\n              </List>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Dialog điểm danh thủ công */}\r\n      <Dialog open={manualDialogOpen} onClose={handleManualDialogClose}>\r\n        <DialogTitle>Điểm danh thủ công</DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ p: 1 }}>\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              {selectedStudent?.full_name} ({selectedStudent?.student_code})\r\n            </Typography>\r\n\r\n            <FormControl fullWidth margin=\"normal\">\r\n              <InputLabel>Trạng thái</InputLabel>\r\n              <Select\r\n                name=\"status\"\r\n                value={manualAttendanceData.status}\r\n                onChange={handleManualAttendanceChange}\r\n                label=\"Trạng thái\"\r\n              >\r\n                <MenuItem value=\"present\">Có mặt</MenuItem>\r\n                <MenuItem value=\"absent\">Vắng mặt</MenuItem>\r\n                <MenuItem value=\"late\">Đi trễ</MenuItem>\r\n                <MenuItem value=\"early_leave\">Về sớm</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n              fullWidth\r\n              margin=\"normal\"\r\n              name=\"note\"\r\n              label=\"Ghi chú\"\r\n              value={manualAttendanceData.note}\r\n              onChange={handleManualAttendanceChange}\r\n              multiline\r\n              rows={2}\r\n            />\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleManualDialogClose}>Hủy</Button>\r\n          <Button onClick={handleManualAttendanceSubmit} variant=\"contained\">\r\n            Xác nhận\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AttendancePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}