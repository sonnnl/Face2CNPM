{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\nconst axiosInstance = axios.create({\n  baseURL: API_URL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  },\n  // Thêm timeout để tránh request treo\n  timeout: 15000 // 15 giây\n});\n\n// Thêm interceptor để tự động thêm token vào header\naxiosInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Thêm interceptor để xử lý lỗi response\naxiosInstance.interceptors.response.use(response => response, error => {\n  // Xử lý lỗi network\n  if (!error.response) {\n    console.error(\"Network Error:\", error.message);\n    if (error.code === \"ECONNABORTED\") {\n      return Promise.reject(new Error(\"Yêu cầu đã hết thời gian chờ. Vui lòng thử lại.\"));\n    }\n    return Promise.reject(new Error(\"Không thể kết nối đến máy chủ. Vui lòng kiểm tra kết nối mạng.\"));\n  }\n\n  // Xử lý lỗi 401 Unauthorized\n  if (error.response.status === 401) {\n    // Đã hết hạn token hoặc không xác thực, đăng xuất\n    localStorage.removeItem(\"token\");\n    window.location.href = \"/login\";\n  }\n\n  // Xử lý lỗi 500 Server Error\n  if (error.response.status >= 500) {\n    return Promise.reject(new Error(\"Lỗi máy chủ. Vui lòng thử lại sau.\"));\n  }\n\n  // Trả về lỗi response mặc định\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","axiosInstance","create","baseURL","headers","timeout","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","console","message","code","Error","status","removeItem","window","location","href"],"sources":["C:/Users/kasiz/Documents/Studying/FaceReg/frontend/src/utils/axios.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n  // Thêm timeout để tránh request treo\r\n  timeout: 15000, // 15 giây\r\n});\r\n\r\n// Thêm interceptor để tự động thêm token vào header\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// Thêm interceptor để xử lý lỗi response\r\naxiosInstance.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    // Xử lý lỗi network\r\n    if (!error.response) {\r\n      console.error(\"Network Error:\", error.message);\r\n      if (error.code === \"ECONNABORTED\") {\r\n        return Promise.reject(\r\n          new Error(\"Yêu cầu đã hết thời gian chờ. Vui lòng thử lại.\")\r\n        );\r\n      }\r\n      return Promise.reject(\r\n        new Error(\r\n          \"Không thể kết nối đến máy chủ. Vui lòng kiểm tra kết nối mạng.\"\r\n        )\r\n      );\r\n    }\r\n\r\n    // Xử lý lỗi 401 Unauthorized\r\n    if (error.response.status === 401) {\r\n      // Đã hết hạn token hoặc không xác thực, đăng xuất\r\n      localStorage.removeItem(\"token\");\r\n      window.location.href = \"/login\";\r\n    }\r\n\r\n    // Xử lý lỗi 500 Server Error\r\n    if (error.response.status >= 500) {\r\n      return Promise.reject(new Error(\"Lỗi máy chủ. Vui lòng thử lại sau.\"));\r\n    }\r\n\r\n    // Trả về lỗi response mặc định\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAE5E,MAAMC,aAAa,GAAGL,KAAK,CAACM,MAAM,CAAC;EACjCC,OAAO,EAAEN,OAAO;EAChBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB,CAAC;EACD;EACAC,OAAO,EAAE,KAAK,CAAE;AAClB,CAAC,CAAC;;AAEF;AACAJ,aAAa,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACnCC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACL,OAAO,CAACS,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;;AAED;AACAb,aAAa,CAACK,YAAY,CAACW,QAAQ,CAACT,GAAG,CACpCS,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EACT;EACA,IAAI,CAACA,KAAK,CAACG,QAAQ,EAAE;IACnBC,OAAO,CAACJ,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACK,OAAO,CAAC;IAC9C,IAAIL,KAAK,CAACM,IAAI,KAAK,cAAc,EAAE;MACjC,OAAOL,OAAO,CAACC,MAAM,CACnB,IAAIK,KAAK,CAAC,iDAAiD,CAC7D,CAAC;IACH;IACA,OAAON,OAAO,CAACC,MAAM,CACnB,IAAIK,KAAK,CACP,gEACF,CACF,CAAC;EACH;;EAEA;EACA,IAAIP,KAAK,CAACG,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;IACjC;IACAX,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC;IAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;;EAEA;EACA,IAAIZ,KAAK,CAACG,QAAQ,CAACK,MAAM,IAAI,GAAG,EAAE;IAChC,OAAOP,OAAO,CAACC,MAAM,CAAC,IAAIK,KAAK,CAAC,oCAAoC,CAAC,CAAC;EACxE;;EAEA;EACA,OAAON,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeb,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}