{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kasiz\\\\Documents\\\\Studying\\\\FaceReg\\\\frontend\\\\src\\\\pages\\\\teacher\\\\AttendancePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useSnackbar } from \"notistack\";\nimport { Box, Typography, Card, CardContent, Grid, Paper, Button, Divider, CircularProgress, List, ListItem, ListItemAvatar, ListItemText, Avatar, Chip, Dialog, DialogTitle, DialogContent, DialogActions, TextField, FormControl, InputLabel, Select, MenuItem, IconButton, Alert } from \"@mui/material\";\nimport { CameraAlt, Check, Close, Edit, Refresh, Save, VerifiedUser, HourglassEmpty } from \"@mui/icons-material\";\nimport Webcam from \"react-webcam\";\nimport * as faceapi from \"face-api.js\";\nimport { getClassFaceFeatures, verifyAttendance, manualAttendance, setModelLoaded, setCameraReady, setDetectedFaces, setRecognizedStudents, clearRecognitionState } from \"../../redux/slices/faceRecognitionSlice\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\nconst AttendancePage = () => {\n  _s();\n  const {\n    classId,\n    sessionId\n  } = useParams();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const videoRef = useRef(null);\n  const [intervalId, setIntervalId] = useState(null);\n  const [showLandmark, setShowLandmark] = useState(false);\n  const [landmarkIntervalId, setLandmarkIntervalId] = useState(null);\n  const {\n    token\n  } = useSelector(state => state.auth);\n  const {\n    isModelLoaded,\n    isCameraReady,\n    detectedFaces,\n    recognizedStudents,\n    classStudents,\n    isProcessing,\n    error\n  } = useSelector(state => state.faceRecognition);\n  const [classInfo, setClassInfo] = useState(null);\n  const [sessionInfo, setSessionInfo] = useState(null);\n  const [attendanceLogs, setAttendanceLogs] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isRecognizing, setIsRecognizing] = useState(false);\n  const [isAutoMode, setIsAutoMode] = useState(false);\n  const [selectedStudent, setSelectedStudent] = useState(null);\n  const [manualDialogOpen, setManualDialogOpen] = useState(false);\n  const [manualAttendanceData, setManualAttendanceData] = useState({\n    status: \"present\",\n    note: \"\"\n  });\n\n  // Các hằng số cấu hình\n  const RECOGNITION_THRESHOLD = 0.5; // Ngưỡng nhận diện\n  const DETECTION_THRESHOLD = 0.3; // Giảm ngưỡng phát hiện khuôn mặt\n  const CONFIDENCE_THRESHOLD = 0.6; // Ngưỡng độ tin cậy để điểm danh\n  const AUTO_DETECT_INTERVAL = 1000; // Thời gian giữa các lần phát hiện (ms)\n  const ENABLE_DEBUG_LOGS = true; // Bật/tắt log gỡ lỗi\n\n  // Thêm state mới để theo dõi số lần thử lại camera\n  const [cameraRetryCount, setCameraRetryCount] = useState(0);\n  const [lastDetectionTime, setLastDetectionTime] = useState(null);\n\n  // Load class info, session info và models\n  useEffect(() => {\n    const loadInitialData = async () => {\n      try {\n        setIsLoading(true);\n\n        // Bắt đầu tải dữ liệu và models song song\n        const loadModelsPromise = !isModelLoaded ? loadFaceRecognitionModels() : Promise.resolve(true);\n\n        // Lấy thông tin lớp học\n        const classPromise = axios.get(`${API_URL}/classes/teaching/${classId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Lấy thông tin phiên điểm danh\n        const sessionPromise = axios.get(`${API_URL}/attendance/sessions/${sessionId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Lấy danh sách điểm danh\n        const logsPromise = axios.get(`${API_URL}/attendance/logs/${sessionId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Chờ tất cả API calls hoàn thành\n        const [classResponse, sessionResponse, logsResponse] = await Promise.all([classPromise, sessionPromise, logsPromise]);\n        setClassInfo(classResponse.data.data);\n        setSessionInfo(sessionResponse.data.data);\n        setAttendanceLogs(logsResponse.data.data);\n\n        // Lấy đặc trưng khuôn mặt của sinh viên trong lớp\n        console.log(\"[DEBUG] Bắt đầu lấy đặc trưng khuôn mặt của sinh viên, classId:\", classId);\n\n        // Dispatch action để lấy feature và theo dõi kết quả\n        const faceFeatureResult = await dispatch(getClassFaceFeatures(classId)).unwrap();\n\n        // Kiểm tra xem có dữ liệu trả về không\n        if (faceFeatureResult && faceFeatureResult.students) {\n          console.log(`[DEBUG] Nhận được dữ liệu khuôn mặt của ${faceFeatureResult.students.length} sinh viên`);\n\n          // Kiểm tra chi tiết dữ liệu khuôn mặt\n          let validDescriptorsCount = 0;\n          let invalidDescriptorsCount = 0;\n          faceFeatureResult.students.forEach(student => {\n            const hasDescriptors = student.faceDescriptors && Array.isArray(student.faceDescriptors) && student.faceDescriptors.length > 0;\n            const validDescriptors = hasDescriptors ? student.faceDescriptors.filter(desc => Array.isArray(desc) && desc.length === 128).length : 0;\n            if (validDescriptors > 0) {\n              validDescriptorsCount++;\n              console.log(`[DEBUG] Sinh viên ${student.full_name} có ${validDescriptors}/${hasDescriptors ? student.faceDescriptors.length : 0} descriptor hợp lệ`);\n            } else {\n              invalidDescriptorsCount++;\n              console.log(`[DEBUG] Sinh viên ${student.full_name} không có descriptor hợp lệ`);\n              if (hasDescriptors && student.faceDescriptors.length > 0) {\n                console.log(`[DEBUG] Chi tiết descriptor đầu tiên:`, typeof student.faceDescriptors[0], Array.isArray(student.faceDescriptors[0]) ? student.faceDescriptors[0].length : \"không phải mảng\");\n              }\n            }\n          });\n          console.log(`[DEBUG] Tổng hợp: ${validDescriptorsCount} sinh viên có descriptor hợp lệ, ${invalidDescriptorsCount} sinh viên không có`);\n          if (validDescriptorsCount === 0) {\n            enqueueSnackbar(\"Không có sinh viên nào có dữ liệu khuôn mặt, đang tạo dữ liệu demo...\", {\n              variant: \"warning\",\n              autoHideDuration: 5000\n            });\n\n            // Tự động tạo dữ liệu demo nếu không có dữ liệu hợp lệ\n            const demoData = generateDemoFaceData();\n            if (demoData.length > 0) {\n              dispatch({\n                type: \"faceRecognition/getClassFaceFeatures/fulfilled\",\n                payload: {\n                  students: demoData\n                }\n              });\n            }\n          }\n        } else {\n          console.log(\"[DEBUG] Không nhận được dữ liệu khuôn mặt từ API\");\n          enqueueSnackbar(\"Không thể tải dữ liệu nhận diện khuôn mặt, đang tạo dữ liệu demo\", {\n            variant: \"error\"\n          });\n\n          // Tự động tạo dữ liệu demo\n          const demoData = generateDemoFaceData();\n          if (demoData.length > 0) {\n            dispatch({\n              type: \"faceRecognition/getClassFaceFeatures/fulfilled\",\n              payload: {\n                students: demoData\n              }\n            });\n          }\n        }\n\n        // Không chờ đợi model load xong mới hiển thị UI\n        setIsLoading(false);\n\n        // Model sẽ load song song\n        await loadModelsPromise;\n\n        // Thiết lập thời gian phát hiện ban đầu\n        setLastDetectionTime(Date.now());\n      } catch (error) {\n        console.error(\"Lỗi khi tải dữ liệu:\", error);\n        enqueueSnackbar(\"Lỗi khi tải dữ liệu, đang tạo dữ liệu demo cho bạn\", {\n          variant: \"error\"\n        });\n        setIsLoading(false);\n\n        // Tự động tạo dữ liệu demo nếu có lỗi\n        const demoData = generateDemoFaceData();\n        if (demoData.length > 0) {\n          dispatch({\n            type: \"faceRecognition/getClassFaceFeatures/fulfilled\",\n            payload: {\n              students: demoData\n            }\n          });\n        }\n      }\n    };\n    loadInitialData();\n\n    // Clean up\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n\n      // Dừng landmark interval nếu đang chạy\n      if (landmarkIntervalId) {\n        clearInterval(landmarkIntervalId);\n      }\n\n      // Dừng camera stream nếu đang chạy\n      if (webcamRef.current && webcamRef.current.video && webcamRef.current.video.srcObject) {\n        const tracks = webcamRef.current.video.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n      if (videoRef.current && videoRef.current.srcObject) {\n        const tracks = videoRef.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n      dispatch(clearRecognitionState());\n\n      // Reset các state theo dõi camera\n      setCameraRetryCount(0);\n      setLastDetectionTime(null);\n    };\n  }, [classId, sessionId, token, dispatch, enqueueSnackbar, isModelLoaded, intervalId, landmarkIntervalId]);\n\n  // Thêm useEffect mới để tự động khởi động lại camera khi không phát hiện khuôn mặt trong thời gian dài\n  useEffect(() => {\n    // Không làm gì nếu không bật chế độ tự động\n    if (!isAutoMode || !isCameraReady) return;\n\n    // Thời gian tối đa không phát hiện khuôn mặt trước khi thử khởi động lại camera (20 giây)\n    const MAX_NO_DETECTION_TIME = 20000;\n\n    // Kiểm tra thời gian từ lần phát hiện cuối cùng\n    const checkDetectionTimeout = () => {\n      const now = Date.now();\n      if (lastDetectionTime && now - lastDetectionTime > MAX_NO_DETECTION_TIME) {\n        console.log(\"[DEBUG] Quá lâu không phát hiện khuôn mặt, thử khởi động lại camera\");\n\n        // Tăng số lần thử lại và khởi động lại camera nếu chưa quá 3 lần\n        if (cameraRetryCount < 3) {\n          setCameraRetryCount(prev => prev + 1);\n          initDirectCamera();\n          enqueueSnackbar(\"Đang thử khởi động lại camera...\", {\n            variant: \"info\"\n          });\n        } else if (cameraRetryCount === 3) {\n          // Sau 3 lần thử, đưa ra gợi ý chi tiết hơn\n          setCameraRetryCount(prev => prev + 1);\n          enqueueSnackbar(\"Kiểm tra lại camera và ánh sáng. Có thể cần cấp lại quyền camera.\", {\n            variant: \"warning\",\n            autoHideDuration: 8000\n          });\n        }\n      }\n    };\n\n    // Thiết lập interval kiểm tra\n    const checkInterval = setInterval(checkDetectionTimeout, 10000);\n    return () => {\n      clearInterval(checkInterval);\n    };\n  }, [isAutoMode, isCameraReady, lastDetectionTime, cameraRetryCount, enqueueSnackbar, initDirectCamera]);\n\n  // Load các mô hình nhận diện khuôn mặt\n  const loadFaceRecognitionModels = async () => {\n    try {\n      const MODEL_URL = \"/models\";\n      console.log(\"Bắt đầu tải models từ:\", MODEL_URL);\n\n      // Thêm SsdMobilenetv1 vào danh sách models cần tải\n      const modelPromises = [faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL), faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL), faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL), faceapi.nets.ssdMobilenetv1.loadFromUri(MODEL_URL) // Thêm model SSD MobileNet\n      ];\n\n      // Kiểm tra xem các models đã được tải chưa\n      const modelStatuses = [faceapi.nets.tinyFaceDetector.isLoaded, faceapi.nets.faceLandmark68Net.isLoaded, faceapi.nets.faceRecognitionNet.isLoaded, faceapi.nets.ssdMobilenetv1.isLoaded // Kiểm tra SSD MobileNet đã tải chưa\n      ];\n      if (modelStatuses.every(status => status)) {\n        console.log(\"Các models đã được tải từ trước\");\n        dispatch(setModelLoaded(true));\n        return true;\n      }\n      await Promise.all(modelPromises);\n      console.log(\"Đã tải xong models thành công\");\n      dispatch(setModelLoaded(true));\n      enqueueSnackbar(\"Tải mô hình nhận diện thành công\", {\n        variant: \"success\"\n      });\n      return true;\n    } catch (error) {\n      console.error(\"Lỗi khi tải mô hình:\", error);\n      enqueueSnackbar(\"Không thể tải mô hình nhận diện\", {\n        variant: \"error\"\n      });\n      return false;\n    }\n  };\n\n  // Hàm kiểm tra và đảm bảo camera hoạt động\n  const ensureCameraIsWorking = () => {\n    var _webcamRef$current;\n    // Kiểm tra nếu camera chưa hoạt động và đã thử khởi động\n    if (!isCameraReady && cameraRetryCount === 0) {\n      console.log(\"[DEBUG] Camera chưa sẵn sàng, thử khởi động\");\n      setCameraRetryCount(1);\n      initDirectCamera();\n      return false;\n    }\n\n    // Kiểm tra stream của camera\n    const videoElement = isAutoMode ? videoRef.current : (_webcamRef$current = webcamRef.current) === null || _webcamRef$current === void 0 ? void 0 : _webcamRef$current.video;\n    if (!videoElement || !videoElement.srcObject || videoElement.readyState !== 4) {\n      console.log(\"[DEBUG] Video stream không hoạt động, thử khởi động lại camera\");\n      if (cameraRetryCount < 3) {\n        setCameraRetryCount(prev => prev + 1);\n        initDirectCamera();\n        return false;\n      }\n    }\n    return true;\n  };\n\n  // Cập nhật hàm handleDetectFaces để kiểm tra camera trước\n  const handleDetectFaces = async () => {\n    try {\n      var _webcamRef$current2;\n      // Đảm bảo camera hoạt động\n      if (!ensureCameraIsWorking()) {\n        return [];\n      }\n\n      // Kiểm tra model đã tải chưa\n      if (!isModelLoaded || !faceapi.nets.ssdMobilenetv1.isLoaded) {\n        console.warn(\"Model SSD MobileNet chưa được tải, đang thử tải lại...\");\n        await loadFaceRecognitionModels();\n        if (!faceapi.nets.ssdMobilenetv1.isLoaded) {\n          enqueueSnackbar(\"Model nhận dạng chưa sẵn sàng, vui lòng thử lại\", {\n            variant: \"warning\"\n          });\n          return [];\n        }\n      }\n\n      // Lấy dữ liệu video\n      const videoElement = isAutoMode ? videoRef.current : (_webcamRef$current2 = webcamRef.current) === null || _webcamRef$current2 === void 0 ? void 0 : _webcamRef$current2.video;\n      if (!videoElement || !canvasRef.current) return [];\n\n      // Kiểm tra trạng thái video stream\n      if (videoElement.readyState !== 4) {\n        console.warn(\"Video element không sẵn sàng, đang đợi...\");\n        return [];\n      }\n\n      // Lấy kích thước của video\n      const displaySize = {\n        width: videoElement.videoWidth || videoElement.width || 640,\n        height: videoElement.videoHeight || videoElement.height || 480\n      };\n\n      // Thử phát hiện với cả hai mô hình\n      let detections = [];\n\n      // Thử với SSD MobileNet trước (độ chính xác cao hơn)\n      try {\n        detections = await faceapi.detectAllFaces(videoElement, new faceapi.SsdMobilenetv1Options({\n          minConfidence: DETECTION_THRESHOLD\n        })).withFaceLandmarks().withFaceDescriptors();\n      } catch (err) {\n        console.warn(\"Lỗi khi sử dụng SSD MobileNet:\", err);\n      }\n\n      // Nếu không phát hiện được, thử với TinyFaceDetector\n      if (!detections || detections.length === 0) {\n        try {\n          detections = await faceapi.detectAllFaces(videoElement, new faceapi.TinyFaceDetectorOptions({\n            inputSize: 320,\n            scoreThreshold: DETECTION_THRESHOLD - 0.05 // Giảm ngưỡng thêm nữa\n          })).withFaceLandmarks().withFaceDescriptors();\n        } catch (err) {\n          console.warn(\"Lỗi khi sử dụng TinyFaceDetector:\", err);\n        }\n      }\n      if (!detections || detections.length === 0) {\n        if (ENABLE_DEBUG_LOGS) {\n          console.log(\"[DEBUG] Không phát hiện khuôn mặt - kiểm tra ánh sáng và vị trí\", new Date().toLocaleTimeString());\n        }\n\n        // Xóa canvas nếu không có phát hiện\n        const canvasElement = canvasRef.current;\n        if (canvasElement) {\n          const ctx = canvasElement.getContext(\"2d\");\n          ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n\n          // Vẽ hướng dẫn khi không có khuôn mặt\n          ctx.font = \"18px Arial\";\n          ctx.fillStyle = \"white\";\n          ctx.strokeStyle = \"black\";\n          ctx.lineWidth = 3;\n          const text = \"Không phát hiện khuôn mặt - Điều chỉnh vị trí và ánh sáng\";\n          const x = canvasElement.width / 2 - 180;\n          const y = canvasElement.height / 2;\n          ctx.strokeText(text, x, y);\n          ctx.fillText(text, x, y);\n        }\n        return [];\n      }\n\n      // Đã phát hiện khuôn mặt, cập nhật thời gian\n      setLastDetectionTime(Date.now());\n      // Reset biến đếm thử lại\n      if (cameraRetryCount > 0) {\n        setCameraRetryCount(0);\n      }\n      if (ENABLE_DEBUG_LOGS) {\n        console.log(`[DEBUG] Phát hiện ${detections.length} khuôn mặt`, new Date().toLocaleTimeString());\n      }\n\n      // Điều chỉnh kích thước phát hiện để phù hợp với kích thước hiển thị\n      const resizedDetections = faceapi.resizeResults(detections, displaySize);\n\n      // Cập nhật state\n      dispatch(setDetectedFaces(resizedDetections));\n\n      // Tạo FaceMatcher từ dữ liệu sinh viên\n      const labeledDescriptors = classStudents.filter(student => student.faceDescriptors && student.faceDescriptors.length > 0 && student.faceDescriptors[0].length === 128 // Đảm bảo descriptor có đúng 128 phần tử\n      ).map(student => {\n        try {\n          // Chuyển đổi mỗi descriptor thành Float32Array và xác minh độ dài\n          const descriptors = student.faceDescriptors.filter(desc => Array.isArray(desc) && desc.length === 128).map(descriptor => new Float32Array(descriptor));\n          if (descriptors.length === 0) return null;\n          return new faceapi.LabeledFaceDescriptors(student._id, descriptors);\n        } catch (err) {\n          console.error(`Lỗi khi xử lý descriptor của sinh viên ${student._id}:`, err);\n          return null;\n        }\n      }).filter(Boolean); // Lọc bỏ các giá trị null\n\n      // Tạo faceMatcher nếu có dữ liệu\n      if (labeledDescriptors.length === 0) {\n        console.warn(\"Không có dữ liệu khuôn mặt hợp lệ của sinh viên\");\n        // Tự động tạo dữ liệu demo nếu không có dữ liệu\n        if (!updateWithDemoFaceData()) {\n          enqueueSnackbar(\"Không có dữ liệu khuôn mặt của sinh viên. Đang tạo dữ liệu demo.\", {\n            variant: \"warning\"\n          });\n        }\n        return resizedDetections;\n      }\n\n      // Tạo faceMatcher với descriptor đã được xác thực\n      const faceMatcher = new faceapi.FaceMatcher(labeledDescriptors, RECOGNITION_THRESHOLD);\n\n      // Vẽ lên canvas nếu có khuôn mặt\n      const canvasElement = canvasRef.current;\n      canvasElement.width = displaySize.width;\n      canvasElement.height = displaySize.height;\n      const ctx = canvasElement.getContext(\"2d\");\n      ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n\n      // Vẽ các phát hiện lên canvas\n      resizedDetections.forEach(detection => {\n        try {\n          if (detection.descriptor && detection.descriptor.length === 128) {\n            const bestMatch = faceMatcher.findBestMatch(detection.descriptor);\n            const {\n              label,\n              distance\n            } = bestMatch;\n\n            // Kiểm tra nếu match với một sinh viên\n            if (label !== \"unknown\") {\n              // Tìm sinh viên trong danh sách\n              const student = classStudents.find(s => s._id === label);\n              if (student) {\n                // Cập nhật thông tin nhận diện cho sinh viên\n                const studentId = student._id;\n                const confidence = 1 - distance;\n\n                // Đánh dấu sinh viên đã điểm danh nếu đủ độ tin cậy\n                if (confidence >= CONFIDENCE_THRESHOLD) {\n                  handleMarkAttendance(studentId, confidence);\n                }\n\n                // Vẽ hộp và tên sinh viên\n                const drawBox = new faceapi.draw.DrawBox(detection.detection.box, {\n                  label: `${student.full_name} (${Math.round(confidence * 100)}%)`,\n                  boxColor: confidence >= CONFIDENCE_THRESHOLD ? \"green\" : \"orange\"\n                });\n                drawBox.draw(canvasElement);\n              }\n            } else {\n              // Không nhận diện được sinh viên\n              const drawBox = new faceapi.draw.DrawBox(detection.detection.box, {\n                label: \"Unknown\",\n                boxColor: \"red\"\n              });\n              drawBox.draw(canvasElement);\n            }\n          } else {\n            // Nếu descriptor không hợp lệ hoặc độ dài không đúng\n            console.warn(\"Phát hiện descriptor không hợp lệ\", detection.descriptor ? detection.descriptor.length : \"không có descriptor\");\n\n            // Không có descriptor\n            const drawBox = new faceapi.draw.DrawBox(detection.detection.box, {\n              label: \"Đang phân tích...\",\n              boxColor: \"blue\"\n            });\n            drawBox.draw(canvasElement);\n          }\n        } catch (err) {\n          console.error(\"Lỗi khi xử lý detection:\", err);\n        }\n\n        // Vẽ landmarks nếu đã bật\n        if (showLandmark && detection.landmarks) {\n          faceapi.draw.drawFaceLandmarks(canvasElement, detection);\n        }\n      });\n      return resizedDetections;\n    } catch (error) {\n      console.error(\"Lỗi phát hiện khuôn mặt:\", error);\n      enqueueSnackbar(\"Lỗi khi phát hiện khuôn mặt. Thử lại sau.\", {\n        variant: \"error\"\n      });\n      return [];\n    }\n  };\n\n  // Điểm danh thủ công\n  const openManualAttendanceDialog = student => {\n    setSelectedStudent(student);\n    setManualAttendanceData({\n      status: \"present\",\n      note: \"\"\n    });\n    setManualDialogOpen(true);\n  };\n  const handleManualDialogClose = () => {\n    setManualDialogOpen(false);\n  };\n  const handleManualAttendanceChange = e => {\n    setManualAttendanceData({\n      ...manualAttendanceData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleManualAttendanceSubmit = async () => {\n    if (!selectedStudent) return;\n    try {\n      const result = await dispatch(manualAttendance({\n        sessionId,\n        studentId: selectedStudent._id,\n        status: manualAttendanceData.status,\n        note: manualAttendanceData.note\n      })).unwrap();\n\n      // Cập nhật logs điểm danh\n      if (result && result.data) {\n        const updatedLogs = attendanceLogs.filter(log => log.student_id._id !== selectedStudent._id);\n        updatedLogs.push({\n          ...result.data,\n          student_id: selectedStudent\n        });\n        setAttendanceLogs(updatedLogs);\n      }\n      enqueueSnackbar(\"Điểm danh thủ công thành công\", {\n        variant: \"success\"\n      });\n      handleManualDialogClose();\n\n      // Cập nhật lại thông tin phiên điểm danh\n      const sessionResponse = await axios.get(`${API_URL}/attendance/sessions/${sessionId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSessionInfo(sessionResponse.data.data);\n    } catch (error) {\n      console.error(\"Lỗi khi điểm danh thủ công:\", error);\n      enqueueSnackbar(\"Lỗi khi điểm danh thủ công\", {\n        variant: \"error\"\n      });\n    }\n  };\n\n  // Đánh dấu điểm danh từ nhận diện khuôn mặt\n  const markAttendance = async (studentId, faceDescriptor, confidence, imageBase64) => {\n    try {\n      const result = await dispatch(verifyAttendance({\n        sessionId,\n        studentId,\n        faceDescriptor,\n        confidence,\n        imageBase64\n      })).unwrap();\n\n      // Cập nhật logs điểm danh\n      if (result && result.data) {\n        const student = classStudents.find(s => s._id === studentId);\n        if (student) {\n          const updatedLogs = attendanceLogs.filter(log => log.student_id._id !== studentId);\n          updatedLogs.push({\n            ...result.data,\n            student_id: student\n          });\n          setAttendanceLogs(updatedLogs);\n          enqueueSnackbar(`Đã điểm danh cho ${student.full_name}`, {\n            variant: \"success\"\n          });\n        }\n      }\n\n      // Cập nhật lại thông tin phiên điểm danh\n      const sessionResponse = await axios.get(`${API_URL}/attendance/sessions/${sessionId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSessionInfo(sessionResponse.data.data);\n      return true;\n    } catch (error) {\n      console.error(\"Lỗi khi xác nhận điểm danh:\", error);\n      enqueueSnackbar(\"Lỗi khi xác nhận điểm danh\", {\n        variant: \"error\"\n      });\n      return false;\n    }\n  };\n\n  // Kết thúc phiên điểm danh\n  const completeSession = async () => {\n    try {\n      await axios.put(`${API_URL}/attendance/sessions/${sessionId}`, {\n        status: \"completed\"\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      enqueueSnackbar(\"Phiên điểm danh đã kết thúc\", {\n        variant: \"success\"\n      });\n      navigate(`/teacher/classes/${classId}`);\n    } catch (error) {\n      console.error(\"Lỗi khi kết thúc phiên điểm danh:\", error);\n      enqueueSnackbar(\"Lỗi khi kết thúc phiên điểm danh\", {\n        variant: \"error\"\n      });\n    }\n  };\n\n  // Làm mới danh sách điểm danh\n  const refreshAttendanceLogs = async () => {\n    try {\n      const logsResponse = await axios.get(`${API_URL}/attendance/logs/${sessionId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setAttendanceLogs(logsResponse.data.data);\n      const sessionResponse = await axios.get(`${API_URL}/attendance/sessions/${sessionId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSessionInfo(sessionResponse.data.data);\n      enqueueSnackbar(\"Đã làm mới dữ liệu điểm danh\", {\n        variant: \"success\"\n      });\n    } catch (error) {\n      console.error(\"Lỗi khi làm mới dữ liệu:\", error);\n      enqueueSnackbar(\"Lỗi khi làm mới dữ liệu\", {\n        variant: \"error\"\n      });\n    }\n  };\n\n  // Chụp ảnh và nhận diện thủ công\n  const captureAndRecognize = async () => {\n    await handleDetectFaces();\n  };\n\n  // Hàm khởi tạo camera trực tiếp - nút duy nhất cho camera\n  const initDirectCamera = async () => {\n    try {\n      // Tải model nhận diện và đảm bảo model đã sẵn sàng\n      if (!isModelLoaded || !faceapi.nets.ssdMobilenetv1.isLoaded) {\n        enqueueSnackbar(\"Đang tải các mô hình nhận diện...\", {\n          variant: \"info\"\n        });\n        const modelLoaded = await loadFaceRecognitionModels();\n        if (!modelLoaded) {\n          enqueueSnackbar(\"Không thể tải mô hình nhận diện, vui lòng thử lại\", {\n            variant: \"error\"\n          });\n          return;\n        }\n      }\n\n      // Dừng stream cũ nếu có\n      if (webcamRef.current && webcamRef.current.video && webcamRef.current.video.srcObject) {\n        const tracks = webcamRef.current.video.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n      if (videoRef.current && videoRef.current.srcObject) {\n        const tracks = videoRef.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n\n      // Truy cập camera trực tiếp thông qua MediaDevices API\n      try {\n        // Thêm tùy chọn camera với nhiều độ phân giải\n        const constraints = {\n          video: {\n            width: {\n              ideal: 1280,\n              min: 640\n            },\n            height: {\n              ideal: 720,\n              min: 480\n            },\n            facingMode: \"user\",\n            frameRate: {\n              ideal: 30,\n              min: 15\n            }\n          },\n          audio: false\n        };\n        console.log(\"[DEBUG] Đang yêu cầu truy cập camera với tùy chọn:\", constraints);\n        const stream = await navigator.mediaDevices.getUserMedia(constraints);\n        console.log(\"Đã nhận được stream camera trực tiếp\", stream.id);\n\n        // Nếu đang sử dụng webcam component\n        if (webcamRef.current && webcamRef.current.video) {\n          webcamRef.current.video.srcObject = stream;\n\n          // Kiểm tra stream đã hoạt động chưa\n          webcamRef.current.video.onloadedmetadata = () => {\n            webcamRef.current.video.play().catch(err => {\n              console.error(\"Lỗi khi play video webcam:\", err);\n            });\n          };\n        }\n        // Hoặc nếu đang sử dụng video element\n        else if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n          videoRef.current.onloadedmetadata = () => {\n            videoRef.current.play().catch(err => console.error(\"Lỗi khi play video:\", err));\n          };\n        }\n\n        // Đánh dấu camera và model đã sẵn sàng\n        dispatch(setModelLoaded(true));\n        dispatch(setCameraReady(true));\n\n        // Khởi động thời gian phát hiện ban đầu\n        setLastDetectionTime(Date.now());\n        enqueueSnackbar(\"Đã kết nối camera thành công\", {\n          variant: \"success\"\n        });\n\n        // Bật hiển thị landmark sau khi camera khởi động\n        setTimeout(() => {\n          setShowLandmark(true);\n        }, 1000);\n\n        // Đặt lại số lần thử camera\n        setCameraRetryCount(0);\n        return true;\n      } catch (err) {\n        console.error(\"Lỗi truy cập camera:\", err);\n        enqueueSnackbar(`Không thể truy cập camera: ${err.message}`, {\n          variant: \"error\"\n        });\n\n        // Thử phương án thay thế nếu camera mặt trước thất bại\n        if (cameraRetryCount < 2) {\n          try {\n            console.log(\"[DEBUG] Thử sử dụng camera phương án thay thế\");\n            const altStream = await navigator.mediaDevices.getUserMedia({\n              video: true,\n              // Chỉ yêu cầu bất kỳ camera nào có sẵn\n              audio: false\n            });\n\n            // Xử lý stream mới\n            if (webcamRef.current && webcamRef.current.video) {\n              webcamRef.current.video.srcObject = altStream;\n            } else if (videoRef.current) {\n              videoRef.current.srcObject = altStream;\n              videoRef.current.onloadedmetadata = () => videoRef.current.play();\n            }\n            dispatch(setCameraReady(true));\n            setLastDetectionTime(Date.now());\n            enqueueSnackbar(\"Đã kết nối camera thay thế\", {\n              variant: \"success\"\n            });\n            return true;\n          } catch (altErr) {\n            console.error(\"Không thể sử dụng camera thay thế:\", altErr);\n          }\n        }\n\n        // Nếu không thể truy cập camera, dùng dữ liệu demo\n        updateWithDemoFaceData();\n        return false;\n      }\n    } catch (err) {\n      console.error(\"Lỗi khi khởi tạo camera trực tiếp:\", err);\n      enqueueSnackbar(`Lỗi: ${err.message}`, {\n        variant: \"error\"\n      });\n      return false;\n    }\n  };\n\n  // Điểm danh thủ công trong chế độ đơn giản\n  const showStudentList = () => {\n    if (!classInfo) return;\n\n    // Hiển thị danh sách sinh viên để điểm danh thủ công\n    const absentStudents = getAbsentStudents();\n    if (absentStudents.length === 0) {\n      enqueueSnackbar(\"Tất cả sinh viên đã được điểm danh\", {\n        variant: \"success\"\n      });\n      return;\n    }\n\n    // Hiển thị dialog chọn sinh viên để điểm danh\n    if (absentStudents.length > 0 && absentStudents[0]) {\n      openManualAttendanceDialog(absentStudents[0]);\n    }\n  };\n\n  // Bật/tắt hiển thị landmark trên khuôn mặt\n  const toggleLandmarkDetection = () => {\n    var _webcamRef$current3;\n    const newState = !showLandmark;\n    setShowLandmark(newState);\n\n    // Lấy canvas context\n    const canvasElement = canvasRef.current;\n    if (!canvasElement) return;\n    const ctx = canvasElement.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n\n    // Kiểm tra nếu không có khuôn mặt được phát hiện\n    if (!detectedFaces || detectedFaces.length === 0) return;\n\n    // Lấy video element\n    const videoElement = isAutoMode ? videoRef.current : (_webcamRef$current3 = webcamRef.current) === null || _webcamRef$current3 === void 0 ? void 0 : _webcamRef$current3.video;\n    if (!videoElement) return;\n\n    // Tính toán tỷ lệ hiển thị\n    const displaySize = {\n      width: videoElement.videoWidth || videoElement.width,\n      height: videoElement.videoHeight || videoElement.height\n    };\n\n    // Đảm bảo canvas có kích thước phù hợp\n    faceapi.matchDimensions(canvasElement, displaySize);\n    try {\n      // Tạo FaceMatcher từ dữ liệu sinh viên có độ dài hợp lệ\n      const labeledDescriptors = classStudents.filter(student => student.faceDescriptors && student.faceDescriptors.length > 0 && student.faceDescriptors[0].length === 128 // Đảm bảo descriptor có đúng 128 phần tử\n      ).map(student => {\n        try {\n          // Chuyển đổi mỗi descriptor thành Float32Array và xác minh độ dài\n          const descriptors = student.faceDescriptors.filter(desc => Array.isArray(desc) && desc.length === 128).map(descriptor => new Float32Array(descriptor));\n          if (descriptors.length === 0) return null;\n          return new faceapi.LabeledFaceDescriptors(student._id, descriptors);\n        } catch (err) {\n          if (ENABLE_DEBUG_LOGS) {\n            console.error(`Lỗi khi xử lý descriptor của sinh viên ${student._id}:`, err);\n          }\n          return null;\n        }\n      }).filter(Boolean); // Lọc bỏ các giá trị null\n\n      // Tạo faceMatcher nếu có dữ liệu\n      let faceMatcher = null;\n      if (labeledDescriptors.length > 0) {\n        faceMatcher = new faceapi.FaceMatcher(labeledDescriptors, RECOGNITION_THRESHOLD);\n      } else if (ENABLE_DEBUG_LOGS) {\n        console.warn(\"Không có dữ liệu khuôn mặt hợp lệ của sinh viên\");\n      }\n\n      // Sử dụng faceapi.resizeResults để điều chỉnh kích thước phát hiện phù hợp với canvas\n      const resizedDetections = faceapi.resizeResults(detectedFaces, displaySize);\n\n      // Vẽ các phát hiện lên canvas\n      resizedDetections.forEach(detection => {\n        try {\n          // Chỉ xử lý descriptor hợp lệ\n          if (detection.descriptor && detection.descriptor.length === 128 && faceMatcher) {\n            var _classStudents$find;\n            const bestMatch = faceMatcher.findBestMatch(detection.descriptor);\n            const {\n              label,\n              distance\n            } = bestMatch;\n            const drawBox = new faceapi.draw.DrawBox(detection.detection.box, {\n              label: label !== \"unknown\" ? `${((_classStudents$find = classStudents.find(s => s._id === label)) === null || _classStudents$find === void 0 ? void 0 : _classStudents$find.full_name) || \"Unknown\"} (${Math.round((1 - distance) * 100)}%)` : \"Unknown\",\n              boxColor: label !== \"unknown\" ? \"green\" : \"red\"\n            });\n            drawBox.draw(canvasElement);\n          } else {\n            // Nếu không có descriptor hoặc không thể nhận diện\n            const drawBox = new faceapi.draw.DrawBox(detection.detection.box, {\n              label: \"Đang phân tích...\",\n              boxColor: \"blue\"\n            });\n            drawBox.draw(canvasElement);\n          }\n\n          // Vẽ landmarks nếu đã bật và detection có landmarks\n          if (newState && detection.landmarks && detection.landmarks.positions && detection.landmarks.positions.length > 0) {\n            try {\n              // Vẽ landmark cho từng detection riêng biệt\n              faceapi.draw.drawFaceLandmarks(canvasElement, detection);\n            } catch (err) {\n              console.error(\"Lỗi khi vẽ landmarks:\", err);\n            }\n          }\n        } catch (err) {\n          console.error(\"Lỗi khi xử lý detection trong toggle landmark:\", err);\n        }\n      });\n    } catch (error) {\n      console.error(\"Lỗi khi hiển thị landmarks:\", error);\n    }\n  };\n\n  // Xử lý đánh dấu sinh viên điểm danh\n  const handleMarkAttendance = async (studentId, confidence) => {\n    // Kiểm tra xem sinh viên đã được điểm danh chưa\n    const isAlreadyAttended = attendanceLogs.some(log => log.student_id._id === studentId && log.status === \"present\");\n    if (isAlreadyAttended) {\n      if (ENABLE_DEBUG_LOGS) {\n        console.log(`[DEBUG] Sinh viên ${studentId} đã được điểm danh trước đó`);\n      }\n      return;\n    }\n    try {\n      var _webcamRef$current4;\n      // Lấy dữ liệu video\n      const videoElement = isAutoMode ? videoRef.current : (_webcamRef$current4 = webcamRef.current) === null || _webcamRef$current4 === void 0 ? void 0 : _webcamRef$current4.video;\n      if (!videoElement) return;\n\n      // Tạo ảnh chụp từ video element\n      let imageBase64 = null;\n\n      // Nếu sử dụng webcam component\n      if (!isAutoMode && webcamRef.current) {\n        imageBase64 = webcamRef.current.getScreenshot();\n      }\n      // Nếu sử dụng video element trực tiếp\n      else if (isAutoMode) {\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = videoElement.videoWidth;\n        canvas.height = videoElement.videoHeight;\n        const ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(videoElement, 0, 0);\n        imageBase64 = canvas.toDataURL(\"image/jpeg\");\n      }\n\n      // Tìm sinh viên đã được phát hiện\n      const student = classStudents.find(s => s._id === studentId);\n      if (!student) {\n        console.error(`Không tìm thấy sinh viên với ID ${studentId}`);\n        return;\n      }\n\n      // Lấy descriptor mới nhất từ sinh viên\n      const descriptor = student.faceDescriptors && student.faceDescriptors.length > 0 ? student.faceDescriptors[0] : null;\n\n      // Gọi API điểm danh\n      if (ENABLE_DEBUG_LOGS) {\n        console.log(`[DEBUG] Đánh dấu điểm danh cho ${student.full_name} với độ tin cậy ${confidence.toFixed(2)}`);\n      }\n\n      // Gọi hàm điểm danh\n      await markAttendance(studentId, descriptor, confidence, imageBase64);\n    } catch (error) {\n      console.error(\"Lỗi khi đánh dấu điểm danh:\", error);\n    }\n  };\n\n  // Hàm để tạo dữ liệu điểm danh demo khi không có descriptor\n  const generateDemoFaceData = () => {\n    if (!classInfo || !classInfo.students || classInfo.students.length === 0) {\n      console.warn(\"Không có dữ liệu sinh viên để tạo dữ liệu demo\");\n      return [];\n    }\n\n    // Tạo descriptor mẫu 128 phần tử\n    const createDemoDescriptor = () => {\n      // Tạo một mảng 128 phần tử với giá trị ngẫu nhiên\n      const descriptor = new Array(128).fill(0).map(() => (Math.random() - 0.5) * 0.8);\n      return descriptor;\n    };\n\n    // Tạo dữ liệu mẫu cho mỗi sinh viên\n    const demoStudentsData = classInfo.students.map(student => {\n      // Mỗi sinh viên có 3 descriptor mẫu\n      const descriptors = [createDemoDescriptor(), createDemoDescriptor(), createDemoDescriptor()];\n      return {\n        ...student,\n        faceDescriptors: descriptors\n      };\n    });\n    console.log(`[DEMO] Đã tạo dữ liệu demo cho ${demoStudentsData.length} sinh viên`);\n    enqueueSnackbar(`Đã tạo dữ liệu nhận diện demo cho ${demoStudentsData.length} sinh viên`, {\n      variant: \"info\",\n      autoHideDuration: 5000\n    });\n    return demoStudentsData;\n  };\n\n  // Hàm để cập nhật dữ liệu khuôn mặt khi không có dữ liệu thực\n  const updateWithDemoFaceData = () => {\n    if (classStudents.length === 0 || !classStudents.some(student => student.faceDescriptors && student.faceDescriptors.length > 0 && student.faceDescriptors[0].length === 128)) {\n      console.log(\"[DEMO] Không tìm thấy dữ liệu khuôn mặt hợp lệ, tạo dữ liệu demo\");\n      const demoData = generateDemoFaceData();\n      if (demoData.length > 0) {\n        dispatch({\n          type: \"faceRecognition/getClassFaceFeatures/fulfilled\",\n          payload: {\n            students: demoData\n          }\n        });\n        return true;\n      }\n    }\n    return false;\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"60vh\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1324,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1318,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Lấy danh sách sinh viên vắng mặt\n  const getAbsentStudents = () => {\n    if (!classInfo || !sessionInfo) return [];\n    const presentStudentIds = attendanceLogs.filter(log => log.status === \"present\").map(log => log.student_id._id);\n    return classInfo.students.filter(student => !presentStudentIds.includes(student._id));\n  };\n  const absentStudents = getAbsentStudents();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: [\"\\u0110i\\u1EC3m Danh - \", classInfo === null || classInfo === void 0 ? void 0 : classInfo.class_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1346,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      color: \"textSecondary\",\n      gutterBottom: true,\n      children: [\"Bu\\u1ED5i \", sessionInfo === null || sessionInfo === void 0 ? void 0 : sessionInfo.session_number, \" -\", \" \", new Date(sessionInfo === null || sessionInfo === void 0 ? void 0 : sessionInfo.date).toLocaleDateString(\"vi-VN\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1349,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      mt: 1,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              mb: 2,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Camera nh\\u1EADn di\\u1EC7n\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1364,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Chip, {\n                  label: isAutoMode ? \"Tự động đang bật\" : \"Tự động đang tắt\",\n                  color: isAutoMode ? \"success\" : \"default\",\n                  sx: {\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1366,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: isAutoMode ? \"error\" : \"primary\",\n                  onClick: isAutoMode ? () => {\n                    // Dừng tự động\n                    if (intervalId) {\n                      clearInterval(intervalId);\n                      setIntervalId(null);\n                    }\n                    setIsAutoMode(false);\n                    enqueueSnackbar(\"Đã tắt chế độ tự động điểm danh\", {\n                      variant: \"info\"\n                    });\n                  } : () => {\n                    // Bắt đầu tự động\n                    if (intervalId) {\n                      clearInterval(intervalId);\n                    }\n                    // Khởi tạo thời gian phát hiện ban đầu\n                    setLastDetectionTime(Date.now());\n                    const id = setInterval(() => {\n                      handleDetectFaces();\n                    }, AUTO_DETECT_INTERVAL);\n                    setIntervalId(id);\n                    setIsAutoMode(true);\n                    enqueueSnackbar(\"Đã bật chế độ tự động điểm danh\", {\n                      variant: \"info\"\n                    });\n                  },\n                  children: isAutoMode ? \"Tắt tự động\" : \"Bật tự động\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1371,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1365,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1358,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1357,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            sx: {\n              position: \"relative\",\n              width: \"100%\",\n              height: \"400px\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              overflow: \"hidden\",\n              mb: 2\n            },\n            children: isCameraReady ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [isAutoMode ?\n              /*#__PURE__*/\n              // Sử dụng video element trực tiếp thay vì Webcam component\n              _jsxDEV(\"video\", {\n                ref: videoRef,\n                style: {\n                  position: \"absolute\",\n                  width: \"100%\",\n                  height: \"100%\",\n                  objectFit: \"cover\"\n                },\n                autoPlay: true,\n                playsInline: true,\n                muted: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1428,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Webcam, {\n                audio: false,\n                ref: webcamRef,\n                screenshotFormat: \"image/jpeg\",\n                width: 640,\n                height: 480,\n                videoConstraints: {\n                  width: 640,\n                  height: 480,\n                  facingMode: \"user\"\n                },\n                style: {\n                  position: \"absolute\",\n                  width: \"100%\",\n                  height: \"100%\",\n                  objectFit: \"cover\"\n                },\n                onUserMedia: stream => {\n                  console.log(\"Camera đã được cấp quyền và khởi tạo\", stream.id);\n                  // Đảm bảo readyState được kiểm tra khi stream đã sẵn sàng\n                  setTimeout(() => {\n                    if (webcamRef.current && webcamRef.current.video) {\n                      console.log(\"Stream ready, readyState=\", webcamRef.current.video.readyState);\n                      dispatch(setCameraReady(true));\n                      // Đặt thời gian phát hiện ban đầu\n                      setLastDetectionTime(Date.now());\n                    }\n                  }, 500);\n                },\n                onUserMediaError: err => {\n                  console.error(\"Lỗi khi truy cập camera:\", err);\n                  enqueueSnackbar(`Không thể truy cập camera: ${err.name === \"NotAllowedError\" ? \"Bạn chưa cấp quyền truy cập camera\" : err.name === \"NotFoundError\" ? \"Không tìm thấy thiết bị camera\" : err.message || \"Lỗi không xác định\"}`, {\n                    variant: \"error\"\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1441,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n                ref: canvasRef,\n                style: {\n                  position: \"absolute\",\n                  top: 0,\n                  left: 0,\n                  width: \"100%\",\n                  height: \"100%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1494,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 50\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1507,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                mt: 2,\n                children: \"\\u0110ang kh\\u1EDFi t\\u1EA1o camera...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1508,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                color: \"text.secondary\",\n                sx: {\n                  mt: 1\n                },\n                children: isModelLoaded ? \"Chờ kết nối camera - Hãy đảm bảo bạn đã cấp quyền camera\" : \"Đang tải mô hình nhận diện khuôn mặt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1509,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mt: 2,\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\",\n                  gap: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  size: \"small\",\n                  onClick: initDirectCamera,\n                  children: \"Kh\\u1EDFi \\u0111\\u1ED9ng camera tr\\u1EF1c ti\\u1EBFp\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1528,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: \"warning\",\n                  size: \"small\",\n                  onClick: updateWithDemoFaceData,\n                  children: \"T\\u1EA1o d\\u1EEF li\\u1EC7u nh\\u1EADn di\\u1EC7n demo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1537,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Alert, {\n                  severity: \"info\",\n                  sx: {\n                    mt: 2,\n                    maxWidth: 300\n                  },\n                  children: [\"N\\u1EBFu camera kh\\xF4ng ho\\u1EA1t \\u0111\\u1ED9ng, vui l\\xF2ng th\\u1EED:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n                    style: {\n                      margin: \"8px 0\",\n                      paddingLeft: \"20px\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                      children: \"Ki\\u1EC3m tra quy\\u1EC1n camera tr\\xEAn tr\\xECnh duy\\u1EC7t\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1549,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: \"L\\xE0m m\\u1EDBi trang v\\xE0 th\\u1EED l\\u1EA1i\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1550,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: \"\\u0110\\u1EA3m b\\u1EA3o kh\\xF4ng c\\xF3 \\u1EE9ng d\\u1EE5ng kh\\xE1c \\u0111ang s\\u1EED d\\u1EE5ng camera\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1551,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1548,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1546,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1519,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1506,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1411,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              onClick: captureAndRecognize,\n              startIcon: /*#__PURE__*/_jsxDEV(CameraAlt, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1565,\n                columnNumber: 28\n              }, this),\n              disabled: !isCameraReady || isRecognizing || isAutoMode,\n              children: isRecognizing ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 24,\n                color: \"inherit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1569,\n                columnNumber: 19\n              }, this) : \"Chụp & Nhận diện\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1562,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: [isCameraReady && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: showLandmark ? \"success\" : \"info\",\n                  onClick: toggleLandmarkDetection,\n                  sx: {\n                    mr: 1\n                  },\n                  children: showLandmark ? \"Tắt Landmark\" : \"Hiện Landmark\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1578,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: isAutoMode ? \"error\" : \"primary\",\n                  onClick: isAutoMode ? () => {\n                    // Dừng tự động\n                    if (intervalId) {\n                      clearInterval(intervalId);\n                      setIntervalId(null);\n                    }\n                    setIsAutoMode(false);\n                    enqueueSnackbar(\"Đã tắt chế độ tự động điểm danh\", {\n                      variant: \"info\"\n                    });\n                  } : () => {\n                    // Bắt đầu tự động\n                    if (intervalId) {\n                      clearInterval(intervalId);\n                    }\n                    const id = setInterval(() => {\n                      handleDetectFaces();\n                    }, AUTO_DETECT_INTERVAL);\n                    setIntervalId(id);\n                    setIsAutoMode(true);\n                    enqueueSnackbar(\"Đã bật chế độ tự động điểm danh\", {\n                      variant: \"info\"\n                    });\n                  },\n                  sx: {\n                    mr: 1\n                  },\n                  children: isAutoMode ? \"Tắt tự động\" : \"Bật tự động\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1587,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: completeSession,\n                startIcon: /*#__PURE__*/_jsxDEV(Save, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1631,\n                  columnNumber: 30\n                }, this),\n                disabled: (sessionInfo === null || sessionInfo === void 0 ? void 0 : sessionInfo.status) === \"completed\",\n                children: \"K\\u1EBFt th\\xFAc phi\\xEAn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1627,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1575,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1561,\n            columnNumber: 13\n          }, this), recognizedStudents.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n            mt: 2,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: [\"\\u0110\\xE3 nh\\u1EADn di\\u1EC7n (\", recognizedStudents.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1641,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 1,\n              children: recognizedStudents.map((student, index) => /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                sm: 4,\n                children: /*#__PURE__*/_jsxDEV(Paper, {\n                  elevation: 2,\n                  sx: {\n                    p: 1,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    noWrap: true,\n                    children: student.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1656,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    color: \"textSecondary\",\n                    children: [Math.round(student.confidence * 100), \"% match\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1659,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    variant: \"outlined\",\n                    color: \"primary\",\n                    sx: {\n                      mt: 1\n                    },\n                    onClick: () => handleMarkAttendance(student.studentId, student.confidence),\n                    children: [/*#__PURE__*/_jsxDEV(Check, {\n                      fontSize: \"small\",\n                      sx: {\n                        mr: 0.5\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1674,\n                      columnNumber: 27\n                    }, this), \"\\u0110i\\u1EC3m danh\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1662,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1647,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1646,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1644,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1640,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1356,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1355,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            mb: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              mb: 2,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: [\"C\\xF3 m\\u1EB7t (\", attendanceLogs.filter(log => log.status === \"present\").length, \"/\", classInfo === null || classInfo === void 0 ? void 0 : classInfo.students.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1695,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"small\",\n                onClick: refreshAttendanceLogs,\n                children: /*#__PURE__*/_jsxDEV(Refresh, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1704,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1703,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1689,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              dense: true,\n              children: [attendanceLogs.filter(log => log.status === \"present\").sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp)).map(log => /*#__PURE__*/_jsxDEV(ListItem, {\n                secondaryAction: /*#__PURE__*/_jsxDEV(Chip, {\n                  size: \"small\",\n                  icon: log.recognized ? /*#__PURE__*/_jsxDEV(VerifiedUser, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1720,\n                    columnNumber: 31\n                  }, this) : null,\n                  label: log.recognized ? \"Tự động\" : \"Thủ công\",\n                  color: log.recognized ? \"success\" : \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1716,\n                  columnNumber: 25\n                }, this),\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    alt: log.student_id.full_name,\n                    src: log.student_id.avatar_url\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1729,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1728,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: log.student_id.full_name,\n                  secondary: `${new Date(log.timestamp).toLocaleTimeString(\"vi-VN\")}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1734,\n                  columnNumber: 23\n                }, this)]\n              }, log._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1713,\n                columnNumber: 21\n              }, this)), attendanceLogs.filter(log => log.status === \"present\").length === 0 && /*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: \"Ch\\u01B0a c\\xF3 sinh vi\\xEAn n\\xE0o \\u0111i\\u1EC3m danh\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1746,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1745,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1708,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1688,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1687,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: [\"V\\u1EAFng m\\u1EB7t (\", absentStudents.length, \"/\", classInfo === null || classInfo === void 0 ? void 0 : classInfo.students.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1755,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              dense: true,\n              children: [absentStudents.map(student => /*#__PURE__*/_jsxDEV(ListItem, {\n                secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n                  edge: \"end\",\n                  onClick: () => openManualAttendanceDialog(student),\n                  children: /*#__PURE__*/_jsxDEV(Edit, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1768,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1764,\n                  columnNumber: 23\n                }, this),\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    alt: student.full_name,\n                    src: student.avatar_url\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1773,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1772,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: student.full_name,\n                  secondary: student.student_code\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1778,\n                  columnNumber: 21\n                }, this)]\n              }, student._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1761,\n                columnNumber: 19\n              }, this)), absentStudents.length === 0 && /*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: \"Kh\\xF4ng c\\xF3 sinh vi\\xEAn n\\xE0o v\\u1EAFng m\\u1EB7t\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1787,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1786,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1759,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1754,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1753,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1686,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1354,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: manualDialogOpen,\n      onClose: handleManualDialogClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"\\u0110i\\u1EC3m danh th\\u1EE7 c\\xF4ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1798,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: [selectedStudent === null || selectedStudent === void 0 ? void 0 : selectedStudent.full_name, \" (\", selectedStudent === null || selectedStudent === void 0 ? void 0 : selectedStudent.student_code, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1801,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            margin: \"normal\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Tr\\u1EA1ng th\\xE1i\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1806,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              name: \"status\",\n              value: manualAttendanceData.status,\n              onChange: handleManualAttendanceChange,\n              label: \"Tr\\u1EA1ng th\\xE1i\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"present\",\n                children: \"C\\xF3 m\\u1EB7t\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1813,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"absent\",\n                children: \"V\\u1EAFng m\\u1EB7t\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1814,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"late\",\n                children: \"\\u0110i tr\\u1EC5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1815,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"early_leave\",\n                children: \"V\\u1EC1 s\\u1EDBm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1816,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1807,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1805,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            margin: \"normal\",\n            name: \"note\",\n            label: \"Ghi ch\\xFA\",\n            value: manualAttendanceData.note,\n            onChange: handleManualAttendanceChange,\n            multiline: true,\n            rows: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1820,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1800,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1799,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleManualDialogClose,\n          children: \"H\\u1EE7y\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1833,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleManualAttendanceSubmit,\n          variant: \"contained\",\n          children: \"X\\xE1c nh\\u1EADn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1834,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1832,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1797,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1345,\n    columnNumber: 5\n  }, this);\n};\n_s(AttendancePage, \"yZIALv0P3rMmS2vno41KPOgqt38=\", false, function () {\n  return [useParams, useNavigate, useDispatch, useSnackbar, useSelector, useSelector];\n});\n_c = AttendancePage;\nexport default AttendancePage;\nvar _c;\n$RefreshReg$(_c, \"AttendancePage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","useDispatch","useSelector","useSnackbar","Box","Typography","Card","CardContent","Grid","Paper","Button","Divider","CircularProgress","List","ListItem","ListItemAvatar","ListItemText","Avatar","Chip","Dialog","DialogTitle","DialogContent","DialogActions","TextField","FormControl","InputLabel","Select","MenuItem","IconButton","Alert","CameraAlt","Check","Close","Edit","Refresh","Save","VerifiedUser","HourglassEmpty","Webcam","faceapi","getClassFaceFeatures","verifyAttendance","manualAttendance","setModelLoaded","setCameraReady","setDetectedFaces","setRecognizedStudents","clearRecognitionState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","process","env","REACT_APP_API_URL","AttendancePage","_s","classId","sessionId","navigate","dispatch","enqueueSnackbar","webcamRef","canvasRef","videoRef","intervalId","setIntervalId","showLandmark","setShowLandmark","landmarkIntervalId","setLandmarkIntervalId","token","state","auth","isModelLoaded","isCameraReady","detectedFaces","recognizedStudents","classStudents","isProcessing","error","faceRecognition","classInfo","setClassInfo","sessionInfo","setSessionInfo","attendanceLogs","setAttendanceLogs","isLoading","setIsLoading","isRecognizing","setIsRecognizing","isAutoMode","setIsAutoMode","selectedStudent","setSelectedStudent","manualDialogOpen","setManualDialogOpen","manualAttendanceData","setManualAttendanceData","status","note","RECOGNITION_THRESHOLD","DETECTION_THRESHOLD","CONFIDENCE_THRESHOLD","AUTO_DETECT_INTERVAL","ENABLE_DEBUG_LOGS","cameraRetryCount","setCameraRetryCount","lastDetectionTime","setLastDetectionTime","loadInitialData","loadModelsPromise","loadFaceRecognitionModels","Promise","resolve","classPromise","get","headers","Authorization","sessionPromise","logsPromise","classResponse","sessionResponse","logsResponse","all","data","console","log","faceFeatureResult","unwrap","students","length","validDescriptorsCount","invalidDescriptorsCount","forEach","student","hasDescriptors","faceDescriptors","Array","isArray","validDescriptors","filter","desc","full_name","variant","autoHideDuration","demoData","generateDemoFaceData","type","payload","Date","now","clearInterval","current","video","srcObject","tracks","getTracks","track","stop","MAX_NO_DETECTION_TIME","checkDetectionTimeout","prev","initDirectCamera","checkInterval","setInterval","MODEL_URL","modelPromises","nets","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","ssdMobilenetv1","modelStatuses","isLoaded","every","ensureCameraIsWorking","_webcamRef$current","videoElement","readyState","handleDetectFaces","_webcamRef$current2","warn","displaySize","width","videoWidth","height","videoHeight","detections","detectAllFaces","SsdMobilenetv1Options","minConfidence","withFaceLandmarks","withFaceDescriptors","err","TinyFaceDetectorOptions","inputSize","scoreThreshold","toLocaleTimeString","canvasElement","ctx","getContext","clearRect","font","fillStyle","strokeStyle","lineWidth","text","x","y","strokeText","fillText","resizedDetections","resizeResults","labeledDescriptors","map","descriptors","descriptor","Float32Array","LabeledFaceDescriptors","_id","Boolean","updateWithDemoFaceData","faceMatcher","FaceMatcher","detection","bestMatch","findBestMatch","label","distance","find","s","studentId","confidence","handleMarkAttendance","drawBox","draw","DrawBox","box","Math","round","boxColor","landmarks","drawFaceLandmarks","openManualAttendanceDialog","handleManualDialogClose","handleManualAttendanceChange","e","target","name","value","handleManualAttendanceSubmit","result","updatedLogs","student_id","push","markAttendance","faceDescriptor","imageBase64","completeSession","put","refreshAttendanceLogs","captureAndRecognize","modelLoaded","constraints","ideal","min","facingMode","frameRate","audio","stream","navigator","mediaDevices","getUserMedia","id","onloadedmetadata","play","catch","setTimeout","message","altStream","altErr","showStudentList","absentStudents","getAbsentStudents","toggleLandmarkDetection","_webcamRef$current3","newState","matchDimensions","_classStudents$find","positions","isAlreadyAttended","some","_webcamRef$current4","getScreenshot","canvas","document","createElement","drawImage","toDataURL","toFixed","createDemoDescriptor","fill","random","demoStudentsData","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","presentStudentIds","includes","gutterBottom","class_name","color","session_number","date","toLocaleDateString","container","spacing","mt","item","xs","md","mb","sx","mr","onClick","elevation","position","overflow","ref","style","objectFit","autoPlay","playsInline","muted","screenshotFormat","videoConstraints","onUserMedia","onUserMediaError","top","left","flexDirection","size","gap","severity","maxWidth","margin","paddingLeft","startIcon","disabled","index","sm","p","noWrap","fontSize","dense","sort","a","b","timestamp","secondaryAction","icon","recognized","alt","src","avatar_url","primary","secondary","edge","student_code","open","onClose","fullWidth","onChange","multiline","rows","_c","$RefreshReg$"],"sources":["C:/Users/kasiz/Documents/Studying/FaceReg/frontend/src/pages/teacher/AttendancePage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Paper,\r\n  Button,\r\n  Divider,\r\n  CircularProgress,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Avatar,\r\n  Chip,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  IconButton,\r\n  Alert,\r\n} from \"@mui/material\";\r\nimport {\r\n  CameraAlt,\r\n  Check,\r\n  Close,\r\n  Edit,\r\n  Refresh,\r\n  Save,\r\n  VerifiedUser,\r\n  HourglassEmpty,\r\n} from \"@mui/icons-material\";\r\nimport Webcam from \"react-webcam\";\r\nimport * as faceapi from \"face-api.js\";\r\nimport {\r\n  getClassFaceFeatures,\r\n  verifyAttendance,\r\n  manualAttendance,\r\n  setModelLoaded,\r\n  setCameraReady,\r\n  setDetectedFaces,\r\n  setRecognizedStudents,\r\n  clearRecognitionState,\r\n} from \"../../redux/slices/faceRecognitionSlice\";\r\nimport axios from \"axios\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\r\n\r\nconst AttendancePage = () => {\r\n  const { classId, sessionId } = useParams();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const videoRef = useRef(null);\r\n  const [intervalId, setIntervalId] = useState(null);\r\n  const [showLandmark, setShowLandmark] = useState(false);\r\n  const [landmarkIntervalId, setLandmarkIntervalId] = useState(null);\r\n\r\n  const { token } = useSelector((state) => state.auth);\r\n  const {\r\n    isModelLoaded,\r\n    isCameraReady,\r\n    detectedFaces,\r\n    recognizedStudents,\r\n    classStudents,\r\n    isProcessing,\r\n    error,\r\n  } = useSelector((state) => state.faceRecognition);\r\n\r\n  const [classInfo, setClassInfo] = useState(null);\r\n  const [sessionInfo, setSessionInfo] = useState(null);\r\n  const [attendanceLogs, setAttendanceLogs] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isRecognizing, setIsRecognizing] = useState(false);\r\n  const [isAutoMode, setIsAutoMode] = useState(false);\r\n  const [selectedStudent, setSelectedStudent] = useState(null);\r\n  const [manualDialogOpen, setManualDialogOpen] = useState(false);\r\n  const [manualAttendanceData, setManualAttendanceData] = useState({\r\n    status: \"present\",\r\n    note: \"\",\r\n  });\r\n\r\n  // Các hằng số cấu hình\r\n  const RECOGNITION_THRESHOLD = 0.5; // Ngưỡng nhận diện\r\n  const DETECTION_THRESHOLD = 0.3; // Giảm ngưỡng phát hiện khuôn mặt\r\n  const CONFIDENCE_THRESHOLD = 0.6; // Ngưỡng độ tin cậy để điểm danh\r\n  const AUTO_DETECT_INTERVAL = 1000; // Thời gian giữa các lần phát hiện (ms)\r\n  const ENABLE_DEBUG_LOGS = true; // Bật/tắt log gỡ lỗi\r\n\r\n  // Thêm state mới để theo dõi số lần thử lại camera\r\n  const [cameraRetryCount, setCameraRetryCount] = useState(0);\r\n  const [lastDetectionTime, setLastDetectionTime] = useState(null);\r\n\r\n  // Load class info, session info và models\r\n  useEffect(() => {\r\n    const loadInitialData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n\r\n        // Bắt đầu tải dữ liệu và models song song\r\n        const loadModelsPromise = !isModelLoaded\r\n          ? loadFaceRecognitionModels()\r\n          : Promise.resolve(true);\r\n\r\n        // Lấy thông tin lớp học\r\n        const classPromise = axios.get(\r\n          `${API_URL}/classes/teaching/${classId}`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        );\r\n\r\n        // Lấy thông tin phiên điểm danh\r\n        const sessionPromise = axios.get(\r\n          `${API_URL}/attendance/sessions/${sessionId}`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        );\r\n\r\n        // Lấy danh sách điểm danh\r\n        const logsPromise = axios.get(\r\n          `${API_URL}/attendance/logs/${sessionId}`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        );\r\n\r\n        // Chờ tất cả API calls hoàn thành\r\n        const [classResponse, sessionResponse, logsResponse] =\r\n          await Promise.all([classPromise, sessionPromise, logsPromise]);\r\n\r\n        setClassInfo(classResponse.data.data);\r\n        setSessionInfo(sessionResponse.data.data);\r\n        setAttendanceLogs(logsResponse.data.data);\r\n\r\n        // Lấy đặc trưng khuôn mặt của sinh viên trong lớp\r\n        console.log(\r\n          \"[DEBUG] Bắt đầu lấy đặc trưng khuôn mặt của sinh viên, classId:\",\r\n          classId\r\n        );\r\n\r\n        // Dispatch action để lấy feature và theo dõi kết quả\r\n        const faceFeatureResult = await dispatch(\r\n          getClassFaceFeatures(classId)\r\n        ).unwrap();\r\n\r\n        // Kiểm tra xem có dữ liệu trả về không\r\n        if (faceFeatureResult && faceFeatureResult.students) {\r\n          console.log(\r\n            `[DEBUG] Nhận được dữ liệu khuôn mặt của ${faceFeatureResult.students.length} sinh viên`\r\n          );\r\n\r\n          // Kiểm tra chi tiết dữ liệu khuôn mặt\r\n          let validDescriptorsCount = 0;\r\n          let invalidDescriptorsCount = 0;\r\n\r\n          faceFeatureResult.students.forEach((student) => {\r\n            const hasDescriptors =\r\n              student.faceDescriptors &&\r\n              Array.isArray(student.faceDescriptors) &&\r\n              student.faceDescriptors.length > 0;\r\n            const validDescriptors = hasDescriptors\r\n              ? student.faceDescriptors.filter(\r\n                  (desc) => Array.isArray(desc) && desc.length === 128\r\n                ).length\r\n              : 0;\r\n\r\n            if (validDescriptors > 0) {\r\n              validDescriptorsCount++;\r\n              console.log(\r\n                `[DEBUG] Sinh viên ${\r\n                  student.full_name\r\n                } có ${validDescriptors}/${\r\n                  hasDescriptors ? student.faceDescriptors.length : 0\r\n                } descriptor hợp lệ`\r\n              );\r\n            } else {\r\n              invalidDescriptorsCount++;\r\n              console.log(\r\n                `[DEBUG] Sinh viên ${student.full_name} không có descriptor hợp lệ`\r\n              );\r\n              if (hasDescriptors && student.faceDescriptors.length > 0) {\r\n                console.log(\r\n                  `[DEBUG] Chi tiết descriptor đầu tiên:`,\r\n                  typeof student.faceDescriptors[0],\r\n                  Array.isArray(student.faceDescriptors[0])\r\n                    ? student.faceDescriptors[0].length\r\n                    : \"không phải mảng\"\r\n                );\r\n              }\r\n            }\r\n          });\r\n\r\n          console.log(\r\n            `[DEBUG] Tổng hợp: ${validDescriptorsCount} sinh viên có descriptor hợp lệ, ${invalidDescriptorsCount} sinh viên không có`\r\n          );\r\n\r\n          if (validDescriptorsCount === 0) {\r\n            enqueueSnackbar(\r\n              \"Không có sinh viên nào có dữ liệu khuôn mặt, đang tạo dữ liệu demo...\",\r\n              {\r\n                variant: \"warning\",\r\n                autoHideDuration: 5000,\r\n              }\r\n            );\r\n\r\n            // Tự động tạo dữ liệu demo nếu không có dữ liệu hợp lệ\r\n            const demoData = generateDemoFaceData();\r\n            if (demoData.length > 0) {\r\n              dispatch({\r\n                type: \"faceRecognition/getClassFaceFeatures/fulfilled\",\r\n                payload: { students: demoData },\r\n              });\r\n            }\r\n          }\r\n        } else {\r\n          console.log(\"[DEBUG] Không nhận được dữ liệu khuôn mặt từ API\");\r\n          enqueueSnackbar(\r\n            \"Không thể tải dữ liệu nhận diện khuôn mặt, đang tạo dữ liệu demo\",\r\n            {\r\n              variant: \"error\",\r\n            }\r\n          );\r\n\r\n          // Tự động tạo dữ liệu demo\r\n          const demoData = generateDemoFaceData();\r\n          if (demoData.length > 0) {\r\n            dispatch({\r\n              type: \"faceRecognition/getClassFaceFeatures/fulfilled\",\r\n              payload: { students: demoData },\r\n            });\r\n          }\r\n        }\r\n\r\n        // Không chờ đợi model load xong mới hiển thị UI\r\n        setIsLoading(false);\r\n\r\n        // Model sẽ load song song\r\n        await loadModelsPromise;\r\n\r\n        // Thiết lập thời gian phát hiện ban đầu\r\n        setLastDetectionTime(Date.now());\r\n      } catch (error) {\r\n        console.error(\"Lỗi khi tải dữ liệu:\", error);\r\n        enqueueSnackbar(\"Lỗi khi tải dữ liệu, đang tạo dữ liệu demo cho bạn\", {\r\n          variant: \"error\",\r\n        });\r\n        setIsLoading(false);\r\n\r\n        // Tự động tạo dữ liệu demo nếu có lỗi\r\n        const demoData = generateDemoFaceData();\r\n        if (demoData.length > 0) {\r\n          dispatch({\r\n            type: \"faceRecognition/getClassFaceFeatures/fulfilled\",\r\n            payload: { students: demoData },\r\n          });\r\n        }\r\n      }\r\n    };\r\n\r\n    loadInitialData();\r\n\r\n    // Clean up\r\n    return () => {\r\n      if (intervalId) {\r\n        clearInterval(intervalId);\r\n      }\r\n\r\n      // Dừng landmark interval nếu đang chạy\r\n      if (landmarkIntervalId) {\r\n        clearInterval(landmarkIntervalId);\r\n      }\r\n\r\n      // Dừng camera stream nếu đang chạy\r\n      if (\r\n        webcamRef.current &&\r\n        webcamRef.current.video &&\r\n        webcamRef.current.video.srcObject\r\n      ) {\r\n        const tracks = webcamRef.current.video.srcObject.getTracks();\r\n        tracks.forEach((track) => track.stop());\r\n      }\r\n\r\n      if (videoRef.current && videoRef.current.srcObject) {\r\n        const tracks = videoRef.current.srcObject.getTracks();\r\n        tracks.forEach((track) => track.stop());\r\n      }\r\n\r\n      dispatch(clearRecognitionState());\r\n\r\n      // Reset các state theo dõi camera\r\n      setCameraRetryCount(0);\r\n      setLastDetectionTime(null);\r\n    };\r\n  }, [\r\n    classId,\r\n    sessionId,\r\n    token,\r\n    dispatch,\r\n    enqueueSnackbar,\r\n    isModelLoaded,\r\n    intervalId,\r\n    landmarkIntervalId,\r\n  ]);\r\n\r\n  // Thêm useEffect mới để tự động khởi động lại camera khi không phát hiện khuôn mặt trong thời gian dài\r\n  useEffect(() => {\r\n    // Không làm gì nếu không bật chế độ tự động\r\n    if (!isAutoMode || !isCameraReady) return;\r\n\r\n    // Thời gian tối đa không phát hiện khuôn mặt trước khi thử khởi động lại camera (20 giây)\r\n    const MAX_NO_DETECTION_TIME = 20000;\r\n\r\n    // Kiểm tra thời gian từ lần phát hiện cuối cùng\r\n    const checkDetectionTimeout = () => {\r\n      const now = Date.now();\r\n\r\n      if (\r\n        lastDetectionTime &&\r\n        now - lastDetectionTime > MAX_NO_DETECTION_TIME\r\n      ) {\r\n        console.log(\r\n          \"[DEBUG] Quá lâu không phát hiện khuôn mặt, thử khởi động lại camera\"\r\n        );\r\n\r\n        // Tăng số lần thử lại và khởi động lại camera nếu chưa quá 3 lần\r\n        if (cameraRetryCount < 3) {\r\n          setCameraRetryCount((prev) => prev + 1);\r\n          initDirectCamera();\r\n          enqueueSnackbar(\"Đang thử khởi động lại camera...\", {\r\n            variant: \"info\",\r\n          });\r\n        } else if (cameraRetryCount === 3) {\r\n          // Sau 3 lần thử, đưa ra gợi ý chi tiết hơn\r\n          setCameraRetryCount((prev) => prev + 1);\r\n          enqueueSnackbar(\r\n            \"Kiểm tra lại camera và ánh sáng. Có thể cần cấp lại quyền camera.\",\r\n            { variant: \"warning\", autoHideDuration: 8000 }\r\n          );\r\n        }\r\n      }\r\n    };\r\n\r\n    // Thiết lập interval kiểm tra\r\n    const checkInterval = setInterval(checkDetectionTimeout, 10000);\r\n\r\n    return () => {\r\n      clearInterval(checkInterval);\r\n    };\r\n  }, [\r\n    isAutoMode,\r\n    isCameraReady,\r\n    lastDetectionTime,\r\n    cameraRetryCount,\r\n    enqueueSnackbar,\r\n    initDirectCamera,\r\n  ]);\r\n\r\n  // Load các mô hình nhận diện khuôn mặt\r\n  const loadFaceRecognitionModels = async () => {\r\n    try {\r\n      const MODEL_URL = \"/models\";\r\n      console.log(\"Bắt đầu tải models từ:\", MODEL_URL);\r\n\r\n      // Thêm SsdMobilenetv1 vào danh sách models cần tải\r\n      const modelPromises = [\r\n        faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL),\r\n        faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),\r\n        faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL),\r\n        faceapi.nets.ssdMobilenetv1.loadFromUri(MODEL_URL), // Thêm model SSD MobileNet\r\n      ];\r\n\r\n      // Kiểm tra xem các models đã được tải chưa\r\n      const modelStatuses = [\r\n        faceapi.nets.tinyFaceDetector.isLoaded,\r\n        faceapi.nets.faceLandmark68Net.isLoaded,\r\n        faceapi.nets.faceRecognitionNet.isLoaded,\r\n        faceapi.nets.ssdMobilenetv1.isLoaded, // Kiểm tra SSD MobileNet đã tải chưa\r\n      ];\r\n\r\n      if (modelStatuses.every((status) => status)) {\r\n        console.log(\"Các models đã được tải từ trước\");\r\n        dispatch(setModelLoaded(true));\r\n        return true;\r\n      }\r\n\r\n      await Promise.all(modelPromises);\r\n\r\n      console.log(\"Đã tải xong models thành công\");\r\n      dispatch(setModelLoaded(true));\r\n      enqueueSnackbar(\"Tải mô hình nhận diện thành công\", {\r\n        variant: \"success\",\r\n      });\r\n      return true;\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi tải mô hình:\", error);\r\n      enqueueSnackbar(\"Không thể tải mô hình nhận diện\", { variant: \"error\" });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Hàm kiểm tra và đảm bảo camera hoạt động\r\n  const ensureCameraIsWorking = () => {\r\n    // Kiểm tra nếu camera chưa hoạt động và đã thử khởi động\r\n    if (!isCameraReady && cameraRetryCount === 0) {\r\n      console.log(\"[DEBUG] Camera chưa sẵn sàng, thử khởi động\");\r\n      setCameraRetryCount(1);\r\n      initDirectCamera();\r\n      return false;\r\n    }\r\n\r\n    // Kiểm tra stream của camera\r\n    const videoElement = isAutoMode\r\n      ? videoRef.current\r\n      : webcamRef.current?.video;\r\n\r\n    if (\r\n      !videoElement ||\r\n      !videoElement.srcObject ||\r\n      videoElement.readyState !== 4\r\n    ) {\r\n      console.log(\r\n        \"[DEBUG] Video stream không hoạt động, thử khởi động lại camera\"\r\n      );\r\n      if (cameraRetryCount < 3) {\r\n        setCameraRetryCount((prev) => prev + 1);\r\n        initDirectCamera();\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  // Cập nhật hàm handleDetectFaces để kiểm tra camera trước\r\n  const handleDetectFaces = async () => {\r\n    try {\r\n      // Đảm bảo camera hoạt động\r\n      if (!ensureCameraIsWorking()) {\r\n        return [];\r\n      }\r\n\r\n      // Kiểm tra model đã tải chưa\r\n      if (!isModelLoaded || !faceapi.nets.ssdMobilenetv1.isLoaded) {\r\n        console.warn(\"Model SSD MobileNet chưa được tải, đang thử tải lại...\");\r\n        await loadFaceRecognitionModels();\r\n\r\n        if (!faceapi.nets.ssdMobilenetv1.isLoaded) {\r\n          enqueueSnackbar(\"Model nhận dạng chưa sẵn sàng, vui lòng thử lại\", {\r\n            variant: \"warning\",\r\n          });\r\n          return [];\r\n        }\r\n      }\r\n\r\n      // Lấy dữ liệu video\r\n      const videoElement = isAutoMode\r\n        ? videoRef.current\r\n        : webcamRef.current?.video;\r\n      if (!videoElement || !canvasRef.current) return [];\r\n\r\n      // Kiểm tra trạng thái video stream\r\n      if (videoElement.readyState !== 4) {\r\n        console.warn(\"Video element không sẵn sàng, đang đợi...\");\r\n        return [];\r\n      }\r\n\r\n      // Lấy kích thước của video\r\n      const displaySize = {\r\n        width: videoElement.videoWidth || videoElement.width || 640,\r\n        height: videoElement.videoHeight || videoElement.height || 480,\r\n      };\r\n\r\n      // Thử phát hiện với cả hai mô hình\r\n      let detections = [];\r\n\r\n      // Thử với SSD MobileNet trước (độ chính xác cao hơn)\r\n      try {\r\n        detections = await faceapi\r\n          .detectAllFaces(\r\n            videoElement,\r\n            new faceapi.SsdMobilenetv1Options({\r\n              minConfidence: DETECTION_THRESHOLD,\r\n            })\r\n          )\r\n          .withFaceLandmarks()\r\n          .withFaceDescriptors();\r\n      } catch (err) {\r\n        console.warn(\"Lỗi khi sử dụng SSD MobileNet:\", err);\r\n      }\r\n\r\n      // Nếu không phát hiện được, thử với TinyFaceDetector\r\n      if (!detections || detections.length === 0) {\r\n        try {\r\n          detections = await faceapi\r\n            .detectAllFaces(\r\n              videoElement,\r\n              new faceapi.TinyFaceDetectorOptions({\r\n                inputSize: 320,\r\n                scoreThreshold: DETECTION_THRESHOLD - 0.05, // Giảm ngưỡng thêm nữa\r\n              })\r\n            )\r\n            .withFaceLandmarks()\r\n            .withFaceDescriptors();\r\n        } catch (err) {\r\n          console.warn(\"Lỗi khi sử dụng TinyFaceDetector:\", err);\r\n        }\r\n      }\r\n\r\n      if (!detections || detections.length === 0) {\r\n        if (ENABLE_DEBUG_LOGS) {\r\n          console.log(\r\n            \"[DEBUG] Không phát hiện khuôn mặt - kiểm tra ánh sáng và vị trí\",\r\n            new Date().toLocaleTimeString()\r\n          );\r\n        }\r\n\r\n        // Xóa canvas nếu không có phát hiện\r\n        const canvasElement = canvasRef.current;\r\n        if (canvasElement) {\r\n          const ctx = canvasElement.getContext(\"2d\");\r\n          ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\r\n\r\n          // Vẽ hướng dẫn khi không có khuôn mặt\r\n          ctx.font = \"18px Arial\";\r\n          ctx.fillStyle = \"white\";\r\n          ctx.strokeStyle = \"black\";\r\n          ctx.lineWidth = 3;\r\n          const text =\r\n            \"Không phát hiện khuôn mặt - Điều chỉnh vị trí và ánh sáng\";\r\n          const x = canvasElement.width / 2 - 180;\r\n          const y = canvasElement.height / 2;\r\n          ctx.strokeText(text, x, y);\r\n          ctx.fillText(text, x, y);\r\n        }\r\n\r\n        return [];\r\n      }\r\n\r\n      // Đã phát hiện khuôn mặt, cập nhật thời gian\r\n      setLastDetectionTime(Date.now());\r\n      // Reset biến đếm thử lại\r\n      if (cameraRetryCount > 0) {\r\n        setCameraRetryCount(0);\r\n      }\r\n\r\n      if (ENABLE_DEBUG_LOGS) {\r\n        console.log(\r\n          `[DEBUG] Phát hiện ${detections.length} khuôn mặt`,\r\n          new Date().toLocaleTimeString()\r\n        );\r\n      }\r\n\r\n      // Điều chỉnh kích thước phát hiện để phù hợp với kích thước hiển thị\r\n      const resizedDetections = faceapi.resizeResults(detections, displaySize);\r\n\r\n      // Cập nhật state\r\n      dispatch(setDetectedFaces(resizedDetections));\r\n\r\n      // Tạo FaceMatcher từ dữ liệu sinh viên\r\n      const labeledDescriptors = classStudents\r\n        .filter(\r\n          (student) =>\r\n            student.faceDescriptors &&\r\n            student.faceDescriptors.length > 0 &&\r\n            student.faceDescriptors[0].length === 128 // Đảm bảo descriptor có đúng 128 phần tử\r\n        )\r\n        .map((student) => {\r\n          try {\r\n            // Chuyển đổi mỗi descriptor thành Float32Array và xác minh độ dài\r\n            const descriptors = student.faceDescriptors\r\n              .filter((desc) => Array.isArray(desc) && desc.length === 128)\r\n              .map((descriptor) => new Float32Array(descriptor));\r\n\r\n            if (descriptors.length === 0) return null;\r\n\r\n            return new faceapi.LabeledFaceDescriptors(student._id, descriptors);\r\n          } catch (err) {\r\n            console.error(\r\n              `Lỗi khi xử lý descriptor của sinh viên ${student._id}:`,\r\n              err\r\n            );\r\n            return null;\r\n          }\r\n        })\r\n        .filter(Boolean); // Lọc bỏ các giá trị null\r\n\r\n      // Tạo faceMatcher nếu có dữ liệu\r\n      if (labeledDescriptors.length === 0) {\r\n        console.warn(\"Không có dữ liệu khuôn mặt hợp lệ của sinh viên\");\r\n        // Tự động tạo dữ liệu demo nếu không có dữ liệu\r\n        if (!updateWithDemoFaceData()) {\r\n          enqueueSnackbar(\r\n            \"Không có dữ liệu khuôn mặt của sinh viên. Đang tạo dữ liệu demo.\",\r\n            { variant: \"warning\" }\r\n          );\r\n        }\r\n        return resizedDetections;\r\n      }\r\n\r\n      // Tạo faceMatcher với descriptor đã được xác thực\r\n      const faceMatcher = new faceapi.FaceMatcher(\r\n        labeledDescriptors,\r\n        RECOGNITION_THRESHOLD\r\n      );\r\n\r\n      // Vẽ lên canvas nếu có khuôn mặt\r\n      const canvasElement = canvasRef.current;\r\n      canvasElement.width = displaySize.width;\r\n      canvasElement.height = displaySize.height;\r\n\r\n      const ctx = canvasElement.getContext(\"2d\");\r\n      ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\r\n\r\n      // Vẽ các phát hiện lên canvas\r\n      resizedDetections.forEach((detection) => {\r\n        try {\r\n          if (detection.descriptor && detection.descriptor.length === 128) {\r\n            const bestMatch = faceMatcher.findBestMatch(detection.descriptor);\r\n            const { label, distance } = bestMatch;\r\n\r\n            // Kiểm tra nếu match với một sinh viên\r\n            if (label !== \"unknown\") {\r\n              // Tìm sinh viên trong danh sách\r\n              const student = classStudents.find((s) => s._id === label);\r\n              if (student) {\r\n                // Cập nhật thông tin nhận diện cho sinh viên\r\n                const studentId = student._id;\r\n                const confidence = 1 - distance;\r\n\r\n                // Đánh dấu sinh viên đã điểm danh nếu đủ độ tin cậy\r\n                if (confidence >= CONFIDENCE_THRESHOLD) {\r\n                  handleMarkAttendance(studentId, confidence);\r\n                }\r\n\r\n                // Vẽ hộp và tên sinh viên\r\n                const drawBox = new faceapi.draw.DrawBox(\r\n                  detection.detection.box,\r\n                  {\r\n                    label: `${student.full_name} (${Math.round(\r\n                      confidence * 100\r\n                    )}%)`,\r\n                    boxColor:\r\n                      confidence >= CONFIDENCE_THRESHOLD ? \"green\" : \"orange\",\r\n                  }\r\n                );\r\n                drawBox.draw(canvasElement);\r\n              }\r\n            } else {\r\n              // Không nhận diện được sinh viên\r\n              const drawBox = new faceapi.draw.DrawBox(\r\n                detection.detection.box,\r\n                {\r\n                  label: \"Unknown\",\r\n                  boxColor: \"red\",\r\n                }\r\n              );\r\n              drawBox.draw(canvasElement);\r\n            }\r\n          } else {\r\n            // Nếu descriptor không hợp lệ hoặc độ dài không đúng\r\n            console.warn(\r\n              \"Phát hiện descriptor không hợp lệ\",\r\n              detection.descriptor\r\n                ? detection.descriptor.length\r\n                : \"không có descriptor\"\r\n            );\r\n\r\n            // Không có descriptor\r\n            const drawBox = new faceapi.draw.DrawBox(detection.detection.box, {\r\n              label: \"Đang phân tích...\",\r\n              boxColor: \"blue\",\r\n            });\r\n            drawBox.draw(canvasElement);\r\n          }\r\n        } catch (err) {\r\n          console.error(\"Lỗi khi xử lý detection:\", err);\r\n        }\r\n\r\n        // Vẽ landmarks nếu đã bật\r\n        if (showLandmark && detection.landmarks) {\r\n          faceapi.draw.drawFaceLandmarks(canvasElement, detection);\r\n        }\r\n      });\r\n\r\n      return resizedDetections;\r\n    } catch (error) {\r\n      console.error(\"Lỗi phát hiện khuôn mặt:\", error);\r\n      enqueueSnackbar(\"Lỗi khi phát hiện khuôn mặt. Thử lại sau.\", {\r\n        variant: \"error\",\r\n      });\r\n      return [];\r\n    }\r\n  };\r\n\r\n  // Điểm danh thủ công\r\n  const openManualAttendanceDialog = (student) => {\r\n    setSelectedStudent(student);\r\n    setManualAttendanceData({\r\n      status: \"present\",\r\n      note: \"\",\r\n    });\r\n    setManualDialogOpen(true);\r\n  };\r\n\r\n  const handleManualDialogClose = () => {\r\n    setManualDialogOpen(false);\r\n  };\r\n\r\n  const handleManualAttendanceChange = (e) => {\r\n    setManualAttendanceData({\r\n      ...manualAttendanceData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleManualAttendanceSubmit = async () => {\r\n    if (!selectedStudent) return;\r\n\r\n    try {\r\n      const result = await dispatch(\r\n        manualAttendance({\r\n          sessionId,\r\n          studentId: selectedStudent._id,\r\n          status: manualAttendanceData.status,\r\n          note: manualAttendanceData.note,\r\n        })\r\n      ).unwrap();\r\n\r\n      // Cập nhật logs điểm danh\r\n      if (result && result.data) {\r\n        const updatedLogs = attendanceLogs.filter(\r\n          (log) => log.student_id._id !== selectedStudent._id\r\n        );\r\n\r\n        updatedLogs.push({\r\n          ...result.data,\r\n          student_id: selectedStudent,\r\n        });\r\n\r\n        setAttendanceLogs(updatedLogs);\r\n      }\r\n\r\n      enqueueSnackbar(\"Điểm danh thủ công thành công\", { variant: \"success\" });\r\n      handleManualDialogClose();\r\n\r\n      // Cập nhật lại thông tin phiên điểm danh\r\n      const sessionResponse = await axios.get(\r\n        `${API_URL}/attendance/sessions/${sessionId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      setSessionInfo(sessionResponse.data.data);\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi điểm danh thủ công:\", error);\r\n      enqueueSnackbar(\"Lỗi khi điểm danh thủ công\", { variant: \"error\" });\r\n    }\r\n  };\r\n\r\n  // Đánh dấu điểm danh từ nhận diện khuôn mặt\r\n  const markAttendance = async (\r\n    studentId,\r\n    faceDescriptor,\r\n    confidence,\r\n    imageBase64\r\n  ) => {\r\n    try {\r\n      const result = await dispatch(\r\n        verifyAttendance({\r\n          sessionId,\r\n          studentId,\r\n          faceDescriptor,\r\n          confidence,\r\n          imageBase64,\r\n        })\r\n      ).unwrap();\r\n\r\n      // Cập nhật logs điểm danh\r\n      if (result && result.data) {\r\n        const student = classStudents.find((s) => s._id === studentId);\r\n\r\n        if (student) {\r\n          const updatedLogs = attendanceLogs.filter(\r\n            (log) => log.student_id._id !== studentId\r\n          );\r\n\r\n          updatedLogs.push({\r\n            ...result.data,\r\n            student_id: student,\r\n          });\r\n\r\n          setAttendanceLogs(updatedLogs);\r\n\r\n          enqueueSnackbar(`Đã điểm danh cho ${student.full_name}`, {\r\n            variant: \"success\",\r\n          });\r\n        }\r\n      }\r\n\r\n      // Cập nhật lại thông tin phiên điểm danh\r\n      const sessionResponse = await axios.get(\r\n        `${API_URL}/attendance/sessions/${sessionId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      setSessionInfo(sessionResponse.data.data);\r\n\r\n      return true;\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi xác nhận điểm danh:\", error);\r\n      enqueueSnackbar(\"Lỗi khi xác nhận điểm danh\", { variant: \"error\" });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Kết thúc phiên điểm danh\r\n  const completeSession = async () => {\r\n    try {\r\n      await axios.put(\r\n        `${API_URL}/attendance/sessions/${sessionId}`,\r\n        { status: \"completed\" },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n\r\n      enqueueSnackbar(\"Phiên điểm danh đã kết thúc\", { variant: \"success\" });\r\n      navigate(`/teacher/classes/${classId}`);\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi kết thúc phiên điểm danh:\", error);\r\n      enqueueSnackbar(\"Lỗi khi kết thúc phiên điểm danh\", { variant: \"error\" });\r\n    }\r\n  };\r\n\r\n  // Làm mới danh sách điểm danh\r\n  const refreshAttendanceLogs = async () => {\r\n    try {\r\n      const logsResponse = await axios.get(\r\n        `${API_URL}/attendance/logs/${sessionId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      setAttendanceLogs(logsResponse.data.data);\r\n\r\n      const sessionResponse = await axios.get(\r\n        `${API_URL}/attendance/sessions/${sessionId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      setSessionInfo(sessionResponse.data.data);\r\n\r\n      enqueueSnackbar(\"Đã làm mới dữ liệu điểm danh\", { variant: \"success\" });\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi làm mới dữ liệu:\", error);\r\n      enqueueSnackbar(\"Lỗi khi làm mới dữ liệu\", { variant: \"error\" });\r\n    }\r\n  };\r\n\r\n  // Chụp ảnh và nhận diện thủ công\r\n  const captureAndRecognize = async () => {\r\n    await handleDetectFaces();\r\n  };\r\n\r\n  // Hàm khởi tạo camera trực tiếp - nút duy nhất cho camera\r\n  const initDirectCamera = async () => {\r\n    try {\r\n      // Tải model nhận diện và đảm bảo model đã sẵn sàng\r\n      if (!isModelLoaded || !faceapi.nets.ssdMobilenetv1.isLoaded) {\r\n        enqueueSnackbar(\"Đang tải các mô hình nhận diện...\", {\r\n          variant: \"info\",\r\n        });\r\n        const modelLoaded = await loadFaceRecognitionModels();\r\n\r\n        if (!modelLoaded) {\r\n          enqueueSnackbar(\"Không thể tải mô hình nhận diện, vui lòng thử lại\", {\r\n            variant: \"error\",\r\n          });\r\n          return;\r\n        }\r\n      }\r\n\r\n      // Dừng stream cũ nếu có\r\n      if (\r\n        webcamRef.current &&\r\n        webcamRef.current.video &&\r\n        webcamRef.current.video.srcObject\r\n      ) {\r\n        const tracks = webcamRef.current.video.srcObject.getTracks();\r\n        tracks.forEach((track) => track.stop());\r\n      }\r\n\r\n      if (videoRef.current && videoRef.current.srcObject) {\r\n        const tracks = videoRef.current.srcObject.getTracks();\r\n        tracks.forEach((track) => track.stop());\r\n      }\r\n\r\n      // Truy cập camera trực tiếp thông qua MediaDevices API\r\n      try {\r\n        // Thêm tùy chọn camera với nhiều độ phân giải\r\n        const constraints = {\r\n          video: {\r\n            width: { ideal: 1280, min: 640 },\r\n            height: { ideal: 720, min: 480 },\r\n            facingMode: \"user\",\r\n            frameRate: { ideal: 30, min: 15 },\r\n          },\r\n          audio: false,\r\n        };\r\n\r\n        console.log(\r\n          \"[DEBUG] Đang yêu cầu truy cập camera với tùy chọn:\",\r\n          constraints\r\n        );\r\n\r\n        const stream = await navigator.mediaDevices.getUserMedia(constraints);\r\n\r\n        console.log(\"Đã nhận được stream camera trực tiếp\", stream.id);\r\n\r\n        // Nếu đang sử dụng webcam component\r\n        if (webcamRef.current && webcamRef.current.video) {\r\n          webcamRef.current.video.srcObject = stream;\r\n\r\n          // Kiểm tra stream đã hoạt động chưa\r\n          webcamRef.current.video.onloadedmetadata = () => {\r\n            webcamRef.current.video.play().catch((err) => {\r\n              console.error(\"Lỗi khi play video webcam:\", err);\r\n            });\r\n          };\r\n        }\r\n        // Hoặc nếu đang sử dụng video element\r\n        else if (videoRef.current) {\r\n          videoRef.current.srcObject = stream;\r\n          videoRef.current.onloadedmetadata = () => {\r\n            videoRef.current\r\n              .play()\r\n              .catch((err) => console.error(\"Lỗi khi play video:\", err));\r\n          };\r\n        }\r\n\r\n        // Đánh dấu camera và model đã sẵn sàng\r\n        dispatch(setModelLoaded(true));\r\n        dispatch(setCameraReady(true));\r\n\r\n        // Khởi động thời gian phát hiện ban đầu\r\n        setLastDetectionTime(Date.now());\r\n\r\n        enqueueSnackbar(\"Đã kết nối camera thành công\", {\r\n          variant: \"success\",\r\n        });\r\n\r\n        // Bật hiển thị landmark sau khi camera khởi động\r\n        setTimeout(() => {\r\n          setShowLandmark(true);\r\n        }, 1000);\r\n\r\n        // Đặt lại số lần thử camera\r\n        setCameraRetryCount(0);\r\n\r\n        return true;\r\n      } catch (err) {\r\n        console.error(\"Lỗi truy cập camera:\", err);\r\n        enqueueSnackbar(`Không thể truy cập camera: ${err.message}`, {\r\n          variant: \"error\",\r\n        });\r\n\r\n        // Thử phương án thay thế nếu camera mặt trước thất bại\r\n        if (cameraRetryCount < 2) {\r\n          try {\r\n            console.log(\"[DEBUG] Thử sử dụng camera phương án thay thế\");\r\n            const altStream = await navigator.mediaDevices.getUserMedia({\r\n              video: true, // Chỉ yêu cầu bất kỳ camera nào có sẵn\r\n              audio: false,\r\n            });\r\n\r\n            // Xử lý stream mới\r\n            if (webcamRef.current && webcamRef.current.video) {\r\n              webcamRef.current.video.srcObject = altStream;\r\n            } else if (videoRef.current) {\r\n              videoRef.current.srcObject = altStream;\r\n              videoRef.current.onloadedmetadata = () => videoRef.current.play();\r\n            }\r\n\r\n            dispatch(setCameraReady(true));\r\n            setLastDetectionTime(Date.now());\r\n            enqueueSnackbar(\"Đã kết nối camera thay thế\", {\r\n              variant: \"success\",\r\n            });\r\n            return true;\r\n          } catch (altErr) {\r\n            console.error(\"Không thể sử dụng camera thay thế:\", altErr);\r\n          }\r\n        }\r\n\r\n        // Nếu không thể truy cập camera, dùng dữ liệu demo\r\n        updateWithDemoFaceData();\r\n        return false;\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Lỗi khi khởi tạo camera trực tiếp:\", err);\r\n      enqueueSnackbar(`Lỗi: ${err.message}`, { variant: \"error\" });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Điểm danh thủ công trong chế độ đơn giản\r\n  const showStudentList = () => {\r\n    if (!classInfo) return;\r\n\r\n    // Hiển thị danh sách sinh viên để điểm danh thủ công\r\n    const absentStudents = getAbsentStudents();\r\n    if (absentStudents.length === 0) {\r\n      enqueueSnackbar(\"Tất cả sinh viên đã được điểm danh\", {\r\n        variant: \"success\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Hiển thị dialog chọn sinh viên để điểm danh\r\n    if (absentStudents.length > 0 && absentStudents[0]) {\r\n      openManualAttendanceDialog(absentStudents[0]);\r\n    }\r\n  };\r\n\r\n  // Bật/tắt hiển thị landmark trên khuôn mặt\r\n  const toggleLandmarkDetection = () => {\r\n    const newState = !showLandmark;\r\n    setShowLandmark(newState);\r\n\r\n    // Lấy canvas context\r\n    const canvasElement = canvasRef.current;\r\n    if (!canvasElement) return;\r\n\r\n    const ctx = canvasElement.getContext(\"2d\");\r\n    ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\r\n\r\n    // Kiểm tra nếu không có khuôn mặt được phát hiện\r\n    if (!detectedFaces || detectedFaces.length === 0) return;\r\n\r\n    // Lấy video element\r\n    const videoElement = isAutoMode\r\n      ? videoRef.current\r\n      : webcamRef.current?.video;\r\n    if (!videoElement) return;\r\n\r\n    // Tính toán tỷ lệ hiển thị\r\n    const displaySize = {\r\n      width: videoElement.videoWidth || videoElement.width,\r\n      height: videoElement.videoHeight || videoElement.height,\r\n    };\r\n\r\n    // Đảm bảo canvas có kích thước phù hợp\r\n    faceapi.matchDimensions(canvasElement, displaySize);\r\n\r\n    try {\r\n      // Tạo FaceMatcher từ dữ liệu sinh viên có độ dài hợp lệ\r\n      const labeledDescriptors = classStudents\r\n        .filter(\r\n          (student) =>\r\n            student.faceDescriptors &&\r\n            student.faceDescriptors.length > 0 &&\r\n            student.faceDescriptors[0].length === 128 // Đảm bảo descriptor có đúng 128 phần tử\r\n        )\r\n        .map((student) => {\r\n          try {\r\n            // Chuyển đổi mỗi descriptor thành Float32Array và xác minh độ dài\r\n            const descriptors = student.faceDescriptors\r\n              .filter((desc) => Array.isArray(desc) && desc.length === 128)\r\n              .map((descriptor) => new Float32Array(descriptor));\r\n\r\n            if (descriptors.length === 0) return null;\r\n\r\n            return new faceapi.LabeledFaceDescriptors(student._id, descriptors);\r\n          } catch (err) {\r\n            if (ENABLE_DEBUG_LOGS) {\r\n              console.error(\r\n                `Lỗi khi xử lý descriptor của sinh viên ${student._id}:`,\r\n                err\r\n              );\r\n            }\r\n            return null;\r\n          }\r\n        })\r\n        .filter(Boolean); // Lọc bỏ các giá trị null\r\n\r\n      // Tạo faceMatcher nếu có dữ liệu\r\n      let faceMatcher = null;\r\n      if (labeledDescriptors.length > 0) {\r\n        faceMatcher = new faceapi.FaceMatcher(\r\n          labeledDescriptors,\r\n          RECOGNITION_THRESHOLD\r\n        );\r\n      } else if (ENABLE_DEBUG_LOGS) {\r\n        console.warn(\"Không có dữ liệu khuôn mặt hợp lệ của sinh viên\");\r\n      }\r\n\r\n      // Sử dụng faceapi.resizeResults để điều chỉnh kích thước phát hiện phù hợp với canvas\r\n      const resizedDetections = faceapi.resizeResults(\r\n        detectedFaces,\r\n        displaySize\r\n      );\r\n\r\n      // Vẽ các phát hiện lên canvas\r\n      resizedDetections.forEach((detection) => {\r\n        try {\r\n          // Chỉ xử lý descriptor hợp lệ\r\n          if (\r\n            detection.descriptor &&\r\n            detection.descriptor.length === 128 &&\r\n            faceMatcher\r\n          ) {\r\n            const bestMatch = faceMatcher.findBestMatch(detection.descriptor);\r\n            const { label, distance } = bestMatch;\r\n\r\n            const drawBox = new faceapi.draw.DrawBox(detection.detection.box, {\r\n              label:\r\n                label !== \"unknown\"\r\n                  ? `${\r\n                      classStudents.find((s) => s._id === label)?.full_name ||\r\n                      \"Unknown\"\r\n                    } (${Math.round((1 - distance) * 100)}%)`\r\n                  : \"Unknown\",\r\n              boxColor: label !== \"unknown\" ? \"green\" : \"red\",\r\n            });\r\n\r\n            drawBox.draw(canvasElement);\r\n          } else {\r\n            // Nếu không có descriptor hoặc không thể nhận diện\r\n            const drawBox = new faceapi.draw.DrawBox(detection.detection.box, {\r\n              label: \"Đang phân tích...\",\r\n              boxColor: \"blue\",\r\n            });\r\n            drawBox.draw(canvasElement);\r\n          }\r\n\r\n          // Vẽ landmarks nếu đã bật và detection có landmarks\r\n          if (\r\n            newState &&\r\n            detection.landmarks &&\r\n            detection.landmarks.positions &&\r\n            detection.landmarks.positions.length > 0\r\n          ) {\r\n            try {\r\n              // Vẽ landmark cho từng detection riêng biệt\r\n              faceapi.draw.drawFaceLandmarks(canvasElement, detection);\r\n            } catch (err) {\r\n              console.error(\"Lỗi khi vẽ landmarks:\", err);\r\n            }\r\n          }\r\n        } catch (err) {\r\n          console.error(\"Lỗi khi xử lý detection trong toggle landmark:\", err);\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi hiển thị landmarks:\", error);\r\n    }\r\n  };\r\n\r\n  // Xử lý đánh dấu sinh viên điểm danh\r\n  const handleMarkAttendance = async (studentId, confidence) => {\r\n    // Kiểm tra xem sinh viên đã được điểm danh chưa\r\n    const isAlreadyAttended = attendanceLogs.some(\r\n      (log) => log.student_id._id === studentId && log.status === \"present\"\r\n    );\r\n\r\n    if (isAlreadyAttended) {\r\n      if (ENABLE_DEBUG_LOGS) {\r\n        console.log(\r\n          `[DEBUG] Sinh viên ${studentId} đã được điểm danh trước đó`\r\n        );\r\n      }\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Lấy dữ liệu video\r\n      const videoElement = isAutoMode\r\n        ? videoRef.current\r\n        : webcamRef.current?.video;\r\n\r\n      if (!videoElement) return;\r\n\r\n      // Tạo ảnh chụp từ video element\r\n      let imageBase64 = null;\r\n\r\n      // Nếu sử dụng webcam component\r\n      if (!isAutoMode && webcamRef.current) {\r\n        imageBase64 = webcamRef.current.getScreenshot();\r\n      }\r\n      // Nếu sử dụng video element trực tiếp\r\n      else if (isAutoMode) {\r\n        const canvas = document.createElement(\"canvas\");\r\n        canvas.width = videoElement.videoWidth;\r\n        canvas.height = videoElement.videoHeight;\r\n        const ctx = canvas.getContext(\"2d\");\r\n        ctx.drawImage(videoElement, 0, 0);\r\n        imageBase64 = canvas.toDataURL(\"image/jpeg\");\r\n      }\r\n\r\n      // Tìm sinh viên đã được phát hiện\r\n      const student = classStudents.find((s) => s._id === studentId);\r\n\r\n      if (!student) {\r\n        console.error(`Không tìm thấy sinh viên với ID ${studentId}`);\r\n        return;\r\n      }\r\n\r\n      // Lấy descriptor mới nhất từ sinh viên\r\n      const descriptor =\r\n        student.faceDescriptors && student.faceDescriptors.length > 0\r\n          ? student.faceDescriptors[0]\r\n          : null;\r\n\r\n      // Gọi API điểm danh\r\n      if (ENABLE_DEBUG_LOGS) {\r\n        console.log(\r\n          `[DEBUG] Đánh dấu điểm danh cho ${\r\n            student.full_name\r\n          } với độ tin cậy ${confidence.toFixed(2)}`\r\n        );\r\n      }\r\n\r\n      // Gọi hàm điểm danh\r\n      await markAttendance(studentId, descriptor, confidence, imageBase64);\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi đánh dấu điểm danh:\", error);\r\n    }\r\n  };\r\n\r\n  // Hàm để tạo dữ liệu điểm danh demo khi không có descriptor\r\n  const generateDemoFaceData = () => {\r\n    if (!classInfo || !classInfo.students || classInfo.students.length === 0) {\r\n      console.warn(\"Không có dữ liệu sinh viên để tạo dữ liệu demo\");\r\n      return [];\r\n    }\r\n\r\n    // Tạo descriptor mẫu 128 phần tử\r\n    const createDemoDescriptor = () => {\r\n      // Tạo một mảng 128 phần tử với giá trị ngẫu nhiên\r\n      const descriptor = new Array(128)\r\n        .fill(0)\r\n        .map(() => (Math.random() - 0.5) * 0.8);\r\n      return descriptor;\r\n    };\r\n\r\n    // Tạo dữ liệu mẫu cho mỗi sinh viên\r\n    const demoStudentsData = classInfo.students.map((student) => {\r\n      // Mỗi sinh viên có 3 descriptor mẫu\r\n      const descriptors = [\r\n        createDemoDescriptor(),\r\n        createDemoDescriptor(),\r\n        createDemoDescriptor(),\r\n      ];\r\n\r\n      return {\r\n        ...student,\r\n        faceDescriptors: descriptors,\r\n      };\r\n    });\r\n\r\n    console.log(\r\n      `[DEMO] Đã tạo dữ liệu demo cho ${demoStudentsData.length} sinh viên`\r\n    );\r\n    enqueueSnackbar(\r\n      `Đã tạo dữ liệu nhận diện demo cho ${demoStudentsData.length} sinh viên`,\r\n      {\r\n        variant: \"info\",\r\n        autoHideDuration: 5000,\r\n      }\r\n    );\r\n\r\n    return demoStudentsData;\r\n  };\r\n\r\n  // Hàm để cập nhật dữ liệu khuôn mặt khi không có dữ liệu thực\r\n  const updateWithDemoFaceData = () => {\r\n    if (\r\n      classStudents.length === 0 ||\r\n      !classStudents.some(\r\n        (student) =>\r\n          student.faceDescriptors &&\r\n          student.faceDescriptors.length > 0 &&\r\n          student.faceDescriptors[0].length === 128\r\n      )\r\n    ) {\r\n      console.log(\r\n        \"[DEMO] Không tìm thấy dữ liệu khuôn mặt hợp lệ, tạo dữ liệu demo\"\r\n      );\r\n      const demoData = generateDemoFaceData();\r\n      if (demoData.length > 0) {\r\n        dispatch({\r\n          type: \"faceRecognition/getClassFaceFeatures/fulfilled\",\r\n          payload: { students: demoData },\r\n        });\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        minHeight=\"60vh\"\r\n      >\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  // Lấy danh sách sinh viên vắng mặt\r\n  const getAbsentStudents = () => {\r\n    if (!classInfo || !sessionInfo) return [];\r\n\r\n    const presentStudentIds = attendanceLogs\r\n      .filter((log) => log.status === \"present\")\r\n      .map((log) => log.student_id._id);\r\n\r\n    return classInfo.students.filter(\r\n      (student) => !presentStudentIds.includes(student._id)\r\n    );\r\n  };\r\n\r\n  const absentStudents = getAbsentStudents();\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Điểm Danh - {classInfo?.class_name}\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" color=\"textSecondary\" gutterBottom>\r\n        Buổi {sessionInfo?.session_number} -{\" \"}\r\n        {new Date(sessionInfo?.date).toLocaleDateString(\"vi-VN\")}\r\n      </Typography>\r\n\r\n      <Grid container spacing={3} mt={1}>\r\n        <Grid item xs={12} md={8}>\r\n          <Card>\r\n            <CardContent>\r\n              <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                mb={2}\r\n              >\r\n                <Typography variant=\"h6\">Camera nhận diện</Typography>\r\n                <Box>\r\n                  <Chip\r\n                    label={isAutoMode ? \"Tự động đang bật\" : \"Tự động đang tắt\"}\r\n                    color={isAutoMode ? \"success\" : \"default\"}\r\n                    sx={{ mr: 1 }}\r\n                  />\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color={isAutoMode ? \"error\" : \"primary\"}\r\n                    onClick={\r\n                      isAutoMode\r\n                        ? () => {\r\n                            // Dừng tự động\r\n                            if (intervalId) {\r\n                              clearInterval(intervalId);\r\n                              setIntervalId(null);\r\n                            }\r\n                            setIsAutoMode(false);\r\n                            enqueueSnackbar(\"Đã tắt chế độ tự động điểm danh\", {\r\n                              variant: \"info\",\r\n                            });\r\n                          }\r\n                        : () => {\r\n                            // Bắt đầu tự động\r\n                            if (intervalId) {\r\n                              clearInterval(intervalId);\r\n                            }\r\n                            // Khởi tạo thời gian phát hiện ban đầu\r\n                            setLastDetectionTime(Date.now());\r\n                            const id = setInterval(() => {\r\n                              handleDetectFaces();\r\n                            }, AUTO_DETECT_INTERVAL);\r\n                            setIntervalId(id);\r\n                            setIsAutoMode(true);\r\n                            enqueueSnackbar(\"Đã bật chế độ tự động điểm danh\", {\r\n                              variant: \"info\",\r\n                            });\r\n                          }\r\n                    }\r\n                  >\r\n                    {isAutoMode ? \"Tắt tự động\" : \"Bật tự động\"}\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            </CardContent>\r\n\r\n            <Paper\r\n              elevation={3}\r\n              sx={{\r\n                position: \"relative\",\r\n                width: \"100%\",\r\n                height: \"400px\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                overflow: \"hidden\",\r\n                mb: 2,\r\n              }}\r\n            >\r\n              {isCameraReady ? (\r\n                <>\r\n                  {isAutoMode ? (\r\n                    // Sử dụng video element trực tiếp thay vì Webcam component\r\n                    <video\r\n                      ref={videoRef}\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        objectFit: \"cover\",\r\n                      }}\r\n                      autoPlay\r\n                      playsInline\r\n                      muted\r\n                    />\r\n                  ) : (\r\n                    <Webcam\r\n                      audio={false}\r\n                      ref={webcamRef}\r\n                      screenshotFormat=\"image/jpeg\"\r\n                      width={640}\r\n                      height={480}\r\n                      videoConstraints={{\r\n                        width: 640,\r\n                        height: 480,\r\n                        facingMode: \"user\",\r\n                      }}\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        objectFit: \"cover\",\r\n                      }}\r\n                      onUserMedia={(stream) => {\r\n                        console.log(\r\n                          \"Camera đã được cấp quyền và khởi tạo\",\r\n                          stream.id\r\n                        );\r\n                        // Đảm bảo readyState được kiểm tra khi stream đã sẵn sàng\r\n                        setTimeout(() => {\r\n                          if (webcamRef.current && webcamRef.current.video) {\r\n                            console.log(\r\n                              \"Stream ready, readyState=\",\r\n                              webcamRef.current.video.readyState\r\n                            );\r\n                            dispatch(setCameraReady(true));\r\n                            // Đặt thời gian phát hiện ban đầu\r\n                            setLastDetectionTime(Date.now());\r\n                          }\r\n                        }, 500);\r\n                      }}\r\n                      onUserMediaError={(err) => {\r\n                        console.error(\"Lỗi khi truy cập camera:\", err);\r\n                        enqueueSnackbar(\r\n                          `Không thể truy cập camera: ${\r\n                            err.name === \"NotAllowedError\"\r\n                              ? \"Bạn chưa cấp quyền truy cập camera\"\r\n                              : err.name === \"NotFoundError\"\r\n                              ? \"Không tìm thấy thiết bị camera\"\r\n                              : err.message || \"Lỗi không xác định\"\r\n                          }`,\r\n                          {\r\n                            variant: \"error\",\r\n                          }\r\n                        );\r\n                      }}\r\n                    />\r\n                  )}\r\n                  {/* Canvas hiển thị ở cả hai chế độ */}\r\n                  <canvas\r\n                    ref={canvasRef}\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      top: 0,\r\n                      left: 0,\r\n                      width: \"100%\",\r\n                      height: \"100%\",\r\n                    }}\r\n                  />\r\n                </>\r\n              ) : (\r\n                <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n                  <CircularProgress size={50} />\r\n                  <Typography mt={2}>Đang khởi tạo camera...</Typography>\r\n                  <Typography\r\n                    variant=\"caption\"\r\n                    color=\"text.secondary\"\r\n                    sx={{ mt: 1 }}\r\n                  >\r\n                    {isModelLoaded\r\n                      ? \"Chờ kết nối camera - Hãy đảm bảo bạn đã cấp quyền camera\"\r\n                      : \"Đang tải mô hình nhận diện khuôn mặt\"}\r\n                  </Typography>\r\n\r\n                  <Box\r\n                    sx={{\r\n                      mt: 2,\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\",\r\n                      alignItems: \"center\",\r\n                      gap: 1,\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      onClick={initDirectCamera}\r\n                    >\r\n                      Khởi động camera trực tiếp\r\n                    </Button>\r\n\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"warning\"\r\n                      size=\"small\"\r\n                      onClick={updateWithDemoFaceData}\r\n                    >\r\n                      Tạo dữ liệu nhận diện demo\r\n                    </Button>\r\n\r\n                    <Alert severity=\"info\" sx={{ mt: 2, maxWidth: 300 }}>\r\n                      Nếu camera không hoạt động, vui lòng thử:\r\n                      <ul style={{ margin: \"8px 0\", paddingLeft: \"20px\" }}>\r\n                        <li>Kiểm tra quyền camera trên trình duyệt</li>\r\n                        <li>Làm mới trang và thử lại</li>\r\n                        <li>\r\n                          Đảm bảo không có ứng dụng khác đang sử dụng camera\r\n                        </li>\r\n                      </ul>\r\n                    </Alert>\r\n                  </Box>\r\n                </Box>\r\n              )}\r\n            </Paper>\r\n\r\n            <Box display=\"flex\" justifyContent=\"space-between\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                onClick={captureAndRecognize}\r\n                startIcon={<CameraAlt />}\r\n                disabled={!isCameraReady || isRecognizing || isAutoMode}\r\n              >\r\n                {isRecognizing ? (\r\n                  <CircularProgress size={24} color=\"inherit\" />\r\n                ) : (\r\n                  \"Chụp & Nhận diện\"\r\n                )}\r\n              </Button>\r\n\r\n              <Box>\r\n                {isCameraReady && (\r\n                  <>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color={showLandmark ? \"success\" : \"info\"}\r\n                      onClick={toggleLandmarkDetection}\r\n                      sx={{ mr: 1 }}\r\n                    >\r\n                      {showLandmark ? \"Tắt Landmark\" : \"Hiện Landmark\"}\r\n                    </Button>\r\n\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color={isAutoMode ? \"error\" : \"primary\"}\r\n                      onClick={\r\n                        isAutoMode\r\n                          ? () => {\r\n                              // Dừng tự động\r\n                              if (intervalId) {\r\n                                clearInterval(intervalId);\r\n                                setIntervalId(null);\r\n                              }\r\n                              setIsAutoMode(false);\r\n                              enqueueSnackbar(\r\n                                \"Đã tắt chế độ tự động điểm danh\",\r\n                                { variant: \"info\" }\r\n                              );\r\n                            }\r\n                          : () => {\r\n                              // Bắt đầu tự động\r\n                              if (intervalId) {\r\n                                clearInterval(intervalId);\r\n                              }\r\n                              const id = setInterval(() => {\r\n                                handleDetectFaces();\r\n                              }, AUTO_DETECT_INTERVAL);\r\n                              setIntervalId(id);\r\n                              setIsAutoMode(true);\r\n                              enqueueSnackbar(\r\n                                \"Đã bật chế độ tự động điểm danh\",\r\n                                { variant: \"info\" }\r\n                              );\r\n                            }\r\n                      }\r\n                      sx={{ mr: 1 }}\r\n                    >\r\n                      {isAutoMode ? \"Tắt tự động\" : \"Bật tự động\"}\r\n                    </Button>\r\n                  </>\r\n                )}\r\n\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={completeSession}\r\n                  startIcon={<Save />}\r\n                  disabled={sessionInfo?.status === \"completed\"}\r\n                >\r\n                  Kết thúc phiên\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n\r\n            {recognizedStudents.length > 0 && (\r\n              <Box mt={2}>\r\n                <Typography variant=\"subtitle1\" gutterBottom>\r\n                  Đã nhận diện ({recognizedStudents.length})\r\n                </Typography>\r\n                <Grid container spacing={1}>\r\n                  {recognizedStudents.map((student, index) => (\r\n                    <Grid item xs={6} sm={4} key={index}>\r\n                      <Paper\r\n                        elevation={2}\r\n                        sx={{\r\n                          p: 1,\r\n                          display: \"flex\",\r\n                          flexDirection: \"column\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        <Typography variant=\"body2\" noWrap>\r\n                          {student.name}\r\n                        </Typography>\r\n                        <Typography variant=\"caption\" color=\"textSecondary\">\r\n                          {Math.round(student.confidence * 100)}% match\r\n                        </Typography>\r\n                        <Button\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          color=\"primary\"\r\n                          sx={{ mt: 1 }}\r\n                          onClick={() =>\r\n                            handleMarkAttendance(\r\n                              student.studentId,\r\n                              student.confidence\r\n                            )\r\n                          }\r\n                        >\r\n                          <Check fontSize=\"small\" sx={{ mr: 0.5 }} />\r\n                          Điểm danh\r\n                        </Button>\r\n                      </Paper>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </Box>\r\n            )}\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={4}>\r\n          <Card sx={{ mb: 3 }}>\r\n            <CardContent>\r\n              <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                mb={2}\r\n              >\r\n                <Typography variant=\"h6\">\r\n                  Có mặt (\r\n                  {\r\n                    attendanceLogs.filter((log) => log.status === \"present\")\r\n                      .length\r\n                  }\r\n                  /{classInfo?.students.length})\r\n                </Typography>\r\n                <IconButton size=\"small\" onClick={refreshAttendanceLogs}>\r\n                  <Refresh />\r\n                </IconButton>\r\n              </Box>\r\n\r\n              <List dense>\r\n                {attendanceLogs\r\n                  .filter((log) => log.status === \"present\")\r\n                  .sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))\r\n                  .map((log) => (\r\n                    <ListItem\r\n                      key={log._id}\r\n                      secondaryAction={\r\n                        <Chip\r\n                          size=\"small\"\r\n                          icon={\r\n                            log.recognized ? (\r\n                              <VerifiedUser fontSize=\"small\" />\r\n                            ) : null\r\n                          }\r\n                          label={log.recognized ? \"Tự động\" : \"Thủ công\"}\r\n                          color={log.recognized ? \"success\" : \"primary\"}\r\n                        />\r\n                      }\r\n                    >\r\n                      <ListItemAvatar>\r\n                        <Avatar\r\n                          alt={log.student_id.full_name}\r\n                          src={log.student_id.avatar_url}\r\n                        />\r\n                      </ListItemAvatar>\r\n                      <ListItemText\r\n                        primary={log.student_id.full_name}\r\n                        secondary={`${new Date(\r\n                          log.timestamp\r\n                        ).toLocaleTimeString(\"vi-VN\")}`}\r\n                      />\r\n                    </ListItem>\r\n                  ))}\r\n\r\n                {attendanceLogs.filter((log) => log.status === \"present\")\r\n                  .length === 0 && (\r\n                  <ListItem>\r\n                    <ListItemText primary=\"Chưa có sinh viên nào điểm danh\" />\r\n                  </ListItem>\r\n                )}\r\n              </List>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Vắng mặt ({absentStudents.length}/{classInfo?.students.length})\r\n              </Typography>\r\n\r\n              <List dense>\r\n                {absentStudents.map((student) => (\r\n                  <ListItem\r\n                    key={student._id}\r\n                    secondaryAction={\r\n                      <IconButton\r\n                        edge=\"end\"\r\n                        onClick={() => openManualAttendanceDialog(student)}\r\n                      >\r\n                        <Edit fontSize=\"small\" />\r\n                      </IconButton>\r\n                    }\r\n                  >\r\n                    <ListItemAvatar>\r\n                      <Avatar\r\n                        alt={student.full_name}\r\n                        src={student.avatar_url}\r\n                      />\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={student.full_name}\r\n                      secondary={student.student_code}\r\n                    />\r\n                  </ListItem>\r\n                ))}\r\n\r\n                {absentStudents.length === 0 && (\r\n                  <ListItem>\r\n                    <ListItemText primary=\"Không có sinh viên nào vắng mặt\" />\r\n                  </ListItem>\r\n                )}\r\n              </List>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Dialog điểm danh thủ công */}\r\n      <Dialog open={manualDialogOpen} onClose={handleManualDialogClose}>\r\n        <DialogTitle>Điểm danh thủ công</DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ p: 1 }}>\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              {selectedStudent?.full_name} ({selectedStudent?.student_code})\r\n            </Typography>\r\n\r\n            <FormControl fullWidth margin=\"normal\">\r\n              <InputLabel>Trạng thái</InputLabel>\r\n              <Select\r\n                name=\"status\"\r\n                value={manualAttendanceData.status}\r\n                onChange={handleManualAttendanceChange}\r\n                label=\"Trạng thái\"\r\n              >\r\n                <MenuItem value=\"present\">Có mặt</MenuItem>\r\n                <MenuItem value=\"absent\">Vắng mặt</MenuItem>\r\n                <MenuItem value=\"late\">Đi trễ</MenuItem>\r\n                <MenuItem value=\"early_leave\">Về sớm</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n              fullWidth\r\n              margin=\"normal\"\r\n              name=\"note\"\r\n              label=\"Ghi chú\"\r\n              value={manualAttendanceData.note}\r\n              onChange={handleManualAttendanceChange}\r\n              multiline\r\n              rows={2}\r\n            />\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleManualDialogClose}>Hủy</Button>\r\n          <Button onClick={handleManualAttendanceSubmit} variant=\"contained\">\r\n            Xác nhận\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AttendancePage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,QAAQ,WAAW;AACvC,SACEC,GAAG,EACHC,UAAU,EACVC,IAAI,EACJC,WAAW,EACXC,IAAI,EACJC,KAAK,EACLC,MAAM,EACNC,OAAO,EACPC,gBAAgB,EAChBC,IAAI,EACJC,QAAQ,EACRC,cAAc,EACdC,YAAY,EACZC,MAAM,EACNC,IAAI,EACJC,MAAM,EACNC,WAAW,EACXC,aAAa,EACbC,aAAa,EACbC,SAAS,EACTC,WAAW,EACXC,UAAU,EACVC,MAAM,EACNC,QAAQ,EACRC,UAAU,EACVC,KAAK,QACA,eAAe;AACtB,SACEC,SAAS,EACTC,KAAK,EACLC,KAAK,EACLC,IAAI,EACJC,OAAO,EACPC,IAAI,EACJC,YAAY,EACZC,cAAc,QACT,qBAAqB;AAC5B,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAO,KAAKC,OAAO,MAAM,aAAa;AACtC,SACEC,oBAAoB,EACpBC,gBAAgB,EAChBC,gBAAgB,EAChBC,cAAc,EACdC,cAAc,EACdC,gBAAgB,EAChBC,qBAAqB,EACrBC,qBAAqB,QAChB,yCAAyC;AAChD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAE5E,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC,OAAO;IAAEC;EAAU,CAAC,GAAG7D,SAAS,CAAC,CAAC;EAC1C,MAAM8D,QAAQ,GAAG7D,WAAW,CAAC,CAAC;EAC9B,MAAM8D,QAAQ,GAAG7D,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAE8D;EAAgB,CAAC,GAAG5D,WAAW,CAAC,CAAC;EAEzC,MAAM6D,SAAS,GAAGlE,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMmE,SAAS,GAAGnE,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMoE,QAAQ,GAAGpE,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACqE,UAAU,EAAEC,aAAa,CAAC,GAAGxE,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACyE,YAAY,EAAEC,eAAe,CAAC,GAAG1E,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC2E,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG5E,QAAQ,CAAC,IAAI,CAAC;EAElE,MAAM;IAAE6E;EAAM,CAAC,GAAGvE,WAAW,CAAEwE,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EACpD,MAAM;IACJC,aAAa;IACbC,aAAa;IACbC,aAAa;IACbC,kBAAkB;IAClBC,aAAa;IACbC,YAAY;IACZC;EACF,CAAC,GAAGhF,WAAW,CAAEwE,KAAK,IAAKA,KAAK,CAACS,eAAe,CAAC;EAEjD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGzF,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAAC0F,WAAW,EAAEC,cAAc,CAAC,GAAG3F,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAAC4F,cAAc,EAAEC,iBAAiB,CAAC,GAAG7F,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC8F,SAAS,EAAEC,YAAY,CAAC,GAAG/F,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACgG,aAAa,EAAEC,gBAAgB,CAAC,GAAGjG,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACkG,UAAU,EAAEC,aAAa,CAAC,GAAGnG,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACoG,eAAe,EAAEC,kBAAkB,CAAC,GAAGrG,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACsG,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGvG,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACwG,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGzG,QAAQ,CAAC;IAC/D0G,MAAM,EAAE,SAAS;IACjBC,IAAI,EAAE;EACR,CAAC,CAAC;;EAEF;EACA,MAAMC,qBAAqB,GAAG,GAAG,CAAC,CAAC;EACnC,MAAMC,mBAAmB,GAAG,GAAG,CAAC,CAAC;EACjC,MAAMC,oBAAoB,GAAG,GAAG,CAAC,CAAC;EAClC,MAAMC,oBAAoB,GAAG,IAAI,CAAC,CAAC;EACnC,MAAMC,iBAAiB,GAAG,IAAI,CAAC,CAAC;;EAEhC;EACA,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlH,QAAQ,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACmH,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGpH,QAAQ,CAAC,IAAI,CAAC;;EAEhE;EACAC,SAAS,CAAC,MAAM;IACd,MAAMoH,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACFtB,YAAY,CAAC,IAAI,CAAC;;QAElB;QACA,MAAMuB,iBAAiB,GAAG,CAACtC,aAAa,GACpCuC,yBAAyB,CAAC,CAAC,GAC3BC,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC;;QAEzB;QACA,MAAMC,YAAY,GAAGtE,KAAK,CAACuE,GAAG,CAC5B,GAAGlE,OAAO,qBAAqBM,OAAO,EAAE,EACxC;UACE6D,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUhD,KAAK;UAAG;QAC9C,CACF,CAAC;;QAED;QACA,MAAMiD,cAAc,GAAG1E,KAAK,CAACuE,GAAG,CAC9B,GAAGlE,OAAO,wBAAwBO,SAAS,EAAE,EAC7C;UACE4D,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUhD,KAAK;UAAG;QAC9C,CACF,CAAC;;QAED;QACA,MAAMkD,WAAW,GAAG3E,KAAK,CAACuE,GAAG,CAC3B,GAAGlE,OAAO,oBAAoBO,SAAS,EAAE,EACzC;UACE4D,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUhD,KAAK;UAAG;QAC9C,CACF,CAAC;;QAED;QACA,MAAM,CAACmD,aAAa,EAAEC,eAAe,EAAEC,YAAY,CAAC,GAClD,MAAMV,OAAO,CAACW,GAAG,CAAC,CAACT,YAAY,EAAEI,cAAc,EAAEC,WAAW,CAAC,CAAC;QAEhEtC,YAAY,CAACuC,aAAa,CAACI,IAAI,CAACA,IAAI,CAAC;QACrCzC,cAAc,CAACsC,eAAe,CAACG,IAAI,CAACA,IAAI,CAAC;QACzCvC,iBAAiB,CAACqC,YAAY,CAACE,IAAI,CAACA,IAAI,CAAC;;QAEzC;QACAC,OAAO,CAACC,GAAG,CACT,iEAAiE,EACjEvE,OACF,CAAC;;QAED;QACA,MAAMwE,iBAAiB,GAAG,MAAMrE,QAAQ,CACtCtB,oBAAoB,CAACmB,OAAO,CAC9B,CAAC,CAACyE,MAAM,CAAC,CAAC;;QAEV;QACA,IAAID,iBAAiB,IAAIA,iBAAiB,CAACE,QAAQ,EAAE;UACnDJ,OAAO,CAACC,GAAG,CACT,2CAA2CC,iBAAiB,CAACE,QAAQ,CAACC,MAAM,YAC9E,CAAC;;UAED;UACA,IAAIC,qBAAqB,GAAG,CAAC;UAC7B,IAAIC,uBAAuB,GAAG,CAAC;UAE/BL,iBAAiB,CAACE,QAAQ,CAACI,OAAO,CAAEC,OAAO,IAAK;YAC9C,MAAMC,cAAc,GAClBD,OAAO,CAACE,eAAe,IACvBC,KAAK,CAACC,OAAO,CAACJ,OAAO,CAACE,eAAe,CAAC,IACtCF,OAAO,CAACE,eAAe,CAACN,MAAM,GAAG,CAAC;YACpC,MAAMS,gBAAgB,GAAGJ,cAAc,GACnCD,OAAO,CAACE,eAAe,CAACI,MAAM,CAC3BC,IAAI,IAAKJ,KAAK,CAACC,OAAO,CAACG,IAAI,CAAC,IAAIA,IAAI,CAACX,MAAM,KAAK,GACnD,CAAC,CAACA,MAAM,GACR,CAAC;YAEL,IAAIS,gBAAgB,GAAG,CAAC,EAAE;cACxBR,qBAAqB,EAAE;cACvBN,OAAO,CAACC,GAAG,CACT,qBACEQ,OAAO,CAACQ,SAAS,OACZH,gBAAgB,IACrBJ,cAAc,GAAGD,OAAO,CAACE,eAAe,CAACN,MAAM,GAAG,CAAC,oBAEvD,CAAC;YACH,CAAC,MAAM;cACLE,uBAAuB,EAAE;cACzBP,OAAO,CAACC,GAAG,CACT,qBAAqBQ,OAAO,CAACQ,SAAS,6BACxC,CAAC;cACD,IAAIP,cAAc,IAAID,OAAO,CAACE,eAAe,CAACN,MAAM,GAAG,CAAC,EAAE;gBACxDL,OAAO,CAACC,GAAG,CACT,uCAAuC,EACvC,OAAOQ,OAAO,CAACE,eAAe,CAAC,CAAC,CAAC,EACjCC,KAAK,CAACC,OAAO,CAACJ,OAAO,CAACE,eAAe,CAAC,CAAC,CAAC,CAAC,GACrCF,OAAO,CAACE,eAAe,CAAC,CAAC,CAAC,CAACN,MAAM,GACjC,iBACN,CAAC;cACH;YACF;UACF,CAAC,CAAC;UAEFL,OAAO,CAACC,GAAG,CACT,qBAAqBK,qBAAqB,oCAAoCC,uBAAuB,qBACvG,CAAC;UAED,IAAID,qBAAqB,KAAK,CAAC,EAAE;YAC/BxE,eAAe,CACb,uEAAuE,EACvE;cACEoF,OAAO,EAAE,SAAS;cAClBC,gBAAgB,EAAE;YACpB,CACF,CAAC;;YAED;YACA,MAAMC,QAAQ,GAAGC,oBAAoB,CAAC,CAAC;YACvC,IAAID,QAAQ,CAACf,MAAM,GAAG,CAAC,EAAE;cACvBxE,QAAQ,CAAC;gBACPyF,IAAI,EAAE,gDAAgD;gBACtDC,OAAO,EAAE;kBAAEnB,QAAQ,EAAEgB;gBAAS;cAChC,CAAC,CAAC;YACJ;UACF;QACF,CAAC,MAAM;UACLpB,OAAO,CAACC,GAAG,CAAC,kDAAkD,CAAC;UAC/DnE,eAAe,CACb,kEAAkE,EAClE;YACEoF,OAAO,EAAE;UACX,CACF,CAAC;;UAED;UACA,MAAME,QAAQ,GAAGC,oBAAoB,CAAC,CAAC;UACvC,IAAID,QAAQ,CAACf,MAAM,GAAG,CAAC,EAAE;YACvBxE,QAAQ,CAAC;cACPyF,IAAI,EAAE,gDAAgD;cACtDC,OAAO,EAAE;gBAAEnB,QAAQ,EAAEgB;cAAS;YAChC,CAAC,CAAC;UACJ;QACF;;QAEA;QACA1D,YAAY,CAAC,KAAK,CAAC;;QAEnB;QACA,MAAMuB,iBAAiB;;QAEvB;QACAF,oBAAoB,CAACyC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;MAClC,CAAC,CAAC,OAAOxE,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CnB,eAAe,CAAC,oDAAoD,EAAE;UACpEoF,OAAO,EAAE;QACX,CAAC,CAAC;QACFxD,YAAY,CAAC,KAAK,CAAC;;QAEnB;QACA,MAAM0D,QAAQ,GAAGC,oBAAoB,CAAC,CAAC;QACvC,IAAID,QAAQ,CAACf,MAAM,GAAG,CAAC,EAAE;UACvBxE,QAAQ,CAAC;YACPyF,IAAI,EAAE,gDAAgD;YACtDC,OAAO,EAAE;cAAEnB,QAAQ,EAAEgB;YAAS;UAChC,CAAC,CAAC;QACJ;MACF;IACF,CAAC;IAEDpC,eAAe,CAAC,CAAC;;IAEjB;IACA,OAAO,MAAM;MACX,IAAI9C,UAAU,EAAE;QACdwF,aAAa,CAACxF,UAAU,CAAC;MAC3B;;MAEA;MACA,IAAII,kBAAkB,EAAE;QACtBoF,aAAa,CAACpF,kBAAkB,CAAC;MACnC;;MAEA;MACA,IACEP,SAAS,CAAC4F,OAAO,IACjB5F,SAAS,CAAC4F,OAAO,CAACC,KAAK,IACvB7F,SAAS,CAAC4F,OAAO,CAACC,KAAK,CAACC,SAAS,EACjC;QACA,MAAMC,MAAM,GAAG/F,SAAS,CAAC4F,OAAO,CAACC,KAAK,CAACC,SAAS,CAACE,SAAS,CAAC,CAAC;QAC5DD,MAAM,CAACtB,OAAO,CAAEwB,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;MACzC;MAEA,IAAIhG,QAAQ,CAAC0F,OAAO,IAAI1F,QAAQ,CAAC0F,OAAO,CAACE,SAAS,EAAE;QAClD,MAAMC,MAAM,GAAG7F,QAAQ,CAAC0F,OAAO,CAACE,SAAS,CAACE,SAAS,CAAC,CAAC;QACrDD,MAAM,CAACtB,OAAO,CAAEwB,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;MACzC;MAEApG,QAAQ,CAACf,qBAAqB,CAAC,CAAC,CAAC;;MAEjC;MACA+D,mBAAmB,CAAC,CAAC,CAAC;MACtBE,oBAAoB,CAAC,IAAI,CAAC;IAC5B,CAAC;EACH,CAAC,EAAE,CACDrD,OAAO,EACPC,SAAS,EACTa,KAAK,EACLX,QAAQ,EACRC,eAAe,EACfa,aAAa,EACbT,UAAU,EACVI,kBAAkB,CACnB,CAAC;;EAEF;EACA1E,SAAS,CAAC,MAAM;IACd;IACA,IAAI,CAACiG,UAAU,IAAI,CAACjB,aAAa,EAAE;;IAEnC;IACA,MAAMsF,qBAAqB,GAAG,KAAK;;IAEnC;IACA,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;MAClC,MAAMV,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;MAEtB,IACE3C,iBAAiB,IACjB2C,GAAG,GAAG3C,iBAAiB,GAAGoD,qBAAqB,EAC/C;QACAlC,OAAO,CAACC,GAAG,CACT,qEACF,CAAC;;QAED;QACA,IAAIrB,gBAAgB,GAAG,CAAC,EAAE;UACxBC,mBAAmB,CAAEuD,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;UACvCC,gBAAgB,CAAC,CAAC;UAClBvG,eAAe,CAAC,kCAAkC,EAAE;YAClDoF,OAAO,EAAE;UACX,CAAC,CAAC;QACJ,CAAC,MAAM,IAAItC,gBAAgB,KAAK,CAAC,EAAE;UACjC;UACAC,mBAAmB,CAAEuD,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;UACvCtG,eAAe,CACb,mEAAmE,EACnE;YAAEoF,OAAO,EAAE,SAAS;YAAEC,gBAAgB,EAAE;UAAK,CAC/C,CAAC;QACH;MACF;IACF,CAAC;;IAED;IACA,MAAMmB,aAAa,GAAGC,WAAW,CAACJ,qBAAqB,EAAE,KAAK,CAAC;IAE/D,OAAO,MAAM;MACXT,aAAa,CAACY,aAAa,CAAC;IAC9B,CAAC;EACH,CAAC,EAAE,CACDzE,UAAU,EACVjB,aAAa,EACbkC,iBAAiB,EACjBF,gBAAgB,EAChB9C,eAAe,EACfuG,gBAAgB,CACjB,CAAC;;EAEF;EACA,MAAMnD,yBAAyB,GAAG,MAAAA,CAAA,KAAY;IAC5C,IAAI;MACF,MAAMsD,SAAS,GAAG,SAAS;MAC3BxC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEuC,SAAS,CAAC;;MAEhD;MACA,MAAMC,aAAa,GAAG,CACpBnI,OAAO,CAACoI,IAAI,CAACC,gBAAgB,CAACC,WAAW,CAACJ,SAAS,CAAC,EACpDlI,OAAO,CAACoI,IAAI,CAACG,iBAAiB,CAACD,WAAW,CAACJ,SAAS,CAAC,EACrDlI,OAAO,CAACoI,IAAI,CAACI,kBAAkB,CAACF,WAAW,CAACJ,SAAS,CAAC,EACtDlI,OAAO,CAACoI,IAAI,CAACK,cAAc,CAACH,WAAW,CAACJ,SAAS,CAAC,CAAE;MAAA,CACrD;;MAED;MACA,MAAMQ,aAAa,GAAG,CACpB1I,OAAO,CAACoI,IAAI,CAACC,gBAAgB,CAACM,QAAQ,EACtC3I,OAAO,CAACoI,IAAI,CAACG,iBAAiB,CAACI,QAAQ,EACvC3I,OAAO,CAACoI,IAAI,CAACI,kBAAkB,CAACG,QAAQ,EACxC3I,OAAO,CAACoI,IAAI,CAACK,cAAc,CAACE,QAAQ,CAAE;MAAA,CACvC;MAED,IAAID,aAAa,CAACE,KAAK,CAAE7E,MAAM,IAAKA,MAAM,CAAC,EAAE;QAC3C2B,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;QAC9CpE,QAAQ,CAACnB,cAAc,CAAC,IAAI,CAAC,CAAC;QAC9B,OAAO,IAAI;MACb;MAEA,MAAMyE,OAAO,CAACW,GAAG,CAAC2C,aAAa,CAAC;MAEhCzC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;MAC5CpE,QAAQ,CAACnB,cAAc,CAAC,IAAI,CAAC,CAAC;MAC9BoB,eAAe,CAAC,kCAAkC,EAAE;QAClDoF,OAAO,EAAE;MACX,CAAC,CAAC;MACF,OAAO,IAAI;IACb,CAAC,CAAC,OAAOjE,KAAK,EAAE;MACd+C,OAAO,CAAC/C,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CnB,eAAe,CAAC,iCAAiC,EAAE;QAAEoF,OAAO,EAAE;MAAQ,CAAC,CAAC;MACxE,OAAO,KAAK;IACd;EACF,CAAC;;EAED;EACA,MAAMiC,qBAAqB,GAAGA,CAAA,KAAM;IAAA,IAAAC,kBAAA;IAClC;IACA,IAAI,CAACxG,aAAa,IAAIgC,gBAAgB,KAAK,CAAC,EAAE;MAC5CoB,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;MAC1DpB,mBAAmB,CAAC,CAAC,CAAC;MACtBwD,gBAAgB,CAAC,CAAC;MAClB,OAAO,KAAK;IACd;;IAEA;IACA,MAAMgB,YAAY,GAAGxF,UAAU,GAC3B5B,QAAQ,CAAC0F,OAAO,IAAAyB,kBAAA,GAChBrH,SAAS,CAAC4F,OAAO,cAAAyB,kBAAA,uBAAjBA,kBAAA,CAAmBxB,KAAK;IAE5B,IACE,CAACyB,YAAY,IACb,CAACA,YAAY,CAACxB,SAAS,IACvBwB,YAAY,CAACC,UAAU,KAAK,CAAC,EAC7B;MACAtD,OAAO,CAACC,GAAG,CACT,gEACF,CAAC;MACD,IAAIrB,gBAAgB,GAAG,CAAC,EAAE;QACxBC,mBAAmB,CAAEuD,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;QACvCC,gBAAgB,CAAC,CAAC;QAClB,OAAO,KAAK;MACd;IACF;IAEA,OAAO,IAAI;EACb,CAAC;;EAED;EACA,MAAMkB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MAAA,IAAAC,mBAAA;MACF;MACA,IAAI,CAACL,qBAAqB,CAAC,CAAC,EAAE;QAC5B,OAAO,EAAE;MACX;;MAEA;MACA,IAAI,CAACxG,aAAa,IAAI,CAACrC,OAAO,CAACoI,IAAI,CAACK,cAAc,CAACE,QAAQ,EAAE;QAC3DjD,OAAO,CAACyD,IAAI,CAAC,wDAAwD,CAAC;QACtE,MAAMvE,yBAAyB,CAAC,CAAC;QAEjC,IAAI,CAAC5E,OAAO,CAACoI,IAAI,CAACK,cAAc,CAACE,QAAQ,EAAE;UACzCnH,eAAe,CAAC,iDAAiD,EAAE;YACjEoF,OAAO,EAAE;UACX,CAAC,CAAC;UACF,OAAO,EAAE;QACX;MACF;;MAEA;MACA,MAAMmC,YAAY,GAAGxF,UAAU,GAC3B5B,QAAQ,CAAC0F,OAAO,IAAA6B,mBAAA,GAChBzH,SAAS,CAAC4F,OAAO,cAAA6B,mBAAA,uBAAjBA,mBAAA,CAAmB5B,KAAK;MAC5B,IAAI,CAACyB,YAAY,IAAI,CAACrH,SAAS,CAAC2F,OAAO,EAAE,OAAO,EAAE;;MAElD;MACA,IAAI0B,YAAY,CAACC,UAAU,KAAK,CAAC,EAAE;QACjCtD,OAAO,CAACyD,IAAI,CAAC,2CAA2C,CAAC;QACzD,OAAO,EAAE;MACX;;MAEA;MACA,MAAMC,WAAW,GAAG;QAClBC,KAAK,EAAEN,YAAY,CAACO,UAAU,IAAIP,YAAY,CAACM,KAAK,IAAI,GAAG;QAC3DE,MAAM,EAAER,YAAY,CAACS,WAAW,IAAIT,YAAY,CAACQ,MAAM,IAAI;MAC7D,CAAC;;MAED;MACA,IAAIE,UAAU,GAAG,EAAE;;MAEnB;MACA,IAAI;QACFA,UAAU,GAAG,MAAMzJ,OAAO,CACvB0J,cAAc,CACbX,YAAY,EACZ,IAAI/I,OAAO,CAAC2J,qBAAqB,CAAC;UAChCC,aAAa,EAAE1F;QACjB,CAAC,CACH,CAAC,CACA2F,iBAAiB,CAAC,CAAC,CACnBC,mBAAmB,CAAC,CAAC;MAC1B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZrE,OAAO,CAACyD,IAAI,CAAC,gCAAgC,EAAEY,GAAG,CAAC;MACrD;;MAEA;MACA,IAAI,CAACN,UAAU,IAAIA,UAAU,CAAC1D,MAAM,KAAK,CAAC,EAAE;QAC1C,IAAI;UACF0D,UAAU,GAAG,MAAMzJ,OAAO,CACvB0J,cAAc,CACbX,YAAY,EACZ,IAAI/I,OAAO,CAACgK,uBAAuB,CAAC;YAClCC,SAAS,EAAE,GAAG;YACdC,cAAc,EAAEhG,mBAAmB,GAAG,IAAI,CAAE;UAC9C,CAAC,CACH,CAAC,CACA2F,iBAAiB,CAAC,CAAC,CACnBC,mBAAmB,CAAC,CAAC;QAC1B,CAAC,CAAC,OAAOC,GAAG,EAAE;UACZrE,OAAO,CAACyD,IAAI,CAAC,mCAAmC,EAAEY,GAAG,CAAC;QACxD;MACF;MAEA,IAAI,CAACN,UAAU,IAAIA,UAAU,CAAC1D,MAAM,KAAK,CAAC,EAAE;QAC1C,IAAI1B,iBAAiB,EAAE;UACrBqB,OAAO,CAACC,GAAG,CACT,iEAAiE,EACjE,IAAIuB,IAAI,CAAC,CAAC,CAACiD,kBAAkB,CAAC,CAChC,CAAC;QACH;;QAEA;QACA,MAAMC,aAAa,GAAG1I,SAAS,CAAC2F,OAAO;QACvC,IAAI+C,aAAa,EAAE;UACjB,MAAMC,GAAG,GAAGD,aAAa,CAACE,UAAU,CAAC,IAAI,CAAC;UAC1CD,GAAG,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEH,aAAa,CAACf,KAAK,EAAEe,aAAa,CAACb,MAAM,CAAC;;UAE9D;UACAc,GAAG,CAACG,IAAI,GAAG,YAAY;UACvBH,GAAG,CAACI,SAAS,GAAG,OAAO;UACvBJ,GAAG,CAACK,WAAW,GAAG,OAAO;UACzBL,GAAG,CAACM,SAAS,GAAG,CAAC;UACjB,MAAMC,IAAI,GACR,2DAA2D;UAC7D,MAAMC,CAAC,GAAGT,aAAa,CAACf,KAAK,GAAG,CAAC,GAAG,GAAG;UACvC,MAAMyB,CAAC,GAAGV,aAAa,CAACb,MAAM,GAAG,CAAC;UAClCc,GAAG,CAACU,UAAU,CAACH,IAAI,EAAEC,CAAC,EAAEC,CAAC,CAAC;UAC1BT,GAAG,CAACW,QAAQ,CAACJ,IAAI,EAAEC,CAAC,EAAEC,CAAC,CAAC;QAC1B;QAEA,OAAO,EAAE;MACX;;MAEA;MACArG,oBAAoB,CAACyC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;MAChC;MACA,IAAI7C,gBAAgB,GAAG,CAAC,EAAE;QACxBC,mBAAmB,CAAC,CAAC,CAAC;MACxB;MAEA,IAAIF,iBAAiB,EAAE;QACrBqB,OAAO,CAACC,GAAG,CACT,qBAAqB8D,UAAU,CAAC1D,MAAM,YAAY,EAClD,IAAImB,IAAI,CAAC,CAAC,CAACiD,kBAAkB,CAAC,CAChC,CAAC;MACH;;MAEA;MACA,MAAMc,iBAAiB,GAAGjL,OAAO,CAACkL,aAAa,CAACzB,UAAU,EAAEL,WAAW,CAAC;;MAExE;MACA7H,QAAQ,CAACjB,gBAAgB,CAAC2K,iBAAiB,CAAC,CAAC;;MAE7C;MACA,MAAME,kBAAkB,GAAG1I,aAAa,CACrCgE,MAAM,CACJN,OAAO,IACNA,OAAO,CAACE,eAAe,IACvBF,OAAO,CAACE,eAAe,CAACN,MAAM,GAAG,CAAC,IAClCI,OAAO,CAACE,eAAe,CAAC,CAAC,CAAC,CAACN,MAAM,KAAK,GAAG,CAAC;MAC9C,CAAC,CACAqF,GAAG,CAAEjF,OAAO,IAAK;QAChB,IAAI;UACF;UACA,MAAMkF,WAAW,GAAGlF,OAAO,CAACE,eAAe,CACxCI,MAAM,CAAEC,IAAI,IAAKJ,KAAK,CAACC,OAAO,CAACG,IAAI,CAAC,IAAIA,IAAI,CAACX,MAAM,KAAK,GAAG,CAAC,CAC5DqF,GAAG,CAAEE,UAAU,IAAK,IAAIC,YAAY,CAACD,UAAU,CAAC,CAAC;UAEpD,IAAID,WAAW,CAACtF,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI;UAEzC,OAAO,IAAI/F,OAAO,CAACwL,sBAAsB,CAACrF,OAAO,CAACsF,GAAG,EAAEJ,WAAW,CAAC;QACrE,CAAC,CAAC,OAAOtB,GAAG,EAAE;UACZrE,OAAO,CAAC/C,KAAK,CACX,0CAA0CwD,OAAO,CAACsF,GAAG,GAAG,EACxD1B,GACF,CAAC;UACD,OAAO,IAAI;QACb;MACF,CAAC,CAAC,CACDtD,MAAM,CAACiF,OAAO,CAAC,CAAC,CAAC;;MAEpB;MACA,IAAIP,kBAAkB,CAACpF,MAAM,KAAK,CAAC,EAAE;QACnCL,OAAO,CAACyD,IAAI,CAAC,iDAAiD,CAAC;QAC/D;QACA,IAAI,CAACwC,sBAAsB,CAAC,CAAC,EAAE;UAC7BnK,eAAe,CACb,kEAAkE,EAClE;YAAEoF,OAAO,EAAE;UAAU,CACvB,CAAC;QACH;QACA,OAAOqE,iBAAiB;MAC1B;;MAEA;MACA,MAAMW,WAAW,GAAG,IAAI5L,OAAO,CAAC6L,WAAW,CACzCV,kBAAkB,EAClBlH,qBACF,CAAC;;MAED;MACA,MAAMmG,aAAa,GAAG1I,SAAS,CAAC2F,OAAO;MACvC+C,aAAa,CAACf,KAAK,GAAGD,WAAW,CAACC,KAAK;MACvCe,aAAa,CAACb,MAAM,GAAGH,WAAW,CAACG,MAAM;MAEzC,MAAMc,GAAG,GAAGD,aAAa,CAACE,UAAU,CAAC,IAAI,CAAC;MAC1CD,GAAG,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEH,aAAa,CAACf,KAAK,EAAEe,aAAa,CAACb,MAAM,CAAC;;MAE9D;MACA0B,iBAAiB,CAAC/E,OAAO,CAAE4F,SAAS,IAAK;QACvC,IAAI;UACF,IAAIA,SAAS,CAACR,UAAU,IAAIQ,SAAS,CAACR,UAAU,CAACvF,MAAM,KAAK,GAAG,EAAE;YAC/D,MAAMgG,SAAS,GAAGH,WAAW,CAACI,aAAa,CAACF,SAAS,CAACR,UAAU,CAAC;YACjE,MAAM;cAAEW,KAAK;cAAEC;YAAS,CAAC,GAAGH,SAAS;;YAErC;YACA,IAAIE,KAAK,KAAK,SAAS,EAAE;cACvB;cACA,MAAM9F,OAAO,GAAG1D,aAAa,CAAC0J,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACX,GAAG,KAAKQ,KAAK,CAAC;cAC1D,IAAI9F,OAAO,EAAE;gBACX;gBACA,MAAMkG,SAAS,GAAGlG,OAAO,CAACsF,GAAG;gBAC7B,MAAMa,UAAU,GAAG,CAAC,GAAGJ,QAAQ;;gBAE/B;gBACA,IAAII,UAAU,IAAInI,oBAAoB,EAAE;kBACtCoI,oBAAoB,CAACF,SAAS,EAAEC,UAAU,CAAC;gBAC7C;;gBAEA;gBACA,MAAME,OAAO,GAAG,IAAIxM,OAAO,CAACyM,IAAI,CAACC,OAAO,CACtCZ,SAAS,CAACA,SAAS,CAACa,GAAG,EACvB;kBACEV,KAAK,EAAE,GAAG9F,OAAO,CAACQ,SAAS,KAAKiG,IAAI,CAACC,KAAK,CACxCP,UAAU,GAAG,GACf,CAAC,IAAI;kBACLQ,QAAQ,EACNR,UAAU,IAAInI,oBAAoB,GAAG,OAAO,GAAG;gBACnD,CACF,CAAC;gBACDqI,OAAO,CAACC,IAAI,CAACrC,aAAa,CAAC;cAC7B;YACF,CAAC,MAAM;cACL;cACA,MAAMoC,OAAO,GAAG,IAAIxM,OAAO,CAACyM,IAAI,CAACC,OAAO,CACtCZ,SAAS,CAACA,SAAS,CAACa,GAAG,EACvB;gBACEV,KAAK,EAAE,SAAS;gBAChBa,QAAQ,EAAE;cACZ,CACF,CAAC;cACDN,OAAO,CAACC,IAAI,CAACrC,aAAa,CAAC;YAC7B;UACF,CAAC,MAAM;YACL;YACA1E,OAAO,CAACyD,IAAI,CACV,mCAAmC,EACnC2C,SAAS,CAACR,UAAU,GAChBQ,SAAS,CAACR,UAAU,CAACvF,MAAM,GAC3B,qBACN,CAAC;;YAED;YACA,MAAMyG,OAAO,GAAG,IAAIxM,OAAO,CAACyM,IAAI,CAACC,OAAO,CAACZ,SAAS,CAACA,SAAS,CAACa,GAAG,EAAE;cAChEV,KAAK,EAAE,mBAAmB;cAC1Ba,QAAQ,EAAE;YACZ,CAAC,CAAC;YACFN,OAAO,CAACC,IAAI,CAACrC,aAAa,CAAC;UAC7B;QACF,CAAC,CAAC,OAAOL,GAAG,EAAE;UACZrE,OAAO,CAAC/C,KAAK,CAAC,0BAA0B,EAAEoH,GAAG,CAAC;QAChD;;QAEA;QACA,IAAIjI,YAAY,IAAIgK,SAAS,CAACiB,SAAS,EAAE;UACvC/M,OAAO,CAACyM,IAAI,CAACO,iBAAiB,CAAC5C,aAAa,EAAE0B,SAAS,CAAC;QAC1D;MACF,CAAC,CAAC;MAEF,OAAOb,iBAAiB;IAC1B,CAAC,CAAC,OAAOtI,KAAK,EAAE;MACd+C,OAAO,CAAC/C,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDnB,eAAe,CAAC,2CAA2C,EAAE;QAC3DoF,OAAO,EAAE;MACX,CAAC,CAAC;MACF,OAAO,EAAE;IACX;EACF,CAAC;;EAED;EACA,MAAMqG,0BAA0B,GAAI9G,OAAO,IAAK;IAC9CzC,kBAAkB,CAACyC,OAAO,CAAC;IAC3BrC,uBAAuB,CAAC;MACtBC,MAAM,EAAE,SAAS;MACjBC,IAAI,EAAE;IACR,CAAC,CAAC;IACFJ,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC;EAED,MAAMsJ,uBAAuB,GAAGA,CAAA,KAAM;IACpCtJ,mBAAmB,CAAC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMuJ,4BAA4B,GAAIC,CAAC,IAAK;IAC1CtJ,uBAAuB,CAAC;MACtB,GAAGD,oBAAoB;MACvB,CAACuJ,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAC5B,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,4BAA4B,GAAG,MAAAA,CAAA,KAAY;IAC/C,IAAI,CAAC/J,eAAe,EAAE;IAEtB,IAAI;MACF,MAAMgK,MAAM,GAAG,MAAMlM,QAAQ,CAC3BpB,gBAAgB,CAAC;QACfkB,SAAS;QACTgL,SAAS,EAAE5I,eAAe,CAACgI,GAAG;QAC9B1H,MAAM,EAAEF,oBAAoB,CAACE,MAAM;QACnCC,IAAI,EAAEH,oBAAoB,CAACG;MAC7B,CAAC,CACH,CAAC,CAAC6B,MAAM,CAAC,CAAC;;MAEV;MACA,IAAI4H,MAAM,IAAIA,MAAM,CAAChI,IAAI,EAAE;QACzB,MAAMiI,WAAW,GAAGzK,cAAc,CAACwD,MAAM,CACtCd,GAAG,IAAKA,GAAG,CAACgI,UAAU,CAAClC,GAAG,KAAKhI,eAAe,CAACgI,GAClD,CAAC;QAEDiC,WAAW,CAACE,IAAI,CAAC;UACf,GAAGH,MAAM,CAAChI,IAAI;UACdkI,UAAU,EAAElK;QACd,CAAC,CAAC;QAEFP,iBAAiB,CAACwK,WAAW,CAAC;MAChC;MAEAlM,eAAe,CAAC,+BAA+B,EAAE;QAAEoF,OAAO,EAAE;MAAU,CAAC,CAAC;MACxEsG,uBAAuB,CAAC,CAAC;;MAEzB;MACA,MAAM5H,eAAe,GAAG,MAAM7E,KAAK,CAACuE,GAAG,CACrC,GAAGlE,OAAO,wBAAwBO,SAAS,EAAE,EAC7C;QACE4D,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUhD,KAAK;QAAG;MAC9C,CACF,CAAC;MACDc,cAAc,CAACsC,eAAe,CAACG,IAAI,CAACA,IAAI,CAAC;IAC3C,CAAC,CAAC,OAAO9C,KAAK,EAAE;MACd+C,OAAO,CAAC/C,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDnB,eAAe,CAAC,4BAA4B,EAAE;QAAEoF,OAAO,EAAE;MAAQ,CAAC,CAAC;IACrE;EACF,CAAC;;EAED;EACA,MAAMiH,cAAc,GAAG,MAAAA,CACrBxB,SAAS,EACTyB,cAAc,EACdxB,UAAU,EACVyB,WAAW,KACR;IACH,IAAI;MACF,MAAMN,MAAM,GAAG,MAAMlM,QAAQ,CAC3BrB,gBAAgB,CAAC;QACfmB,SAAS;QACTgL,SAAS;QACTyB,cAAc;QACdxB,UAAU;QACVyB;MACF,CAAC,CACH,CAAC,CAAClI,MAAM,CAAC,CAAC;;MAEV;MACA,IAAI4H,MAAM,IAAIA,MAAM,CAAChI,IAAI,EAAE;QACzB,MAAMU,OAAO,GAAG1D,aAAa,CAAC0J,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACX,GAAG,KAAKY,SAAS,CAAC;QAE9D,IAAIlG,OAAO,EAAE;UACX,MAAMuH,WAAW,GAAGzK,cAAc,CAACwD,MAAM,CACtCd,GAAG,IAAKA,GAAG,CAACgI,UAAU,CAAClC,GAAG,KAAKY,SAClC,CAAC;UAEDqB,WAAW,CAACE,IAAI,CAAC;YACf,GAAGH,MAAM,CAAChI,IAAI;YACdkI,UAAU,EAAExH;UACd,CAAC,CAAC;UAEFjD,iBAAiB,CAACwK,WAAW,CAAC;UAE9BlM,eAAe,CAAC,oBAAoB2E,OAAO,CAACQ,SAAS,EAAE,EAAE;YACvDC,OAAO,EAAE;UACX,CAAC,CAAC;QACJ;MACF;;MAEA;MACA,MAAMtB,eAAe,GAAG,MAAM7E,KAAK,CAACuE,GAAG,CACrC,GAAGlE,OAAO,wBAAwBO,SAAS,EAAE,EAC7C;QACE4D,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUhD,KAAK;QAAG;MAC9C,CACF,CAAC;MACDc,cAAc,CAACsC,eAAe,CAACG,IAAI,CAACA,IAAI,CAAC;MAEzC,OAAO,IAAI;IACb,CAAC,CAAC,OAAO9C,KAAK,EAAE;MACd+C,OAAO,CAAC/C,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDnB,eAAe,CAAC,4BAA4B,EAAE;QAAEoF,OAAO,EAAE;MAAQ,CAAC,CAAC;MACnE,OAAO,KAAK;IACd;EACF,CAAC;;EAED;EACA,MAAMoH,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMvN,KAAK,CAACwN,GAAG,CACb,GAAGnN,OAAO,wBAAwBO,SAAS,EAAE,EAC7C;QAAE0C,MAAM,EAAE;MAAY,CAAC,EACvB;QAAEkB,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUhD,KAAK;QAAG;MAAE,CAClD,CAAC;MAEDV,eAAe,CAAC,6BAA6B,EAAE;QAAEoF,OAAO,EAAE;MAAU,CAAC,CAAC;MACtEtF,QAAQ,CAAC,oBAAoBF,OAAO,EAAE,CAAC;IACzC,CAAC,CAAC,OAAOuB,KAAK,EAAE;MACd+C,OAAO,CAAC/C,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MACzDnB,eAAe,CAAC,kCAAkC,EAAE;QAAEoF,OAAO,EAAE;MAAQ,CAAC,CAAC;IAC3E;EACF,CAAC;;EAED;EACA,MAAMsH,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxC,IAAI;MACF,MAAM3I,YAAY,GAAG,MAAM9E,KAAK,CAACuE,GAAG,CAClC,GAAGlE,OAAO,oBAAoBO,SAAS,EAAE,EACzC;QACE4D,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUhD,KAAK;QAAG;MAC9C,CACF,CAAC;MACDgB,iBAAiB,CAACqC,YAAY,CAACE,IAAI,CAACA,IAAI,CAAC;MAEzC,MAAMH,eAAe,GAAG,MAAM7E,KAAK,CAACuE,GAAG,CACrC,GAAGlE,OAAO,wBAAwBO,SAAS,EAAE,EAC7C;QACE4D,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUhD,KAAK;QAAG;MAC9C,CACF,CAAC;MACDc,cAAc,CAACsC,eAAe,CAACG,IAAI,CAACA,IAAI,CAAC;MAEzCjE,eAAe,CAAC,8BAA8B,EAAE;QAAEoF,OAAO,EAAE;MAAU,CAAC,CAAC;IACzE,CAAC,CAAC,OAAOjE,KAAK,EAAE;MACd+C,OAAO,CAAC/C,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDnB,eAAe,CAAC,yBAAyB,EAAE;QAAEoF,OAAO,EAAE;MAAQ,CAAC,CAAC;IAClE;EACF,CAAC;;EAED;EACA,MAAMuH,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,MAAMlF,iBAAiB,CAAC,CAAC;EAC3B,CAAC;;EAED;EACA,MAAMlB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF;MACA,IAAI,CAAC1F,aAAa,IAAI,CAACrC,OAAO,CAACoI,IAAI,CAACK,cAAc,CAACE,QAAQ,EAAE;QAC3DnH,eAAe,CAAC,mCAAmC,EAAE;UACnDoF,OAAO,EAAE;QACX,CAAC,CAAC;QACF,MAAMwH,WAAW,GAAG,MAAMxJ,yBAAyB,CAAC,CAAC;QAErD,IAAI,CAACwJ,WAAW,EAAE;UAChB5M,eAAe,CAAC,mDAAmD,EAAE;YACnEoF,OAAO,EAAE;UACX,CAAC,CAAC;UACF;QACF;MACF;;MAEA;MACA,IACEnF,SAAS,CAAC4F,OAAO,IACjB5F,SAAS,CAAC4F,OAAO,CAACC,KAAK,IACvB7F,SAAS,CAAC4F,OAAO,CAACC,KAAK,CAACC,SAAS,EACjC;QACA,MAAMC,MAAM,GAAG/F,SAAS,CAAC4F,OAAO,CAACC,KAAK,CAACC,SAAS,CAACE,SAAS,CAAC,CAAC;QAC5DD,MAAM,CAACtB,OAAO,CAAEwB,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;MACzC;MAEA,IAAIhG,QAAQ,CAAC0F,OAAO,IAAI1F,QAAQ,CAAC0F,OAAO,CAACE,SAAS,EAAE;QAClD,MAAMC,MAAM,GAAG7F,QAAQ,CAAC0F,OAAO,CAACE,SAAS,CAACE,SAAS,CAAC,CAAC;QACrDD,MAAM,CAACtB,OAAO,CAAEwB,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;MACzC;;MAEA;MACA,IAAI;QACF;QACA,MAAM0G,WAAW,GAAG;UAClB/G,KAAK,EAAE;YACL+B,KAAK,EAAE;cAAEiF,KAAK,EAAE,IAAI;cAAEC,GAAG,EAAE;YAAI,CAAC;YAChChF,MAAM,EAAE;cAAE+E,KAAK,EAAE,GAAG;cAAEC,GAAG,EAAE;YAAI,CAAC;YAChCC,UAAU,EAAE,MAAM;YAClBC,SAAS,EAAE;cAAEH,KAAK,EAAE,EAAE;cAAEC,GAAG,EAAE;YAAG;UAClC,CAAC;UACDG,KAAK,EAAE;QACT,CAAC;QAEDhJ,OAAO,CAACC,GAAG,CACT,oDAAoD,EACpD0I,WACF,CAAC;QAED,MAAMM,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAACT,WAAW,CAAC;QAErE3I,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAEgJ,MAAM,CAACI,EAAE,CAAC;;QAE9D;QACA,IAAItN,SAAS,CAAC4F,OAAO,IAAI5F,SAAS,CAAC4F,OAAO,CAACC,KAAK,EAAE;UAChD7F,SAAS,CAAC4F,OAAO,CAACC,KAAK,CAACC,SAAS,GAAGoH,MAAM;;UAE1C;UACAlN,SAAS,CAAC4F,OAAO,CAACC,KAAK,CAAC0H,gBAAgB,GAAG,MAAM;YAC/CvN,SAAS,CAAC4F,OAAO,CAACC,KAAK,CAAC2H,IAAI,CAAC,CAAC,CAACC,KAAK,CAAEnF,GAAG,IAAK;cAC5CrE,OAAO,CAAC/C,KAAK,CAAC,4BAA4B,EAAEoH,GAAG,CAAC;YAClD,CAAC,CAAC;UACJ,CAAC;QACH;QACA;QAAA,KACK,IAAIpI,QAAQ,CAAC0F,OAAO,EAAE;UACzB1F,QAAQ,CAAC0F,OAAO,CAACE,SAAS,GAAGoH,MAAM;UACnChN,QAAQ,CAAC0F,OAAO,CAAC2H,gBAAgB,GAAG,MAAM;YACxCrN,QAAQ,CAAC0F,OAAO,CACb4H,IAAI,CAAC,CAAC,CACNC,KAAK,CAAEnF,GAAG,IAAKrE,OAAO,CAAC/C,KAAK,CAAC,qBAAqB,EAAEoH,GAAG,CAAC,CAAC;UAC9D,CAAC;QACH;;QAEA;QACAxI,QAAQ,CAACnB,cAAc,CAAC,IAAI,CAAC,CAAC;QAC9BmB,QAAQ,CAAClB,cAAc,CAAC,IAAI,CAAC,CAAC;;QAE9B;QACAoE,oBAAoB,CAACyC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;QAEhC3F,eAAe,CAAC,8BAA8B,EAAE;UAC9CoF,OAAO,EAAE;QACX,CAAC,CAAC;;QAEF;QACAuI,UAAU,CAAC,MAAM;UACfpN,eAAe,CAAC,IAAI,CAAC;QACvB,CAAC,EAAE,IAAI,CAAC;;QAER;QACAwC,mBAAmB,CAAC,CAAC,CAAC;QAEtB,OAAO,IAAI;MACb,CAAC,CAAC,OAAOwF,GAAG,EAAE;QACZrE,OAAO,CAAC/C,KAAK,CAAC,sBAAsB,EAAEoH,GAAG,CAAC;QAC1CvI,eAAe,CAAC,8BAA8BuI,GAAG,CAACqF,OAAO,EAAE,EAAE;UAC3DxI,OAAO,EAAE;QACX,CAAC,CAAC;;QAEF;QACA,IAAItC,gBAAgB,GAAG,CAAC,EAAE;UACxB,IAAI;YACFoB,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;YAC5D,MAAM0J,SAAS,GAAG,MAAMT,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;cAC1DxH,KAAK,EAAE,IAAI;cAAE;cACboH,KAAK,EAAE;YACT,CAAC,CAAC;;YAEF;YACA,IAAIjN,SAAS,CAAC4F,OAAO,IAAI5F,SAAS,CAAC4F,OAAO,CAACC,KAAK,EAAE;cAChD7F,SAAS,CAAC4F,OAAO,CAACC,KAAK,CAACC,SAAS,GAAG8H,SAAS;YAC/C,CAAC,MAAM,IAAI1N,QAAQ,CAAC0F,OAAO,EAAE;cAC3B1F,QAAQ,CAAC0F,OAAO,CAACE,SAAS,GAAG8H,SAAS;cACtC1N,QAAQ,CAAC0F,OAAO,CAAC2H,gBAAgB,GAAG,MAAMrN,QAAQ,CAAC0F,OAAO,CAAC4H,IAAI,CAAC,CAAC;YACnE;YAEA1N,QAAQ,CAAClB,cAAc,CAAC,IAAI,CAAC,CAAC;YAC9BoE,oBAAoB,CAACyC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;YAChC3F,eAAe,CAAC,4BAA4B,EAAE;cAC5CoF,OAAO,EAAE;YACX,CAAC,CAAC;YACF,OAAO,IAAI;UACb,CAAC,CAAC,OAAO0I,MAAM,EAAE;YACf5J,OAAO,CAAC/C,KAAK,CAAC,oCAAoC,EAAE2M,MAAM,CAAC;UAC7D;QACF;;QAEA;QACA3D,sBAAsB,CAAC,CAAC;QACxB,OAAO,KAAK;MACd;IACF,CAAC,CAAC,OAAO5B,GAAG,EAAE;MACZrE,OAAO,CAAC/C,KAAK,CAAC,oCAAoC,EAAEoH,GAAG,CAAC;MACxDvI,eAAe,CAAC,QAAQuI,GAAG,CAACqF,OAAO,EAAE,EAAE;QAAExI,OAAO,EAAE;MAAQ,CAAC,CAAC;MAC5D,OAAO,KAAK;IACd;EACF,CAAC;;EAED;EACA,MAAM2I,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI,CAAC1M,SAAS,EAAE;;IAEhB;IACA,MAAM2M,cAAc,GAAGC,iBAAiB,CAAC,CAAC;IAC1C,IAAID,cAAc,CAACzJ,MAAM,KAAK,CAAC,EAAE;MAC/BvE,eAAe,CAAC,oCAAoC,EAAE;QACpDoF,OAAO,EAAE;MACX,CAAC,CAAC;MACF;IACF;;IAEA;IACA,IAAI4I,cAAc,CAACzJ,MAAM,GAAG,CAAC,IAAIyJ,cAAc,CAAC,CAAC,CAAC,EAAE;MAClDvC,0BAA0B,CAACuC,cAAc,CAAC,CAAC,CAAC,CAAC;IAC/C;EACF,CAAC;;EAED;EACA,MAAME,uBAAuB,GAAGA,CAAA,KAAM;IAAA,IAAAC,mBAAA;IACpC,MAAMC,QAAQ,GAAG,CAAC9N,YAAY;IAC9BC,eAAe,CAAC6N,QAAQ,CAAC;;IAEzB;IACA,MAAMxF,aAAa,GAAG1I,SAAS,CAAC2F,OAAO;IACvC,IAAI,CAAC+C,aAAa,EAAE;IAEpB,MAAMC,GAAG,GAAGD,aAAa,CAACE,UAAU,CAAC,IAAI,CAAC;IAC1CD,GAAG,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEH,aAAa,CAACf,KAAK,EAAEe,aAAa,CAACb,MAAM,CAAC;;IAE9D;IACA,IAAI,CAAChH,aAAa,IAAIA,aAAa,CAACwD,MAAM,KAAK,CAAC,EAAE;;IAElD;IACA,MAAMgD,YAAY,GAAGxF,UAAU,GAC3B5B,QAAQ,CAAC0F,OAAO,IAAAsI,mBAAA,GAChBlO,SAAS,CAAC4F,OAAO,cAAAsI,mBAAA,uBAAjBA,mBAAA,CAAmBrI,KAAK;IAC5B,IAAI,CAACyB,YAAY,EAAE;;IAEnB;IACA,MAAMK,WAAW,GAAG;MAClBC,KAAK,EAAEN,YAAY,CAACO,UAAU,IAAIP,YAAY,CAACM,KAAK;MACpDE,MAAM,EAAER,YAAY,CAACS,WAAW,IAAIT,YAAY,CAACQ;IACnD,CAAC;;IAED;IACAvJ,OAAO,CAAC6P,eAAe,CAACzF,aAAa,EAAEhB,WAAW,CAAC;IAEnD,IAAI;MACF;MACA,MAAM+B,kBAAkB,GAAG1I,aAAa,CACrCgE,MAAM,CACJN,OAAO,IACNA,OAAO,CAACE,eAAe,IACvBF,OAAO,CAACE,eAAe,CAACN,MAAM,GAAG,CAAC,IAClCI,OAAO,CAACE,eAAe,CAAC,CAAC,CAAC,CAACN,MAAM,KAAK,GAAG,CAAC;MAC9C,CAAC,CACAqF,GAAG,CAAEjF,OAAO,IAAK;QAChB,IAAI;UACF;UACA,MAAMkF,WAAW,GAAGlF,OAAO,CAACE,eAAe,CACxCI,MAAM,CAAEC,IAAI,IAAKJ,KAAK,CAACC,OAAO,CAACG,IAAI,CAAC,IAAIA,IAAI,CAACX,MAAM,KAAK,GAAG,CAAC,CAC5DqF,GAAG,CAAEE,UAAU,IAAK,IAAIC,YAAY,CAACD,UAAU,CAAC,CAAC;UAEpD,IAAID,WAAW,CAACtF,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI;UAEzC,OAAO,IAAI/F,OAAO,CAACwL,sBAAsB,CAACrF,OAAO,CAACsF,GAAG,EAAEJ,WAAW,CAAC;QACrE,CAAC,CAAC,OAAOtB,GAAG,EAAE;UACZ,IAAI1F,iBAAiB,EAAE;YACrBqB,OAAO,CAAC/C,KAAK,CACX,0CAA0CwD,OAAO,CAACsF,GAAG,GAAG,EACxD1B,GACF,CAAC;UACH;UACA,OAAO,IAAI;QACb;MACF,CAAC,CAAC,CACDtD,MAAM,CAACiF,OAAO,CAAC,CAAC,CAAC;;MAEpB;MACA,IAAIE,WAAW,GAAG,IAAI;MACtB,IAAIT,kBAAkB,CAACpF,MAAM,GAAG,CAAC,EAAE;QACjC6F,WAAW,GAAG,IAAI5L,OAAO,CAAC6L,WAAW,CACnCV,kBAAkB,EAClBlH,qBACF,CAAC;MACH,CAAC,MAAM,IAAII,iBAAiB,EAAE;QAC5BqB,OAAO,CAACyD,IAAI,CAAC,iDAAiD,CAAC;MACjE;;MAEA;MACA,MAAM8B,iBAAiB,GAAGjL,OAAO,CAACkL,aAAa,CAC7C3I,aAAa,EACb6G,WACF,CAAC;;MAED;MACA6B,iBAAiB,CAAC/E,OAAO,CAAE4F,SAAS,IAAK;QACvC,IAAI;UACF;UACA,IACEA,SAAS,CAACR,UAAU,IACpBQ,SAAS,CAACR,UAAU,CAACvF,MAAM,KAAK,GAAG,IACnC6F,WAAW,EACX;YAAA,IAAAkE,mBAAA;YACA,MAAM/D,SAAS,GAAGH,WAAW,CAACI,aAAa,CAACF,SAAS,CAACR,UAAU,CAAC;YACjE,MAAM;cAAEW,KAAK;cAAEC;YAAS,CAAC,GAAGH,SAAS;YAErC,MAAMS,OAAO,GAAG,IAAIxM,OAAO,CAACyM,IAAI,CAACC,OAAO,CAACZ,SAAS,CAACA,SAAS,CAACa,GAAG,EAAE;cAChEV,KAAK,EACHA,KAAK,KAAK,SAAS,GACf,GACE,EAAA6D,mBAAA,GAAArN,aAAa,CAAC0J,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACX,GAAG,KAAKQ,KAAK,CAAC,cAAA6D,mBAAA,uBAA1CA,mBAAA,CAA4CnJ,SAAS,KACrD,SAAS,KACNiG,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,GAAGX,QAAQ,IAAI,GAAG,CAAC,IAAI,GACzC,SAAS;cACfY,QAAQ,EAAEb,KAAK,KAAK,SAAS,GAAG,OAAO,GAAG;YAC5C,CAAC,CAAC;YAEFO,OAAO,CAACC,IAAI,CAACrC,aAAa,CAAC;UAC7B,CAAC,MAAM;YACL;YACA,MAAMoC,OAAO,GAAG,IAAIxM,OAAO,CAACyM,IAAI,CAACC,OAAO,CAACZ,SAAS,CAACA,SAAS,CAACa,GAAG,EAAE;cAChEV,KAAK,EAAE,mBAAmB;cAC1Ba,QAAQ,EAAE;YACZ,CAAC,CAAC;YACFN,OAAO,CAACC,IAAI,CAACrC,aAAa,CAAC;UAC7B;;UAEA;UACA,IACEwF,QAAQ,IACR9D,SAAS,CAACiB,SAAS,IACnBjB,SAAS,CAACiB,SAAS,CAACgD,SAAS,IAC7BjE,SAAS,CAACiB,SAAS,CAACgD,SAAS,CAAChK,MAAM,GAAG,CAAC,EACxC;YACA,IAAI;cACF;cACA/F,OAAO,CAACyM,IAAI,CAACO,iBAAiB,CAAC5C,aAAa,EAAE0B,SAAS,CAAC;YAC1D,CAAC,CAAC,OAAO/B,GAAG,EAAE;cACZrE,OAAO,CAAC/C,KAAK,CAAC,uBAAuB,EAAEoH,GAAG,CAAC;YAC7C;UACF;QACF,CAAC,CAAC,OAAOA,GAAG,EAAE;UACZrE,OAAO,CAAC/C,KAAK,CAAC,gDAAgD,EAAEoH,GAAG,CAAC;QACtE;MACF,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOpH,KAAK,EAAE;MACd+C,OAAO,CAAC/C,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;;EAED;EACA,MAAM4J,oBAAoB,GAAG,MAAAA,CAAOF,SAAS,EAAEC,UAAU,KAAK;IAC5D;IACA,MAAM0D,iBAAiB,GAAG/M,cAAc,CAACgN,IAAI,CAC1CtK,GAAG,IAAKA,GAAG,CAACgI,UAAU,CAAClC,GAAG,KAAKY,SAAS,IAAI1G,GAAG,CAAC5B,MAAM,KAAK,SAC9D,CAAC;IAED,IAAIiM,iBAAiB,EAAE;MACrB,IAAI3L,iBAAiB,EAAE;QACrBqB,OAAO,CAACC,GAAG,CACT,qBAAqB0G,SAAS,6BAChC,CAAC;MACH;MACA;IACF;IAEA,IAAI;MAAA,IAAA6D,mBAAA;MACF;MACA,MAAMnH,YAAY,GAAGxF,UAAU,GAC3B5B,QAAQ,CAAC0F,OAAO,IAAA6I,mBAAA,GAChBzO,SAAS,CAAC4F,OAAO,cAAA6I,mBAAA,uBAAjBA,mBAAA,CAAmB5I,KAAK;MAE5B,IAAI,CAACyB,YAAY,EAAE;;MAEnB;MACA,IAAIgF,WAAW,GAAG,IAAI;;MAEtB;MACA,IAAI,CAACxK,UAAU,IAAI9B,SAAS,CAAC4F,OAAO,EAAE;QACpC0G,WAAW,GAAGtM,SAAS,CAAC4F,OAAO,CAAC8I,aAAa,CAAC,CAAC;MACjD;MACA;MAAA,KACK,IAAI5M,UAAU,EAAE;QACnB,MAAM6M,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;QAC/CF,MAAM,CAAC/G,KAAK,GAAGN,YAAY,CAACO,UAAU;QACtC8G,MAAM,CAAC7G,MAAM,GAAGR,YAAY,CAACS,WAAW;QACxC,MAAMa,GAAG,GAAG+F,MAAM,CAAC9F,UAAU,CAAC,IAAI,CAAC;QACnCD,GAAG,CAACkG,SAAS,CAACxH,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC;QACjCgF,WAAW,GAAGqC,MAAM,CAACI,SAAS,CAAC,YAAY,CAAC;MAC9C;;MAEA;MACA,MAAMrK,OAAO,GAAG1D,aAAa,CAAC0J,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACX,GAAG,KAAKY,SAAS,CAAC;MAE9D,IAAI,CAAClG,OAAO,EAAE;QACZT,OAAO,CAAC/C,KAAK,CAAC,mCAAmC0J,SAAS,EAAE,CAAC;QAC7D;MACF;;MAEA;MACA,MAAMf,UAAU,GACdnF,OAAO,CAACE,eAAe,IAAIF,OAAO,CAACE,eAAe,CAACN,MAAM,GAAG,CAAC,GACzDI,OAAO,CAACE,eAAe,CAAC,CAAC,CAAC,GAC1B,IAAI;;MAEV;MACA,IAAIhC,iBAAiB,EAAE;QACrBqB,OAAO,CAACC,GAAG,CACT,kCACEQ,OAAO,CAACQ,SAAS,mBACA2F,UAAU,CAACmE,OAAO,CAAC,CAAC,CAAC,EAC1C,CAAC;MACH;;MAEA;MACA,MAAM5C,cAAc,CAACxB,SAAS,EAAEf,UAAU,EAAEgB,UAAU,EAAEyB,WAAW,CAAC;IACtE,CAAC,CAAC,OAAOpL,KAAK,EAAE;MACd+C,OAAO,CAAC/C,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;;EAED;EACA,MAAMoE,oBAAoB,GAAGA,CAAA,KAAM;IACjC,IAAI,CAAClE,SAAS,IAAI,CAACA,SAAS,CAACiD,QAAQ,IAAIjD,SAAS,CAACiD,QAAQ,CAACC,MAAM,KAAK,CAAC,EAAE;MACxEL,OAAO,CAACyD,IAAI,CAAC,gDAAgD,CAAC;MAC9D,OAAO,EAAE;IACX;;IAEA;IACA,MAAMuH,oBAAoB,GAAGA,CAAA,KAAM;MACjC;MACA,MAAMpF,UAAU,GAAG,IAAIhF,KAAK,CAAC,GAAG,CAAC,CAC9BqK,IAAI,CAAC,CAAC,CAAC,CACPvF,GAAG,CAAC,MAAM,CAACwB,IAAI,CAACgE,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC;MACzC,OAAOtF,UAAU;IACnB,CAAC;;IAED;IACA,MAAMuF,gBAAgB,GAAGhO,SAAS,CAACiD,QAAQ,CAACsF,GAAG,CAAEjF,OAAO,IAAK;MAC3D;MACA,MAAMkF,WAAW,GAAG,CAClBqF,oBAAoB,CAAC,CAAC,EACtBA,oBAAoB,CAAC,CAAC,EACtBA,oBAAoB,CAAC,CAAC,CACvB;MAED,OAAO;QACL,GAAGvK,OAAO;QACVE,eAAe,EAAEgF;MACnB,CAAC;IACH,CAAC,CAAC;IAEF3F,OAAO,CAACC,GAAG,CACT,kCAAkCkL,gBAAgB,CAAC9K,MAAM,YAC3D,CAAC;IACDvE,eAAe,CACb,qCAAqCqP,gBAAgB,CAAC9K,MAAM,YAAY,EACxE;MACEa,OAAO,EAAE,MAAM;MACfC,gBAAgB,EAAE;IACpB,CACF,CAAC;IAED,OAAOgK,gBAAgB;EACzB,CAAC;;EAED;EACA,MAAMlF,sBAAsB,GAAGA,CAAA,KAAM;IACnC,IACElJ,aAAa,CAACsD,MAAM,KAAK,CAAC,IAC1B,CAACtD,aAAa,CAACwN,IAAI,CAChB9J,OAAO,IACNA,OAAO,CAACE,eAAe,IACvBF,OAAO,CAACE,eAAe,CAACN,MAAM,GAAG,CAAC,IAClCI,OAAO,CAACE,eAAe,CAAC,CAAC,CAAC,CAACN,MAAM,KAAK,GAC1C,CAAC,EACD;MACAL,OAAO,CAACC,GAAG,CACT,kEACF,CAAC;MACD,MAAMmB,QAAQ,GAAGC,oBAAoB,CAAC,CAAC;MACvC,IAAID,QAAQ,CAACf,MAAM,GAAG,CAAC,EAAE;QACvBxE,QAAQ,CAAC;UACPyF,IAAI,EAAE,gDAAgD;UACtDC,OAAO,EAAE;YAAEnB,QAAQ,EAAEgB;UAAS;QAChC,CAAC,CAAC;QACF,OAAO,IAAI;MACb;IACF;IACA,OAAO,KAAK;EACd,CAAC;EAED,IAAI3D,SAAS,EAAE;IACb,oBACExC,OAAA,CAAC9C,GAAG;MACFiT,OAAO,EAAC,MAAM;MACdC,cAAc,EAAC,QAAQ;MACvBC,UAAU,EAAC,QAAQ;MACnBC,SAAS,EAAC,MAAM;MAAAC,QAAA,eAEhBvQ,OAAA,CAACtC,gBAAgB;QAAA8S,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAEV;;EAEA;EACA,MAAM7B,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAI,CAAC5M,SAAS,IAAI,CAACE,WAAW,EAAE,OAAO,EAAE;IAEzC,MAAMwO,iBAAiB,GAAGtO,cAAc,CACrCwD,MAAM,CAAEd,GAAG,IAAKA,GAAG,CAAC5B,MAAM,KAAK,SAAS,CAAC,CACzCqH,GAAG,CAAEzF,GAAG,IAAKA,GAAG,CAACgI,UAAU,CAAClC,GAAG,CAAC;IAEnC,OAAO5I,SAAS,CAACiD,QAAQ,CAACW,MAAM,CAC7BN,OAAO,IAAK,CAACoL,iBAAiB,CAACC,QAAQ,CAACrL,OAAO,CAACsF,GAAG,CACtD,CAAC;EACH,CAAC;EAED,MAAM+D,cAAc,GAAGC,iBAAiB,CAAC,CAAC;EAE1C,oBACE9O,OAAA,CAAC9C,GAAG;IAAAqT,QAAA,gBACFvQ,OAAA,CAAC7C,UAAU;MAAC8I,OAAO,EAAC,IAAI;MAAC6K,YAAY;MAAAP,QAAA,GAAC,wBACxB,EAACrO,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAE6O,UAAU;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACb3Q,OAAA,CAAC7C,UAAU;MAAC8I,OAAO,EAAC,WAAW;MAAC+K,KAAK,EAAC,eAAe;MAACF,YAAY;MAAAP,QAAA,GAAC,YAC5D,EAACnO,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAE6O,cAAc,EAAC,IAAE,EAAC,GAAG,EACvC,IAAI1K,IAAI,CAACnE,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAE8O,IAAI,CAAC,CAACC,kBAAkB,CAAC,OAAO,CAAC;IAAA;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eAEb3Q,OAAA,CAAC1C,IAAI;MAAC8T,SAAS;MAACC,OAAO,EAAE,CAAE;MAACC,EAAE,EAAE,CAAE;MAAAf,QAAA,gBAChCvQ,OAAA,CAAC1C,IAAI;QAACiU,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAlB,QAAA,eACvBvQ,OAAA,CAAC5C,IAAI;UAAAmT,QAAA,gBACHvQ,OAAA,CAAC3C,WAAW;YAAAkT,QAAA,eACVvQ,OAAA,CAAC9C,GAAG;cACFiT,OAAO,EAAC,MAAM;cACdC,cAAc,EAAC,eAAe;cAC9BC,UAAU,EAAC,QAAQ;cACnBqB,EAAE,EAAE,CAAE;cAAAnB,QAAA,gBAENvQ,OAAA,CAAC7C,UAAU;gBAAC8I,OAAO,EAAC,IAAI;gBAAAsK,QAAA,EAAC;cAAgB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACtD3Q,OAAA,CAAC9C,GAAG;gBAAAqT,QAAA,gBACFvQ,OAAA,CAAChC,IAAI;kBACHsN,KAAK,EAAE1I,UAAU,GAAG,kBAAkB,GAAG,kBAAmB;kBAC5DoO,KAAK,EAAEpO,UAAU,GAAG,SAAS,GAAG,SAAU;kBAC1C+O,EAAE,EAAE;oBAAEC,EAAE,EAAE;kBAAE;gBAAE;kBAAApB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACf,CAAC,eACF3Q,OAAA,CAACxC,MAAM;kBACLyI,OAAO,EAAC,UAAU;kBAClB+K,KAAK,EAAEpO,UAAU,GAAG,OAAO,GAAG,SAAU;kBACxCiP,OAAO,EACLjP,UAAU,GACN,MAAM;oBACJ;oBACA,IAAI3B,UAAU,EAAE;sBACdwF,aAAa,CAACxF,UAAU,CAAC;sBACzBC,aAAa,CAAC,IAAI,CAAC;oBACrB;oBACA2B,aAAa,CAAC,KAAK,CAAC;oBACpBhC,eAAe,CAAC,iCAAiC,EAAE;sBACjDoF,OAAO,EAAE;oBACX,CAAC,CAAC;kBACJ,CAAC,GACD,MAAM;oBACJ;oBACA,IAAIhF,UAAU,EAAE;sBACdwF,aAAa,CAACxF,UAAU,CAAC;oBAC3B;oBACA;oBACA6C,oBAAoB,CAACyC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;oBAChC,MAAM4H,EAAE,GAAG9G,WAAW,CAAC,MAAM;sBAC3BgB,iBAAiB,CAAC,CAAC;oBACrB,CAAC,EAAE7E,oBAAoB,CAAC;oBACxBvC,aAAa,CAACkN,EAAE,CAAC;oBACjBvL,aAAa,CAAC,IAAI,CAAC;oBACnBhC,eAAe,CAAC,iCAAiC,EAAE;sBACjDoF,OAAO,EAAE;oBACX,CAAC,CAAC;kBACJ,CACL;kBAAAsK,QAAA,EAEA3N,UAAU,GAAG,aAAa,GAAG;gBAAa;kBAAA4N,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACrC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK,CAAC,eAEd3Q,OAAA,CAACzC,KAAK;YACJuU,SAAS,EAAE,CAAE;YACbH,EAAE,EAAE;cACFI,QAAQ,EAAE,UAAU;cACpBrJ,KAAK,EAAE,MAAM;cACbE,MAAM,EAAE,OAAO;cACfuH,OAAO,EAAE,MAAM;cACfC,cAAc,EAAE,QAAQ;cACxBC,UAAU,EAAE,QAAQ;cACpB2B,QAAQ,EAAE,QAAQ;cAClBN,EAAE,EAAE;YACN,CAAE;YAAAnB,QAAA,EAED5O,aAAa,gBACZ3B,OAAA,CAAAE,SAAA;cAAAqQ,QAAA,GACG3N,UAAU;cAAA;cACT;cACA5C,OAAA;gBACEiS,GAAG,EAAEjR,QAAS;gBACdkR,KAAK,EAAE;kBACLH,QAAQ,EAAE,UAAU;kBACpBrJ,KAAK,EAAE,MAAM;kBACbE,MAAM,EAAE,MAAM;kBACduJ,SAAS,EAAE;gBACb,CAAE;gBACFC,QAAQ;gBACRC,WAAW;gBACXC,KAAK;cAAA;gBAAA9B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC,gBAEF3Q,OAAA,CAACZ,MAAM;gBACL2O,KAAK,EAAE,KAAM;gBACbkE,GAAG,EAAEnR,SAAU;gBACfyR,gBAAgB,EAAC,YAAY;gBAC7B7J,KAAK,EAAE,GAAI;gBACXE,MAAM,EAAE,GAAI;gBACZ4J,gBAAgB,EAAE;kBAChB9J,KAAK,EAAE,GAAG;kBACVE,MAAM,EAAE,GAAG;kBACXiF,UAAU,EAAE;gBACd,CAAE;gBACFqE,KAAK,EAAE;kBACLH,QAAQ,EAAE,UAAU;kBACpBrJ,KAAK,EAAE,MAAM;kBACbE,MAAM,EAAE,MAAM;kBACduJ,SAAS,EAAE;gBACb,CAAE;gBACFM,WAAW,EAAGzE,MAAM,IAAK;kBACvBjJ,OAAO,CAACC,GAAG,CACT,sCAAsC,EACtCgJ,MAAM,CAACI,EACT,CAAC;kBACD;kBACAI,UAAU,CAAC,MAAM;oBACf,IAAI1N,SAAS,CAAC4F,OAAO,IAAI5F,SAAS,CAAC4F,OAAO,CAACC,KAAK,EAAE;sBAChD5B,OAAO,CAACC,GAAG,CACT,2BAA2B,EAC3BlE,SAAS,CAAC4F,OAAO,CAACC,KAAK,CAAC0B,UAC1B,CAAC;sBACDzH,QAAQ,CAAClB,cAAc,CAAC,IAAI,CAAC,CAAC;sBAC9B;sBACAoE,oBAAoB,CAACyC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;oBAClC;kBACF,CAAC,EAAE,GAAG,CAAC;gBACT,CAAE;gBACFkM,gBAAgB,EAAGtJ,GAAG,IAAK;kBACzBrE,OAAO,CAAC/C,KAAK,CAAC,0BAA0B,EAAEoH,GAAG,CAAC;kBAC9CvI,eAAe,CACb,8BACEuI,GAAG,CAACuD,IAAI,KAAK,iBAAiB,GAC1B,oCAAoC,GACpCvD,GAAG,CAACuD,IAAI,KAAK,eAAe,GAC5B,gCAAgC,GAChCvD,GAAG,CAACqF,OAAO,IAAI,oBAAoB,EACvC,EACF;oBACExI,OAAO,EAAE;kBACX,CACF,CAAC;gBACH;cAAE;gBAAAuK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CACF,eAED3Q,OAAA;gBACEiS,GAAG,EAAElR,SAAU;gBACfmR,KAAK,EAAE;kBACLH,QAAQ,EAAE,UAAU;kBACpBY,GAAG,EAAE,CAAC;kBACNC,IAAI,EAAE,CAAC;kBACPlK,KAAK,EAAE,MAAM;kBACbE,MAAM,EAAE;gBACV;cAAE;gBAAA4H,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC;YAAA,eACF,CAAC,gBAEH3Q,OAAA,CAAC9C,GAAG;cAACiT,OAAO,EAAC,MAAM;cAAC0C,aAAa,EAAC,QAAQ;cAACxC,UAAU,EAAC,QAAQ;cAAAE,QAAA,gBAC5DvQ,OAAA,CAACtC,gBAAgB;gBAACoV,IAAI,EAAE;cAAG;gBAAAtC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAC9B3Q,OAAA,CAAC7C,UAAU;gBAACmU,EAAE,EAAE,CAAE;gBAAAf,QAAA,EAAC;cAAuB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACvD3Q,OAAA,CAAC7C,UAAU;gBACT8I,OAAO,EAAC,SAAS;gBACjB+K,KAAK,EAAC,gBAAgB;gBACtBW,EAAE,EAAE;kBAAEL,EAAE,EAAE;gBAAE,CAAE;gBAAAf,QAAA,EAEb7O,aAAa,GACV,0DAA0D,GAC1D;cAAsC;gBAAA8O,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChC,CAAC,eAEb3Q,OAAA,CAAC9C,GAAG;gBACFyU,EAAE,EAAE;kBACFL,EAAE,EAAE,CAAC;kBACLnB,OAAO,EAAE,MAAM;kBACf0C,aAAa,EAAE,QAAQ;kBACvBxC,UAAU,EAAE,QAAQ;kBACpB0C,GAAG,EAAE;gBACP,CAAE;gBAAAxC,QAAA,gBAEFvQ,OAAA,CAACxC,MAAM;kBACLyI,OAAO,EAAC,WAAW;kBACnB+K,KAAK,EAAC,SAAS;kBACf8B,IAAI,EAAC,OAAO;kBACZjB,OAAO,EAAEzK,gBAAiB;kBAAAmJ,QAAA,EAC3B;gBAED;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAET3Q,OAAA,CAACxC,MAAM;kBACLyI,OAAO,EAAC,UAAU;kBAClB+K,KAAK,EAAC,SAAS;kBACf8B,IAAI,EAAC,OAAO;kBACZjB,OAAO,EAAE7G,sBAAuB;kBAAAuF,QAAA,EACjC;gBAED;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAET3Q,OAAA,CAACrB,KAAK;kBAACqU,QAAQ,EAAC,MAAM;kBAACrB,EAAE,EAAE;oBAAEL,EAAE,EAAE,CAAC;oBAAE2B,QAAQ,EAAE;kBAAI,CAAE;kBAAA1C,QAAA,GAAC,0EAEnD,eAAAvQ,OAAA;oBAAIkS,KAAK,EAAE;sBAAEgB,MAAM,EAAE,OAAO;sBAAEC,WAAW,EAAE;oBAAO,CAAE;oBAAA5C,QAAA,gBAClDvQ,OAAA;sBAAAuQ,QAAA,EAAI;oBAAsC;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eAC/C3Q,OAAA;sBAAAuQ,QAAA,EAAI;oBAAwB;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eACjC3Q,OAAA;sBAAAuQ,QAAA,EAAI;oBAEJ;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACA,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UACN;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC,eAER3Q,OAAA,CAAC9C,GAAG;YAACiT,OAAO,EAAC,MAAM;YAACC,cAAc,EAAC,eAAe;YAAAG,QAAA,gBAChDvQ,OAAA,CAACxC,MAAM;cACLyI,OAAO,EAAC,UAAU;cAClB4L,OAAO,EAAErE,mBAAoB;cAC7B4F,SAAS,eAAEpT,OAAA,CAACpB,SAAS;gBAAA4R,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAE;cACzB0C,QAAQ,EAAE,CAAC1R,aAAa,IAAIe,aAAa,IAAIE,UAAW;cAAA2N,QAAA,EAEvD7N,aAAa,gBACZ1C,OAAA,CAACtC,gBAAgB;gBAACoV,IAAI,EAAE,EAAG;gBAAC9B,KAAK,EAAC;cAAS;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,GAE9C;YACD;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACK,CAAC,eAET3Q,OAAA,CAAC9C,GAAG;cAAAqT,QAAA,GACD5O,aAAa,iBACZ3B,OAAA,CAAAE,SAAA;gBAAAqQ,QAAA,gBACEvQ,OAAA,CAACxC,MAAM;kBACLyI,OAAO,EAAC,UAAU;kBAClB+K,KAAK,EAAE7P,YAAY,GAAG,SAAS,GAAG,MAAO;kBACzC0Q,OAAO,EAAE9C,uBAAwB;kBACjC4C,EAAE,EAAE;oBAAEC,EAAE,EAAE;kBAAE,CAAE;kBAAArB,QAAA,EAEbpP,YAAY,GAAG,cAAc,GAAG;gBAAe;kBAAAqP,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC1C,CAAC,eAET3Q,OAAA,CAACxC,MAAM;kBACLyI,OAAO,EAAC,UAAU;kBAClB+K,KAAK,EAAEpO,UAAU,GAAG,OAAO,GAAG,SAAU;kBACxCiP,OAAO,EACLjP,UAAU,GACN,MAAM;oBACJ;oBACA,IAAI3B,UAAU,EAAE;sBACdwF,aAAa,CAACxF,UAAU,CAAC;sBACzBC,aAAa,CAAC,IAAI,CAAC;oBACrB;oBACA2B,aAAa,CAAC,KAAK,CAAC;oBACpBhC,eAAe,CACb,iCAAiC,EACjC;sBAAEoF,OAAO,EAAE;oBAAO,CACpB,CAAC;kBACH,CAAC,GACD,MAAM;oBACJ;oBACA,IAAIhF,UAAU,EAAE;sBACdwF,aAAa,CAACxF,UAAU,CAAC;oBAC3B;oBACA,MAAMmN,EAAE,GAAG9G,WAAW,CAAC,MAAM;sBAC3BgB,iBAAiB,CAAC,CAAC;oBACrB,CAAC,EAAE7E,oBAAoB,CAAC;oBACxBvC,aAAa,CAACkN,EAAE,CAAC;oBACjBvL,aAAa,CAAC,IAAI,CAAC;oBACnBhC,eAAe,CACb,iCAAiC,EACjC;sBAAEoF,OAAO,EAAE;oBAAO,CACpB,CAAC;kBACH,CACL;kBACD0L,EAAE,EAAE;oBAAEC,EAAE,EAAE;kBAAE,CAAE;kBAAArB,QAAA,EAEb3N,UAAU,GAAG,aAAa,GAAG;gBAAa;kBAAA4N,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACrC,CAAC;cAAA,eACT,CACH,eAED3Q,OAAA,CAACxC,MAAM;gBACLyI,OAAO,EAAC,WAAW;gBACnB+K,KAAK,EAAC,SAAS;gBACfa,OAAO,EAAExE,eAAgB;gBACzB+F,SAAS,eAAEpT,OAAA,CAACf,IAAI;kBAAAuR,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAE;gBACpB0C,QAAQ,EAAE,CAAAjR,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEgB,MAAM,MAAK,WAAY;gBAAAmN,QAAA,EAC/C;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,EAEL9O,kBAAkB,CAACuD,MAAM,GAAG,CAAC,iBAC5BpF,OAAA,CAAC9C,GAAG;YAACoU,EAAE,EAAE,CAAE;YAAAf,QAAA,gBACTvQ,OAAA,CAAC7C,UAAU;cAAC8I,OAAO,EAAC,WAAW;cAAC6K,YAAY;cAAAP,QAAA,GAAC,kCAC7B,EAAC1O,kBAAkB,CAACuD,MAAM,EAAC,GAC3C;YAAA;cAAAoL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACb3Q,OAAA,CAAC1C,IAAI;cAAC8T,SAAS;cAACC,OAAO,EAAE,CAAE;cAAAd,QAAA,EACxB1O,kBAAkB,CAAC4I,GAAG,CAAC,CAACjF,OAAO,EAAE8N,KAAK,kBACrCtT,OAAA,CAAC1C,IAAI;gBAACiU,IAAI;gBAACC,EAAE,EAAE,CAAE;gBAAC+B,EAAE,EAAE,CAAE;gBAAAhD,QAAA,eACtBvQ,OAAA,CAACzC,KAAK;kBACJuU,SAAS,EAAE,CAAE;kBACbH,EAAE,EAAE;oBACF6B,CAAC,EAAE,CAAC;oBACJrD,OAAO,EAAE,MAAM;oBACf0C,aAAa,EAAE,QAAQ;oBACvBxC,UAAU,EAAE;kBACd,CAAE;kBAAAE,QAAA,gBAEFvQ,OAAA,CAAC7C,UAAU;oBAAC8I,OAAO,EAAC,OAAO;oBAACwN,MAAM;oBAAAlD,QAAA,EAC/B/K,OAAO,CAACmH;kBAAI;oBAAA6D,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH,CAAC,eACb3Q,OAAA,CAAC7C,UAAU;oBAAC8I,OAAO,EAAC,SAAS;oBAAC+K,KAAK,EAAC,eAAe;oBAAAT,QAAA,GAChDtE,IAAI,CAACC,KAAK,CAAC1G,OAAO,CAACmG,UAAU,GAAG,GAAG,CAAC,EAAC,SACxC;kBAAA;oBAAA6E,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAY,CAAC,eACb3Q,OAAA,CAACxC,MAAM;oBACLsV,IAAI,EAAC,OAAO;oBACZ7M,OAAO,EAAC,UAAU;oBAClB+K,KAAK,EAAC,SAAS;oBACfW,EAAE,EAAE;sBAAEL,EAAE,EAAE;oBAAE,CAAE;oBACdO,OAAO,EAAEA,CAAA,KACPjG,oBAAoB,CAClBpG,OAAO,CAACkG,SAAS,EACjBlG,OAAO,CAACmG,UACV,CACD;oBAAA4E,QAAA,gBAEDvQ,OAAA,CAACnB,KAAK;sBAAC6U,QAAQ,EAAC,OAAO;sBAAC/B,EAAE,EAAE;wBAAEC,EAAE,EAAE;sBAAI;oBAAE;sBAAApB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE,CAAC,uBAE7C;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ;cAAC,GA/BoB2C,KAAK;gBAAA9C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAgC7B,CACP;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAEP3Q,OAAA,CAAC1C,IAAI;QAACiU,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAlB,QAAA,gBACvBvQ,OAAA,CAAC5C,IAAI;UAACuU,EAAE,EAAE;YAAED,EAAE,EAAE;UAAE,CAAE;UAAAnB,QAAA,eAClBvQ,OAAA,CAAC3C,WAAW;YAAAkT,QAAA,gBACVvQ,OAAA,CAAC9C,GAAG;cACFiT,OAAO,EAAC,MAAM;cACdC,cAAc,EAAC,eAAe;cAC9BC,UAAU,EAAC,QAAQ;cACnBqB,EAAE,EAAE,CAAE;cAAAnB,QAAA,gBAENvQ,OAAA,CAAC7C,UAAU;gBAAC8I,OAAO,EAAC,IAAI;gBAAAsK,QAAA,GAAC,kBAEvB,EACEjO,cAAc,CAACwD,MAAM,CAAEd,GAAG,IAAKA,GAAG,CAAC5B,MAAM,KAAK,SAAS,CAAC,CACrDgC,MAAM,EACV,GACA,EAAClD,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEiD,QAAQ,CAACC,MAAM,EAAC,GAC/B;cAAA;gBAAAoL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACb3Q,OAAA,CAACtB,UAAU;gBAACoU,IAAI,EAAC,OAAO;gBAACjB,OAAO,EAAEtE,qBAAsB;gBAAAgD,QAAA,eACtDvQ,OAAA,CAAChB,OAAO;kBAAAwR,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC,eAEN3Q,OAAA,CAACrC,IAAI;cAACgW,KAAK;cAAApD,QAAA,GACRjO,cAAc,CACZwD,MAAM,CAAEd,GAAG,IAAKA,GAAG,CAAC5B,MAAM,KAAK,SAAS,CAAC,CACzCwQ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIvN,IAAI,CAACuN,CAAC,CAACC,SAAS,CAAC,GAAG,IAAIxN,IAAI,CAACsN,CAAC,CAACE,SAAS,CAAC,CAAC,CAC7DtJ,GAAG,CAAEzF,GAAG,iBACPhF,OAAA,CAACpC,QAAQ;gBAEPoW,eAAe,eACbhU,OAAA,CAAChC,IAAI;kBACH8U,IAAI,EAAC,OAAO;kBACZmB,IAAI,EACFjP,GAAG,CAACkP,UAAU,gBACZlU,OAAA,CAACd,YAAY;oBAACwU,QAAQ,EAAC;kBAAO;oBAAAlD,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,GAC/B,IACL;kBACDrF,KAAK,EAAEtG,GAAG,CAACkP,UAAU,GAAG,SAAS,GAAG,UAAW;kBAC/ClD,KAAK,EAAEhM,GAAG,CAACkP,UAAU,GAAG,SAAS,GAAG;gBAAU;kBAAA1D,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC/C,CACF;gBAAAJ,QAAA,gBAEDvQ,OAAA,CAACnC,cAAc;kBAAA0S,QAAA,eACbvQ,OAAA,CAACjC,MAAM;oBACLoW,GAAG,EAAEnP,GAAG,CAACgI,UAAU,CAAChH,SAAU;oBAC9BoO,GAAG,EAAEpP,GAAG,CAACgI,UAAU,CAACqH;kBAAW;oBAAA7D,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAChC;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACY,CAAC,eACjB3Q,OAAA,CAAClC,YAAY;kBACXwW,OAAO,EAAEtP,GAAG,CAACgI,UAAU,CAAChH,SAAU;kBAClCuO,SAAS,EAAE,GAAG,IAAIhO,IAAI,CACpBvB,GAAG,CAAC+O,SACN,CAAC,CAACvK,kBAAkB,CAAC,OAAO,CAAC;gBAAG;kBAAAgH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACjC,CAAC;cAAA,GAzBG3L,GAAG,CAAC8F,GAAG;gBAAA0F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OA0BJ,CACX,CAAC,EAEHrO,cAAc,CAACwD,MAAM,CAAEd,GAAG,IAAKA,GAAG,CAAC5B,MAAM,KAAK,SAAS,CAAC,CACtDgC,MAAM,KAAK,CAAC,iBACbpF,OAAA,CAACpC,QAAQ;gBAAA2S,QAAA,eACPvQ,OAAA,CAAClC,YAAY;kBAACwW,OAAO,EAAC;gBAAiC;kBAAA9D,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClD,CACX;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,eAEP3Q,OAAA,CAAC5C,IAAI;UAAAmT,QAAA,eACHvQ,OAAA,CAAC3C,WAAW;YAAAkT,QAAA,gBACVvQ,OAAA,CAAC7C,UAAU;cAAC8I,OAAO,EAAC,IAAI;cAAC6K,YAAY;cAAAP,QAAA,GAAC,sBAC1B,EAAC1B,cAAc,CAACzJ,MAAM,EAAC,GAAC,EAAClD,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEiD,QAAQ,CAACC,MAAM,EAAC,GAChE;YAAA;cAAAoL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAEb3Q,OAAA,CAACrC,IAAI;cAACgW,KAAK;cAAApD,QAAA,GACR1B,cAAc,CAACpE,GAAG,CAAEjF,OAAO,iBAC1BxF,OAAA,CAACpC,QAAQ;gBAEPoW,eAAe,eACbhU,OAAA,CAACtB,UAAU;kBACT8V,IAAI,EAAC,KAAK;kBACV3C,OAAO,EAAEA,CAAA,KAAMvF,0BAA0B,CAAC9G,OAAO,CAAE;kBAAA+K,QAAA,eAEnDvQ,OAAA,CAACjB,IAAI;oBAAC2U,QAAQ,EAAC;kBAAO;oBAAAlD,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACf,CACb;gBAAAJ,QAAA,gBAEDvQ,OAAA,CAACnC,cAAc;kBAAA0S,QAAA,eACbvQ,OAAA,CAACjC,MAAM;oBACLoW,GAAG,EAAE3O,OAAO,CAACQ,SAAU;oBACvBoO,GAAG,EAAE5O,OAAO,CAAC6O;kBAAW;oBAAA7D,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACzB;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACY,CAAC,eACjB3Q,OAAA,CAAClC,YAAY;kBACXwW,OAAO,EAAE9O,OAAO,CAACQ,SAAU;kBAC3BuO,SAAS,EAAE/O,OAAO,CAACiP;gBAAa;kBAAAjE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACjC,CAAC;cAAA,GAnBGnL,OAAO,CAACsF,GAAG;gBAAA0F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAoBR,CACX,CAAC,EAED9B,cAAc,CAACzJ,MAAM,KAAK,CAAC,iBAC1BpF,OAAA,CAACpC,QAAQ;gBAAA2S,QAAA,eACPvQ,OAAA,CAAClC,YAAY;kBAACwW,OAAO,EAAC;gBAAiC;kBAAA9D,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClD,CACX;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGP3Q,OAAA,CAAC/B,MAAM;MAACyW,IAAI,EAAE1R,gBAAiB;MAAC2R,OAAO,EAAEpI,uBAAwB;MAAAgE,QAAA,gBAC/DvQ,OAAA,CAAC9B,WAAW;QAAAqS,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eAC7C3Q,OAAA,CAAC7B,aAAa;QAAAoS,QAAA,eACZvQ,OAAA,CAAC9C,GAAG;UAACyU,EAAE,EAAE;YAAE6B,CAAC,EAAE;UAAE,CAAE;UAAAjD,QAAA,gBAChBvQ,OAAA,CAAC7C,UAAU;YAAC8I,OAAO,EAAC,WAAW;YAAC6K,YAAY;YAAAP,QAAA,GACzCzN,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEkD,SAAS,EAAC,IAAE,EAAClD,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAE2R,YAAY,EAAC,GAC/D;UAAA;YAAAjE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAEb3Q,OAAA,CAAC1B,WAAW;YAACsW,SAAS;YAAC1B,MAAM,EAAC,QAAQ;YAAA3C,QAAA,gBACpCvQ,OAAA,CAACzB,UAAU;cAAAgS,QAAA,EAAC;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACnC3Q,OAAA,CAACxB,MAAM;cACLmO,IAAI,EAAC,QAAQ;cACbC,KAAK,EAAE1J,oBAAoB,CAACE,MAAO;cACnCyR,QAAQ,EAAErI,4BAA6B;cACvClB,KAAK,EAAC,oBAAY;cAAAiF,QAAA,gBAElBvQ,OAAA,CAACvB,QAAQ;gBAACmO,KAAK,EAAC,SAAS;gBAAA2D,QAAA,EAAC;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAU,CAAC,eAC3C3Q,OAAA,CAACvB,QAAQ;gBAACmO,KAAK,EAAC,QAAQ;gBAAA2D,QAAA,EAAC;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAU,CAAC,eAC5C3Q,OAAA,CAACvB,QAAQ;gBAACmO,KAAK,EAAC,MAAM;gBAAA2D,QAAA,EAAC;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAU,CAAC,eACxC3Q,OAAA,CAACvB,QAAQ;gBAACmO,KAAK,EAAC,aAAa;gBAAA2D,QAAA,EAAC;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAU,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eAEd3Q,OAAA,CAAC3B,SAAS;YACRuW,SAAS;YACT1B,MAAM,EAAC,QAAQ;YACfvG,IAAI,EAAC,MAAM;YACXrB,KAAK,EAAC,YAAS;YACfsB,KAAK,EAAE1J,oBAAoB,CAACG,IAAK;YACjCwR,QAAQ,EAAErI,4BAA6B;YACvCsI,SAAS;YACTC,IAAI,EAAE;UAAE;YAAAvE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO,CAAC,eAChB3Q,OAAA,CAAC5B,aAAa;QAAAmS,QAAA,gBACZvQ,OAAA,CAACxC,MAAM;UAACqU,OAAO,EAAEtF,uBAAwB;UAAAgE,QAAA,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACtD3Q,OAAA,CAACxC,MAAM;UAACqU,OAAO,EAAEhF,4BAA6B;UAAC5G,OAAO,EAAC,WAAW;UAAAsK,QAAA,EAAC;QAEnE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACnQ,EAAA,CAtvDID,cAAc;EAAA,QACa1D,SAAS,EACvBC,WAAW,EACXC,WAAW,EACAE,WAAW,EASrBD,WAAW,EASzBA,WAAW;AAAA;AAAAgY,EAAA,GAtBXzU,cAAc;AAwvDpB,eAAeA,cAAc;AAAC,IAAAyU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}