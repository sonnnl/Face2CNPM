{"ast":null,"code":"import React,{useState,useEffect,useRef,lazy,Suspense}from\"react\";import{useSnackbar}from\"notistack\";import{Box,Typography,Button,CircularProgress,Alert,Card,CardContent,FormControlLabel,Switch}from\"@mui/material\";import{Camera,CheckCircle,Error}from\"@mui/icons-material\";import{loadModels,detectFace}from\"../utils/faceUtils\";import*as faceapi from\"face-api.js\";// Lazy load Webcam\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Webcam=/*#__PURE__*/lazy(()=>import(\"react-webcam\"));const FaceRegistrationComponent=_ref=>{var _webcamRef$current2,_webcamRef$current2$v;let{onFaceDataCapture,maxImages=3}=_ref;// Refs\nconst webcamRef=useRef(null);const canvasRef=useRef(null);// State\nconst[isLoading,setIsLoading]=useState(false);const[modelsLoaded,setModelsLoaded]=useState(false);const[isCameraReady,setIsCameraReady]=useState(false);const[capturedImages,setCapturedImages]=useState([]);const[isProcessing,setIsProcessing]=useState(false);const[error,setError]=useState(\"\");const[showLandmarks,setShowLandmarks]=useState(true);const{enqueueSnackbar}=useSnackbar();const[detectionInterval,setDetectionInterval]=useState(null);// Load face recognition models\nuseEffect(()=>{const initModels=async()=>{try{setIsLoading(true);await loadModels();setModelsLoaded(true);enqueueSnackbar(\"Đã tải mô hình nhận diện khuôn mặt\",{variant:\"success\"});}catch(error){console.error(\"Lỗi khi tải mô hình:\",error);setError(\"Không thể tải mô hình nhận diện khuôn mặt. Vui lòng tải lại trang.\");enqueueSnackbar(\"Lỗi khi tải mô hình nhận diện\",{variant:\"error\"});}finally{setIsLoading(false);}};initModels();},[enqueueSnackbar]);// Check if camera is ready\nuseEffect(()=>{var _webcamRef$current,_webcamRef$current$vi;if(((_webcamRef$current=webcamRef.current)===null||_webcamRef$current===void 0?void 0:(_webcamRef$current$vi=_webcamRef$current.video)===null||_webcamRef$current$vi===void 0?void 0:_webcamRef$current$vi.readyState)===4){setIsCameraReady(true);}},[(_webcamRef$current2=webcamRef.current)===null||_webcamRef$current2===void 0?void 0:(_webcamRef$current2$v=_webcamRef$current2.video)===null||_webcamRef$current2$v===void 0?void 0:_webcamRef$current2$v.readyState]);// Run face detection in real-time\nuseEffect(()=>{let intervalId;const runFaceDetection=async()=>{if(webcamRef.current&&webcamRef.current.video&&canvasRef.current&&modelsLoaded&&isCameraReady&&showLandmarks&&!isProcessing){const video=webcamRef.current.video;const canvas=canvasRef.current;// Match dimensions\nconst displaySize={width:video.width,height:video.height};faceapi.matchDimensions(canvas,displaySize);try{// Detect face with landmarks\nconst detections=await faceapi.detectSingleFace(video,new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks();if(detections){// Clear canvas and draw landmarks\nconst ctx=canvas.getContext(\"2d\");ctx.clearRect(0,0,canvas.width,canvas.height);// Resize detection results\nconst resizedDetections=faceapi.resizeResults(detections,displaySize);// Draw detection results\nfaceapi.draw.drawDetections(canvas,resizedDetections);faceapi.draw.drawFaceLandmarks(canvas,resizedDetections);}}catch(error){console.error(\"Error detecting face in real-time:\",error);}}};if(modelsLoaded&&isCameraReady&&showLandmarks){intervalId=setInterval(runFaceDetection,100);}return()=>{if(intervalId){clearInterval(intervalId);}};},[modelsLoaded,isCameraReady,showLandmarks,isProcessing]);// Capture and detect face\nconst captureImage=async()=>{if(!webcamRef.current||!isCameraReady){enqueueSnackbar(\"Camera chưa sẵn sàng, vui lòng thử lại\",{variant:\"warning\"});return;}try{setIsProcessing(true);// Capture image\nconst imageSrc=webcamRef.current.getScreenshot();if(!imageSrc){enqueueSnackbar(\"Không thể chụp ảnh, vui lòng thử lại\",{variant:\"error\"});setIsProcessing(false);return;}// Detect face\nconst detections=await detectFace(imageSrc);if(!detections){enqueueSnackbar(\"Không phát hiện được khuôn mặt, vui lòng thử lại và đảm bảo khuôn mặt của bạn nằm trong khung hình\",{variant:\"warning\"});setIsProcessing(false);return;}// Save image and face info\nconst newImage={img:imageSrc,descriptor:Array.from(detections.descriptor)};setCapturedImages(prev=>[...prev,newImage]);enqueueSnackbar(`Đã chụp ảnh ${capturedImages.length+1}/${maxImages}`,{variant:\"success\"});// If enough images, pass data to parent\nif(capturedImages.length+1>=maxImages){onFaceDataCapture([...capturedImages,newImage]);}}catch(error){console.error(\"Lỗi khi chụp ảnh:\",error);enqueueSnackbar(\"Đã xảy ra lỗi khi chụp ảnh\",{variant:\"error\"});}finally{setIsProcessing(false);}};const resetCapture=()=>{setCapturedImages([]);};// Webcam config\nconst videoConstraints={width:320,height:320,facingMode:\"user\"};return/*#__PURE__*/_jsx(Card,{variant:\"outlined\",sx:{mb:3},children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"\\u0110\\u0103ng k\\xFD khu\\xF4n m\\u1EB7t\"}),error&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{mb:2},children:error}),/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",paragraph:true,children:[\"Vui l\\xF2ng ch\\u1EE5p \",maxImages,\" \\u1EA3nh khu\\xF4n m\\u1EB7t c\\u1EE7a b\\u1EA1n t\\u1EEB c\\xE1c g\\xF3c kh\\xE1c nhau \\u0111\\u1EC3 h\\u1EC7 th\\u1ED1ng nh\\u1EADn di\\u1EC7n t\\u1ED1t h\\u01A1n.\"]}),/*#__PURE__*/_jsxs(Alert,{severity:\"info\",sx:{mb:2},children:[\"\\u0110\\xE3 ch\\u1EE5p: \",capturedImages.length,\"/\",maxImages,\" \\u1EA3nh\"]}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Switch,{checked:showLandmarks,onChange:e=>setShowLandmarks(e.target.checked)}),label:\"Hi\\u1EC3n th\\u1ECB landmark khu\\xF4n m\\u1EB7t\"})]}),/*#__PURE__*/_jsx(Box,{sx:{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\",mb:2},children:isLoading?/*#__PURE__*/_jsx(CircularProgress,{}):/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(CircularProgress,{}),children:/*#__PURE__*/_jsxs(Box,{sx:{border:\"2px solid #ddd\",borderRadius:2,overflow:\"hidden\",width:320,height:320,position:\"relative\"},children:[/*#__PURE__*/_jsx(Webcam,{audio:false,ref:webcamRef,screenshotFormat:\"image/jpeg\",videoConstraints:videoConstraints,style:{width:\"100%\",height:\"100%\"},onUserMedia:()=>setIsCameraReady(true),width:320,height:320}),/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,style:{position:\"absolute\",top:0,left:0},width:320,height:320}),capturedImages.length>=maxImages&&/*#__PURE__*/_jsx(Box,{sx:{position:\"absolute\",top:0,left:0,width:\"100%\",height:\"100%\",display:\"flex\",alignItems:\"center\",justifyContent:\"center\",backgroundColor:\"rgba(0, 0, 0, 0.6)\"},children:/*#__PURE__*/_jsx(CheckCircle,{color:\"success\",sx:{fontSize:48,color:\"#4caf50\"}})})]})})}),/*#__PURE__*/_jsxs(Box,{sx:{display:\"flex\",justifyContent:\"center\",gap:2},children:[/*#__PURE__*/_jsx(Button,{variant:\"contained\",startIcon:/*#__PURE__*/_jsx(Camera,{}),disabled:isProcessing||!modelsLoaded||!isCameraReady||capturedImages.length>=maxImages,onClick:captureImage,children:isProcessing?/*#__PURE__*/_jsx(CircularProgress,{size:24,color:\"inherit\"}):\"Chụp ảnh\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:resetCapture,disabled:isProcessing||capturedImages.length===0,children:\"Ch\\u1EE5p l\\u1EA1i\"})]}),capturedImages.length>0&&/*#__PURE__*/_jsx(Box,{sx:{mt:2,display:\"flex\",flexWrap:\"wrap\",gap:1},children:capturedImages.map((img,index)=>/*#__PURE__*/_jsx(Box,{component:\"img\",src:img.img,alt:`Captured ${index+1}`,sx:{width:80,height:80,objectFit:\"cover\",borderRadius:1}},index))})]})});};export default FaceRegistrationComponent;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}