{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kasiz\\\\Documents\\\\Studying\\\\FaceReg\\\\frontend\\\\src\\\\pages\\\\teacher\\\\AttendancePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useSnackbar } from \"notistack\";\nimport { Box, Typography, Card, CardContent, Grid, Paper, Button, Divider, CircularProgress, List, ListItem, ListItemAvatar, ListItemText, Avatar, Chip, Dialog, DialogTitle, DialogContent, DialogActions, TextField, FormControl, InputLabel, Select, MenuItem, IconButton, Alert } from \"@mui/material\";\nimport { CameraAlt, Check, Close, Edit, Refresh, Save, VerifiedUser, HourglassEmpty } from \"@mui/icons-material\";\nimport Webcam from \"react-webcam\";\nimport * as faceapi from \"face-api.js\";\nimport { getClassFaceFeatures, verifyAttendance, manualAttendance, setModelLoaded, setCameraReady, setDetectedFaces, setRecognizedStudents, clearRecognitionState } from \"../../redux/slices/faceRecognitionSlice\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\nconst AttendancePage = () => {\n  _s();\n  const {\n    classId,\n    sessionId\n  } = useParams();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const videoRef = useRef(null);\n  const [intervalId, setIntervalId] = useState(null);\n  const [showLandmark, setShowLandmark] = useState(false);\n  const [landmarkIntervalId, setLandmarkIntervalId] = useState(null);\n  const {\n    token\n  } = useSelector(state => state.auth);\n  const {\n    isModelLoaded,\n    isCameraReady,\n    detectedFaces,\n    recognizedStudents,\n    classStudents,\n    isProcessing,\n    error\n  } = useSelector(state => state.faceRecognition);\n  const [classInfo, setClassInfo] = useState(null);\n  const [sessionInfo, setSessionInfo] = useState(null);\n  const [attendanceLogs, setAttendanceLogs] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isRecognizing, setIsRecognizing] = useState(false);\n  const [isAutoMode, setIsAutoMode] = useState(false);\n  const [selectedStudent, setSelectedStudent] = useState(null);\n  const [manualDialogOpen, setManualDialogOpen] = useState(false);\n  const [manualAttendanceData, setManualAttendanceData] = useState({\n    status: \"present\",\n    note: \"\"\n  });\n  const [isSimpleCameraMode, setIsSimpleCameraMode] = useState(false);\n\n  // Các hằng số cho nhận diện khuôn mặt\n  const RECOGNITION_THRESHOLD = 0.6; // Ngưỡng nhận diện (càng thấp càng nghiêm ngặt)\n  const AUTO_DETECT_INTERVAL = 1000; // 1 giây\n\n  // Load class info, session info và models\n  useEffect(() => {\n    const loadInitialData = async () => {\n      try {\n        setIsLoading(true);\n\n        // Bắt đầu tải dữ liệu và models song song\n        const loadModelsPromise = !isModelLoaded ? loadFaceRecognitionModels() : Promise.resolve(true);\n\n        // Lấy thông tin lớp học\n        const classPromise = axios.get(`${API_URL}/classes/teaching/${classId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Lấy thông tin phiên điểm danh\n        const sessionPromise = axios.get(`${API_URL}/attendance/sessions/${sessionId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Lấy danh sách điểm danh\n        const logsPromise = axios.get(`${API_URL}/attendance/logs/${sessionId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Chờ tất cả API calls hoàn thành\n        const [classResponse, sessionResponse, logsResponse] = await Promise.all([classPromise, sessionPromise, logsPromise]);\n        setClassInfo(classResponse.data.data);\n        setSessionInfo(sessionResponse.data.data);\n        setAttendanceLogs(logsResponse.data.data);\n\n        // Lấy đặc trưng khuôn mặt của sinh viên trong lớp\n        dispatch(getClassFaceFeatures(classId));\n\n        // Không chờ đợi model load xong mới hiển thị UI\n        setIsLoading(false);\n\n        // Tự động khởi tạo camera đơn giản thay vì đợi người dùng nhấn nút\n        setIsSimpleCameraMode(true);\n\n        // Model sẽ load song song\n        await loadModelsPromise;\n      } catch (error) {\n        console.error(\"Lỗi khi tải dữ liệu:\", error);\n        enqueueSnackbar(\"Lỗi khi tải dữ liệu\", {\n          variant: \"error\"\n        });\n        setIsLoading(false);\n      }\n    };\n    loadInitialData();\n\n    // Clean up\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n\n      // Dừng landmark interval nếu đang chạy\n      if (landmarkIntervalId) {\n        clearInterval(landmarkIntervalId);\n      }\n\n      // Dừng camera stream nếu đang chạy\n      if (webcamRef.current && webcamRef.current.video && webcamRef.current.video.srcObject) {\n        const tracks = webcamRef.current.video.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n      if (videoRef.current && videoRef.current.srcObject) {\n        const tracks = videoRef.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n      dispatch(clearRecognitionState());\n    };\n  }, [classId, sessionId, token, dispatch, enqueueSnackbar, isModelLoaded, intervalId, landmarkIntervalId, isSimpleCameraMode]);\n\n  // Effect riêng để khởi tạo camera khi isSimpleCameraMode thay đổi\n  useEffect(() => {\n    if (isSimpleCameraMode) {\n      console.log(\"useEffect khởi tạo camera đơn giản - render completed\");\n      // Đảm bảo videoRef đã được render trên DOM\n      const timer = setTimeout(() => {\n        if (videoRef !== null && videoRef !== void 0 && videoRef.current) {\n          console.log(\"videoRef đã được tìm thấy trong DOM, bắt đầu khởi tạo camera\");\n          initSimpleCamera();\n        } else {\n          console.error(\"videoRef chưa tồn tại trong DOM sau khi render\");\n          // Nếu videoRef chưa tồn tại, thử lại sau thời gian dài hơn\n          setTimeout(() => {\n            if (videoRef !== null && videoRef !== void 0 && videoRef.current) {\n              initSimpleCamera();\n            } else {\n              enqueueSnackbar(\"Không thể khởi tạo camera sau nhiều lần thử\", {\n                variant: \"error\"\n              });\n            }\n          }, 1000);\n        }\n      }, 300);\n      return () => clearTimeout(timer);\n    }\n  }, [isSimpleCameraMode]);\n\n  // Kiểm tra camera đã sẵn sàng chưa\n  useEffect(() => {\n    const checkCamera = () => {\n      if (webcamRef.current && webcamRef.current.video) {\n        console.log(\"Kiểm tra webcam: readyState =\", webcamRef.current.video.readyState);\n        if (webcamRef.current.video.readyState === 4) {\n          console.log(\"Camera đã sẵn sàng và hoạt động\");\n          dispatch(setCameraReady(true));\n          return true;\n        }\n      }\n      return false;\n    };\n\n    // Kiểm tra ngay lập tức\n    if (!checkCamera()) {\n      // Nếu chưa sẵn sàng, thiết lập interval để kiểm tra định kỳ\n      const intervalId = setInterval(() => {\n        if (checkCamera()) {\n          clearInterval(intervalId);\n        }\n      }, 500);\n\n      // Dọn dẹp interval khi component unmount\n      return () => clearInterval(intervalId);\n    }\n  }, [dispatch]);\n\n  // Xử lý lỗi nếu có\n  useEffect(() => {\n    if (error) {\n      enqueueSnackbar(error, {\n        variant: \"error\"\n      });\n    }\n  }, [error, enqueueSnackbar]);\n\n  // Load các mô hình nhận diện khuôn mặt\n  const loadFaceRecognitionModels = async () => {\n    try {\n      const MODEL_URL = \"/models\";\n      console.log(\"Bắt đầu tải models từ:\", MODEL_URL);\n\n      // Thêm timeout để đảm bảo có đủ thời gian tải models\n      const modelPromises = [faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL), faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL), faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL)];\n\n      // Kiểm tra xem các models đã được tải chưa\n      const modelStatuses = [faceapi.nets.tinyFaceDetector.isLoaded, faceapi.nets.faceLandmark68Net.isLoaded, faceapi.nets.faceRecognitionNet.isLoaded];\n      if (modelStatuses.every(status => status)) {\n        console.log(\"Các models đã được tải từ trước\");\n        dispatch(setModelLoaded(true));\n        return true;\n      }\n      await Promise.all(modelPromises);\n      console.log(\"Đã tải xong models thành công\");\n      dispatch(setModelLoaded(true));\n      enqueueSnackbar(\"Tải mô hình nhận diện thành công\", {\n        variant: \"success\"\n      });\n      return true;\n    } catch (error) {\n      console.error(\"Lỗi khi tải mô hình:\", error);\n      enqueueSnackbar(\"Không thể tải mô hình nhận diện\", {\n        variant: \"error\"\n      });\n      return false;\n    }\n  };\n\n  // Nhận diện khuôn mặt\n  const recognizeFaces = async () => {\n    var _webcamRef$current;\n    // Xác định nguồn video (webcam hoặc video đơn giản)\n    const videoElement = isSimpleCameraMode ? videoRef.current : (_webcamRef$current = webcamRef.current) === null || _webcamRef$current === void 0 ? void 0 : _webcamRef$current.video;\n    if (!videoElement || !canvasRef.current || classStudents.length === 0) {\n      console.error(\"Không có video element hoặc canvas hoặc danh sách sinh viên rỗng\");\n      return;\n    }\n    if (videoElement.readyState !== 4) {\n      console.log(\"Video chưa sẵn sàng, readyState =\", videoElement.readyState);\n      return;\n    }\n    setIsRecognizing(true);\n    try {\n      // Phát hiện khuôn mặt\n      const detections = await faceapi.detectAllFaces(videoElement, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceDescriptors();\n      console.log(\"Đã phát hiện\", detections.length, \"khuôn mặt\");\n      dispatch(setDetectedFaces(detections));\n\n      // Hiển thị phát hiện\n      const displaySize = {\n        width: videoElement.videoWidth || videoElement.width,\n        height: videoElement.videoHeight || videoElement.height\n      };\n      faceapi.matchDimensions(canvasRef.current, displaySize);\n      const resizedDetections = faceapi.resizeResults(detections, displaySize);\n      const ctx = canvasRef.current.getContext(\"2d\");\n      ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n      // Tạo FaceMatcher từ dữ liệu sinh viên\n      const labeledDescriptors = classStudents.map(student => {\n        const descriptors = student.faceDescriptors.map(descriptor => new Float32Array(descriptor));\n        return new faceapi.LabeledFaceDescriptors(student._id, descriptors);\n      });\n      if (labeledDescriptors.length > 0) {\n        const faceMatcher = new faceapi.FaceMatcher(labeledDescriptors, RECOGNITION_THRESHOLD);\n\n        // Nhận diện từng khuôn mặt\n        const recognized = [];\n        resizedDetections.forEach(detection => {\n          var _classStudents$find;\n          const bestMatch = faceMatcher.findBestMatch(detection.descriptor);\n          const {\n            label,\n            distance\n          } = bestMatch;\n          const drawBox = new faceapi.draw.DrawBox(detection.detection.box, {\n            label: label !== \"unknown\" ? `${((_classStudents$find = classStudents.find(s => s._id === label)) === null || _classStudents$find === void 0 ? void 0 : _classStudents$find.full_name) || \"Unknown\"} (${Math.round((1 - distance) * 100)}%)` : \"Unknown\",\n            boxColor: label !== \"unknown\" ? \"green\" : \"red\"\n          });\n          drawBox.draw(canvasRef.current);\n\n          // Vẽ landmarks nếu được yêu cầu\n          if (showLandmark) {\n            faceapi.draw.drawFaceLandmarks(canvasRef.current, [detection]);\n          }\n          if (label !== \"unknown\") {\n            const student = classStudents.find(s => s._id === label);\n            if (student) {\n              recognized.push({\n                studentId: label,\n                confidence: 1 - distance,\n                name: student.full_name,\n                descriptor: Array.from(detection.descriptor)\n              });\n            }\n          }\n        });\n        dispatch(setRecognizedStudents(recognized));\n\n        // Tự động điểm danh nếu đang ở chế độ tự động\n        if (isAutoMode && recognized.length > 0) {\n          for (const recognizedStudent of recognized) {\n            // Chỉ điểm danh nếu độ tin cậy > 0.7 (tương đương với khoảng cách < 0.3)\n            if (recognizedStudent.confidence > 0.7) {\n              const isAlreadyAttended = attendanceLogs.some(log => log.student_id._id === recognizedStudent.studentId && log.status === \"present\");\n              if (!isAlreadyAttended) {\n                let imageBase64 = null;\n                if (!isSimpleCameraMode && webcamRef.current) {\n                  imageBase64 = webcamRef.current.getScreenshot();\n                } else if (isSimpleCameraMode) {\n                  // Tạo ảnh chụp từ video element\n                  const canvas = document.createElement(\"canvas\");\n                  canvas.width = videoElement.videoWidth;\n                  canvas.height = videoElement.videoHeight;\n                  const ctx = canvas.getContext(\"2d\");\n                  ctx.drawImage(videoElement, 0, 0);\n                  imageBase64 = canvas.toDataURL(\"image/jpeg\");\n                }\n                await markAttendance(recognizedStudent.studentId, recognizedStudent.descriptor, recognizedStudent.confidence, imageBase64);\n              }\n            }\n          }\n        }\n      }\n    } catch (error) {\n      console.error(\"Lỗi khi nhận diện khuôn mặt:\", error);\n    } finally {\n      setIsRecognizing(false);\n    }\n  };\n\n  // Bắt đầu chế độ tự động nhận diện\n  const startAutoDetection = () => {\n    if (intervalId) {\n      clearInterval(intervalId);\n    }\n    const id = setInterval(() => {\n      recognizeFaces();\n    }, AUTO_DETECT_INTERVAL);\n    setIntervalId(id);\n    setIsAutoMode(true);\n    enqueueSnackbar(\"Đã bật chế độ tự động điểm danh\", {\n      variant: \"info\"\n    });\n  };\n\n  // Dừng chế độ tự động nhận diện\n  const stopAutoDetection = () => {\n    if (intervalId) {\n      clearInterval(intervalId);\n      setIntervalId(null);\n    }\n    setIsAutoMode(false);\n    enqueueSnackbar(\"Đã tắt chế độ tự động điểm danh\", {\n      variant: \"info\"\n    });\n  };\n\n  // Điểm danh thủ công\n  const openManualAttendanceDialog = student => {\n    setSelectedStudent(student);\n    setManualAttendanceData({\n      status: \"present\",\n      note: \"\"\n    });\n    setManualDialogOpen(true);\n  };\n  const handleManualDialogClose = () => {\n    setManualDialogOpen(false);\n  };\n  const handleManualAttendanceChange = e => {\n    setManualAttendanceData({\n      ...manualAttendanceData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleManualAttendanceSubmit = async () => {\n    if (!selectedStudent) return;\n    try {\n      const result = await dispatch(manualAttendance({\n        sessionId,\n        studentId: selectedStudent._id,\n        status: manualAttendanceData.status,\n        note: manualAttendanceData.note\n      })).unwrap();\n\n      // Cập nhật logs điểm danh\n      if (result && result.data) {\n        const updatedLogs = attendanceLogs.filter(log => log.student_id._id !== selectedStudent._id);\n        updatedLogs.push({\n          ...result.data,\n          student_id: selectedStudent\n        });\n        setAttendanceLogs(updatedLogs);\n      }\n      enqueueSnackbar(\"Điểm danh thủ công thành công\", {\n        variant: \"success\"\n      });\n      handleManualDialogClose();\n\n      // Cập nhật lại thông tin phiên điểm danh\n      const sessionResponse = await axios.get(`${API_URL}/attendance/sessions/${sessionId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSessionInfo(sessionResponse.data.data);\n    } catch (error) {\n      console.error(\"Lỗi khi điểm danh thủ công:\", error);\n      enqueueSnackbar(\"Lỗi khi điểm danh thủ công\", {\n        variant: \"error\"\n      });\n    }\n  };\n\n  // Đánh dấu điểm danh từ nhận diện khuôn mặt\n  const markAttendance = async (studentId, faceDescriptor, confidence, imageBase64) => {\n    try {\n      const result = await dispatch(verifyAttendance({\n        sessionId,\n        studentId,\n        faceDescriptor,\n        confidence,\n        imageBase64\n      })).unwrap();\n\n      // Cập nhật logs điểm danh\n      if (result && result.data) {\n        const student = classStudents.find(s => s._id === studentId);\n        if (student) {\n          const updatedLogs = attendanceLogs.filter(log => log.student_id._id !== studentId);\n          updatedLogs.push({\n            ...result.data,\n            student_id: student\n          });\n          setAttendanceLogs(updatedLogs);\n          enqueueSnackbar(`Đã điểm danh cho ${student.full_name}`, {\n            variant: \"success\"\n          });\n        }\n      }\n\n      // Cập nhật lại thông tin phiên điểm danh\n      const sessionResponse = await axios.get(`${API_URL}/attendance/sessions/${sessionId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSessionInfo(sessionResponse.data.data);\n      return true;\n    } catch (error) {\n      console.error(\"Lỗi khi xác nhận điểm danh:\", error);\n      enqueueSnackbar(\"Lỗi khi xác nhận điểm danh\", {\n        variant: \"error\"\n      });\n      return false;\n    }\n  };\n\n  // Kết thúc phiên điểm danh\n  const completeSession = async () => {\n    try {\n      await axios.put(`${API_URL}/attendance/sessions/${sessionId}`, {\n        status: \"completed\"\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      enqueueSnackbar(\"Phiên điểm danh đã kết thúc\", {\n        variant: \"success\"\n      });\n      navigate(`/teacher/classes/${classId}`);\n    } catch (error) {\n      console.error(\"Lỗi khi kết thúc phiên điểm danh:\", error);\n      enqueueSnackbar(\"Lỗi khi kết thúc phiên điểm danh\", {\n        variant: \"error\"\n      });\n    }\n  };\n\n  // Làm mới danh sách điểm danh\n  const refreshAttendanceLogs = async () => {\n    try {\n      const logsResponse = await axios.get(`${API_URL}/attendance/logs/${sessionId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setAttendanceLogs(logsResponse.data.data);\n      const sessionResponse = await axios.get(`${API_URL}/attendance/sessions/${sessionId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSessionInfo(sessionResponse.data.data);\n      enqueueSnackbar(\"Đã làm mới dữ liệu điểm danh\", {\n        variant: \"success\"\n      });\n    } catch (error) {\n      console.error(\"Lỗi khi làm mới dữ liệu:\", error);\n      enqueueSnackbar(\"Lỗi khi làm mới dữ liệu\", {\n        variant: \"error\"\n      });\n    }\n  };\n\n  // Chụp ảnh và nhận diện thủ công\n  const captureAndRecognize = async () => {\n    await recognizeFaces();\n  };\n\n  // Chế độ camera đơn giản\n  const toggleSimpleCameraMode = () => {\n    setIsSimpleCameraMode(!isSimpleCameraMode);\n\n    // Nếu đang bật chế độ đơn giản\n    if (!isSimpleCameraMode) {\n      // Bỏ qua việc tải model và nhận diện\n      dispatch(setModelLoaded(true));\n\n      // Dừng chế độ tự động nếu đang bật\n      if (isAutoMode && intervalId) {\n        clearInterval(intervalId);\n        setIntervalId(null);\n        setIsAutoMode(false);\n      }\n\n      // Kiểm tra videoRef trước khi khởi tạo\n      console.log(\"Trạng thái videoRef trước khi khởi tạo:\", videoRef !== null && videoRef !== void 0 && videoRef.current ? \"tồn tại\" : \"không tồn tại\");\n\n      // Khởi tạo camera trong chế độ đơn giản sau khi component đã render\n      setTimeout(() => {\n        if (videoRef !== null && videoRef !== void 0 && videoRef.current) {\n          console.log(\"videoRef đã sẵn sàng, khởi tạo camera đơn giản\");\n          initSimpleCamera();\n        } else {\n          console.error(\"videoRef vẫn chưa sẵn sàng sau 500ms\");\n          enqueueSnackbar(\"Lỗi: Không thể khởi tạo camera, thử làm mới trang\", {\n            variant: \"error\"\n          });\n        }\n      }, 500);\n      enqueueSnackbar(\"Đã chuyển sang chế độ camera đơn giản (không nhận diện khuôn mặt)\", {\n        variant: \"info\"\n      });\n    } else {\n      // Nếu tắt chế độ đơn giản, tải lại mô hình\n      loadFaceRecognitionModels();\n      enqueueSnackbar(\"Đã chuyển về chế độ nhận diện khuôn mặt\", {\n        variant: \"info\"\n      });\n    }\n  };\n\n  // Khởi tạo camera cho chế độ đơn giản\n  const initSimpleCamera = () => {\n    console.log(\"Bắt đầu initSimpleCamera, videoRef:\", videoRef !== null && videoRef !== void 0 && videoRef.current ? \"tồn tại\" : \"không tồn tại\");\n    if (!(videoRef !== null && videoRef !== void 0 && videoRef.current)) {\n      console.error(\"videoRef.current không tồn tại\");\n      enqueueSnackbar(\"Lỗi: Không thể khởi tạo camera (videoRef không tồn tại)\", {\n        variant: \"error\"\n      });\n      return;\n    }\n\n    // Yêu cầu stream camera\n    navigator.mediaDevices.getUserMedia({\n      video: {\n        width: {\n          ideal: 1280\n        },\n        height: {\n          ideal: 720\n        },\n        facingMode: \"user\"\n      },\n      audio: false\n    }).then(stream => {\n      console.log(\"Đã nhận được stream camera cho chế độ đơn giản\", stream === null || stream === void 0 ? void 0 : stream.id);\n\n      // Kiểm tra lại videoRef trước khi gán\n      if (!(videoRef !== null && videoRef !== void 0 && videoRef.current)) {\n        console.error(\"videoRef.current không tồn tại khi nhận stream\");\n        stream.getTracks().forEach(track => track.stop()); // Đóng stream để tránh rò rỉ\n        return;\n      }\n      videoRef.current.srcObject = stream;\n      videoRef.current.onloadedmetadata = () => {\n        console.log(\"Video đã load metadata\");\n        videoRef.current.play().then(() => {\n          // Cập nhật kích thước canvas để khớp với video\n          if (canvasRef.current) {\n            canvasRef.current.width = videoRef.current.clientWidth;\n            canvasRef.current.height = videoRef.current.clientHeight;\n          }\n          dispatch(setCameraReady(true));\n          // Tự động bật landmark sau khi camera đã sẵn sàng\n          if (!landmarkIntervalId) {\n            setTimeout(() => toggleLandmarkDetection(), 1000);\n          }\n        }).catch(err => console.error(\"Lỗi khi play video:\", err));\n      };\n    }).catch(err => {\n      console.error(\"Lỗi truy cập camera trong chế độ đơn giản:\", err);\n      enqueueSnackbar(`Không thể truy cập camera: ${err.message}`, {\n        variant: \"error\"\n      });\n    });\n  };\n\n  // Điểm danh thủ công trong chế độ đơn giản\n  const showStudentList = () => {\n    if (!classInfo) return;\n\n    // Hiển thị danh sách sinh viên để điểm danh thủ công\n    const absentStudents = getAbsentStudents();\n    if (absentStudents.length === 0) {\n      enqueueSnackbar(\"Tất cả sinh viên đã được điểm danh\", {\n        variant: \"success\"\n      });\n      return;\n    }\n\n    // Hiển thị dialog chọn sinh viên để điểm danh\n    if (absentStudents.length > 0 && absentStudents[0]) {\n      openManualAttendanceDialog(absentStudents[0]);\n    }\n  };\n\n  // Bắt đầu phát hiện landmark realtime\n  const toggleLandmarkDetection = () => {\n    if (landmarkIntervalId) {\n      clearInterval(landmarkIntervalId);\n      setLandmarkIntervalId(null);\n      setShowLandmark(false);\n\n      // Xóa landmarks hiện tại\n      if (canvasRef.current) {\n        const ctx = canvasRef.current.getContext(\"2d\");\n        ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      }\n      enqueueSnackbar(\"Đã tắt hiển thị landmarks\", {\n        variant: \"info\"\n      });\n    } else {\n      setShowLandmark(true);\n      const id = setInterval(async () => {\n        var _webcamRef$current2;\n        const videoElement = isSimpleCameraMode ? videoRef.current : (_webcamRef$current2 = webcamRef.current) === null || _webcamRef$current2 === void 0 ? void 0 : _webcamRef$current2.video;\n        if (!videoElement || videoElement.readyState !== 4 || !canvasRef.current) return;\n        try {\n          // Chỉ phát hiện khuôn mặt và landmark, không cần descriptor (nhanh hơn)\n          const detections = await faceapi.detectAllFaces(videoElement, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks();\n          if (detections.length === 0) return;\n\n          // Lấy kích thước thực của video và canvas\n          const videoWidth = videoElement.videoWidth || videoElement.width;\n          const videoHeight = videoElement.videoHeight || videoElement.height;\n\n          // Lấy kích thước hiển thị của video và canvas\n          const displaySize = {\n            width: videoElement.clientWidth || canvasRef.current.clientWidth,\n            height: videoElement.clientHeight || canvasRef.current.clientHeight\n          };\n\n          // Đặt kích thước canvas bằng với kích thước hiển thị\n          canvasRef.current.width = displaySize.width;\n          canvasRef.current.height = displaySize.height;\n\n          // Tính toán tỷ lệ giữa kích thước thực và kích thước hiển thị\n          const scaleX = displaySize.width / videoWidth;\n          const scaleY = displaySize.height / videoHeight;\n\n          // Điều chỉnh tọa độ phát hiện theo tỷ lệ hiển thị\n          const adjustedDetections = detections.map(detection => {\n            // Điều chỉnh box\n            const box = detection.detection.box;\n            const scaledBox = {\n              x: box.x * scaleX,\n              y: box.y * scaleY,\n              width: box.width * scaleX,\n              height: box.height * scaleY\n            };\n            detection.detection.box = new faceapi.Box(scaledBox);\n\n            // Điều chỉnh landmarks\n            if (detection.landmarks) {\n              const points = detection.landmarks.positions.map(pt => {\n                return new faceapi.Point(pt.x * scaleX, pt.y * scaleY);\n              });\n              detection.landmarks.positions = points;\n            }\n            return detection;\n          });\n\n          // Xóa canvas\n          const ctx = canvasRef.current.getContext(\"2d\");\n          ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n          // Vẽ boxes và landmarks đã điều chỉnh tỷ lệ\n          faceapi.draw.drawDetections(canvasRef.current, adjustedDetections);\n          faceapi.draw.drawFaceLandmarks(canvasRef.current, adjustedDetections, {\n            drawLines: true,\n            color: \"red\"\n          });\n        } catch (err) {\n          console.error(\"Lỗi khi phát hiện landmarks:\", err);\n        }\n      }, 80); // 12 FPS\n\n      setLandmarkIntervalId(id);\n      enqueueSnackbar(\"Đã bật hiển thị landmarks realtime\", {\n        variant: \"success\"\n      });\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"60vh\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 903,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 897,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Lấy danh sách sinh viên vắng mặt\n  const getAbsentStudents = () => {\n    if (!classInfo || !sessionInfo) return [];\n    const presentStudentIds = attendanceLogs.filter(log => log.status === \"present\").map(log => log.student_id._id);\n    return classInfo.students.filter(student => !presentStudentIds.includes(student._id));\n  };\n  const absentStudents = getAbsentStudents();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: [\"\\u0110i\\u1EC3m Danh - \", classInfo === null || classInfo === void 0 ? void 0 : classInfo.class_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 925,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      color: \"textSecondary\",\n      gutterBottom: true,\n      children: [\"Bu\\u1ED5i \", sessionInfo === null || sessionInfo === void 0 ? void 0 : sessionInfo.session_number, \" -\", \" \", new Date(sessionInfo === null || sessionInfo === void 0 ? void 0 : sessionInfo.date).toLocaleDateString(\"vi-VN\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 928,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      mt: 1,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              mb: 2,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Camera nh\\u1EADn di\\u1EC7n\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 943,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Chip, {\n                  label: isAutoMode ? \"Tự động đang bật\" : \"Tự động đang tắt\",\n                  color: isAutoMode ? \"success\" : \"default\",\n                  sx: {\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 945,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: isAutoMode ? \"error\" : \"primary\",\n                  onClick: isAutoMode ? stopAutoDetection : startAutoDetection,\n                  startIcon: isAutoMode ? /*#__PURE__*/_jsxDEV(Close, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 956,\n                    columnNumber: 45\n                  }, this) : /*#__PURE__*/_jsxDEV(HourglassEmpty, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 956,\n                    columnNumber: 57\n                  }, this),\n                  disabled: !isCameraReady || !isModelLoaded,\n                  size: \"small\",\n                  children: isAutoMode ? \"Tắt tự động\" : \"Bật tự động\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 950,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 944,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 937,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 3,\n              sx: {\n                position: \"relative\",\n                width: \"100%\",\n                height: \"400px\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                overflow: \"hidden\",\n                mb: 2\n              },\n              children: isCameraReady ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [isSimpleCameraMode ?\n                /*#__PURE__*/\n                // Sử dụng video element trực tiếp thay vì Webcam component\n                _jsxDEV(\"video\", {\n                  ref: videoRef,\n                  style: {\n                    position: \"absolute\",\n                    width: \"100%\",\n                    height: \"100%\",\n                    objectFit: \"cover\"\n                  },\n                  autoPlay: true,\n                  playsInline: true,\n                  muted: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 982,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(Webcam, {\n                  audio: false,\n                  ref: webcamRef,\n                  screenshotFormat: \"image/jpeg\",\n                  width: 640,\n                  height: 480,\n                  videoConstraints: {\n                    width: 640,\n                    height: 480,\n                    facingMode: \"user\"\n                  },\n                  style: {\n                    position: \"absolute\",\n                    width: \"100%\",\n                    height: \"100%\",\n                    objectFit: \"cover\"\n                  },\n                  onUserMedia: stream => {\n                    console.log(\"Camera đã được cấp quyền và khởi tạo\", stream.id);\n                    // Đảm bảo readyState được kiểm tra khi stream đã sẵn sàng\n                    setTimeout(() => {\n                      if (webcamRef.current && webcamRef.current.video) {\n                        console.log(\"Stream ready, readyState=\", webcamRef.current.video.readyState);\n                        dispatch(setCameraReady(true));\n                      }\n                    }, 500);\n                  },\n                  onUserMediaError: err => {\n                    console.error(\"Lỗi khi truy cập camera:\", err);\n                    enqueueSnackbar(`Không thể truy cập camera: ${err.name === \"NotAllowedError\" ? \"Bạn chưa cấp quyền truy cập camera\" : err.name === \"NotFoundError\" ? \"Không tìm thấy thiết bị camera\" : err.message || \"Lỗi không xác định\"}`, {\n                      variant: \"error\"\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 995,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n                  ref: canvasRef,\n                  style: {\n                    position: \"absolute\",\n                    top: 0,\n                    left: 0,\n                    width: \"100%\",\n                    height: \"100%\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1046,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n                  size: 50\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1063,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  mt: 2,\n                  children: \"\\u0110ang kh\\u1EDFi t\\u1EA1o camera...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1064,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  color: \"text.secondary\",\n                  sx: {\n                    mt: 1\n                  },\n                  children: isModelLoaded ? \"Chờ kết nối camera - Hãy đảm bảo bạn đã cấp quyền camera\" : \"Đang tải mô hình nhận diện khuôn mặt\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1065,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    mt: 2,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\"\n                  },\n                  children: [!isModelLoaded && /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    size: \"small\",\n                    sx: {\n                      mb: 1\n                    },\n                    onClick: loadFaceRecognitionModels,\n                    children: \"T\\u1EA3i l\\u1EA1i m\\xF4 h\\xECnh\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1084,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"warning\",\n                    size: \"small\",\n                    sx: {\n                      mb: 1\n                    },\n                    onClick: toggleSimpleCameraMode,\n                    children: isSimpleCameraMode ? \"Chế độ nhận diện khuôn mặt\" : \"Chế độ camera đơn giản (Không nhận diện khuôn mặt)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1094,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    size: \"small\",\n                    sx: {\n                      mb: 1\n                    },\n                    onClick: () => {\n                      // Truy cập camera trực tiếp không qua component\n                      navigator.mediaDevices.getUserMedia({\n                        video: {\n                          facingMode: \"user\"\n                        },\n                        audio: false\n                      }).then(stream => {\n                        console.log(\"Đã nhận được stream camera trực tiếp\");\n                        // Kích hoạt chế độ camera đơn giản\n                        setIsSimpleCameraMode(true);\n                        dispatch(setModelLoaded(true));\n                        dispatch(setCameraReady(true));\n                        enqueueSnackbar(\"Đã kết nối camera thành công\", {\n                          variant: \"success\"\n                        });\n\n                        // Tránh memory leak bằng cách dừng stream\n                        setTimeout(() => {\n                          stream.getTracks().forEach(track => track.stop());\n                        }, 1000);\n                      }).catch(err => {\n                        console.error(\"Lỗi truy cập camera:\", err);\n                        enqueueSnackbar(`Không thể truy cập camera: ${err.message}`, {\n                          variant: \"error\"\n                        });\n                      });\n                    },\n                    children: \"Kh\\u1EDFi \\u0111\\u1ED9ng camera tr\\u1EF1c ti\\u1EBFp\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1106,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"success\",\n                    size: \"small\",\n                    sx: {\n                      mb: 1\n                    },\n                    onClick: () => {\n                      try {\n                        console.log(\"Cố gắng tạo mới video element và gán stream\");\n\n                        // Tạo phần tử video mới\n                        const tempVideo = document.createElement(\"video\");\n                        tempVideo.autoplay = true;\n                        tempVideo.playsInline = true;\n                        tempVideo.muted = true;\n                        tempVideo.style.display = \"none\";\n                        document.body.appendChild(tempVideo);\n\n                        // Yêu cầu stream với cài đặt đơn giản nhất\n                        navigator.mediaDevices.getUserMedia({\n                          video: true,\n                          audio: false\n                        }).then(stream => {\n                          console.log(\"Đã nhận stream camera đơn giản nhất\");\n                          tempVideo.srcObject = stream;\n\n                          // Đảm bảo video đã chạy\n                          tempVideo.onloadedmetadata = () => {\n                            tempVideo.play().then(() => {\n                              console.log(\"Video tạm đã chạy, gán stream cho video chính\");\n\n                              // Chuyển sang chế độ đơn giản\n                              setIsSimpleCameraMode(true);\n\n                              // Dùng setTimeout để đảm bảo DOM đã cập nhật\n                              setTimeout(() => {\n                                if (videoRef !== null && videoRef !== void 0 && videoRef.current) {\n                                  videoRef.current.srcObject = stream;\n                                  dispatch(setCameraReady(true));\n                                  console.log(\"Đã gán stream thành công cho video chính\");\n\n                                  // Xóa video tạm\n                                  document.body.removeChild(tempVideo);\n                                } else {\n                                  console.error(\"videoRef vẫn không tồn tại sau khi render\");\n                                  stream.getTracks().forEach(track => track.stop());\n                                  document.body.removeChild(tempVideo);\n                                  enqueueSnackbar(\"Không thể khởi tạo camera, hãy làm mới trang\", {\n                                    variant: \"error\"\n                                  });\n                                }\n                              }, 500);\n                            }).catch(err => {\n                              console.error(\"Lỗi khi play video tạm:\", err);\n                              stream.getTracks().forEach(track => track.stop());\n                              document.body.removeChild(tempVideo);\n                            });\n                          };\n                        }).catch(err => {\n                          console.error(\"Lỗi yêu cầu camera phương pháp 3:\", err);\n                          if (document.body.contains(tempVideo)) {\n                            document.body.removeChild(tempVideo);\n                          }\n                          enqueueSnackbar(`Không thể truy cập camera: ${err.message}`, {\n                            variant: \"error\"\n                          });\n                        });\n                      } catch (err) {\n                        console.error(\"Lỗi tổng thể khi khởi tạo camera:\", err);\n                        enqueueSnackbar(`Lỗi: ${err.message}`, {\n                          variant: \"error\"\n                        });\n                      }\n                    },\n                    children: \"Kh\\u1EDFi t\\u1EA1o camera (Ph\\u01B0\\u01A1ng ph\\xE1p 3)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1149,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1075,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1058,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 965,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                onClick: isSimpleCameraMode ? showStudentList : captureAndRecognize,\n                startIcon: isSimpleCameraMode ? /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1267,\n                  columnNumber: 51\n                }, this) : /*#__PURE__*/_jsxDEV(CameraAlt, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1267,\n                  columnNumber: 62\n                }, this),\n                disabled: !isCameraReady || !isSimpleCameraMode && (isRecognizing || isAutoMode),\n                children: isRecognizing ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  size: 24,\n                  color: \"inherit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1274,\n                  columnNumber: 21\n                }, this) : isSimpleCameraMode ? \"Điểm danh thủ công\" : \"Chụp & Nhận diện\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1262,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: [isCameraReady && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    color: showLandmark ? \"success\" : \"info\",\n                    onClick: toggleLandmarkDetection,\n                    sx: {\n                      mr: 1\n                    },\n                    children: showLandmark ? \"Tắt Landmark\" : \"Hiện Landmark\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1285,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    color: \"warning\",\n                    onClick: toggleSimpleCameraMode,\n                    sx: {\n                      mr: 1\n                    },\n                    children: isSimpleCameraMode ? \"Bật nhận diện\" : \"Chế độ đơn giản\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1293,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  onClick: completeSession,\n                  startIcon: /*#__PURE__*/_jsxDEV(Save, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1310,\n                    columnNumber: 32\n                  }, this),\n                  disabled: (sessionInfo === null || sessionInfo === void 0 ? void 0 : sessionInfo.status) === \"completed\",\n                  children: \"K\\u1EBFt th\\xFAc phi\\xEAn\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1306,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1282,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1261,\n              columnNumber: 15\n            }, this), recognizedStudents.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n              mt: 2,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                gutterBottom: true,\n                children: [\"\\u0110\\xE3 nh\\u1EADn di\\u1EC7n (\", recognizedStudents.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1320,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 1,\n                children: recognizedStudents.map((student, index) => /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  sm: 4,\n                  children: /*#__PURE__*/_jsxDEV(Paper, {\n                    elevation: 2,\n                    sx: {\n                      p: 1,\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      alignItems: \"center\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      noWrap: true,\n                      children: student.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1335,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"caption\",\n                      color: \"textSecondary\",\n                      children: [Math.round(student.confidence * 100), \"% match\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1338,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      size: \"small\",\n                      variant: \"outlined\",\n                      color: \"primary\",\n                      sx: {\n                        mt: 1\n                      },\n                      onClick: () => {\n                        var _webcamRef$current3;\n                        return markAttendance(student.studentId, student.descriptor, student.confidence, (_webcamRef$current3 = webcamRef.current) === null || _webcamRef$current3 === void 0 ? void 0 : _webcamRef$current3.getScreenshot());\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Check, {\n                        fontSize: \"small\",\n                        sx: {\n                          mr: 0.5\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1355,\n                        columnNumber: 29\n                      }, this), \"\\u0110i\\u1EC3m danh\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1341,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1326,\n                    columnNumber: 25\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1325,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1323,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1319,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 936,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 935,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 934,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            mb: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              mb: 2,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: [\"C\\xF3 m\\u1EB7t (\", attendanceLogs.filter(log => log.status === \"present\").length, \"/\", classInfo === null || classInfo === void 0 ? void 0 : classInfo.students.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1377,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"small\",\n                onClick: refreshAttendanceLogs,\n                children: /*#__PURE__*/_jsxDEV(Refresh, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1386,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1385,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1371,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              dense: true,\n              children: [attendanceLogs.filter(log => log.status === \"present\").sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp)).map(log => /*#__PURE__*/_jsxDEV(ListItem, {\n                secondaryAction: /*#__PURE__*/_jsxDEV(Chip, {\n                  size: \"small\",\n                  icon: log.recognized ? /*#__PURE__*/_jsxDEV(VerifiedUser, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1402,\n                    columnNumber: 31\n                  }, this) : null,\n                  label: log.recognized ? \"Tự động\" : \"Thủ công\",\n                  color: log.recognized ? \"success\" : \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1398,\n                  columnNumber: 25\n                }, this),\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    alt: log.student_id.full_name,\n                    src: log.student_id.avatar_url\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1411,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1410,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: log.student_id.full_name,\n                  secondary: `${new Date(log.timestamp).toLocaleTimeString(\"vi-VN\")}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1416,\n                  columnNumber: 23\n                }, this)]\n              }, log._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1395,\n                columnNumber: 21\n              }, this)), attendanceLogs.filter(log => log.status === \"present\").length === 0 && /*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: \"Ch\\u01B0a c\\xF3 sinh vi\\xEAn n\\xE0o \\u0111i\\u1EC3m danh\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1428,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1427,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1390,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1370,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1369,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: [\"V\\u1EAFng m\\u1EB7t (\", absentStudents.length, \"/\", classInfo === null || classInfo === void 0 ? void 0 : classInfo.students.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1437,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              dense: true,\n              children: [absentStudents.map(student => /*#__PURE__*/_jsxDEV(ListItem, {\n                secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n                  edge: \"end\",\n                  onClick: () => openManualAttendanceDialog(student),\n                  children: /*#__PURE__*/_jsxDEV(Edit, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1450,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1446,\n                  columnNumber: 23\n                }, this),\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    alt: student.full_name,\n                    src: student.avatar_url\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1455,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1454,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: student.full_name,\n                  secondary: student.student_code\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1460,\n                  columnNumber: 21\n                }, this)]\n              }, student._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1443,\n                columnNumber: 19\n              }, this)), absentStudents.length === 0 && /*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: \"Kh\\xF4ng c\\xF3 sinh vi\\xEAn n\\xE0o v\\u1EAFng m\\u1EB7t\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1469,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1468,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1441,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1436,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1435,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1368,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 933,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: manualDialogOpen,\n      onClose: handleManualDialogClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"\\u0110i\\u1EC3m danh th\\u1EE7 c\\xF4ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1480,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: [selectedStudent === null || selectedStudent === void 0 ? void 0 : selectedStudent.full_name, \" (\", selectedStudent === null || selectedStudent === void 0 ? void 0 : selectedStudent.student_code, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1483,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            margin: \"normal\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Tr\\u1EA1ng th\\xE1i\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1488,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              name: \"status\",\n              value: manualAttendanceData.status,\n              onChange: handleManualAttendanceChange,\n              label: \"Tr\\u1EA1ng th\\xE1i\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"present\",\n                children: \"C\\xF3 m\\u1EB7t\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1495,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"absent\",\n                children: \"V\\u1EAFng m\\u1EB7t\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1496,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"late\",\n                children: \"\\u0110i tr\\u1EC5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1497,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"early_leave\",\n                children: \"V\\u1EC1 s\\u1EDBm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1498,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1489,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1487,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            margin: \"normal\",\n            name: \"note\",\n            label: \"Ghi ch\\xFA\",\n            value: manualAttendanceData.note,\n            onChange: handleManualAttendanceChange,\n            multiline: true,\n            rows: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1502,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1482,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1481,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleManualDialogClose,\n          children: \"H\\u1EE7y\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1515,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleManualAttendanceSubmit,\n          variant: \"contained\",\n          children: \"X\\xE1c nh\\u1EADn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1516,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1514,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1479,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 924,\n    columnNumber: 5\n  }, this);\n};\n_s(AttendancePage, \"vKOMldz2ULrSQ1+afQABTobAKJs=\", false, function () {\n  return [useParams, useNavigate, useDispatch, useSnackbar, useSelector, useSelector];\n});\n_c = AttendancePage;\nexport default AttendancePage;\nvar _c;\n$RefreshReg$(_c, \"AttendancePage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","useDispatch","useSelector","useSnackbar","Box","Typography","Card","CardContent","Grid","Paper","Button","Divider","CircularProgress","List","ListItem","ListItemAvatar","ListItemText","Avatar","Chip","Dialog","DialogTitle","DialogContent","DialogActions","TextField","FormControl","InputLabel","Select","MenuItem","IconButton","Alert","CameraAlt","Check","Close","Edit","Refresh","Save","VerifiedUser","HourglassEmpty","Webcam","faceapi","getClassFaceFeatures","verifyAttendance","manualAttendance","setModelLoaded","setCameraReady","setDetectedFaces","setRecognizedStudents","clearRecognitionState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","process","env","REACT_APP_API_URL","AttendancePage","_s","classId","sessionId","navigate","dispatch","enqueueSnackbar","webcamRef","canvasRef","videoRef","intervalId","setIntervalId","showLandmark","setShowLandmark","landmarkIntervalId","setLandmarkIntervalId","token","state","auth","isModelLoaded","isCameraReady","detectedFaces","recognizedStudents","classStudents","isProcessing","error","faceRecognition","classInfo","setClassInfo","sessionInfo","setSessionInfo","attendanceLogs","setAttendanceLogs","isLoading","setIsLoading","isRecognizing","setIsRecognizing","isAutoMode","setIsAutoMode","selectedStudent","setSelectedStudent","manualDialogOpen","setManualDialogOpen","manualAttendanceData","setManualAttendanceData","status","note","isSimpleCameraMode","setIsSimpleCameraMode","RECOGNITION_THRESHOLD","AUTO_DETECT_INTERVAL","loadInitialData","loadModelsPromise","loadFaceRecognitionModels","Promise","resolve","classPromise","get","headers","Authorization","sessionPromise","logsPromise","classResponse","sessionResponse","logsResponse","all","data","console","variant","clearInterval","current","video","srcObject","tracks","getTracks","forEach","track","stop","log","timer","setTimeout","initSimpleCamera","clearTimeout","checkCamera","readyState","setInterval","MODEL_URL","modelPromises","nets","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","modelStatuses","isLoaded","every","recognizeFaces","_webcamRef$current","videoElement","length","detections","detectAllFaces","TinyFaceDetectorOptions","withFaceLandmarks","withFaceDescriptors","displaySize","width","videoWidth","height","videoHeight","matchDimensions","resizedDetections","resizeResults","ctx","getContext","clearRect","labeledDescriptors","map","student","descriptors","faceDescriptors","descriptor","Float32Array","LabeledFaceDescriptors","_id","faceMatcher","FaceMatcher","recognized","detection","_classStudents$find","bestMatch","findBestMatch","label","distance","drawBox","draw","DrawBox","box","find","s","full_name","Math","round","boxColor","drawFaceLandmarks","push","studentId","confidence","name","Array","from","recognizedStudent","isAlreadyAttended","some","student_id","imageBase64","getScreenshot","canvas","document","createElement","drawImage","toDataURL","markAttendance","startAutoDetection","id","stopAutoDetection","openManualAttendanceDialog","handleManualDialogClose","handleManualAttendanceChange","e","target","value","handleManualAttendanceSubmit","result","unwrap","updatedLogs","filter","faceDescriptor","completeSession","put","refreshAttendanceLogs","captureAndRecognize","toggleSimpleCameraMode","navigator","mediaDevices","getUserMedia","ideal","facingMode","audio","then","stream","onloadedmetadata","play","clientWidth","clientHeight","toggleLandmarkDetection","catch","err","message","showStudentList","absentStudents","getAbsentStudents","_webcamRef$current2","scaleX","scaleY","adjustedDetections","scaledBox","x","y","landmarks","points","positions","pt","Point","drawDetections","drawLines","color","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","presentStudentIds","students","includes","gutterBottom","class_name","session_number","Date","date","toLocaleDateString","container","spacing","mt","item","xs","md","mb","sx","mr","onClick","startIcon","disabled","size","elevation","position","overflow","ref","style","objectFit","autoPlay","playsInline","muted","screenshotFormat","videoConstraints","onUserMedia","onUserMediaError","top","left","flexDirection","tempVideo","autoplay","body","appendChild","removeChild","contains","index","sm","p","noWrap","_webcamRef$current3","fontSize","dense","sort","a","b","timestamp","secondaryAction","icon","alt","src","avatar_url","primary","secondary","toLocaleTimeString","edge","student_code","open","onClose","fullWidth","margin","onChange","multiline","rows","_c","$RefreshReg$"],"sources":["C:/Users/kasiz/Documents/Studying/FaceReg/frontend/src/pages/teacher/AttendancePage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Paper,\r\n  Button,\r\n  Divider,\r\n  CircularProgress,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Avatar,\r\n  Chip,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  IconButton,\r\n  Alert,\r\n} from \"@mui/material\";\r\nimport {\r\n  CameraAlt,\r\n  Check,\r\n  Close,\r\n  Edit,\r\n  Refresh,\r\n  Save,\r\n  VerifiedUser,\r\n  HourglassEmpty,\r\n} from \"@mui/icons-material\";\r\nimport Webcam from \"react-webcam\";\r\nimport * as faceapi from \"face-api.js\";\r\nimport {\r\n  getClassFaceFeatures,\r\n  verifyAttendance,\r\n  manualAttendance,\r\n  setModelLoaded,\r\n  setCameraReady,\r\n  setDetectedFaces,\r\n  setRecognizedStudents,\r\n  clearRecognitionState,\r\n} from \"../../redux/slices/faceRecognitionSlice\";\r\nimport axios from \"axios\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\r\n\r\nconst AttendancePage = () => {\r\n  const { classId, sessionId } = useParams();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const videoRef = useRef(null);\r\n  const [intervalId, setIntervalId] = useState(null);\r\n  const [showLandmark, setShowLandmark] = useState(false);\r\n  const [landmarkIntervalId, setLandmarkIntervalId] = useState(null);\r\n\r\n  const { token } = useSelector((state) => state.auth);\r\n  const {\r\n    isModelLoaded,\r\n    isCameraReady,\r\n    detectedFaces,\r\n    recognizedStudents,\r\n    classStudents,\r\n    isProcessing,\r\n    error,\r\n  } = useSelector((state) => state.faceRecognition);\r\n\r\n  const [classInfo, setClassInfo] = useState(null);\r\n  const [sessionInfo, setSessionInfo] = useState(null);\r\n  const [attendanceLogs, setAttendanceLogs] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isRecognizing, setIsRecognizing] = useState(false);\r\n  const [isAutoMode, setIsAutoMode] = useState(false);\r\n  const [selectedStudent, setSelectedStudent] = useState(null);\r\n  const [manualDialogOpen, setManualDialogOpen] = useState(false);\r\n  const [manualAttendanceData, setManualAttendanceData] = useState({\r\n    status: \"present\",\r\n    note: \"\",\r\n  });\r\n  const [isSimpleCameraMode, setIsSimpleCameraMode] = useState(false);\r\n\r\n  // Các hằng số cho nhận diện khuôn mặt\r\n  const RECOGNITION_THRESHOLD = 0.6; // Ngưỡng nhận diện (càng thấp càng nghiêm ngặt)\r\n  const AUTO_DETECT_INTERVAL = 1000; // 1 giây\r\n\r\n  // Load class info, session info và models\r\n  useEffect(() => {\r\n    const loadInitialData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n\r\n        // Bắt đầu tải dữ liệu và models song song\r\n        const loadModelsPromise = !isModelLoaded\r\n          ? loadFaceRecognitionModels()\r\n          : Promise.resolve(true);\r\n\r\n        // Lấy thông tin lớp học\r\n        const classPromise = axios.get(\r\n          `${API_URL}/classes/teaching/${classId}`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        );\r\n\r\n        // Lấy thông tin phiên điểm danh\r\n        const sessionPromise = axios.get(\r\n          `${API_URL}/attendance/sessions/${sessionId}`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        );\r\n\r\n        // Lấy danh sách điểm danh\r\n        const logsPromise = axios.get(\r\n          `${API_URL}/attendance/logs/${sessionId}`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        );\r\n\r\n        // Chờ tất cả API calls hoàn thành\r\n        const [classResponse, sessionResponse, logsResponse] =\r\n          await Promise.all([classPromise, sessionPromise, logsPromise]);\r\n\r\n        setClassInfo(classResponse.data.data);\r\n        setSessionInfo(sessionResponse.data.data);\r\n        setAttendanceLogs(logsResponse.data.data);\r\n\r\n        // Lấy đặc trưng khuôn mặt của sinh viên trong lớp\r\n        dispatch(getClassFaceFeatures(classId));\r\n\r\n        // Không chờ đợi model load xong mới hiển thị UI\r\n        setIsLoading(false);\r\n\r\n        // Tự động khởi tạo camera đơn giản thay vì đợi người dùng nhấn nút\r\n        setIsSimpleCameraMode(true);\r\n\r\n        // Model sẽ load song song\r\n        await loadModelsPromise;\r\n      } catch (error) {\r\n        console.error(\"Lỗi khi tải dữ liệu:\", error);\r\n        enqueueSnackbar(\"Lỗi khi tải dữ liệu\", { variant: \"error\" });\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    loadInitialData();\r\n\r\n    // Clean up\r\n    return () => {\r\n      if (intervalId) {\r\n        clearInterval(intervalId);\r\n      }\r\n\r\n      // Dừng landmark interval nếu đang chạy\r\n      if (landmarkIntervalId) {\r\n        clearInterval(landmarkIntervalId);\r\n      }\r\n\r\n      // Dừng camera stream nếu đang chạy\r\n      if (\r\n        webcamRef.current &&\r\n        webcamRef.current.video &&\r\n        webcamRef.current.video.srcObject\r\n      ) {\r\n        const tracks = webcamRef.current.video.srcObject.getTracks();\r\n        tracks.forEach((track) => track.stop());\r\n      }\r\n\r\n      if (videoRef.current && videoRef.current.srcObject) {\r\n        const tracks = videoRef.current.srcObject.getTracks();\r\n        tracks.forEach((track) => track.stop());\r\n      }\r\n\r\n      dispatch(clearRecognitionState());\r\n    };\r\n  }, [\r\n    classId,\r\n    sessionId,\r\n    token,\r\n    dispatch,\r\n    enqueueSnackbar,\r\n    isModelLoaded,\r\n    intervalId,\r\n    landmarkIntervalId,\r\n    isSimpleCameraMode,\r\n  ]);\r\n\r\n  // Effect riêng để khởi tạo camera khi isSimpleCameraMode thay đổi\r\n  useEffect(() => {\r\n    if (isSimpleCameraMode) {\r\n      console.log(\"useEffect khởi tạo camera đơn giản - render completed\");\r\n      // Đảm bảo videoRef đã được render trên DOM\r\n      const timer = setTimeout(() => {\r\n        if (videoRef?.current) {\r\n          console.log(\r\n            \"videoRef đã được tìm thấy trong DOM, bắt đầu khởi tạo camera\"\r\n          );\r\n          initSimpleCamera();\r\n        } else {\r\n          console.error(\"videoRef chưa tồn tại trong DOM sau khi render\");\r\n          // Nếu videoRef chưa tồn tại, thử lại sau thời gian dài hơn\r\n          setTimeout(() => {\r\n            if (videoRef?.current) {\r\n              initSimpleCamera();\r\n            } else {\r\n              enqueueSnackbar(\"Không thể khởi tạo camera sau nhiều lần thử\", {\r\n                variant: \"error\",\r\n              });\r\n            }\r\n          }, 1000);\r\n        }\r\n      }, 300);\r\n\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [isSimpleCameraMode]);\r\n\r\n  // Kiểm tra camera đã sẵn sàng chưa\r\n  useEffect(() => {\r\n    const checkCamera = () => {\r\n      if (webcamRef.current && webcamRef.current.video) {\r\n        console.log(\r\n          \"Kiểm tra webcam: readyState =\",\r\n          webcamRef.current.video.readyState\r\n        );\r\n\r\n        if (webcamRef.current.video.readyState === 4) {\r\n          console.log(\"Camera đã sẵn sàng và hoạt động\");\r\n          dispatch(setCameraReady(true));\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    };\r\n\r\n    // Kiểm tra ngay lập tức\r\n    if (!checkCamera()) {\r\n      // Nếu chưa sẵn sàng, thiết lập interval để kiểm tra định kỳ\r\n      const intervalId = setInterval(() => {\r\n        if (checkCamera()) {\r\n          clearInterval(intervalId);\r\n        }\r\n      }, 500);\r\n\r\n      // Dọn dẹp interval khi component unmount\r\n      return () => clearInterval(intervalId);\r\n    }\r\n  }, [dispatch]);\r\n\r\n  // Xử lý lỗi nếu có\r\n  useEffect(() => {\r\n    if (error) {\r\n      enqueueSnackbar(error, { variant: \"error\" });\r\n    }\r\n  }, [error, enqueueSnackbar]);\r\n\r\n  // Load các mô hình nhận diện khuôn mặt\r\n  const loadFaceRecognitionModels = async () => {\r\n    try {\r\n      const MODEL_URL = \"/models\";\r\n      console.log(\"Bắt đầu tải models từ:\", MODEL_URL);\r\n\r\n      // Thêm timeout để đảm bảo có đủ thời gian tải models\r\n      const modelPromises = [\r\n        faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL),\r\n        faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),\r\n        faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL),\r\n      ];\r\n\r\n      // Kiểm tra xem các models đã được tải chưa\r\n      const modelStatuses = [\r\n        faceapi.nets.tinyFaceDetector.isLoaded,\r\n        faceapi.nets.faceLandmark68Net.isLoaded,\r\n        faceapi.nets.faceRecognitionNet.isLoaded,\r\n      ];\r\n\r\n      if (modelStatuses.every((status) => status)) {\r\n        console.log(\"Các models đã được tải từ trước\");\r\n        dispatch(setModelLoaded(true));\r\n        return true;\r\n      }\r\n\r\n      await Promise.all(modelPromises);\r\n\r\n      console.log(\"Đã tải xong models thành công\");\r\n      dispatch(setModelLoaded(true));\r\n      enqueueSnackbar(\"Tải mô hình nhận diện thành công\", {\r\n        variant: \"success\",\r\n      });\r\n      return true;\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi tải mô hình:\", error);\r\n      enqueueSnackbar(\"Không thể tải mô hình nhận diện\", { variant: \"error\" });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Nhận diện khuôn mặt\r\n  const recognizeFaces = async () => {\r\n    // Xác định nguồn video (webcam hoặc video đơn giản)\r\n    const videoElement = isSimpleCameraMode\r\n      ? videoRef.current\r\n      : webcamRef.current?.video;\r\n\r\n    if (!videoElement || !canvasRef.current || classStudents.length === 0) {\r\n      console.error(\r\n        \"Không có video element hoặc canvas hoặc danh sách sinh viên rỗng\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (videoElement.readyState !== 4) {\r\n      console.log(\"Video chưa sẵn sàng, readyState =\", videoElement.readyState);\r\n      return;\r\n    }\r\n\r\n    setIsRecognizing(true);\r\n\r\n    try {\r\n      // Phát hiện khuôn mặt\r\n      const detections = await faceapi\r\n        .detectAllFaces(videoElement, new faceapi.TinyFaceDetectorOptions())\r\n        .withFaceLandmarks()\r\n        .withFaceDescriptors();\r\n\r\n      console.log(\"Đã phát hiện\", detections.length, \"khuôn mặt\");\r\n      dispatch(setDetectedFaces(detections));\r\n\r\n      // Hiển thị phát hiện\r\n      const displaySize = {\r\n        width: videoElement.videoWidth || videoElement.width,\r\n        height: videoElement.videoHeight || videoElement.height,\r\n      };\r\n\r\n      faceapi.matchDimensions(canvasRef.current, displaySize);\r\n\r\n      const resizedDetections = faceapi.resizeResults(detections, displaySize);\r\n\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n      ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n\r\n      // Tạo FaceMatcher từ dữ liệu sinh viên\r\n      const labeledDescriptors = classStudents.map((student) => {\r\n        const descriptors = student.faceDescriptors.map(\r\n          (descriptor) => new Float32Array(descriptor)\r\n        );\r\n        return new faceapi.LabeledFaceDescriptors(student._id, descriptors);\r\n      });\r\n\r\n      if (labeledDescriptors.length > 0) {\r\n        const faceMatcher = new faceapi.FaceMatcher(\r\n          labeledDescriptors,\r\n          RECOGNITION_THRESHOLD\r\n        );\r\n\r\n        // Nhận diện từng khuôn mặt\r\n        const recognized = [];\r\n\r\n        resizedDetections.forEach((detection) => {\r\n          const bestMatch = faceMatcher.findBestMatch(detection.descriptor);\r\n          const { label, distance } = bestMatch;\r\n\r\n          const drawBox = new faceapi.draw.DrawBox(detection.detection.box, {\r\n            label:\r\n              label !== \"unknown\"\r\n                ? `${\r\n                    classStudents.find((s) => s._id === label)?.full_name ||\r\n                    \"Unknown\"\r\n                  } (${Math.round((1 - distance) * 100)}%)`\r\n                : \"Unknown\",\r\n            boxColor: label !== \"unknown\" ? \"green\" : \"red\",\r\n          });\r\n\r\n          drawBox.draw(canvasRef.current);\r\n\r\n          // Vẽ landmarks nếu được yêu cầu\r\n          if (showLandmark) {\r\n            faceapi.draw.drawFaceLandmarks(canvasRef.current, [detection]);\r\n          }\r\n\r\n          if (label !== \"unknown\") {\r\n            const student = classStudents.find((s) => s._id === label);\r\n            if (student) {\r\n              recognized.push({\r\n                studentId: label,\r\n                confidence: 1 - distance,\r\n                name: student.full_name,\r\n                descriptor: Array.from(detection.descriptor),\r\n              });\r\n            }\r\n          }\r\n        });\r\n\r\n        dispatch(setRecognizedStudents(recognized));\r\n\r\n        // Tự động điểm danh nếu đang ở chế độ tự động\r\n        if (isAutoMode && recognized.length > 0) {\r\n          for (const recognizedStudent of recognized) {\r\n            // Chỉ điểm danh nếu độ tin cậy > 0.7 (tương đương với khoảng cách < 0.3)\r\n            if (recognizedStudent.confidence > 0.7) {\r\n              const isAlreadyAttended = attendanceLogs.some(\r\n                (log) =>\r\n                  log.student_id._id === recognizedStudent.studentId &&\r\n                  log.status === \"present\"\r\n              );\r\n\r\n              if (!isAlreadyAttended) {\r\n                let imageBase64 = null;\r\n                if (!isSimpleCameraMode && webcamRef.current) {\r\n                  imageBase64 = webcamRef.current.getScreenshot();\r\n                } else if (isSimpleCameraMode) {\r\n                  // Tạo ảnh chụp từ video element\r\n                  const canvas = document.createElement(\"canvas\");\r\n                  canvas.width = videoElement.videoWidth;\r\n                  canvas.height = videoElement.videoHeight;\r\n                  const ctx = canvas.getContext(\"2d\");\r\n                  ctx.drawImage(videoElement, 0, 0);\r\n                  imageBase64 = canvas.toDataURL(\"image/jpeg\");\r\n                }\r\n\r\n                await markAttendance(\r\n                  recognizedStudent.studentId,\r\n                  recognizedStudent.descriptor,\r\n                  recognizedStudent.confidence,\r\n                  imageBase64\r\n                );\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi nhận diện khuôn mặt:\", error);\r\n    } finally {\r\n      setIsRecognizing(false);\r\n    }\r\n  };\r\n\r\n  // Bắt đầu chế độ tự động nhận diện\r\n  const startAutoDetection = () => {\r\n    if (intervalId) {\r\n      clearInterval(intervalId);\r\n    }\r\n\r\n    const id = setInterval(() => {\r\n      recognizeFaces();\r\n    }, AUTO_DETECT_INTERVAL);\r\n\r\n    setIntervalId(id);\r\n    setIsAutoMode(true);\r\n    enqueueSnackbar(\"Đã bật chế độ tự động điểm danh\", { variant: \"info\" });\r\n  };\r\n\r\n  // Dừng chế độ tự động nhận diện\r\n  const stopAutoDetection = () => {\r\n    if (intervalId) {\r\n      clearInterval(intervalId);\r\n      setIntervalId(null);\r\n    }\r\n\r\n    setIsAutoMode(false);\r\n    enqueueSnackbar(\"Đã tắt chế độ tự động điểm danh\", { variant: \"info\" });\r\n  };\r\n\r\n  // Điểm danh thủ công\r\n  const openManualAttendanceDialog = (student) => {\r\n    setSelectedStudent(student);\r\n    setManualAttendanceData({\r\n      status: \"present\",\r\n      note: \"\",\r\n    });\r\n    setManualDialogOpen(true);\r\n  };\r\n\r\n  const handleManualDialogClose = () => {\r\n    setManualDialogOpen(false);\r\n  };\r\n\r\n  const handleManualAttendanceChange = (e) => {\r\n    setManualAttendanceData({\r\n      ...manualAttendanceData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleManualAttendanceSubmit = async () => {\r\n    if (!selectedStudent) return;\r\n\r\n    try {\r\n      const result = await dispatch(\r\n        manualAttendance({\r\n          sessionId,\r\n          studentId: selectedStudent._id,\r\n          status: manualAttendanceData.status,\r\n          note: manualAttendanceData.note,\r\n        })\r\n      ).unwrap();\r\n\r\n      // Cập nhật logs điểm danh\r\n      if (result && result.data) {\r\n        const updatedLogs = attendanceLogs.filter(\r\n          (log) => log.student_id._id !== selectedStudent._id\r\n        );\r\n\r\n        updatedLogs.push({\r\n          ...result.data,\r\n          student_id: selectedStudent,\r\n        });\r\n\r\n        setAttendanceLogs(updatedLogs);\r\n      }\r\n\r\n      enqueueSnackbar(\"Điểm danh thủ công thành công\", { variant: \"success\" });\r\n      handleManualDialogClose();\r\n\r\n      // Cập nhật lại thông tin phiên điểm danh\r\n      const sessionResponse = await axios.get(\r\n        `${API_URL}/attendance/sessions/${sessionId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      setSessionInfo(sessionResponse.data.data);\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi điểm danh thủ công:\", error);\r\n      enqueueSnackbar(\"Lỗi khi điểm danh thủ công\", { variant: \"error\" });\r\n    }\r\n  };\r\n\r\n  // Đánh dấu điểm danh từ nhận diện khuôn mặt\r\n  const markAttendance = async (\r\n    studentId,\r\n    faceDescriptor,\r\n    confidence,\r\n    imageBase64\r\n  ) => {\r\n    try {\r\n      const result = await dispatch(\r\n        verifyAttendance({\r\n          sessionId,\r\n          studentId,\r\n          faceDescriptor,\r\n          confidence,\r\n          imageBase64,\r\n        })\r\n      ).unwrap();\r\n\r\n      // Cập nhật logs điểm danh\r\n      if (result && result.data) {\r\n        const student = classStudents.find((s) => s._id === studentId);\r\n\r\n        if (student) {\r\n          const updatedLogs = attendanceLogs.filter(\r\n            (log) => log.student_id._id !== studentId\r\n          );\r\n\r\n          updatedLogs.push({\r\n            ...result.data,\r\n            student_id: student,\r\n          });\r\n\r\n          setAttendanceLogs(updatedLogs);\r\n\r\n          enqueueSnackbar(`Đã điểm danh cho ${student.full_name}`, {\r\n            variant: \"success\",\r\n          });\r\n        }\r\n      }\r\n\r\n      // Cập nhật lại thông tin phiên điểm danh\r\n      const sessionResponse = await axios.get(\r\n        `${API_URL}/attendance/sessions/${sessionId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      setSessionInfo(sessionResponse.data.data);\r\n\r\n      return true;\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi xác nhận điểm danh:\", error);\r\n      enqueueSnackbar(\"Lỗi khi xác nhận điểm danh\", { variant: \"error\" });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Kết thúc phiên điểm danh\r\n  const completeSession = async () => {\r\n    try {\r\n      await axios.put(\r\n        `${API_URL}/attendance/sessions/${sessionId}`,\r\n        { status: \"completed\" },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n\r\n      enqueueSnackbar(\"Phiên điểm danh đã kết thúc\", { variant: \"success\" });\r\n      navigate(`/teacher/classes/${classId}`);\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi kết thúc phiên điểm danh:\", error);\r\n      enqueueSnackbar(\"Lỗi khi kết thúc phiên điểm danh\", { variant: \"error\" });\r\n    }\r\n  };\r\n\r\n  // Làm mới danh sách điểm danh\r\n  const refreshAttendanceLogs = async () => {\r\n    try {\r\n      const logsResponse = await axios.get(\r\n        `${API_URL}/attendance/logs/${sessionId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      setAttendanceLogs(logsResponse.data.data);\r\n\r\n      const sessionResponse = await axios.get(\r\n        `${API_URL}/attendance/sessions/${sessionId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      setSessionInfo(sessionResponse.data.data);\r\n\r\n      enqueueSnackbar(\"Đã làm mới dữ liệu điểm danh\", { variant: \"success\" });\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi làm mới dữ liệu:\", error);\r\n      enqueueSnackbar(\"Lỗi khi làm mới dữ liệu\", { variant: \"error\" });\r\n    }\r\n  };\r\n\r\n  // Chụp ảnh và nhận diện thủ công\r\n  const captureAndRecognize = async () => {\r\n    await recognizeFaces();\r\n  };\r\n\r\n  // Chế độ camera đơn giản\r\n  const toggleSimpleCameraMode = () => {\r\n    setIsSimpleCameraMode(!isSimpleCameraMode);\r\n\r\n    // Nếu đang bật chế độ đơn giản\r\n    if (!isSimpleCameraMode) {\r\n      // Bỏ qua việc tải model và nhận diện\r\n      dispatch(setModelLoaded(true));\r\n\r\n      // Dừng chế độ tự động nếu đang bật\r\n      if (isAutoMode && intervalId) {\r\n        clearInterval(intervalId);\r\n        setIntervalId(null);\r\n        setIsAutoMode(false);\r\n      }\r\n\r\n      // Kiểm tra videoRef trước khi khởi tạo\r\n      console.log(\r\n        \"Trạng thái videoRef trước khi khởi tạo:\",\r\n        videoRef?.current ? \"tồn tại\" : \"không tồn tại\"\r\n      );\r\n\r\n      // Khởi tạo camera trong chế độ đơn giản sau khi component đã render\r\n      setTimeout(() => {\r\n        if (videoRef?.current) {\r\n          console.log(\"videoRef đã sẵn sàng, khởi tạo camera đơn giản\");\r\n          initSimpleCamera();\r\n        } else {\r\n          console.error(\"videoRef vẫn chưa sẵn sàng sau 500ms\");\r\n          enqueueSnackbar(\"Lỗi: Không thể khởi tạo camera, thử làm mới trang\", {\r\n            variant: \"error\",\r\n          });\r\n        }\r\n      }, 500);\r\n\r\n      enqueueSnackbar(\r\n        \"Đã chuyển sang chế độ camera đơn giản (không nhận diện khuôn mặt)\",\r\n        {\r\n          variant: \"info\",\r\n        }\r\n      );\r\n    } else {\r\n      // Nếu tắt chế độ đơn giản, tải lại mô hình\r\n      loadFaceRecognitionModels();\r\n      enqueueSnackbar(\"Đã chuyển về chế độ nhận diện khuôn mặt\", {\r\n        variant: \"info\",\r\n      });\r\n    }\r\n  };\r\n\r\n  // Khởi tạo camera cho chế độ đơn giản\r\n  const initSimpleCamera = () => {\r\n    console.log(\r\n      \"Bắt đầu initSimpleCamera, videoRef:\",\r\n      videoRef?.current ? \"tồn tại\" : \"không tồn tại\"\r\n    );\r\n\r\n    if (!videoRef?.current) {\r\n      console.error(\"videoRef.current không tồn tại\");\r\n      enqueueSnackbar(\r\n        \"Lỗi: Không thể khởi tạo camera (videoRef không tồn tại)\",\r\n        {\r\n          variant: \"error\",\r\n        }\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Yêu cầu stream camera\r\n    navigator.mediaDevices\r\n      .getUserMedia({\r\n        video: {\r\n          width: { ideal: 1280 },\r\n          height: { ideal: 720 },\r\n          facingMode: \"user\",\r\n        },\r\n        audio: false,\r\n      })\r\n      .then((stream) => {\r\n        console.log(\r\n          \"Đã nhận được stream camera cho chế độ đơn giản\",\r\n          stream?.id\r\n        );\r\n\r\n        // Kiểm tra lại videoRef trước khi gán\r\n        if (!videoRef?.current) {\r\n          console.error(\"videoRef.current không tồn tại khi nhận stream\");\r\n          stream.getTracks().forEach((track) => track.stop()); // Đóng stream để tránh rò rỉ\r\n          return;\r\n        }\r\n\r\n        videoRef.current.srcObject = stream;\r\n        videoRef.current.onloadedmetadata = () => {\r\n          console.log(\"Video đã load metadata\");\r\n          videoRef.current\r\n            .play()\r\n            .then(() => {\r\n              // Cập nhật kích thước canvas để khớp với video\r\n              if (canvasRef.current) {\r\n                canvasRef.current.width = videoRef.current.clientWidth;\r\n                canvasRef.current.height = videoRef.current.clientHeight;\r\n              }\r\n              dispatch(setCameraReady(true));\r\n              // Tự động bật landmark sau khi camera đã sẵn sàng\r\n              if (!landmarkIntervalId) {\r\n                setTimeout(() => toggleLandmarkDetection(), 1000);\r\n              }\r\n            })\r\n            .catch((err) => console.error(\"Lỗi khi play video:\", err));\r\n        };\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Lỗi truy cập camera trong chế độ đơn giản:\", err);\r\n        enqueueSnackbar(`Không thể truy cập camera: ${err.message}`, {\r\n          variant: \"error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  // Điểm danh thủ công trong chế độ đơn giản\r\n  const showStudentList = () => {\r\n    if (!classInfo) return;\r\n\r\n    // Hiển thị danh sách sinh viên để điểm danh thủ công\r\n    const absentStudents = getAbsentStudents();\r\n    if (absentStudents.length === 0) {\r\n      enqueueSnackbar(\"Tất cả sinh viên đã được điểm danh\", {\r\n        variant: \"success\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Hiển thị dialog chọn sinh viên để điểm danh\r\n    if (absentStudents.length > 0 && absentStudents[0]) {\r\n      openManualAttendanceDialog(absentStudents[0]);\r\n    }\r\n  };\r\n\r\n  // Bắt đầu phát hiện landmark realtime\r\n  const toggleLandmarkDetection = () => {\r\n    if (landmarkIntervalId) {\r\n      clearInterval(landmarkIntervalId);\r\n      setLandmarkIntervalId(null);\r\n      setShowLandmark(false);\r\n\r\n      // Xóa landmarks hiện tại\r\n      if (canvasRef.current) {\r\n        const ctx = canvasRef.current.getContext(\"2d\");\r\n        ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n      }\r\n\r\n      enqueueSnackbar(\"Đã tắt hiển thị landmarks\", { variant: \"info\" });\r\n    } else {\r\n      setShowLandmark(true);\r\n\r\n      const id = setInterval(async () => {\r\n        const videoElement = isSimpleCameraMode\r\n          ? videoRef.current\r\n          : webcamRef.current?.video;\r\n\r\n        if (\r\n          !videoElement ||\r\n          videoElement.readyState !== 4 ||\r\n          !canvasRef.current\r\n        )\r\n          return;\r\n\r\n        try {\r\n          // Chỉ phát hiện khuôn mặt và landmark, không cần descriptor (nhanh hơn)\r\n          const detections = await faceapi\r\n            .detectAllFaces(videoElement, new faceapi.TinyFaceDetectorOptions())\r\n            .withFaceLandmarks();\r\n\r\n          if (detections.length === 0) return;\r\n\r\n          // Lấy kích thước thực của video và canvas\r\n          const videoWidth = videoElement.videoWidth || videoElement.width;\r\n          const videoHeight = videoElement.videoHeight || videoElement.height;\r\n\r\n          // Lấy kích thước hiển thị của video và canvas\r\n          const displaySize = {\r\n            width: videoElement.clientWidth || canvasRef.current.clientWidth,\r\n            height: videoElement.clientHeight || canvasRef.current.clientHeight,\r\n          };\r\n\r\n          // Đặt kích thước canvas bằng với kích thước hiển thị\r\n          canvasRef.current.width = displaySize.width;\r\n          canvasRef.current.height = displaySize.height;\r\n\r\n          // Tính toán tỷ lệ giữa kích thước thực và kích thước hiển thị\r\n          const scaleX = displaySize.width / videoWidth;\r\n          const scaleY = displaySize.height / videoHeight;\r\n\r\n          // Điều chỉnh tọa độ phát hiện theo tỷ lệ hiển thị\r\n          const adjustedDetections = detections.map((detection) => {\r\n            // Điều chỉnh box\r\n            const box = detection.detection.box;\r\n            const scaledBox = {\r\n              x: box.x * scaleX,\r\n              y: box.y * scaleY,\r\n              width: box.width * scaleX,\r\n              height: box.height * scaleY,\r\n            };\r\n            detection.detection.box = new faceapi.Box(scaledBox);\r\n\r\n            // Điều chỉnh landmarks\r\n            if (detection.landmarks) {\r\n              const points = detection.landmarks.positions.map((pt) => {\r\n                return new faceapi.Point(pt.x * scaleX, pt.y * scaleY);\r\n              });\r\n              detection.landmarks.positions = points;\r\n            }\r\n\r\n            return detection;\r\n          });\r\n\r\n          // Xóa canvas\r\n          const ctx = canvasRef.current.getContext(\"2d\");\r\n          ctx.clearRect(\r\n            0,\r\n            0,\r\n            canvasRef.current.width,\r\n            canvasRef.current.height\r\n          );\r\n\r\n          // Vẽ boxes và landmarks đã điều chỉnh tỷ lệ\r\n          faceapi.draw.drawDetections(canvasRef.current, adjustedDetections);\r\n          faceapi.draw.drawFaceLandmarks(\r\n            canvasRef.current,\r\n            adjustedDetections,\r\n            { drawLines: true, color: \"red\" }\r\n          );\r\n        } catch (err) {\r\n          console.error(\"Lỗi khi phát hiện landmarks:\", err);\r\n        }\r\n      }, 80); // 12 FPS\r\n\r\n      setLandmarkIntervalId(id);\r\n      enqueueSnackbar(\"Đã bật hiển thị landmarks realtime\", {\r\n        variant: \"success\",\r\n      });\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        minHeight=\"60vh\"\r\n      >\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  // Lấy danh sách sinh viên vắng mặt\r\n  const getAbsentStudents = () => {\r\n    if (!classInfo || !sessionInfo) return [];\r\n\r\n    const presentStudentIds = attendanceLogs\r\n      .filter((log) => log.status === \"present\")\r\n      .map((log) => log.student_id._id);\r\n\r\n    return classInfo.students.filter(\r\n      (student) => !presentStudentIds.includes(student._id)\r\n    );\r\n  };\r\n\r\n  const absentStudents = getAbsentStudents();\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Điểm Danh - {classInfo?.class_name}\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" color=\"textSecondary\" gutterBottom>\r\n        Buổi {sessionInfo?.session_number} -{\" \"}\r\n        {new Date(sessionInfo?.date).toLocaleDateString(\"vi-VN\")}\r\n      </Typography>\r\n\r\n      <Grid container spacing={3} mt={1}>\r\n        <Grid item xs={12} md={8}>\r\n          <Card>\r\n            <CardContent>\r\n              <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                mb={2}\r\n              >\r\n                <Typography variant=\"h6\">Camera nhận diện</Typography>\r\n                <Box>\r\n                  <Chip\r\n                    label={isAutoMode ? \"Tự động đang bật\" : \"Tự động đang tắt\"}\r\n                    color={isAutoMode ? \"success\" : \"default\"}\r\n                    sx={{ mr: 1 }}\r\n                  />\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color={isAutoMode ? \"error\" : \"primary\"}\r\n                    onClick={\r\n                      isAutoMode ? stopAutoDetection : startAutoDetection\r\n                    }\r\n                    startIcon={isAutoMode ? <Close /> : <HourglassEmpty />}\r\n                    disabled={!isCameraReady || !isModelLoaded}\r\n                    size=\"small\"\r\n                  >\r\n                    {isAutoMode ? \"Tắt tự động\" : \"Bật tự động\"}\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n\r\n              <Paper\r\n                elevation={3}\r\n                sx={{\r\n                  position: \"relative\",\r\n                  width: \"100%\",\r\n                  height: \"400px\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  overflow: \"hidden\",\r\n                  mb: 2,\r\n                }}\r\n              >\r\n                {isCameraReady ? (\r\n                  <>\r\n                    {isSimpleCameraMode ? (\r\n                      // Sử dụng video element trực tiếp thay vì Webcam component\r\n                      <video\r\n                        ref={videoRef}\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                          objectFit: \"cover\",\r\n                        }}\r\n                        autoPlay\r\n                        playsInline\r\n                        muted\r\n                      />\r\n                    ) : (\r\n                      <Webcam\r\n                        audio={false}\r\n                        ref={webcamRef}\r\n                        screenshotFormat=\"image/jpeg\"\r\n                        width={640}\r\n                        height={480}\r\n                        videoConstraints={{\r\n                          width: 640,\r\n                          height: 480,\r\n                          facingMode: \"user\",\r\n                        }}\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                          objectFit: \"cover\",\r\n                        }}\r\n                        onUserMedia={(stream) => {\r\n                          console.log(\r\n                            \"Camera đã được cấp quyền và khởi tạo\",\r\n                            stream.id\r\n                          );\r\n                          // Đảm bảo readyState được kiểm tra khi stream đã sẵn sàng\r\n                          setTimeout(() => {\r\n                            if (webcamRef.current && webcamRef.current.video) {\r\n                              console.log(\r\n                                \"Stream ready, readyState=\",\r\n                                webcamRef.current.video.readyState\r\n                              );\r\n                              dispatch(setCameraReady(true));\r\n                            }\r\n                          }, 500);\r\n                        }}\r\n                        onUserMediaError={(err) => {\r\n                          console.error(\"Lỗi khi truy cập camera:\", err);\r\n                          enqueueSnackbar(\r\n                            `Không thể truy cập camera: ${\r\n                              err.name === \"NotAllowedError\"\r\n                                ? \"Bạn chưa cấp quyền truy cập camera\"\r\n                                : err.name === \"NotFoundError\"\r\n                                ? \"Không tìm thấy thiết bị camera\"\r\n                                : err.message || \"Lỗi không xác định\"\r\n                            }`,\r\n                            {\r\n                              variant: \"error\",\r\n                            }\r\n                          );\r\n                        }}\r\n                      />\r\n                    )}\r\n                    {/* Canvas hiển thị ở cả hai chế độ */}\r\n                    <canvas\r\n                      ref={canvasRef}\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        left: 0,\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                      }}\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  <Box\r\n                    display=\"flex\"\r\n                    flexDirection=\"column\"\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <CircularProgress size={50} />\r\n                    <Typography mt={2}>Đang khởi tạo camera...</Typography>\r\n                    <Typography\r\n                      variant=\"caption\"\r\n                      color=\"text.secondary\"\r\n                      sx={{ mt: 1 }}\r\n                    >\r\n                      {isModelLoaded\r\n                        ? \"Chờ kết nối camera - Hãy đảm bảo bạn đã cấp quyền camera\"\r\n                        : \"Đang tải mô hình nhận diện khuôn mặt\"}\r\n                    </Typography>\r\n\r\n                    <Box\r\n                      sx={{\r\n                        mt: 2,\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      {!isModelLoaded && (\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          sx={{ mb: 1 }}\r\n                          onClick={loadFaceRecognitionModels}\r\n                        >\r\n                          Tải lại mô hình\r\n                        </Button>\r\n                      )}\r\n\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"warning\"\r\n                        size=\"small\"\r\n                        sx={{ mb: 1 }}\r\n                        onClick={toggleSimpleCameraMode}\r\n                      >\r\n                        {isSimpleCameraMode\r\n                          ? \"Chế độ nhận diện khuôn mặt\"\r\n                          : \"Chế độ camera đơn giản (Không nhận diện khuôn mặt)\"}\r\n                      </Button>\r\n\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        sx={{ mb: 1 }}\r\n                        onClick={() => {\r\n                          // Truy cập camera trực tiếp không qua component\r\n                          navigator.mediaDevices\r\n                            .getUserMedia({\r\n                              video: { facingMode: \"user\" },\r\n                              audio: false,\r\n                            })\r\n                            .then((stream) => {\r\n                              console.log(\r\n                                \"Đã nhận được stream camera trực tiếp\"\r\n                              );\r\n                              // Kích hoạt chế độ camera đơn giản\r\n                              setIsSimpleCameraMode(true);\r\n                              dispatch(setModelLoaded(true));\r\n                              dispatch(setCameraReady(true));\r\n                              enqueueSnackbar(\"Đã kết nối camera thành công\", {\r\n                                variant: \"success\",\r\n                              });\r\n\r\n                              // Tránh memory leak bằng cách dừng stream\r\n                              setTimeout(() => {\r\n                                stream\r\n                                  .getTracks()\r\n                                  .forEach((track) => track.stop());\r\n                              }, 1000);\r\n                            })\r\n                            .catch((err) => {\r\n                              console.error(\"Lỗi truy cập camera:\", err);\r\n                              enqueueSnackbar(\r\n                                `Không thể truy cập camera: ${err.message}`,\r\n                                { variant: \"error\" }\r\n                              );\r\n                            });\r\n                        }}\r\n                      >\r\n                        Khởi động camera trực tiếp\r\n                      </Button>\r\n\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        sx={{ mb: 1 }}\r\n                        onClick={() => {\r\n                          try {\r\n                            console.log(\r\n                              \"Cố gắng tạo mới video element và gán stream\"\r\n                            );\r\n\r\n                            // Tạo phần tử video mới\r\n                            const tempVideo = document.createElement(\"video\");\r\n                            tempVideo.autoplay = true;\r\n                            tempVideo.playsInline = true;\r\n                            tempVideo.muted = true;\r\n                            tempVideo.style.display = \"none\";\r\n                            document.body.appendChild(tempVideo);\r\n\r\n                            // Yêu cầu stream với cài đặt đơn giản nhất\r\n                            navigator.mediaDevices\r\n                              .getUserMedia({\r\n                                video: true,\r\n                                audio: false,\r\n                              })\r\n                              .then((stream) => {\r\n                                console.log(\r\n                                  \"Đã nhận stream camera đơn giản nhất\"\r\n                                );\r\n                                tempVideo.srcObject = stream;\r\n\r\n                                // Đảm bảo video đã chạy\r\n                                tempVideo.onloadedmetadata = () => {\r\n                                  tempVideo\r\n                                    .play()\r\n                                    .then(() => {\r\n                                      console.log(\r\n                                        \"Video tạm đã chạy, gán stream cho video chính\"\r\n                                      );\r\n\r\n                                      // Chuyển sang chế độ đơn giản\r\n                                      setIsSimpleCameraMode(true);\r\n\r\n                                      // Dùng setTimeout để đảm bảo DOM đã cập nhật\r\n                                      setTimeout(() => {\r\n                                        if (videoRef?.current) {\r\n                                          videoRef.current.srcObject = stream;\r\n                                          dispatch(setCameraReady(true));\r\n                                          console.log(\r\n                                            \"Đã gán stream thành công cho video chính\"\r\n                                          );\r\n\r\n                                          // Xóa video tạm\r\n                                          document.body.removeChild(tempVideo);\r\n                                        } else {\r\n                                          console.error(\r\n                                            \"videoRef vẫn không tồn tại sau khi render\"\r\n                                          );\r\n                                          stream\r\n                                            .getTracks()\r\n                                            .forEach((track) => track.stop());\r\n                                          document.body.removeChild(tempVideo);\r\n                                          enqueueSnackbar(\r\n                                            \"Không thể khởi tạo camera, hãy làm mới trang\",\r\n                                            { variant: \"error\" }\r\n                                          );\r\n                                        }\r\n                                      }, 500);\r\n                                    })\r\n                                    .catch((err) => {\r\n                                      console.error(\r\n                                        \"Lỗi khi play video tạm:\",\r\n                                        err\r\n                                      );\r\n                                      stream\r\n                                        .getTracks()\r\n                                        .forEach((track) => track.stop());\r\n                                      document.body.removeChild(tempVideo);\r\n                                    });\r\n                                };\r\n                              })\r\n                              .catch((err) => {\r\n                                console.error(\r\n                                  \"Lỗi yêu cầu camera phương pháp 3:\",\r\n                                  err\r\n                                );\r\n                                if (document.body.contains(tempVideo)) {\r\n                                  document.body.removeChild(tempVideo);\r\n                                }\r\n                                enqueueSnackbar(\r\n                                  `Không thể truy cập camera: ${err.message}`,\r\n                                  { variant: \"error\" }\r\n                                );\r\n                              });\r\n                          } catch (err) {\r\n                            console.error(\r\n                              \"Lỗi tổng thể khi khởi tạo camera:\",\r\n                              err\r\n                            );\r\n                            enqueueSnackbar(`Lỗi: ${err.message}`, {\r\n                              variant: \"error\",\r\n                            });\r\n                          }\r\n                        }}\r\n                      >\r\n                        Khởi tạo camera (Phương pháp 3)\r\n                      </Button>\r\n                    </Box>\r\n                  </Box>\r\n                )}\r\n              </Paper>\r\n\r\n              <Box display=\"flex\" justifyContent=\"space-between\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  onClick={\r\n                    isSimpleCameraMode ? showStudentList : captureAndRecognize\r\n                  }\r\n                  startIcon={isSimpleCameraMode ? <Edit /> : <CameraAlt />}\r\n                  disabled={\r\n                    !isCameraReady ||\r\n                    (!isSimpleCameraMode && (isRecognizing || isAutoMode))\r\n                  }\r\n                >\r\n                  {isRecognizing ? (\r\n                    <CircularProgress size={24} color=\"inherit\" />\r\n                  ) : isSimpleCameraMode ? (\r\n                    \"Điểm danh thủ công\"\r\n                  ) : (\r\n                    \"Chụp & Nhận diện\"\r\n                  )}\r\n                </Button>\r\n\r\n                <Box>\r\n                  {isCameraReady && (\r\n                    <>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        color={showLandmark ? \"success\" : \"info\"}\r\n                        onClick={toggleLandmarkDetection}\r\n                        sx={{ mr: 1 }}\r\n                      >\r\n                        {showLandmark ? \"Tắt Landmark\" : \"Hiện Landmark\"}\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        color=\"warning\"\r\n                        onClick={toggleSimpleCameraMode}\r\n                        sx={{ mr: 1 }}\r\n                      >\r\n                        {isSimpleCameraMode\r\n                          ? \"Bật nhận diện\"\r\n                          : \"Chế độ đơn giản\"}\r\n                      </Button>\r\n                    </>\r\n                  )}\r\n\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={completeSession}\r\n                    startIcon={<Save />}\r\n                    disabled={sessionInfo?.status === \"completed\"}\r\n                  >\r\n                    Kết thúc phiên\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n\r\n              {recognizedStudents.length > 0 && (\r\n                <Box mt={2}>\r\n                  <Typography variant=\"subtitle1\" gutterBottom>\r\n                    Đã nhận diện ({recognizedStudents.length})\r\n                  </Typography>\r\n                  <Grid container spacing={1}>\r\n                    {recognizedStudents.map((student, index) => (\r\n                      <Grid item xs={6} sm={4} key={index}>\r\n                        <Paper\r\n                          elevation={2}\r\n                          sx={{\r\n                            p: 1,\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            alignItems: \"center\",\r\n                          }}\r\n                        >\r\n                          <Typography variant=\"body2\" noWrap>\r\n                            {student.name}\r\n                          </Typography>\r\n                          <Typography variant=\"caption\" color=\"textSecondary\">\r\n                            {Math.round(student.confidence * 100)}% match\r\n                          </Typography>\r\n                          <Button\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            sx={{ mt: 1 }}\r\n                            onClick={() =>\r\n                              markAttendance(\r\n                                student.studentId,\r\n                                student.descriptor,\r\n                                student.confidence,\r\n                                webcamRef.current?.getScreenshot()\r\n                              )\r\n                            }\r\n                          >\r\n                            <Check fontSize=\"small\" sx={{ mr: 0.5 }} />\r\n                            Điểm danh\r\n                          </Button>\r\n                        </Paper>\r\n                      </Grid>\r\n                    ))}\r\n                  </Grid>\r\n                </Box>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={4}>\r\n          <Card sx={{ mb: 3 }}>\r\n            <CardContent>\r\n              <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                mb={2}\r\n              >\r\n                <Typography variant=\"h6\">\r\n                  Có mặt (\r\n                  {\r\n                    attendanceLogs.filter((log) => log.status === \"present\")\r\n                      .length\r\n                  }\r\n                  /{classInfo?.students.length})\r\n                </Typography>\r\n                <IconButton size=\"small\" onClick={refreshAttendanceLogs}>\r\n                  <Refresh />\r\n                </IconButton>\r\n              </Box>\r\n\r\n              <List dense>\r\n                {attendanceLogs\r\n                  .filter((log) => log.status === \"present\")\r\n                  .sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))\r\n                  .map((log) => (\r\n                    <ListItem\r\n                      key={log._id}\r\n                      secondaryAction={\r\n                        <Chip\r\n                          size=\"small\"\r\n                          icon={\r\n                            log.recognized ? (\r\n                              <VerifiedUser fontSize=\"small\" />\r\n                            ) : null\r\n                          }\r\n                          label={log.recognized ? \"Tự động\" : \"Thủ công\"}\r\n                          color={log.recognized ? \"success\" : \"primary\"}\r\n                        />\r\n                      }\r\n                    >\r\n                      <ListItemAvatar>\r\n                        <Avatar\r\n                          alt={log.student_id.full_name}\r\n                          src={log.student_id.avatar_url}\r\n                        />\r\n                      </ListItemAvatar>\r\n                      <ListItemText\r\n                        primary={log.student_id.full_name}\r\n                        secondary={`${new Date(\r\n                          log.timestamp\r\n                        ).toLocaleTimeString(\"vi-VN\")}`}\r\n                      />\r\n                    </ListItem>\r\n                  ))}\r\n\r\n                {attendanceLogs.filter((log) => log.status === \"present\")\r\n                  .length === 0 && (\r\n                  <ListItem>\r\n                    <ListItemText primary=\"Chưa có sinh viên nào điểm danh\" />\r\n                  </ListItem>\r\n                )}\r\n              </List>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Vắng mặt ({absentStudents.length}/{classInfo?.students.length})\r\n              </Typography>\r\n\r\n              <List dense>\r\n                {absentStudents.map((student) => (\r\n                  <ListItem\r\n                    key={student._id}\r\n                    secondaryAction={\r\n                      <IconButton\r\n                        edge=\"end\"\r\n                        onClick={() => openManualAttendanceDialog(student)}\r\n                      >\r\n                        <Edit fontSize=\"small\" />\r\n                      </IconButton>\r\n                    }\r\n                  >\r\n                    <ListItemAvatar>\r\n                      <Avatar\r\n                        alt={student.full_name}\r\n                        src={student.avatar_url}\r\n                      />\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={student.full_name}\r\n                      secondary={student.student_code}\r\n                    />\r\n                  </ListItem>\r\n                ))}\r\n\r\n                {absentStudents.length === 0 && (\r\n                  <ListItem>\r\n                    <ListItemText primary=\"Không có sinh viên nào vắng mặt\" />\r\n                  </ListItem>\r\n                )}\r\n              </List>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Dialog điểm danh thủ công */}\r\n      <Dialog open={manualDialogOpen} onClose={handleManualDialogClose}>\r\n        <DialogTitle>Điểm danh thủ công</DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ p: 1 }}>\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              {selectedStudent?.full_name} ({selectedStudent?.student_code})\r\n            </Typography>\r\n\r\n            <FormControl fullWidth margin=\"normal\">\r\n              <InputLabel>Trạng thái</InputLabel>\r\n              <Select\r\n                name=\"status\"\r\n                value={manualAttendanceData.status}\r\n                onChange={handleManualAttendanceChange}\r\n                label=\"Trạng thái\"\r\n              >\r\n                <MenuItem value=\"present\">Có mặt</MenuItem>\r\n                <MenuItem value=\"absent\">Vắng mặt</MenuItem>\r\n                <MenuItem value=\"late\">Đi trễ</MenuItem>\r\n                <MenuItem value=\"early_leave\">Về sớm</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n              fullWidth\r\n              margin=\"normal\"\r\n              name=\"note\"\r\n              label=\"Ghi chú\"\r\n              value={manualAttendanceData.note}\r\n              onChange={handleManualAttendanceChange}\r\n              multiline\r\n              rows={2}\r\n            />\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleManualDialogClose}>Hủy</Button>\r\n          <Button onClick={handleManualAttendanceSubmit} variant=\"contained\">\r\n            Xác nhận\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AttendancePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}