{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kasiz\\\\Documents\\\\Studying\\\\FaceReg\\\\frontend\\\\src\\\\pages\\\\teacher\\\\AttendancePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useSnackbar } from \"notistack\";\nimport { Box, Typography, Card, CardContent, Grid, Paper, Button, Divider, CircularProgress, List, ListItem, ListItemAvatar, ListItemText, Avatar, Chip, Dialog, DialogTitle, DialogContent, DialogActions, TextField, FormControl, InputLabel, Select, MenuItem, IconButton, Alert } from \"@mui/material\";\nimport { CameraAlt, Check, Close, Edit, Refresh, Save, VerifiedUser, HourglassEmpty } from \"@mui/icons-material\";\nimport Webcam from \"react-webcam\";\nimport * as faceapi from \"face-api.js\";\nimport { getClassFaceFeatures, verifyAttendance, manualAttendance, setModelLoaded, setCameraReady, setDetectedFaces, setRecognizedStudents, clearRecognitionState } from \"../../redux/slices/faceRecognitionSlice\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\nconst AttendancePage = () => {\n  _s();\n  const {\n    classId,\n    sessionId\n  } = useParams();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const videoRef = useRef(null);\n  const [intervalId, setIntervalId] = useState(null);\n  const [showLandmark, setShowLandmark] = useState(false);\n  const [landmarkIntervalId, setLandmarkIntervalId] = useState(null);\n  const {\n    token\n  } = useSelector(state => state.auth);\n  const {\n    isModelLoaded,\n    isCameraReady,\n    detectedFaces,\n    recognizedStudents,\n    classStudents,\n    isProcessing,\n    error\n  } = useSelector(state => state.faceRecognition);\n  const [classInfo, setClassInfo] = useState(null);\n  const [sessionInfo, setSessionInfo] = useState(null);\n  const [attendanceLogs, setAttendanceLogs] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isRecognizing, setIsRecognizing] = useState(false);\n  const [isAutoMode, setIsAutoMode] = useState(false);\n  const [selectedStudent, setSelectedStudent] = useState(null);\n  const [manualDialogOpen, setManualDialogOpen] = useState(false);\n  const [manualAttendanceData, setManualAttendanceData] = useState({\n    status: \"present\",\n    note: \"\"\n  });\n\n  // Các hằng số cấu hình\n  const RECOGNITION_THRESHOLD = 0.5; // Ngưỡng nhận diện\n  const DETECTION_THRESHOLD = 0.3; // Giảm ngưỡng phát hiện khuôn mặt\n  const CONFIDENCE_THRESHOLD = 0.6; // Ngưỡng độ tin cậy để điểm danh\n  const AUTO_DETECT_INTERVAL = 1000; // Thời gian giữa các lần phát hiện (ms)\n  const ENABLE_DEBUG_LOGS = true; // Bật/tắt log gỡ lỗi\n\n  // Load class info, session info và models\n  useEffect(() => {\n    const loadInitialData = async () => {\n      try {\n        setIsLoading(true);\n\n        // Bắt đầu tải dữ liệu và models song song\n        const loadModelsPromise = !isModelLoaded ? loadFaceRecognitionModels() : Promise.resolve(true);\n\n        // Lấy thông tin lớp học\n        const classPromise = axios.get(`${API_URL}/classes/teaching/${classId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Lấy thông tin phiên điểm danh\n        const sessionPromise = axios.get(`${API_URL}/attendance/sessions/${sessionId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Lấy danh sách điểm danh\n        const logsPromise = axios.get(`${API_URL}/attendance/logs/${sessionId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Chờ tất cả API calls hoàn thành\n        const [classResponse, sessionResponse, logsResponse] = await Promise.all([classPromise, sessionPromise, logsPromise]);\n        setClassInfo(classResponse.data.data);\n        setSessionInfo(sessionResponse.data.data);\n        setAttendanceLogs(logsResponse.data.data);\n\n        // Lấy đặc trưng khuôn mặt của sinh viên trong lớp\n        console.log(\"[DEBUG] Bắt đầu lấy đặc trưng khuôn mặt của sinh viên, classId:\", classId);\n\n        // Dispatch action để lấy feature và theo dõi kết quả\n        const faceFeatureResult = await dispatch(getClassFaceFeatures(classId)).unwrap();\n\n        // Kiểm tra xem có dữ liệu trả về không\n        if (faceFeatureResult && faceFeatureResult.students) {\n          console.log(`[DEBUG] Nhận được dữ liệu khuôn mặt của ${faceFeatureResult.students.length} sinh viên`);\n\n          // Kiểm tra chi tiết dữ liệu khuôn mặt\n          let validDescriptorsCount = 0;\n          let invalidDescriptorsCount = 0;\n          faceFeatureResult.students.forEach(student => {\n            const hasDescriptors = student.faceDescriptors && Array.isArray(student.faceDescriptors) && student.faceDescriptors.length > 0;\n            const validDescriptors = hasDescriptors ? student.faceDescriptors.filter(desc => Array.isArray(desc) && desc.length === 128).length : 0;\n            if (validDescriptors > 0) {\n              validDescriptorsCount++;\n              console.log(`[DEBUG] Sinh viên ${student.full_name} có ${validDescriptors}/${hasDescriptors ? student.faceDescriptors.length : 0} descriptor hợp lệ`);\n            } else {\n              invalidDescriptorsCount++;\n              console.log(`[DEBUG] Sinh viên ${student.full_name} không có descriptor hợp lệ`);\n              if (hasDescriptors && student.faceDescriptors.length > 0) {\n                console.log(`[DEBUG] Chi tiết descriptor đầu tiên:`, typeof student.faceDescriptors[0], Array.isArray(student.faceDescriptors[0]) ? student.faceDescriptors[0].length : \"không phải mảng\");\n              }\n            }\n          });\n          console.log(`[DEBUG] Tổng hợp: ${validDescriptorsCount} sinh viên có descriptor hợp lệ, ${invalidDescriptorsCount} sinh viên không có`);\n          if (validDescriptorsCount === 0) {\n            enqueueSnackbar(\"Không có sinh viên nào có dữ liệu khuôn mặt, vui lòng cập nhật dữ liệu khuôn mặt cho sinh viên\", {\n              variant: \"warning\",\n              autoHideDuration: 8000\n            });\n          }\n        } else {\n          console.log(\"[DEBUG] Không nhận được dữ liệu khuôn mặt từ API\");\n          enqueueSnackbar(\"Không thể tải dữ liệu nhận diện khuôn mặt\", {\n            variant: \"error\"\n          });\n        }\n\n        // Không chờ đợi model load xong mới hiển thị UI\n        setIsLoading(false);\n\n        // Model sẽ load song song\n        await loadModelsPromise;\n      } catch (error) {\n        console.error(\"Lỗi khi tải dữ liệu:\", error);\n        enqueueSnackbar(\"Lỗi khi tải dữ liệu\", {\n          variant: \"error\"\n        });\n        setIsLoading(false);\n      }\n    };\n    loadInitialData();\n\n    // Clean up\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n\n      // Dừng landmark interval nếu đang chạy\n      if (landmarkIntervalId) {\n        clearInterval(landmarkIntervalId);\n      }\n\n      // Dừng camera stream nếu đang chạy\n      if (webcamRef.current && webcamRef.current.video && webcamRef.current.video.srcObject) {\n        const tracks = webcamRef.current.video.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n      if (videoRef.current && videoRef.current.srcObject) {\n        const tracks = videoRef.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n      dispatch(clearRecognitionState());\n    };\n  }, [classId, sessionId, token, dispatch, enqueueSnackbar, isModelLoaded, intervalId, landmarkIntervalId]);\n\n  // Load các mô hình nhận diện khuôn mặt\n  const loadFaceRecognitionModels = async () => {\n    try {\n      const MODEL_URL = \"/models\";\n      console.log(\"Bắt đầu tải models từ:\", MODEL_URL);\n\n      // Thêm SsdMobilenetv1 vào danh sách models cần tải\n      const modelPromises = [faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL), faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL), faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL), faceapi.nets.ssdMobilenetv1.loadFromUri(MODEL_URL) // Thêm model SSD MobileNet\n      ];\n\n      // Kiểm tra xem các models đã được tải chưa\n      const modelStatuses = [faceapi.nets.tinyFaceDetector.isLoaded, faceapi.nets.faceLandmark68Net.isLoaded, faceapi.nets.faceRecognitionNet.isLoaded, faceapi.nets.ssdMobilenetv1.isLoaded // Kiểm tra SSD MobileNet đã tải chưa\n      ];\n      if (modelStatuses.every(status => status)) {\n        console.log(\"Các models đã được tải từ trước\");\n        dispatch(setModelLoaded(true));\n        return true;\n      }\n      await Promise.all(modelPromises);\n      console.log(\"Đã tải xong models thành công\");\n      dispatch(setModelLoaded(true));\n      enqueueSnackbar(\"Tải mô hình nhận diện thành công\", {\n        variant: \"success\"\n      });\n      return true;\n    } catch (error) {\n      console.error(\"Lỗi khi tải mô hình:\", error);\n      enqueueSnackbar(\"Không thể tải mô hình nhận diện\", {\n        variant: \"error\"\n      });\n      return false;\n    }\n  };\n\n  // Xử lý phát hiện khuôn mặt\n  const handleDetectFaces = async () => {\n    try {\n      var _webcamRef$current;\n      // Kiểm tra model đã tải chưa\n      if (!isModelLoaded || !faceapi.nets.ssdMobilenetv1.isLoaded) {\n        console.warn(\"Model SSD MobileNet chưa được tải, đang thử tải lại...\");\n        await loadFaceRecognitionModels();\n        if (!faceapi.nets.ssdMobilenetv1.isLoaded) {\n          enqueueSnackbar(\"Model nhận dạng chưa sẵn sàng, vui lòng thử lại\", {\n            variant: \"warning\"\n          });\n          return [];\n        }\n      }\n\n      // Lấy dữ liệu video\n      const videoElement = isAutoMode ? videoRef.current : (_webcamRef$current = webcamRef.current) === null || _webcamRef$current === void 0 ? void 0 : _webcamRef$current.video;\n      if (!videoElement || !canvasRef.current) return [];\n\n      // Kiểm tra trạng thái video stream\n      if (videoElement.readyState !== 4) {\n        console.warn(\"Video element không sẵn sàng, đang đợi...\");\n        return [];\n      }\n\n      // Lấy kích thước của video\n      const displaySize = {\n        width: videoElement.videoWidth || videoElement.width || 640,\n        height: videoElement.videoHeight || videoElement.height || 480\n      };\n\n      // Thử phát hiện với cả hai mô hình\n      let detections = [];\n\n      // Thử với SSD MobileNet trước (độ chính xác cao hơn)\n      try {\n        detections = await faceapi.detectAllFaces(videoElement, new faceapi.SsdMobilenetv1Options({\n          minConfidence: DETECTION_THRESHOLD\n        })).withFaceLandmarks().withFaceDescriptors();\n      } catch (err) {\n        console.warn(\"Lỗi khi sử dụng SSD MobileNet:\", err);\n      }\n\n      // Nếu không phát hiện được, thử với TinyFaceDetector\n      if (!detections || detections.length === 0) {\n        try {\n          detections = await faceapi.detectAllFaces(videoElement, new faceapi.TinyFaceDetectorOptions({\n            inputSize: 320,\n            scoreThreshold: DETECTION_THRESHOLD - 0.05 // Giảm ngưỡng thêm nữa\n          })).withFaceLandmarks().withFaceDescriptors();\n        } catch (err) {\n          console.warn(\"Lỗi khi sử dụng TinyFaceDetector:\", err);\n        }\n      }\n      if (!detections || detections.length === 0) {\n        if (ENABLE_DEBUG_LOGS) {\n          console.log(\"[DEBUG] Không phát hiện khuôn mặt - kiểm tra ánh sáng và vị trí\", new Date().toLocaleTimeString());\n        }\n\n        // Xóa canvas nếu không có phát hiện\n        const canvasElement = canvasRef.current;\n        if (canvasElement) {\n          const ctx = canvasElement.getContext(\"2d\");\n          ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n\n          // Vẽ hướng dẫn khi không có khuôn mặt\n          ctx.font = \"18px Arial\";\n          ctx.fillStyle = \"white\";\n          ctx.strokeStyle = \"black\";\n          ctx.lineWidth = 3;\n          const text = \"Không phát hiện khuôn mặt - Điều chỉnh vị trí và ánh sáng\";\n          const x = canvasElement.width / 2 - 180;\n          const y = canvasElement.height / 2;\n          ctx.strokeText(text, x, y);\n          ctx.fillText(text, x, y);\n        }\n        return [];\n      }\n      if (ENABLE_DEBUG_LOGS) {\n        console.log(`[DEBUG] Phát hiện ${detections.length} khuôn mặt`, new Date().toLocaleTimeString());\n      }\n\n      // Điều chỉnh kích thước phát hiện để phù hợp với kích thước hiển thị\n      const resizedDetections = faceapi.resizeResults(detections, displaySize);\n\n      // Cập nhật state\n      dispatch(setDetectedFaces(resizedDetections));\n\n      // Tạo FaceMatcher từ dữ liệu sinh viên\n      const labeledDescriptors = classStudents.filter(student => student.faceDescriptors && student.faceDescriptors.length > 0 && student.faceDescriptors[0].length === 128 // Đảm bảo descriptor có đúng 128 phần tử\n      ).map(student => {\n        try {\n          // Chuyển đổi mỗi descriptor thành Float32Array và xác minh độ dài\n          const descriptors = student.faceDescriptors.filter(desc => Array.isArray(desc) && desc.length === 128).map(descriptor => new Float32Array(descriptor));\n          if (descriptors.length === 0) return null;\n          return new faceapi.LabeledFaceDescriptors(student._id, descriptors);\n        } catch (err) {\n          console.error(`Lỗi khi xử lý descriptor của sinh viên ${student._id}:`, err);\n          return null;\n        }\n      }).filter(Boolean); // Lọc bỏ các giá trị null\n\n      // Tạo faceMatcher nếu có dữ liệu\n      if (labeledDescriptors.length === 0) {\n        console.warn(\"Không có dữ liệu khuôn mặt hợp lệ của sinh viên\");\n        // Tự động tạo dữ liệu demo nếu không có dữ liệu\n        if (!updateWithDemoFaceData()) {\n          enqueueSnackbar(\"Không có dữ liệu khuôn mặt của sinh viên. Đang tạo dữ liệu demo.\", {\n            variant: \"warning\"\n          });\n        }\n        return resizedDetections;\n      }\n\n      // Tạo faceMatcher với descriptor đã được xác thực\n      const faceMatcher = new faceapi.FaceMatcher(labeledDescriptors, RECOGNITION_THRESHOLD);\n\n      // Vẽ lên canvas nếu có khuôn mặt\n      const canvasElement = canvasRef.current;\n      canvasElement.width = displaySize.width;\n      canvasElement.height = displaySize.height;\n      const ctx = canvasElement.getContext(\"2d\");\n      ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n\n      // Vẽ các phát hiện lên canvas\n      resizedDetections.forEach(detection => {\n        try {\n          if (detection.descriptor && detection.descriptor.length === 128) {\n            const bestMatch = faceMatcher.findBestMatch(detection.descriptor);\n            const {\n              label,\n              distance\n            } = bestMatch;\n\n            // Kiểm tra nếu match với một sinh viên\n            if (label !== \"unknown\") {\n              // Tìm sinh viên trong danh sách\n              const student = classStudents.find(s => s._id === label);\n              if (student) {\n                // Cập nhật thông tin nhận diện cho sinh viên\n                const studentId = student._id;\n                const confidence = 1 - distance;\n\n                // Đánh dấu sinh viên đã điểm danh nếu đủ độ tin cậy\n                if (confidence >= CONFIDENCE_THRESHOLD) {\n                  handleMarkAttendance(studentId, confidence);\n                }\n\n                // Vẽ hộp và tên sinh viên\n                const drawBox = new faceapi.draw.DrawBox(detection.detection.box, {\n                  label: `${student.full_name} (${Math.round(confidence * 100)}%)`,\n                  boxColor: confidence >= CONFIDENCE_THRESHOLD ? \"green\" : \"orange\"\n                });\n                drawBox.draw(canvasElement);\n              }\n            } else {\n              // Không nhận diện được sinh viên\n              const drawBox = new faceapi.draw.DrawBox(detection.detection.box, {\n                label: \"Unknown\",\n                boxColor: \"red\"\n              });\n              drawBox.draw(canvasElement);\n            }\n          } else {\n            // Nếu descriptor không hợp lệ hoặc độ dài không đúng\n            console.warn(\"Phát hiện descriptor không hợp lệ\", detection.descriptor ? detection.descriptor.length : \"không có descriptor\");\n\n            // Không có descriptor\n            const drawBox = new faceapi.draw.DrawBox(detection.detection.box, {\n              label: \"Đang phân tích...\",\n              boxColor: \"blue\"\n            });\n            drawBox.draw(canvasElement);\n          }\n        } catch (err) {\n          console.error(\"Lỗi khi xử lý detection:\", err);\n        }\n\n        // Vẽ landmarks nếu đã bật\n        if (showLandmark && detection.landmarks) {\n          faceapi.draw.drawFaceLandmarks(canvasElement, detection);\n        }\n      });\n      return resizedDetections;\n    } catch (error) {\n      console.error(\"Lỗi phát hiện khuôn mặt:\", error);\n      enqueueSnackbar(\"Lỗi khi phát hiện khuôn mặt. Thử lại sau.\", {\n        variant: \"error\"\n      });\n      return [];\n    }\n  };\n\n  // Điểm danh thủ công\n  const openManualAttendanceDialog = student => {\n    setSelectedStudent(student);\n    setManualAttendanceData({\n      status: \"present\",\n      note: \"\"\n    });\n    setManualDialogOpen(true);\n  };\n  const handleManualDialogClose = () => {\n    setManualDialogOpen(false);\n  };\n  const handleManualAttendanceChange = e => {\n    setManualAttendanceData({\n      ...manualAttendanceData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleManualAttendanceSubmit = async () => {\n    if (!selectedStudent) return;\n    try {\n      const result = await dispatch(manualAttendance({\n        sessionId,\n        studentId: selectedStudent._id,\n        status: manualAttendanceData.status,\n        note: manualAttendanceData.note\n      })).unwrap();\n\n      // Cập nhật logs điểm danh\n      if (result && result.data) {\n        const updatedLogs = attendanceLogs.filter(log => log.student_id._id !== selectedStudent._id);\n        updatedLogs.push({\n          ...result.data,\n          student_id: selectedStudent\n        });\n        setAttendanceLogs(updatedLogs);\n      }\n      enqueueSnackbar(\"Điểm danh thủ công thành công\", {\n        variant: \"success\"\n      });\n      handleManualDialogClose();\n\n      // Cập nhật lại thông tin phiên điểm danh\n      const sessionResponse = await axios.get(`${API_URL}/attendance/sessions/${sessionId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSessionInfo(sessionResponse.data.data);\n    } catch (error) {\n      console.error(\"Lỗi khi điểm danh thủ công:\", error);\n      enqueueSnackbar(\"Lỗi khi điểm danh thủ công\", {\n        variant: \"error\"\n      });\n    }\n  };\n\n  // Đánh dấu điểm danh từ nhận diện khuôn mặt\n  const markAttendance = async (studentId, faceDescriptor, confidence, imageBase64) => {\n    try {\n      const result = await dispatch(verifyAttendance({\n        sessionId,\n        studentId,\n        faceDescriptor,\n        confidence,\n        imageBase64\n      })).unwrap();\n\n      // Cập nhật logs điểm danh\n      if (result && result.data) {\n        const student = classStudents.find(s => s._id === studentId);\n        if (student) {\n          const updatedLogs = attendanceLogs.filter(log => log.student_id._id !== studentId);\n          updatedLogs.push({\n            ...result.data,\n            student_id: student\n          });\n          setAttendanceLogs(updatedLogs);\n          enqueueSnackbar(`Đã điểm danh cho ${student.full_name}`, {\n            variant: \"success\"\n          });\n        }\n      }\n\n      // Cập nhật lại thông tin phiên điểm danh\n      const sessionResponse = await axios.get(`${API_URL}/attendance/sessions/${sessionId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSessionInfo(sessionResponse.data.data);\n      return true;\n    } catch (error) {\n      console.error(\"Lỗi khi xác nhận điểm danh:\", error);\n      enqueueSnackbar(\"Lỗi khi xác nhận điểm danh\", {\n        variant: \"error\"\n      });\n      return false;\n    }\n  };\n\n  // Kết thúc phiên điểm danh\n  const completeSession = async () => {\n    try {\n      await axios.put(`${API_URL}/attendance/sessions/${sessionId}`, {\n        status: \"completed\"\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      enqueueSnackbar(\"Phiên điểm danh đã kết thúc\", {\n        variant: \"success\"\n      });\n      navigate(`/teacher/classes/${classId}`);\n    } catch (error) {\n      console.error(\"Lỗi khi kết thúc phiên điểm danh:\", error);\n      enqueueSnackbar(\"Lỗi khi kết thúc phiên điểm danh\", {\n        variant: \"error\"\n      });\n    }\n  };\n\n  // Làm mới danh sách điểm danh\n  const refreshAttendanceLogs = async () => {\n    try {\n      const logsResponse = await axios.get(`${API_URL}/attendance/logs/${sessionId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setAttendanceLogs(logsResponse.data.data);\n      const sessionResponse = await axios.get(`${API_URL}/attendance/sessions/${sessionId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSessionInfo(sessionResponse.data.data);\n      enqueueSnackbar(\"Đã làm mới dữ liệu điểm danh\", {\n        variant: \"success\"\n      });\n    } catch (error) {\n      console.error(\"Lỗi khi làm mới dữ liệu:\", error);\n      enqueueSnackbar(\"Lỗi khi làm mới dữ liệu\", {\n        variant: \"error\"\n      });\n    }\n  };\n\n  // Chụp ảnh và nhận diện thủ công\n  const captureAndRecognize = async () => {\n    await handleDetectFaces();\n  };\n\n  // Hàm khởi tạo camera trực tiếp - nút duy nhất cho camera\n  const initDirectCamera = async () => {\n    try {\n      // Tải model nhận diện và đảm bảo model đã sẵn sàng\n      if (!isModelLoaded || !faceapi.nets.ssdMobilenetv1.isLoaded) {\n        enqueueSnackbar(\"Đang tải các mô hình nhận diện...\", {\n          variant: \"info\"\n        });\n        const modelLoaded = await loadFaceRecognitionModels();\n        if (!modelLoaded) {\n          enqueueSnackbar(\"Không thể tải mô hình nhận diện, vui lòng thử lại\", {\n            variant: \"error\"\n          });\n          return;\n        }\n      }\n\n      // Truy cập camera trực tiếp thông qua MediaDevices API\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: {\n            width: {\n              ideal: 1280\n            },\n            height: {\n              ideal: 720\n            },\n            facingMode: \"user\"\n          },\n          audio: false\n        });\n        console.log(\"Đã nhận được stream camera trực tiếp\", stream.id);\n\n        // Nếu đang sử dụng webcam component\n        if (webcamRef.current && webcamRef.current.video) {\n          webcamRef.current.video.srcObject = stream;\n        }\n        // Hoặc nếu đang sử dụng video element\n        else if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n          videoRef.current.onloadedmetadata = () => {\n            videoRef.current.play().catch(err => console.error(\"Lỗi khi play video:\", err));\n          };\n        }\n\n        // Đánh dấu camera và model đã sẵn sàng\n        dispatch(setModelLoaded(true));\n        dispatch(setCameraReady(true));\n        enqueueSnackbar(\"Đã kết nối camera thành công\", {\n          variant: \"success\"\n        });\n\n        // Bật hiển thị landmark sau khi camera khởi động\n        setTimeout(() => {\n          setShowLandmark(true);\n        }, 1000);\n      } catch (err) {\n        console.error(\"Lỗi truy cập camera:\", err);\n        enqueueSnackbar(`Không thể truy cập camera: ${err.message}`, {\n          variant: \"error\"\n        });\n      }\n    } catch (err) {\n      console.error(\"Lỗi khi khởi tạo camera trực tiếp:\", err);\n      enqueueSnackbar(`Lỗi: ${err.message}`, {\n        variant: \"error\"\n      });\n    }\n  };\n\n  // Điểm danh thủ công trong chế độ đơn giản\n  const showStudentList = () => {\n    if (!classInfo) return;\n\n    // Hiển thị danh sách sinh viên để điểm danh thủ công\n    const absentStudents = getAbsentStudents();\n    if (absentStudents.length === 0) {\n      enqueueSnackbar(\"Tất cả sinh viên đã được điểm danh\", {\n        variant: \"success\"\n      });\n      return;\n    }\n\n    // Hiển thị dialog chọn sinh viên để điểm danh\n    if (absentStudents.length > 0 && absentStudents[0]) {\n      openManualAttendanceDialog(absentStudents[0]);\n    }\n  };\n\n  // Bật/tắt hiển thị landmark trên khuôn mặt\n  const toggleLandmarkDetection = () => {\n    var _webcamRef$current2;\n    const newState = !showLandmark;\n    setShowLandmark(newState);\n\n    // Lấy canvas context\n    const canvasElement = canvasRef.current;\n    if (!canvasElement) return;\n    const ctx = canvasElement.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n\n    // Kiểm tra nếu không có khuôn mặt được phát hiện\n    if (!detectedFaces || detectedFaces.length === 0) return;\n\n    // Lấy video element\n    const videoElement = isAutoMode ? videoRef.current : (_webcamRef$current2 = webcamRef.current) === null || _webcamRef$current2 === void 0 ? void 0 : _webcamRef$current2.video;\n    if (!videoElement) return;\n\n    // Tính toán tỷ lệ hiển thị\n    const displaySize = {\n      width: videoElement.videoWidth || videoElement.width,\n      height: videoElement.videoHeight || videoElement.height\n    };\n\n    // Đảm bảo canvas có kích thước phù hợp\n    faceapi.matchDimensions(canvasElement, displaySize);\n    try {\n      // Tạo FaceMatcher từ dữ liệu sinh viên có độ dài hợp lệ\n      const labeledDescriptors = classStudents.filter(student => student.faceDescriptors && student.faceDescriptors.length > 0 && student.faceDescriptors[0].length === 128 // Đảm bảo descriptor có đúng 128 phần tử\n      ).map(student => {\n        try {\n          // Chuyển đổi mỗi descriptor thành Float32Array và xác minh độ dài\n          const descriptors = student.faceDescriptors.filter(desc => Array.isArray(desc) && desc.length === 128).map(descriptor => new Float32Array(descriptor));\n          if (descriptors.length === 0) return null;\n          return new faceapi.LabeledFaceDescriptors(student._id, descriptors);\n        } catch (err) {\n          if (ENABLE_DEBUG_LOGS) {\n            console.error(`Lỗi khi xử lý descriptor của sinh viên ${student._id}:`, err);\n          }\n          return null;\n        }\n      }).filter(Boolean); // Lọc bỏ các giá trị null\n\n      // Tạo faceMatcher nếu có dữ liệu\n      let faceMatcher = null;\n      if (labeledDescriptors.length > 0) {\n        faceMatcher = new faceapi.FaceMatcher(labeledDescriptors, RECOGNITION_THRESHOLD);\n      } else if (ENABLE_DEBUG_LOGS) {\n        console.warn(\"Không có dữ liệu khuôn mặt hợp lệ của sinh viên\");\n      }\n\n      // Sử dụng faceapi.resizeResults để điều chỉnh kích thước phát hiện phù hợp với canvas\n      const resizedDetections = faceapi.resizeResults(detectedFaces, displaySize);\n\n      // Vẽ các phát hiện lên canvas\n      resizedDetections.forEach(detection => {\n        try {\n          // Chỉ xử lý descriptor hợp lệ\n          if (detection.descriptor && detection.descriptor.length === 128 && faceMatcher) {\n            var _classStudents$find;\n            const bestMatch = faceMatcher.findBestMatch(detection.descriptor);\n            const {\n              label,\n              distance\n            } = bestMatch;\n            const drawBox = new faceapi.draw.DrawBox(detection.detection.box, {\n              label: label !== \"unknown\" ? `${((_classStudents$find = classStudents.find(s => s._id === label)) === null || _classStudents$find === void 0 ? void 0 : _classStudents$find.full_name) || \"Unknown\"} (${Math.round((1 - distance) * 100)}%)` : \"Unknown\",\n              boxColor: label !== \"unknown\" ? \"green\" : \"red\"\n            });\n            drawBox.draw(canvasElement);\n          } else {\n            // Nếu không có descriptor hoặc không thể nhận diện\n            const drawBox = new faceapi.draw.DrawBox(detection.detection.box, {\n              label: \"Đang phân tích...\",\n              boxColor: \"blue\"\n            });\n            drawBox.draw(canvasElement);\n          }\n\n          // Vẽ landmarks nếu đã bật và detection có landmarks\n          if (newState && detection.landmarks && detection.landmarks.positions && detection.landmarks.positions.length > 0) {\n            try {\n              // Vẽ landmark cho từng detection riêng biệt\n              faceapi.draw.drawFaceLandmarks(canvasElement, detection);\n            } catch (err) {\n              console.error(\"Lỗi khi vẽ landmarks:\", err);\n            }\n          }\n        } catch (err) {\n          console.error(\"Lỗi khi xử lý detection trong toggle landmark:\", err);\n        }\n      });\n    } catch (error) {\n      console.error(\"Lỗi khi hiển thị landmarks:\", error);\n    }\n  };\n\n  // Xử lý đánh dấu sinh viên điểm danh\n  const handleMarkAttendance = async (studentId, confidence) => {\n    // Kiểm tra xem sinh viên đã được điểm danh chưa\n    const isAlreadyAttended = attendanceLogs.some(log => log.student_id._id === studentId && log.status === \"present\");\n    if (isAlreadyAttended) {\n      if (ENABLE_DEBUG_LOGS) {\n        console.log(`[DEBUG] Sinh viên ${studentId} đã được điểm danh trước đó`);\n      }\n      return;\n    }\n    try {\n      var _webcamRef$current3;\n      // Lấy dữ liệu video\n      const videoElement = isAutoMode ? videoRef.current : (_webcamRef$current3 = webcamRef.current) === null || _webcamRef$current3 === void 0 ? void 0 : _webcamRef$current3.video;\n      if (!videoElement) return;\n\n      // Tạo ảnh chụp từ video element\n      let imageBase64 = null;\n\n      // Nếu sử dụng webcam component\n      if (!isAutoMode && webcamRef.current) {\n        imageBase64 = webcamRef.current.getScreenshot();\n      }\n      // Nếu sử dụng video element trực tiếp\n      else if (isAutoMode) {\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = videoElement.videoWidth;\n        canvas.height = videoElement.videoHeight;\n        const ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(videoElement, 0, 0);\n        imageBase64 = canvas.toDataURL(\"image/jpeg\");\n      }\n\n      // Tìm sinh viên đã được phát hiện\n      const student = classStudents.find(s => s._id === studentId);\n      if (!student) {\n        console.error(`Không tìm thấy sinh viên với ID ${studentId}`);\n        return;\n      }\n\n      // Lấy descriptor mới nhất từ sinh viên\n      const descriptor = student.faceDescriptors && student.faceDescriptors.length > 0 ? student.faceDescriptors[0] : null;\n\n      // Gọi API điểm danh\n      if (ENABLE_DEBUG_LOGS) {\n        console.log(`[DEBUG] Đánh dấu điểm danh cho ${student.full_name} với độ tin cậy ${confidence.toFixed(2)}`);\n      }\n\n      // Gọi hàm điểm danh\n      await markAttendance(studentId, descriptor, confidence, imageBase64);\n    } catch (error) {\n      console.error(\"Lỗi khi đánh dấu điểm danh:\", error);\n    }\n  };\n\n  // Hàm để tạo dữ liệu điểm danh demo khi không có descriptor\n  const generateDemoFaceData = () => {\n    if (!classInfo || !classInfo.students || classInfo.students.length === 0) {\n      console.warn(\"Không có dữ liệu sinh viên để tạo dữ liệu demo\");\n      return [];\n    }\n\n    // Tạo descriptor mẫu 128 phần tử\n    const createDemoDescriptor = () => {\n      // Tạo một mảng 128 phần tử với giá trị ngẫu nhiên\n      const descriptor = new Array(128).fill(0).map(() => (Math.random() - 0.5) * 0.8);\n      return descriptor;\n    };\n\n    // Tạo dữ liệu mẫu cho mỗi sinh viên\n    const demoStudentsData = classInfo.students.map(student => {\n      // Mỗi sinh viên có 3 descriptor mẫu\n      const descriptors = [createDemoDescriptor(), createDemoDescriptor(), createDemoDescriptor()];\n      return {\n        ...student,\n        faceDescriptors: descriptors\n      };\n    });\n    console.log(`[DEMO] Đã tạo dữ liệu demo cho ${demoStudentsData.length} sinh viên`);\n    enqueueSnackbar(`Đã tạo dữ liệu nhận diện demo cho ${demoStudentsData.length} sinh viên`, {\n      variant: \"info\",\n      autoHideDuration: 5000\n    });\n    return demoStudentsData;\n  };\n\n  // Hàm để cập nhật dữ liệu khuôn mặt khi không có dữ liệu thực\n  const updateWithDemoFaceData = () => {\n    if (classStudents.length === 0 || !classStudents.some(student => student.faceDescriptors && student.faceDescriptors.length > 0 && student.faceDescriptors[0].length === 128)) {\n      console.log(\"[DEMO] Không tìm thấy dữ liệu khuôn mặt hợp lệ, tạo dữ liệu demo\");\n      const demoData = generateDemoFaceData();\n      if (demoData.length > 0) {\n        dispatch({\n          type: \"faceRecognition/getClassFaceFeatures/fulfilled\",\n          payload: {\n            data: demoData\n          }\n        });\n        return true;\n      }\n    }\n    return false;\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"60vh\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1105,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Lấy danh sách sinh viên vắng mặt\n  const getAbsentStudents = () => {\n    if (!classInfo || !sessionInfo) return [];\n    const presentStudentIds = attendanceLogs.filter(log => log.status === \"present\").map(log => log.student_id._id);\n    return classInfo.students.filter(student => !presentStudentIds.includes(student._id));\n  };\n  const absentStudents = getAbsentStudents();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: [\"\\u0110i\\u1EC3m Danh - \", classInfo === null || classInfo === void 0 ? void 0 : classInfo.class_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      color: \"textSecondary\",\n      gutterBottom: true,\n      children: [\"Bu\\u1ED5i \", sessionInfo === null || sessionInfo === void 0 ? void 0 : sessionInfo.session_number, \" -\", \" \", new Date(sessionInfo === null || sessionInfo === void 0 ? void 0 : sessionInfo.date).toLocaleDateString(\"vi-VN\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      mt: 1,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              mb: 2,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Camera nh\\u1EADn di\\u1EC7n\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1151,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Chip, {\n                  label: isAutoMode ? \"Tự động đang bật\" : \"Tự động đang tắt\",\n                  color: isAutoMode ? \"success\" : \"default\",\n                  sx: {\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1153,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: isAutoMode ? \"error\" : \"primary\",\n                  onClick: isAutoMode ? () => {\n                    // Dừng tự động\n                    if (intervalId) {\n                      clearInterval(intervalId);\n                      setIntervalId(null);\n                    }\n                    setIsAutoMode(false);\n                    enqueueSnackbar(\"Đã tắt chế độ tự động điểm danh\", {\n                      variant: \"info\"\n                    });\n                  } : () => {\n                    // Bắt đầu tự động\n                    if (intervalId) {\n                      clearInterval(intervalId);\n                    }\n                    const id = setInterval(() => {\n                      handleDetectFaces();\n                    }, AUTO_DETECT_INTERVAL);\n                    setIntervalId(id);\n                    setIsAutoMode(true);\n                    enqueueSnackbar(\"Đã bật chế độ tự động điểm danh\", {\n                      variant: \"info\"\n                    });\n                  },\n                  children: isAutoMode ? \"Tắt tự động\" : \"Bật tự động\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1158,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1152,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1145,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            sx: {\n              position: \"relative\",\n              width: \"100%\",\n              height: \"400px\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              overflow: \"hidden\",\n              mb: 2\n            },\n            children: isCameraReady ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [isAutoMode ?\n              /*#__PURE__*/\n              // Sử dụng video element trực tiếp thay vì Webcam component\n              _jsxDEV(\"video\", {\n                ref: videoRef,\n                style: {\n                  position: \"absolute\",\n                  width: \"100%\",\n                  height: \"100%\",\n                  objectFit: \"cover\"\n                },\n                autoPlay: true,\n                playsInline: true,\n                muted: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1213,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Webcam, {\n                audio: false,\n                ref: webcamRef,\n                screenshotFormat: \"image/jpeg\",\n                width: 640,\n                height: 480,\n                videoConstraints: {\n                  width: 640,\n                  height: 480,\n                  facingMode: \"user\"\n                },\n                style: {\n                  position: \"absolute\",\n                  width: \"100%\",\n                  height: \"100%\",\n                  objectFit: \"cover\"\n                },\n                onUserMedia: stream => {\n                  console.log(\"Camera đã được cấp quyền và khởi tạo\", stream.id);\n                  // Đảm bảo readyState được kiểm tra khi stream đã sẵn sàng\n                  setTimeout(() => {\n                    if (webcamRef.current && webcamRef.current.video) {\n                      console.log(\"Stream ready, readyState=\", webcamRef.current.video.readyState);\n                      dispatch(setCameraReady(true));\n                    }\n                  }, 500);\n                },\n                onUserMediaError: err => {\n                  console.error(\"Lỗi khi truy cập camera:\", err);\n                  enqueueSnackbar(`Không thể truy cập camera: ${err.name === \"NotAllowedError\" ? \"Bạn chưa cấp quyền truy cập camera\" : err.name === \"NotFoundError\" ? \"Không tìm thấy thiết bị camera\" : err.message || \"Lỗi không xác định\"}`, {\n                    variant: \"error\"\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1226,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n                ref: canvasRef,\n                style: {\n                  position: \"absolute\",\n                  top: 0,\n                  left: 0,\n                  width: \"100%\",\n                  height: \"100%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1277,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 50\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1290,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                mt: 2,\n                children: \"\\u0110ang kh\\u1EDFi t\\u1EA1o camera...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1291,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                color: \"text.secondary\",\n                sx: {\n                  mt: 1\n                },\n                children: isModelLoaded ? \"Chờ kết nối camera - Hãy đảm bảo bạn đã cấp quyền camera\" : \"Đang tải mô hình nhận diện khuôn mặt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1292,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mt: 2,\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\",\n                  gap: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  size: \"small\",\n                  onClick: initDirectCamera,\n                  children: \"Kh\\u1EDFi \\u0111\\u1ED9ng camera tr\\u1EF1c ti\\u1EBFp\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1311,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: \"warning\",\n                  size: \"small\",\n                  onClick: updateWithDemoFaceData,\n                  children: \"T\\u1EA1o d\\u1EEF li\\u1EC7u nh\\u1EADn di\\u1EC7n demo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1320,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1302,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1289,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              onClick: captureAndRecognize,\n              startIcon: /*#__PURE__*/_jsxDEV(CameraAlt, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1337,\n                columnNumber: 28\n              }, this),\n              disabled: !isCameraReady || isRecognizing || isAutoMode,\n              children: isRecognizing ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 24,\n                color: \"inherit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1341,\n                columnNumber: 19\n              }, this) : \"Chụp & Nhận diện\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1334,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: [isCameraReady && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: showLandmark ? \"success\" : \"info\",\n                  onClick: toggleLandmarkDetection,\n                  sx: {\n                    mr: 1\n                  },\n                  children: showLandmark ? \"Tắt Landmark\" : \"Hiện Landmark\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1350,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: isAutoMode ? \"error\" : \"primary\",\n                  onClick: isAutoMode ? () => {\n                    // Dừng tự động\n                    if (intervalId) {\n                      clearInterval(intervalId);\n                      setIntervalId(null);\n                    }\n                    setIsAutoMode(false);\n                    enqueueSnackbar(\"Đã tắt chế độ tự động điểm danh\", {\n                      variant: \"info\"\n                    });\n                  } : () => {\n                    // Bắt đầu tự động\n                    if (intervalId) {\n                      clearInterval(intervalId);\n                    }\n                    const id = setInterval(() => {\n                      handleDetectFaces();\n                    }, AUTO_DETECT_INTERVAL);\n                    setIntervalId(id);\n                    setIsAutoMode(true);\n                    enqueueSnackbar(\"Đã bật chế độ tự động điểm danh\", {\n                      variant: \"info\"\n                    });\n                  },\n                  sx: {\n                    mr: 1\n                  },\n                  children: isAutoMode ? \"Tắt tự động\" : \"Bật tự động\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1359,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: completeSession,\n                startIcon: /*#__PURE__*/_jsxDEV(Save, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1403,\n                  columnNumber: 30\n                }, this),\n                disabled: (sessionInfo === null || sessionInfo === void 0 ? void 0 : sessionInfo.status) === \"completed\",\n                children: \"K\\u1EBFt th\\xFAc phi\\xEAn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1399,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1347,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1333,\n            columnNumber: 13\n          }, this), recognizedStudents.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n            mt: 2,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: [\"\\u0110\\xE3 nh\\u1EADn di\\u1EC7n (\", recognizedStudents.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1413,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 1,\n              children: recognizedStudents.map((student, index) => /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                sm: 4,\n                children: /*#__PURE__*/_jsxDEV(Paper, {\n                  elevation: 2,\n                  sx: {\n                    p: 1,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    noWrap: true,\n                    children: student.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1428,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    color: \"textSecondary\",\n                    children: [Math.round(student.confidence * 100), \"% match\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1431,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    variant: \"outlined\",\n                    color: \"primary\",\n                    sx: {\n                      mt: 1\n                    },\n                    onClick: () => handleMarkAttendance(student.studentId, student.confidence),\n                    children: [/*#__PURE__*/_jsxDEV(Check, {\n                      fontSize: \"small\",\n                      sx: {\n                        mr: 0.5\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1446,\n                      columnNumber: 27\n                    }, this), \"\\u0110i\\u1EC3m danh\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1434,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1419,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1418,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1416,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1412,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            mb: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              mb: 2,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: [\"C\\xF3 m\\u1EB7t (\", attendanceLogs.filter(log => log.status === \"present\").length, \"/\", classInfo === null || classInfo === void 0 ? void 0 : classInfo.students.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1467,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"small\",\n                onClick: refreshAttendanceLogs,\n                children: /*#__PURE__*/_jsxDEV(Refresh, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1476,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1475,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1461,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              dense: true,\n              children: [attendanceLogs.filter(log => log.status === \"present\").sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp)).map(log => /*#__PURE__*/_jsxDEV(ListItem, {\n                secondaryAction: /*#__PURE__*/_jsxDEV(Chip, {\n                  size: \"small\",\n                  icon: log.recognized ? /*#__PURE__*/_jsxDEV(VerifiedUser, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1492,\n                    columnNumber: 31\n                  }, this) : null,\n                  label: log.recognized ? \"Tự động\" : \"Thủ công\",\n                  color: log.recognized ? \"success\" : \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1488,\n                  columnNumber: 25\n                }, this),\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    alt: log.student_id.full_name,\n                    src: log.student_id.avatar_url\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1501,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1500,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: log.student_id.full_name,\n                  secondary: `${new Date(log.timestamp).toLocaleTimeString(\"vi-VN\")}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1506,\n                  columnNumber: 23\n                }, this)]\n              }, log._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1485,\n                columnNumber: 21\n              }, this)), attendanceLogs.filter(log => log.status === \"present\").length === 0 && /*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: \"Ch\\u01B0a c\\xF3 sinh vi\\xEAn n\\xE0o \\u0111i\\u1EC3m danh\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1518,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1517,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1480,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1460,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1459,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: [\"V\\u1EAFng m\\u1EB7t (\", absentStudents.length, \"/\", classInfo === null || classInfo === void 0 ? void 0 : classInfo.students.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1527,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              dense: true,\n              children: [absentStudents.map(student => /*#__PURE__*/_jsxDEV(ListItem, {\n                secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n                  edge: \"end\",\n                  onClick: () => openManualAttendanceDialog(student),\n                  children: /*#__PURE__*/_jsxDEV(Edit, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1540,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1536,\n                  columnNumber: 23\n                }, this),\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    alt: student.full_name,\n                    src: student.avatar_url\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1545,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1544,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: student.full_name,\n                  secondary: student.student_code\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1550,\n                  columnNumber: 21\n                }, this)]\n              }, student._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1533,\n                columnNumber: 19\n              }, this)), absentStudents.length === 0 && /*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: \"Kh\\xF4ng c\\xF3 sinh vi\\xEAn n\\xE0o v\\u1EAFng m\\u1EB7t\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1559,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1558,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1531,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1526,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1525,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1458,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: manualDialogOpen,\n      onClose: handleManualDialogClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"\\u0110i\\u1EC3m danh th\\u1EE7 c\\xF4ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1570,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: [selectedStudent === null || selectedStudent === void 0 ? void 0 : selectedStudent.full_name, \" (\", selectedStudent === null || selectedStudent === void 0 ? void 0 : selectedStudent.student_code, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1573,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            margin: \"normal\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Tr\\u1EA1ng th\\xE1i\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1578,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              name: \"status\",\n              value: manualAttendanceData.status,\n              onChange: handleManualAttendanceChange,\n              label: \"Tr\\u1EA1ng th\\xE1i\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"present\",\n                children: \"C\\xF3 m\\u1EB7t\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1585,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"absent\",\n                children: \"V\\u1EAFng m\\u1EB7t\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1586,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"late\",\n                children: \"\\u0110i tr\\u1EC5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1587,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"early_leave\",\n                children: \"V\\u1EC1 s\\u1EDBm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1588,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1579,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1577,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            margin: \"normal\",\n            name: \"note\",\n            label: \"Ghi ch\\xFA\",\n            value: manualAttendanceData.note,\n            onChange: handleManualAttendanceChange,\n            multiline: true,\n            rows: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1592,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1572,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1571,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleManualDialogClose,\n          children: \"H\\u1EE7y\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1605,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleManualAttendanceSubmit,\n          variant: \"contained\",\n          children: \"X\\xE1c nh\\u1EADn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1606,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1604,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1569,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1132,\n    columnNumber: 5\n  }, this);\n};\n_s(AttendancePage, \"xF2uNwGAKlt1XU8f7AkoFEYVw9M=\", false, function () {\n  return [useParams, useNavigate, useDispatch, useSnackbar, useSelector, useSelector];\n});\n_c = AttendancePage;\nexport default AttendancePage;\nvar _c;\n$RefreshReg$(_c, \"AttendancePage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","useDispatch","useSelector","useSnackbar","Box","Typography","Card","CardContent","Grid","Paper","Button","Divider","CircularProgress","List","ListItem","ListItemAvatar","ListItemText","Avatar","Chip","Dialog","DialogTitle","DialogContent","DialogActions","TextField","FormControl","InputLabel","Select","MenuItem","IconButton","Alert","CameraAlt","Check","Close","Edit","Refresh","Save","VerifiedUser","HourglassEmpty","Webcam","faceapi","getClassFaceFeatures","verifyAttendance","manualAttendance","setModelLoaded","setCameraReady","setDetectedFaces","setRecognizedStudents","clearRecognitionState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","process","env","REACT_APP_API_URL","AttendancePage","_s","classId","sessionId","navigate","dispatch","enqueueSnackbar","webcamRef","canvasRef","videoRef","intervalId","setIntervalId","showLandmark","setShowLandmark","landmarkIntervalId","setLandmarkIntervalId","token","state","auth","isModelLoaded","isCameraReady","detectedFaces","recognizedStudents","classStudents","isProcessing","error","faceRecognition","classInfo","setClassInfo","sessionInfo","setSessionInfo","attendanceLogs","setAttendanceLogs","isLoading","setIsLoading","isRecognizing","setIsRecognizing","isAutoMode","setIsAutoMode","selectedStudent","setSelectedStudent","manualDialogOpen","setManualDialogOpen","manualAttendanceData","setManualAttendanceData","status","note","RECOGNITION_THRESHOLD","DETECTION_THRESHOLD","CONFIDENCE_THRESHOLD","AUTO_DETECT_INTERVAL","ENABLE_DEBUG_LOGS","loadInitialData","loadModelsPromise","loadFaceRecognitionModels","Promise","resolve","classPromise","get","headers","Authorization","sessionPromise","logsPromise","classResponse","sessionResponse","logsResponse","all","data","console","log","faceFeatureResult","unwrap","students","length","validDescriptorsCount","invalidDescriptorsCount","forEach","student","hasDescriptors","faceDescriptors","Array","isArray","validDescriptors","filter","desc","full_name","variant","autoHideDuration","clearInterval","current","video","srcObject","tracks","getTracks","track","stop","MODEL_URL","modelPromises","nets","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","ssdMobilenetv1","modelStatuses","isLoaded","every","handleDetectFaces","_webcamRef$current","warn","videoElement","readyState","displaySize","width","videoWidth","height","videoHeight","detections","detectAllFaces","SsdMobilenetv1Options","minConfidence","withFaceLandmarks","withFaceDescriptors","err","TinyFaceDetectorOptions","inputSize","scoreThreshold","Date","toLocaleTimeString","canvasElement","ctx","getContext","clearRect","font","fillStyle","strokeStyle","lineWidth","text","x","y","strokeText","fillText","resizedDetections","resizeResults","labeledDescriptors","map","descriptors","descriptor","Float32Array","LabeledFaceDescriptors","_id","Boolean","updateWithDemoFaceData","faceMatcher","FaceMatcher","detection","bestMatch","findBestMatch","label","distance","find","s","studentId","confidence","handleMarkAttendance","drawBox","draw","DrawBox","box","Math","round","boxColor","landmarks","drawFaceLandmarks","openManualAttendanceDialog","handleManualDialogClose","handleManualAttendanceChange","e","target","name","value","handleManualAttendanceSubmit","result","updatedLogs","student_id","push","markAttendance","faceDescriptor","imageBase64","completeSession","put","refreshAttendanceLogs","captureAndRecognize","initDirectCamera","modelLoaded","stream","navigator","mediaDevices","getUserMedia","ideal","facingMode","audio","id","onloadedmetadata","play","catch","setTimeout","message","showStudentList","absentStudents","getAbsentStudents","toggleLandmarkDetection","_webcamRef$current2","newState","matchDimensions","_classStudents$find","positions","isAlreadyAttended","some","_webcamRef$current3","getScreenshot","canvas","document","createElement","drawImage","toDataURL","toFixed","generateDemoFaceData","createDemoDescriptor","fill","random","demoStudentsData","demoData","type","payload","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","presentStudentIds","includes","gutterBottom","class_name","color","session_number","date","toLocaleDateString","container","spacing","mt","item","xs","md","mb","sx","mr","onClick","setInterval","elevation","position","overflow","ref","style","objectFit","autoPlay","playsInline","muted","screenshotFormat","videoConstraints","onUserMedia","onUserMediaError","top","left","flexDirection","size","gap","startIcon","disabled","index","sm","p","noWrap","fontSize","dense","sort","a","b","timestamp","secondaryAction","icon","recognized","alt","src","avatar_url","primary","secondary","edge","student_code","open","onClose","fullWidth","margin","onChange","multiline","rows","_c","$RefreshReg$"],"sources":["C:/Users/kasiz/Documents/Studying/FaceReg/frontend/src/pages/teacher/AttendancePage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Paper,\r\n  Button,\r\n  Divider,\r\n  CircularProgress,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Avatar,\r\n  Chip,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  IconButton,\r\n  Alert,\r\n} from \"@mui/material\";\r\nimport {\r\n  CameraAlt,\r\n  Check,\r\n  Close,\r\n  Edit,\r\n  Refresh,\r\n  Save,\r\n  VerifiedUser,\r\n  HourglassEmpty,\r\n} from \"@mui/icons-material\";\r\nimport Webcam from \"react-webcam\";\r\nimport * as faceapi from \"face-api.js\";\r\nimport {\r\n  getClassFaceFeatures,\r\n  verifyAttendance,\r\n  manualAttendance,\r\n  setModelLoaded,\r\n  setCameraReady,\r\n  setDetectedFaces,\r\n  setRecognizedStudents,\r\n  clearRecognitionState,\r\n} from \"../../redux/slices/faceRecognitionSlice\";\r\nimport axios from \"axios\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\r\n\r\nconst AttendancePage = () => {\r\n  const { classId, sessionId } = useParams();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const videoRef = useRef(null);\r\n  const [intervalId, setIntervalId] = useState(null);\r\n  const [showLandmark, setShowLandmark] = useState(false);\r\n  const [landmarkIntervalId, setLandmarkIntervalId] = useState(null);\r\n\r\n  const { token } = useSelector((state) => state.auth);\r\n  const {\r\n    isModelLoaded,\r\n    isCameraReady,\r\n    detectedFaces,\r\n    recognizedStudents,\r\n    classStudents,\r\n    isProcessing,\r\n    error,\r\n  } = useSelector((state) => state.faceRecognition);\r\n\r\n  const [classInfo, setClassInfo] = useState(null);\r\n  const [sessionInfo, setSessionInfo] = useState(null);\r\n  const [attendanceLogs, setAttendanceLogs] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isRecognizing, setIsRecognizing] = useState(false);\r\n  const [isAutoMode, setIsAutoMode] = useState(false);\r\n  const [selectedStudent, setSelectedStudent] = useState(null);\r\n  const [manualDialogOpen, setManualDialogOpen] = useState(false);\r\n  const [manualAttendanceData, setManualAttendanceData] = useState({\r\n    status: \"present\",\r\n    note: \"\",\r\n  });\r\n\r\n  // Các hằng số cấu hình\r\n  const RECOGNITION_THRESHOLD = 0.5; // Ngưỡng nhận diện\r\n  const DETECTION_THRESHOLD = 0.3; // Giảm ngưỡng phát hiện khuôn mặt\r\n  const CONFIDENCE_THRESHOLD = 0.6; // Ngưỡng độ tin cậy để điểm danh\r\n  const AUTO_DETECT_INTERVAL = 1000; // Thời gian giữa các lần phát hiện (ms)\r\n  const ENABLE_DEBUG_LOGS = true; // Bật/tắt log gỡ lỗi\r\n\r\n  // Load class info, session info và models\r\n  useEffect(() => {\r\n    const loadInitialData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n\r\n        // Bắt đầu tải dữ liệu và models song song\r\n        const loadModelsPromise = !isModelLoaded\r\n          ? loadFaceRecognitionModels()\r\n          : Promise.resolve(true);\r\n\r\n        // Lấy thông tin lớp học\r\n        const classPromise = axios.get(\r\n          `${API_URL}/classes/teaching/${classId}`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        );\r\n\r\n        // Lấy thông tin phiên điểm danh\r\n        const sessionPromise = axios.get(\r\n          `${API_URL}/attendance/sessions/${sessionId}`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        );\r\n\r\n        // Lấy danh sách điểm danh\r\n        const logsPromise = axios.get(\r\n          `${API_URL}/attendance/logs/${sessionId}`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        );\r\n\r\n        // Chờ tất cả API calls hoàn thành\r\n        const [classResponse, sessionResponse, logsResponse] =\r\n          await Promise.all([classPromise, sessionPromise, logsPromise]);\r\n\r\n        setClassInfo(classResponse.data.data);\r\n        setSessionInfo(sessionResponse.data.data);\r\n        setAttendanceLogs(logsResponse.data.data);\r\n\r\n        // Lấy đặc trưng khuôn mặt của sinh viên trong lớp\r\n        console.log(\r\n          \"[DEBUG] Bắt đầu lấy đặc trưng khuôn mặt của sinh viên, classId:\",\r\n          classId\r\n        );\r\n\r\n        // Dispatch action để lấy feature và theo dõi kết quả\r\n        const faceFeatureResult = await dispatch(\r\n          getClassFaceFeatures(classId)\r\n        ).unwrap();\r\n\r\n        // Kiểm tra xem có dữ liệu trả về không\r\n        if (faceFeatureResult && faceFeatureResult.students) {\r\n          console.log(\r\n            `[DEBUG] Nhận được dữ liệu khuôn mặt của ${faceFeatureResult.students.length} sinh viên`\r\n          );\r\n\r\n          // Kiểm tra chi tiết dữ liệu khuôn mặt\r\n          let validDescriptorsCount = 0;\r\n          let invalidDescriptorsCount = 0;\r\n\r\n          faceFeatureResult.students.forEach((student) => {\r\n            const hasDescriptors =\r\n              student.faceDescriptors &&\r\n              Array.isArray(student.faceDescriptors) &&\r\n              student.faceDescriptors.length > 0;\r\n            const validDescriptors = hasDescriptors\r\n              ? student.faceDescriptors.filter(\r\n                  (desc) => Array.isArray(desc) && desc.length === 128\r\n                ).length\r\n              : 0;\r\n\r\n            if (validDescriptors > 0) {\r\n              validDescriptorsCount++;\r\n              console.log(\r\n                `[DEBUG] Sinh viên ${\r\n                  student.full_name\r\n                } có ${validDescriptors}/${\r\n                  hasDescriptors ? student.faceDescriptors.length : 0\r\n                } descriptor hợp lệ`\r\n              );\r\n            } else {\r\n              invalidDescriptorsCount++;\r\n              console.log(\r\n                `[DEBUG] Sinh viên ${student.full_name} không có descriptor hợp lệ`\r\n              );\r\n              if (hasDescriptors && student.faceDescriptors.length > 0) {\r\n                console.log(\r\n                  `[DEBUG] Chi tiết descriptor đầu tiên:`,\r\n                  typeof student.faceDescriptors[0],\r\n                  Array.isArray(student.faceDescriptors[0])\r\n                    ? student.faceDescriptors[0].length\r\n                    : \"không phải mảng\"\r\n                );\r\n              }\r\n            }\r\n          });\r\n\r\n          console.log(\r\n            `[DEBUG] Tổng hợp: ${validDescriptorsCount} sinh viên có descriptor hợp lệ, ${invalidDescriptorsCount} sinh viên không có`\r\n          );\r\n\r\n          if (validDescriptorsCount === 0) {\r\n            enqueueSnackbar(\r\n              \"Không có sinh viên nào có dữ liệu khuôn mặt, vui lòng cập nhật dữ liệu khuôn mặt cho sinh viên\",\r\n              {\r\n                variant: \"warning\",\r\n                autoHideDuration: 8000,\r\n              }\r\n            );\r\n          }\r\n        } else {\r\n          console.log(\"[DEBUG] Không nhận được dữ liệu khuôn mặt từ API\");\r\n          enqueueSnackbar(\"Không thể tải dữ liệu nhận diện khuôn mặt\", {\r\n            variant: \"error\",\r\n          });\r\n        }\r\n\r\n        // Không chờ đợi model load xong mới hiển thị UI\r\n        setIsLoading(false);\r\n\r\n        // Model sẽ load song song\r\n        await loadModelsPromise;\r\n      } catch (error) {\r\n        console.error(\"Lỗi khi tải dữ liệu:\", error);\r\n        enqueueSnackbar(\"Lỗi khi tải dữ liệu\", { variant: \"error\" });\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    loadInitialData();\r\n\r\n    // Clean up\r\n    return () => {\r\n      if (intervalId) {\r\n        clearInterval(intervalId);\r\n      }\r\n\r\n      // Dừng landmark interval nếu đang chạy\r\n      if (landmarkIntervalId) {\r\n        clearInterval(landmarkIntervalId);\r\n      }\r\n\r\n      // Dừng camera stream nếu đang chạy\r\n      if (\r\n        webcamRef.current &&\r\n        webcamRef.current.video &&\r\n        webcamRef.current.video.srcObject\r\n      ) {\r\n        const tracks = webcamRef.current.video.srcObject.getTracks();\r\n        tracks.forEach((track) => track.stop());\r\n      }\r\n\r\n      if (videoRef.current && videoRef.current.srcObject) {\r\n        const tracks = videoRef.current.srcObject.getTracks();\r\n        tracks.forEach((track) => track.stop());\r\n      }\r\n\r\n      dispatch(clearRecognitionState());\r\n    };\r\n  }, [\r\n    classId,\r\n    sessionId,\r\n    token,\r\n    dispatch,\r\n    enqueueSnackbar,\r\n    isModelLoaded,\r\n    intervalId,\r\n    landmarkIntervalId,\r\n  ]);\r\n\r\n  // Load các mô hình nhận diện khuôn mặt\r\n  const loadFaceRecognitionModels = async () => {\r\n    try {\r\n      const MODEL_URL = \"/models\";\r\n      console.log(\"Bắt đầu tải models từ:\", MODEL_URL);\r\n\r\n      // Thêm SsdMobilenetv1 vào danh sách models cần tải\r\n      const modelPromises = [\r\n        faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL),\r\n        faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),\r\n        faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL),\r\n        faceapi.nets.ssdMobilenetv1.loadFromUri(MODEL_URL), // Thêm model SSD MobileNet\r\n      ];\r\n\r\n      // Kiểm tra xem các models đã được tải chưa\r\n      const modelStatuses = [\r\n        faceapi.nets.tinyFaceDetector.isLoaded,\r\n        faceapi.nets.faceLandmark68Net.isLoaded,\r\n        faceapi.nets.faceRecognitionNet.isLoaded,\r\n        faceapi.nets.ssdMobilenetv1.isLoaded, // Kiểm tra SSD MobileNet đã tải chưa\r\n      ];\r\n\r\n      if (modelStatuses.every((status) => status)) {\r\n        console.log(\"Các models đã được tải từ trước\");\r\n        dispatch(setModelLoaded(true));\r\n        return true;\r\n      }\r\n\r\n      await Promise.all(modelPromises);\r\n\r\n      console.log(\"Đã tải xong models thành công\");\r\n      dispatch(setModelLoaded(true));\r\n      enqueueSnackbar(\"Tải mô hình nhận diện thành công\", {\r\n        variant: \"success\",\r\n      });\r\n      return true;\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi tải mô hình:\", error);\r\n      enqueueSnackbar(\"Không thể tải mô hình nhận diện\", { variant: \"error\" });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Xử lý phát hiện khuôn mặt\r\n  const handleDetectFaces = async () => {\r\n    try {\r\n      // Kiểm tra model đã tải chưa\r\n      if (!isModelLoaded || !faceapi.nets.ssdMobilenetv1.isLoaded) {\r\n        console.warn(\"Model SSD MobileNet chưa được tải, đang thử tải lại...\");\r\n        await loadFaceRecognitionModels();\r\n\r\n        if (!faceapi.nets.ssdMobilenetv1.isLoaded) {\r\n          enqueueSnackbar(\"Model nhận dạng chưa sẵn sàng, vui lòng thử lại\", {\r\n            variant: \"warning\",\r\n          });\r\n          return [];\r\n        }\r\n      }\r\n\r\n      // Lấy dữ liệu video\r\n      const videoElement = isAutoMode\r\n        ? videoRef.current\r\n        : webcamRef.current?.video;\r\n      if (!videoElement || !canvasRef.current) return [];\r\n\r\n      // Kiểm tra trạng thái video stream\r\n      if (videoElement.readyState !== 4) {\r\n        console.warn(\"Video element không sẵn sàng, đang đợi...\");\r\n        return [];\r\n      }\r\n\r\n      // Lấy kích thước của video\r\n      const displaySize = {\r\n        width: videoElement.videoWidth || videoElement.width || 640,\r\n        height: videoElement.videoHeight || videoElement.height || 480,\r\n      };\r\n\r\n      // Thử phát hiện với cả hai mô hình\r\n      let detections = [];\r\n\r\n      // Thử với SSD MobileNet trước (độ chính xác cao hơn)\r\n      try {\r\n        detections = await faceapi\r\n          .detectAllFaces(\r\n            videoElement,\r\n            new faceapi.SsdMobilenetv1Options({\r\n              minConfidence: DETECTION_THRESHOLD,\r\n            })\r\n          )\r\n          .withFaceLandmarks()\r\n          .withFaceDescriptors();\r\n      } catch (err) {\r\n        console.warn(\"Lỗi khi sử dụng SSD MobileNet:\", err);\r\n      }\r\n\r\n      // Nếu không phát hiện được, thử với TinyFaceDetector\r\n      if (!detections || detections.length === 0) {\r\n        try {\r\n          detections = await faceapi\r\n            .detectAllFaces(\r\n              videoElement,\r\n              new faceapi.TinyFaceDetectorOptions({\r\n                inputSize: 320,\r\n                scoreThreshold: DETECTION_THRESHOLD - 0.05, // Giảm ngưỡng thêm nữa\r\n              })\r\n            )\r\n            .withFaceLandmarks()\r\n            .withFaceDescriptors();\r\n        } catch (err) {\r\n          console.warn(\"Lỗi khi sử dụng TinyFaceDetector:\", err);\r\n        }\r\n      }\r\n\r\n      if (!detections || detections.length === 0) {\r\n        if (ENABLE_DEBUG_LOGS) {\r\n          console.log(\r\n            \"[DEBUG] Không phát hiện khuôn mặt - kiểm tra ánh sáng và vị trí\",\r\n            new Date().toLocaleTimeString()\r\n          );\r\n        }\r\n\r\n        // Xóa canvas nếu không có phát hiện\r\n        const canvasElement = canvasRef.current;\r\n        if (canvasElement) {\r\n          const ctx = canvasElement.getContext(\"2d\");\r\n          ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\r\n\r\n          // Vẽ hướng dẫn khi không có khuôn mặt\r\n          ctx.font = \"18px Arial\";\r\n          ctx.fillStyle = \"white\";\r\n          ctx.strokeStyle = \"black\";\r\n          ctx.lineWidth = 3;\r\n          const text =\r\n            \"Không phát hiện khuôn mặt - Điều chỉnh vị trí và ánh sáng\";\r\n          const x = canvasElement.width / 2 - 180;\r\n          const y = canvasElement.height / 2;\r\n          ctx.strokeText(text, x, y);\r\n          ctx.fillText(text, x, y);\r\n        }\r\n\r\n        return [];\r\n      }\r\n\r\n      if (ENABLE_DEBUG_LOGS) {\r\n        console.log(\r\n          `[DEBUG] Phát hiện ${detections.length} khuôn mặt`,\r\n          new Date().toLocaleTimeString()\r\n        );\r\n      }\r\n\r\n      // Điều chỉnh kích thước phát hiện để phù hợp với kích thước hiển thị\r\n      const resizedDetections = faceapi.resizeResults(detections, displaySize);\r\n\r\n      // Cập nhật state\r\n      dispatch(setDetectedFaces(resizedDetections));\r\n\r\n      // Tạo FaceMatcher từ dữ liệu sinh viên\r\n      const labeledDescriptors = classStudents\r\n        .filter(\r\n          (student) =>\r\n            student.faceDescriptors &&\r\n            student.faceDescriptors.length > 0 &&\r\n            student.faceDescriptors[0].length === 128 // Đảm bảo descriptor có đúng 128 phần tử\r\n        )\r\n        .map((student) => {\r\n          try {\r\n            // Chuyển đổi mỗi descriptor thành Float32Array và xác minh độ dài\r\n            const descriptors = student.faceDescriptors\r\n              .filter((desc) => Array.isArray(desc) && desc.length === 128)\r\n              .map((descriptor) => new Float32Array(descriptor));\r\n\r\n            if (descriptors.length === 0) return null;\r\n\r\n            return new faceapi.LabeledFaceDescriptors(student._id, descriptors);\r\n          } catch (err) {\r\n            console.error(\r\n              `Lỗi khi xử lý descriptor của sinh viên ${student._id}:`,\r\n              err\r\n            );\r\n            return null;\r\n          }\r\n        })\r\n        .filter(Boolean); // Lọc bỏ các giá trị null\r\n\r\n      // Tạo faceMatcher nếu có dữ liệu\r\n      if (labeledDescriptors.length === 0) {\r\n        console.warn(\"Không có dữ liệu khuôn mặt hợp lệ của sinh viên\");\r\n        // Tự động tạo dữ liệu demo nếu không có dữ liệu\r\n        if (!updateWithDemoFaceData()) {\r\n          enqueueSnackbar(\r\n            \"Không có dữ liệu khuôn mặt của sinh viên. Đang tạo dữ liệu demo.\",\r\n            { variant: \"warning\" }\r\n          );\r\n        }\r\n        return resizedDetections;\r\n      }\r\n\r\n      // Tạo faceMatcher với descriptor đã được xác thực\r\n      const faceMatcher = new faceapi.FaceMatcher(\r\n        labeledDescriptors,\r\n        RECOGNITION_THRESHOLD\r\n      );\r\n\r\n      // Vẽ lên canvas nếu có khuôn mặt\r\n      const canvasElement = canvasRef.current;\r\n      canvasElement.width = displaySize.width;\r\n      canvasElement.height = displaySize.height;\r\n\r\n      const ctx = canvasElement.getContext(\"2d\");\r\n      ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\r\n\r\n      // Vẽ các phát hiện lên canvas\r\n      resizedDetections.forEach((detection) => {\r\n        try {\r\n          if (detection.descriptor && detection.descriptor.length === 128) {\r\n            const bestMatch = faceMatcher.findBestMatch(detection.descriptor);\r\n            const { label, distance } = bestMatch;\r\n\r\n            // Kiểm tra nếu match với một sinh viên\r\n            if (label !== \"unknown\") {\r\n              // Tìm sinh viên trong danh sách\r\n              const student = classStudents.find((s) => s._id === label);\r\n              if (student) {\r\n                // Cập nhật thông tin nhận diện cho sinh viên\r\n                const studentId = student._id;\r\n                const confidence = 1 - distance;\r\n\r\n                // Đánh dấu sinh viên đã điểm danh nếu đủ độ tin cậy\r\n                if (confidence >= CONFIDENCE_THRESHOLD) {\r\n                  handleMarkAttendance(studentId, confidence);\r\n                }\r\n\r\n                // Vẽ hộp và tên sinh viên\r\n                const drawBox = new faceapi.draw.DrawBox(\r\n                  detection.detection.box,\r\n                  {\r\n                    label: `${student.full_name} (${Math.round(\r\n                      confidence * 100\r\n                    )}%)`,\r\n                    boxColor:\r\n                      confidence >= CONFIDENCE_THRESHOLD ? \"green\" : \"orange\",\r\n                  }\r\n                );\r\n                drawBox.draw(canvasElement);\r\n              }\r\n            } else {\r\n              // Không nhận diện được sinh viên\r\n              const drawBox = new faceapi.draw.DrawBox(\r\n                detection.detection.box,\r\n                {\r\n                  label: \"Unknown\",\r\n                  boxColor: \"red\",\r\n                }\r\n              );\r\n              drawBox.draw(canvasElement);\r\n            }\r\n          } else {\r\n            // Nếu descriptor không hợp lệ hoặc độ dài không đúng\r\n            console.warn(\r\n              \"Phát hiện descriptor không hợp lệ\",\r\n              detection.descriptor\r\n                ? detection.descriptor.length\r\n                : \"không có descriptor\"\r\n            );\r\n\r\n            // Không có descriptor\r\n            const drawBox = new faceapi.draw.DrawBox(detection.detection.box, {\r\n              label: \"Đang phân tích...\",\r\n              boxColor: \"blue\",\r\n            });\r\n            drawBox.draw(canvasElement);\r\n          }\r\n        } catch (err) {\r\n          console.error(\"Lỗi khi xử lý detection:\", err);\r\n        }\r\n\r\n        // Vẽ landmarks nếu đã bật\r\n        if (showLandmark && detection.landmarks) {\r\n          faceapi.draw.drawFaceLandmarks(canvasElement, detection);\r\n        }\r\n      });\r\n\r\n      return resizedDetections;\r\n    } catch (error) {\r\n      console.error(\"Lỗi phát hiện khuôn mặt:\", error);\r\n      enqueueSnackbar(\"Lỗi khi phát hiện khuôn mặt. Thử lại sau.\", {\r\n        variant: \"error\",\r\n      });\r\n      return [];\r\n    }\r\n  };\r\n\r\n  // Điểm danh thủ công\r\n  const openManualAttendanceDialog = (student) => {\r\n    setSelectedStudent(student);\r\n    setManualAttendanceData({\r\n      status: \"present\",\r\n      note: \"\",\r\n    });\r\n    setManualDialogOpen(true);\r\n  };\r\n\r\n  const handleManualDialogClose = () => {\r\n    setManualDialogOpen(false);\r\n  };\r\n\r\n  const handleManualAttendanceChange = (e) => {\r\n    setManualAttendanceData({\r\n      ...manualAttendanceData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleManualAttendanceSubmit = async () => {\r\n    if (!selectedStudent) return;\r\n\r\n    try {\r\n      const result = await dispatch(\r\n        manualAttendance({\r\n          sessionId,\r\n          studentId: selectedStudent._id,\r\n          status: manualAttendanceData.status,\r\n          note: manualAttendanceData.note,\r\n        })\r\n      ).unwrap();\r\n\r\n      // Cập nhật logs điểm danh\r\n      if (result && result.data) {\r\n        const updatedLogs = attendanceLogs.filter(\r\n          (log) => log.student_id._id !== selectedStudent._id\r\n        );\r\n\r\n        updatedLogs.push({\r\n          ...result.data,\r\n          student_id: selectedStudent,\r\n        });\r\n\r\n        setAttendanceLogs(updatedLogs);\r\n      }\r\n\r\n      enqueueSnackbar(\"Điểm danh thủ công thành công\", { variant: \"success\" });\r\n      handleManualDialogClose();\r\n\r\n      // Cập nhật lại thông tin phiên điểm danh\r\n      const sessionResponse = await axios.get(\r\n        `${API_URL}/attendance/sessions/${sessionId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      setSessionInfo(sessionResponse.data.data);\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi điểm danh thủ công:\", error);\r\n      enqueueSnackbar(\"Lỗi khi điểm danh thủ công\", { variant: \"error\" });\r\n    }\r\n  };\r\n\r\n  // Đánh dấu điểm danh từ nhận diện khuôn mặt\r\n  const markAttendance = async (\r\n    studentId,\r\n    faceDescriptor,\r\n    confidence,\r\n    imageBase64\r\n  ) => {\r\n    try {\r\n      const result = await dispatch(\r\n        verifyAttendance({\r\n          sessionId,\r\n          studentId,\r\n          faceDescriptor,\r\n          confidence,\r\n          imageBase64,\r\n        })\r\n      ).unwrap();\r\n\r\n      // Cập nhật logs điểm danh\r\n      if (result && result.data) {\r\n        const student = classStudents.find((s) => s._id === studentId);\r\n\r\n        if (student) {\r\n          const updatedLogs = attendanceLogs.filter(\r\n            (log) => log.student_id._id !== studentId\r\n          );\r\n\r\n          updatedLogs.push({\r\n            ...result.data,\r\n            student_id: student,\r\n          });\r\n\r\n          setAttendanceLogs(updatedLogs);\r\n\r\n          enqueueSnackbar(`Đã điểm danh cho ${student.full_name}`, {\r\n            variant: \"success\",\r\n          });\r\n        }\r\n      }\r\n\r\n      // Cập nhật lại thông tin phiên điểm danh\r\n      const sessionResponse = await axios.get(\r\n        `${API_URL}/attendance/sessions/${sessionId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      setSessionInfo(sessionResponse.data.data);\r\n\r\n      return true;\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi xác nhận điểm danh:\", error);\r\n      enqueueSnackbar(\"Lỗi khi xác nhận điểm danh\", { variant: \"error\" });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Kết thúc phiên điểm danh\r\n  const completeSession = async () => {\r\n    try {\r\n      await axios.put(\r\n        `${API_URL}/attendance/sessions/${sessionId}`,\r\n        { status: \"completed\" },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n\r\n      enqueueSnackbar(\"Phiên điểm danh đã kết thúc\", { variant: \"success\" });\r\n      navigate(`/teacher/classes/${classId}`);\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi kết thúc phiên điểm danh:\", error);\r\n      enqueueSnackbar(\"Lỗi khi kết thúc phiên điểm danh\", { variant: \"error\" });\r\n    }\r\n  };\r\n\r\n  // Làm mới danh sách điểm danh\r\n  const refreshAttendanceLogs = async () => {\r\n    try {\r\n      const logsResponse = await axios.get(\r\n        `${API_URL}/attendance/logs/${sessionId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      setAttendanceLogs(logsResponse.data.data);\r\n\r\n      const sessionResponse = await axios.get(\r\n        `${API_URL}/attendance/sessions/${sessionId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      setSessionInfo(sessionResponse.data.data);\r\n\r\n      enqueueSnackbar(\"Đã làm mới dữ liệu điểm danh\", { variant: \"success\" });\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi làm mới dữ liệu:\", error);\r\n      enqueueSnackbar(\"Lỗi khi làm mới dữ liệu\", { variant: \"error\" });\r\n    }\r\n  };\r\n\r\n  // Chụp ảnh và nhận diện thủ công\r\n  const captureAndRecognize = async () => {\r\n    await handleDetectFaces();\r\n  };\r\n\r\n  // Hàm khởi tạo camera trực tiếp - nút duy nhất cho camera\r\n  const initDirectCamera = async () => {\r\n    try {\r\n      // Tải model nhận diện và đảm bảo model đã sẵn sàng\r\n      if (!isModelLoaded || !faceapi.nets.ssdMobilenetv1.isLoaded) {\r\n        enqueueSnackbar(\"Đang tải các mô hình nhận diện...\", {\r\n          variant: \"info\",\r\n        });\r\n        const modelLoaded = await loadFaceRecognitionModels();\r\n\r\n        if (!modelLoaded) {\r\n          enqueueSnackbar(\"Không thể tải mô hình nhận diện, vui lòng thử lại\", {\r\n            variant: \"error\",\r\n          });\r\n          return;\r\n        }\r\n      }\r\n\r\n      // Truy cập camera trực tiếp thông qua MediaDevices API\r\n      try {\r\n        const stream = await navigator.mediaDevices.getUserMedia({\r\n          video: {\r\n            width: { ideal: 1280 },\r\n            height: { ideal: 720 },\r\n            facingMode: \"user\",\r\n          },\r\n          audio: false,\r\n        });\r\n\r\n        console.log(\"Đã nhận được stream camera trực tiếp\", stream.id);\r\n\r\n        // Nếu đang sử dụng webcam component\r\n        if (webcamRef.current && webcamRef.current.video) {\r\n          webcamRef.current.video.srcObject = stream;\r\n        }\r\n        // Hoặc nếu đang sử dụng video element\r\n        else if (videoRef.current) {\r\n          videoRef.current.srcObject = stream;\r\n          videoRef.current.onloadedmetadata = () => {\r\n            videoRef.current\r\n              .play()\r\n              .catch((err) => console.error(\"Lỗi khi play video:\", err));\r\n          };\r\n        }\r\n\r\n        // Đánh dấu camera và model đã sẵn sàng\r\n        dispatch(setModelLoaded(true));\r\n        dispatch(setCameraReady(true));\r\n\r\n        enqueueSnackbar(\"Đã kết nối camera thành công\", {\r\n          variant: \"success\",\r\n        });\r\n\r\n        // Bật hiển thị landmark sau khi camera khởi động\r\n        setTimeout(() => {\r\n          setShowLandmark(true);\r\n        }, 1000);\r\n      } catch (err) {\r\n        console.error(\"Lỗi truy cập camera:\", err);\r\n        enqueueSnackbar(`Không thể truy cập camera: ${err.message}`, {\r\n          variant: \"error\",\r\n        });\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Lỗi khi khởi tạo camera trực tiếp:\", err);\r\n      enqueueSnackbar(`Lỗi: ${err.message}`, { variant: \"error\" });\r\n    }\r\n  };\r\n\r\n  // Điểm danh thủ công trong chế độ đơn giản\r\n  const showStudentList = () => {\r\n    if (!classInfo) return;\r\n\r\n    // Hiển thị danh sách sinh viên để điểm danh thủ công\r\n    const absentStudents = getAbsentStudents();\r\n    if (absentStudents.length === 0) {\r\n      enqueueSnackbar(\"Tất cả sinh viên đã được điểm danh\", {\r\n        variant: \"success\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Hiển thị dialog chọn sinh viên để điểm danh\r\n    if (absentStudents.length > 0 && absentStudents[0]) {\r\n      openManualAttendanceDialog(absentStudents[0]);\r\n    }\r\n  };\r\n\r\n  // Bật/tắt hiển thị landmark trên khuôn mặt\r\n  const toggleLandmarkDetection = () => {\r\n    const newState = !showLandmark;\r\n    setShowLandmark(newState);\r\n\r\n    // Lấy canvas context\r\n    const canvasElement = canvasRef.current;\r\n    if (!canvasElement) return;\r\n\r\n    const ctx = canvasElement.getContext(\"2d\");\r\n    ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\r\n\r\n    // Kiểm tra nếu không có khuôn mặt được phát hiện\r\n    if (!detectedFaces || detectedFaces.length === 0) return;\r\n\r\n    // Lấy video element\r\n    const videoElement = isAutoMode\r\n      ? videoRef.current\r\n      : webcamRef.current?.video;\r\n    if (!videoElement) return;\r\n\r\n    // Tính toán tỷ lệ hiển thị\r\n    const displaySize = {\r\n      width: videoElement.videoWidth || videoElement.width,\r\n      height: videoElement.videoHeight || videoElement.height,\r\n    };\r\n\r\n    // Đảm bảo canvas có kích thước phù hợp\r\n    faceapi.matchDimensions(canvasElement, displaySize);\r\n\r\n    try {\r\n      // Tạo FaceMatcher từ dữ liệu sinh viên có độ dài hợp lệ\r\n      const labeledDescriptors = classStudents\r\n        .filter(\r\n          (student) =>\r\n            student.faceDescriptors &&\r\n            student.faceDescriptors.length > 0 &&\r\n            student.faceDescriptors[0].length === 128 // Đảm bảo descriptor có đúng 128 phần tử\r\n        )\r\n        .map((student) => {\r\n          try {\r\n            // Chuyển đổi mỗi descriptor thành Float32Array và xác minh độ dài\r\n            const descriptors = student.faceDescriptors\r\n              .filter((desc) => Array.isArray(desc) && desc.length === 128)\r\n              .map((descriptor) => new Float32Array(descriptor));\r\n\r\n            if (descriptors.length === 0) return null;\r\n\r\n            return new faceapi.LabeledFaceDescriptors(student._id, descriptors);\r\n          } catch (err) {\r\n            if (ENABLE_DEBUG_LOGS) {\r\n              console.error(\r\n                `Lỗi khi xử lý descriptor của sinh viên ${student._id}:`,\r\n                err\r\n              );\r\n            }\r\n            return null;\r\n          }\r\n        })\r\n        .filter(Boolean); // Lọc bỏ các giá trị null\r\n\r\n      // Tạo faceMatcher nếu có dữ liệu\r\n      let faceMatcher = null;\r\n      if (labeledDescriptors.length > 0) {\r\n        faceMatcher = new faceapi.FaceMatcher(\r\n          labeledDescriptors,\r\n          RECOGNITION_THRESHOLD\r\n        );\r\n      } else if (ENABLE_DEBUG_LOGS) {\r\n        console.warn(\"Không có dữ liệu khuôn mặt hợp lệ của sinh viên\");\r\n      }\r\n\r\n      // Sử dụng faceapi.resizeResults để điều chỉnh kích thước phát hiện phù hợp với canvas\r\n      const resizedDetections = faceapi.resizeResults(\r\n        detectedFaces,\r\n        displaySize\r\n      );\r\n\r\n      // Vẽ các phát hiện lên canvas\r\n      resizedDetections.forEach((detection) => {\r\n        try {\r\n          // Chỉ xử lý descriptor hợp lệ\r\n          if (\r\n            detection.descriptor &&\r\n            detection.descriptor.length === 128 &&\r\n            faceMatcher\r\n          ) {\r\n            const bestMatch = faceMatcher.findBestMatch(detection.descriptor);\r\n            const { label, distance } = bestMatch;\r\n\r\n            const drawBox = new faceapi.draw.DrawBox(detection.detection.box, {\r\n              label:\r\n                label !== \"unknown\"\r\n                  ? `${\r\n                      classStudents.find((s) => s._id === label)?.full_name ||\r\n                      \"Unknown\"\r\n                    } (${Math.round((1 - distance) * 100)}%)`\r\n                  : \"Unknown\",\r\n              boxColor: label !== \"unknown\" ? \"green\" : \"red\",\r\n            });\r\n\r\n            drawBox.draw(canvasElement);\r\n          } else {\r\n            // Nếu không có descriptor hoặc không thể nhận diện\r\n            const drawBox = new faceapi.draw.DrawBox(detection.detection.box, {\r\n              label: \"Đang phân tích...\",\r\n              boxColor: \"blue\",\r\n            });\r\n            drawBox.draw(canvasElement);\r\n          }\r\n\r\n          // Vẽ landmarks nếu đã bật và detection có landmarks\r\n          if (\r\n            newState &&\r\n            detection.landmarks &&\r\n            detection.landmarks.positions &&\r\n            detection.landmarks.positions.length > 0\r\n          ) {\r\n            try {\r\n              // Vẽ landmark cho từng detection riêng biệt\r\n              faceapi.draw.drawFaceLandmarks(canvasElement, detection);\r\n            } catch (err) {\r\n              console.error(\"Lỗi khi vẽ landmarks:\", err);\r\n            }\r\n          }\r\n        } catch (err) {\r\n          console.error(\"Lỗi khi xử lý detection trong toggle landmark:\", err);\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi hiển thị landmarks:\", error);\r\n    }\r\n  };\r\n\r\n  // Xử lý đánh dấu sinh viên điểm danh\r\n  const handleMarkAttendance = async (studentId, confidence) => {\r\n    // Kiểm tra xem sinh viên đã được điểm danh chưa\r\n    const isAlreadyAttended = attendanceLogs.some(\r\n      (log) => log.student_id._id === studentId && log.status === \"present\"\r\n    );\r\n\r\n    if (isAlreadyAttended) {\r\n      if (ENABLE_DEBUG_LOGS) {\r\n        console.log(\r\n          `[DEBUG] Sinh viên ${studentId} đã được điểm danh trước đó`\r\n        );\r\n      }\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Lấy dữ liệu video\r\n      const videoElement = isAutoMode\r\n        ? videoRef.current\r\n        : webcamRef.current?.video;\r\n\r\n      if (!videoElement) return;\r\n\r\n      // Tạo ảnh chụp từ video element\r\n      let imageBase64 = null;\r\n\r\n      // Nếu sử dụng webcam component\r\n      if (!isAutoMode && webcamRef.current) {\r\n        imageBase64 = webcamRef.current.getScreenshot();\r\n      }\r\n      // Nếu sử dụng video element trực tiếp\r\n      else if (isAutoMode) {\r\n        const canvas = document.createElement(\"canvas\");\r\n        canvas.width = videoElement.videoWidth;\r\n        canvas.height = videoElement.videoHeight;\r\n        const ctx = canvas.getContext(\"2d\");\r\n        ctx.drawImage(videoElement, 0, 0);\r\n        imageBase64 = canvas.toDataURL(\"image/jpeg\");\r\n      }\r\n\r\n      // Tìm sinh viên đã được phát hiện\r\n      const student = classStudents.find((s) => s._id === studentId);\r\n\r\n      if (!student) {\r\n        console.error(`Không tìm thấy sinh viên với ID ${studentId}`);\r\n        return;\r\n      }\r\n\r\n      // Lấy descriptor mới nhất từ sinh viên\r\n      const descriptor =\r\n        student.faceDescriptors && student.faceDescriptors.length > 0\r\n          ? student.faceDescriptors[0]\r\n          : null;\r\n\r\n      // Gọi API điểm danh\r\n      if (ENABLE_DEBUG_LOGS) {\r\n        console.log(\r\n          `[DEBUG] Đánh dấu điểm danh cho ${\r\n            student.full_name\r\n          } với độ tin cậy ${confidence.toFixed(2)}`\r\n        );\r\n      }\r\n\r\n      // Gọi hàm điểm danh\r\n      await markAttendance(studentId, descriptor, confidence, imageBase64);\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi đánh dấu điểm danh:\", error);\r\n    }\r\n  };\r\n\r\n  // Hàm để tạo dữ liệu điểm danh demo khi không có descriptor\r\n  const generateDemoFaceData = () => {\r\n    if (!classInfo || !classInfo.students || classInfo.students.length === 0) {\r\n      console.warn(\"Không có dữ liệu sinh viên để tạo dữ liệu demo\");\r\n      return [];\r\n    }\r\n\r\n    // Tạo descriptor mẫu 128 phần tử\r\n    const createDemoDescriptor = () => {\r\n      // Tạo một mảng 128 phần tử với giá trị ngẫu nhiên\r\n      const descriptor = new Array(128)\r\n        .fill(0)\r\n        .map(() => (Math.random() - 0.5) * 0.8);\r\n      return descriptor;\r\n    };\r\n\r\n    // Tạo dữ liệu mẫu cho mỗi sinh viên\r\n    const demoStudentsData = classInfo.students.map((student) => {\r\n      // Mỗi sinh viên có 3 descriptor mẫu\r\n      const descriptors = [\r\n        createDemoDescriptor(),\r\n        createDemoDescriptor(),\r\n        createDemoDescriptor(),\r\n      ];\r\n\r\n      return {\r\n        ...student,\r\n        faceDescriptors: descriptors,\r\n      };\r\n    });\r\n\r\n    console.log(\r\n      `[DEMO] Đã tạo dữ liệu demo cho ${demoStudentsData.length} sinh viên`\r\n    );\r\n    enqueueSnackbar(\r\n      `Đã tạo dữ liệu nhận diện demo cho ${demoStudentsData.length} sinh viên`,\r\n      {\r\n        variant: \"info\",\r\n        autoHideDuration: 5000,\r\n      }\r\n    );\r\n\r\n    return demoStudentsData;\r\n  };\r\n\r\n  // Hàm để cập nhật dữ liệu khuôn mặt khi không có dữ liệu thực\r\n  const updateWithDemoFaceData = () => {\r\n    if (\r\n      classStudents.length === 0 ||\r\n      !classStudents.some(\r\n        (student) =>\r\n          student.faceDescriptors &&\r\n          student.faceDescriptors.length > 0 &&\r\n          student.faceDescriptors[0].length === 128\r\n      )\r\n    ) {\r\n      console.log(\r\n        \"[DEMO] Không tìm thấy dữ liệu khuôn mặt hợp lệ, tạo dữ liệu demo\"\r\n      );\r\n      const demoData = generateDemoFaceData();\r\n      if (demoData.length > 0) {\r\n        dispatch({\r\n          type: \"faceRecognition/getClassFaceFeatures/fulfilled\",\r\n          payload: { data: demoData },\r\n        });\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        minHeight=\"60vh\"\r\n      >\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  // Lấy danh sách sinh viên vắng mặt\r\n  const getAbsentStudents = () => {\r\n    if (!classInfo || !sessionInfo) return [];\r\n\r\n    const presentStudentIds = attendanceLogs\r\n      .filter((log) => log.status === \"present\")\r\n      .map((log) => log.student_id._id);\r\n\r\n    return classInfo.students.filter(\r\n      (student) => !presentStudentIds.includes(student._id)\r\n    );\r\n  };\r\n\r\n  const absentStudents = getAbsentStudents();\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Điểm Danh - {classInfo?.class_name}\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" color=\"textSecondary\" gutterBottom>\r\n        Buổi {sessionInfo?.session_number} -{\" \"}\r\n        {new Date(sessionInfo?.date).toLocaleDateString(\"vi-VN\")}\r\n      </Typography>\r\n\r\n      <Grid container spacing={3} mt={1}>\r\n        <Grid item xs={12} md={8}>\r\n          <Card>\r\n            <CardContent>\r\n              <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                mb={2}\r\n              >\r\n                <Typography variant=\"h6\">Camera nhận diện</Typography>\r\n                <Box>\r\n                  <Chip\r\n                    label={isAutoMode ? \"Tự động đang bật\" : \"Tự động đang tắt\"}\r\n                    color={isAutoMode ? \"success\" : \"default\"}\r\n                    sx={{ mr: 1 }}\r\n                  />\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color={isAutoMode ? \"error\" : \"primary\"}\r\n                    onClick={\r\n                      isAutoMode\r\n                        ? () => {\r\n                            // Dừng tự động\r\n                            if (intervalId) {\r\n                              clearInterval(intervalId);\r\n                              setIntervalId(null);\r\n                            }\r\n                            setIsAutoMode(false);\r\n                            enqueueSnackbar(\"Đã tắt chế độ tự động điểm danh\", {\r\n                              variant: \"info\",\r\n                            });\r\n                          }\r\n                        : () => {\r\n                            // Bắt đầu tự động\r\n                            if (intervalId) {\r\n                              clearInterval(intervalId);\r\n                            }\r\n                            const id = setInterval(() => {\r\n                              handleDetectFaces();\r\n                            }, AUTO_DETECT_INTERVAL);\r\n                            setIntervalId(id);\r\n                            setIsAutoMode(true);\r\n                            enqueueSnackbar(\"Đã bật chế độ tự động điểm danh\", {\r\n                              variant: \"info\",\r\n                            });\r\n                          }\r\n                    }\r\n                  >\r\n                    {isAutoMode ? \"Tắt tự động\" : \"Bật tự động\"}\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            </CardContent>\r\n\r\n            <Paper\r\n              elevation={3}\r\n              sx={{\r\n                position: \"relative\",\r\n                width: \"100%\",\r\n                height: \"400px\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                overflow: \"hidden\",\r\n                mb: 2,\r\n              }}\r\n            >\r\n              {isCameraReady ? (\r\n                <>\r\n                  {isAutoMode ? (\r\n                    // Sử dụng video element trực tiếp thay vì Webcam component\r\n                    <video\r\n                      ref={videoRef}\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        objectFit: \"cover\",\r\n                      }}\r\n                      autoPlay\r\n                      playsInline\r\n                      muted\r\n                    />\r\n                  ) : (\r\n                    <Webcam\r\n                      audio={false}\r\n                      ref={webcamRef}\r\n                      screenshotFormat=\"image/jpeg\"\r\n                      width={640}\r\n                      height={480}\r\n                      videoConstraints={{\r\n                        width: 640,\r\n                        height: 480,\r\n                        facingMode: \"user\",\r\n                      }}\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        objectFit: \"cover\",\r\n                      }}\r\n                      onUserMedia={(stream) => {\r\n                        console.log(\r\n                          \"Camera đã được cấp quyền và khởi tạo\",\r\n                          stream.id\r\n                        );\r\n                        // Đảm bảo readyState được kiểm tra khi stream đã sẵn sàng\r\n                        setTimeout(() => {\r\n                          if (webcamRef.current && webcamRef.current.video) {\r\n                            console.log(\r\n                              \"Stream ready, readyState=\",\r\n                              webcamRef.current.video.readyState\r\n                            );\r\n                            dispatch(setCameraReady(true));\r\n                          }\r\n                        }, 500);\r\n                      }}\r\n                      onUserMediaError={(err) => {\r\n                        console.error(\"Lỗi khi truy cập camera:\", err);\r\n                        enqueueSnackbar(\r\n                          `Không thể truy cập camera: ${\r\n                            err.name === \"NotAllowedError\"\r\n                              ? \"Bạn chưa cấp quyền truy cập camera\"\r\n                              : err.name === \"NotFoundError\"\r\n                              ? \"Không tìm thấy thiết bị camera\"\r\n                              : err.message || \"Lỗi không xác định\"\r\n                          }`,\r\n                          {\r\n                            variant: \"error\",\r\n                          }\r\n                        );\r\n                      }}\r\n                    />\r\n                  )}\r\n                  {/* Canvas hiển thị ở cả hai chế độ */}\r\n                  <canvas\r\n                    ref={canvasRef}\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      top: 0,\r\n                      left: 0,\r\n                      width: \"100%\",\r\n                      height: \"100%\",\r\n                    }}\r\n                  />\r\n                </>\r\n              ) : (\r\n                <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n                  <CircularProgress size={50} />\r\n                  <Typography mt={2}>Đang khởi tạo camera...</Typography>\r\n                  <Typography\r\n                    variant=\"caption\"\r\n                    color=\"text.secondary\"\r\n                    sx={{ mt: 1 }}\r\n                  >\r\n                    {isModelLoaded\r\n                      ? \"Chờ kết nối camera - Hãy đảm bảo bạn đã cấp quyền camera\"\r\n                      : \"Đang tải mô hình nhận diện khuôn mặt\"}\r\n                  </Typography>\r\n\r\n                  <Box\r\n                    sx={{\r\n                      mt: 2,\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\",\r\n                      alignItems: \"center\",\r\n                      gap: 1,\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      onClick={initDirectCamera}\r\n                    >\r\n                      Khởi động camera trực tiếp\r\n                    </Button>\r\n\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"warning\"\r\n                      size=\"small\"\r\n                      onClick={updateWithDemoFaceData}\r\n                    >\r\n                      Tạo dữ liệu nhận diện demo\r\n                    </Button>\r\n                  </Box>\r\n                </Box>\r\n              )}\r\n            </Paper>\r\n\r\n            <Box display=\"flex\" justifyContent=\"space-between\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                onClick={captureAndRecognize}\r\n                startIcon={<CameraAlt />}\r\n                disabled={!isCameraReady || isRecognizing || isAutoMode}\r\n              >\r\n                {isRecognizing ? (\r\n                  <CircularProgress size={24} color=\"inherit\" />\r\n                ) : (\r\n                  \"Chụp & Nhận diện\"\r\n                )}\r\n              </Button>\r\n\r\n              <Box>\r\n                {isCameraReady && (\r\n                  <>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color={showLandmark ? \"success\" : \"info\"}\r\n                      onClick={toggleLandmarkDetection}\r\n                      sx={{ mr: 1 }}\r\n                    >\r\n                      {showLandmark ? \"Tắt Landmark\" : \"Hiện Landmark\"}\r\n                    </Button>\r\n\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color={isAutoMode ? \"error\" : \"primary\"}\r\n                      onClick={\r\n                        isAutoMode\r\n                          ? () => {\r\n                              // Dừng tự động\r\n                              if (intervalId) {\r\n                                clearInterval(intervalId);\r\n                                setIntervalId(null);\r\n                              }\r\n                              setIsAutoMode(false);\r\n                              enqueueSnackbar(\r\n                                \"Đã tắt chế độ tự động điểm danh\",\r\n                                { variant: \"info\" }\r\n                              );\r\n                            }\r\n                          : () => {\r\n                              // Bắt đầu tự động\r\n                              if (intervalId) {\r\n                                clearInterval(intervalId);\r\n                              }\r\n                              const id = setInterval(() => {\r\n                                handleDetectFaces();\r\n                              }, AUTO_DETECT_INTERVAL);\r\n                              setIntervalId(id);\r\n                              setIsAutoMode(true);\r\n                              enqueueSnackbar(\r\n                                \"Đã bật chế độ tự động điểm danh\",\r\n                                { variant: \"info\" }\r\n                              );\r\n                            }\r\n                      }\r\n                      sx={{ mr: 1 }}\r\n                    >\r\n                      {isAutoMode ? \"Tắt tự động\" : \"Bật tự động\"}\r\n                    </Button>\r\n                  </>\r\n                )}\r\n\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={completeSession}\r\n                  startIcon={<Save />}\r\n                  disabled={sessionInfo?.status === \"completed\"}\r\n                >\r\n                  Kết thúc phiên\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n\r\n            {recognizedStudents.length > 0 && (\r\n              <Box mt={2}>\r\n                <Typography variant=\"subtitle1\" gutterBottom>\r\n                  Đã nhận diện ({recognizedStudents.length})\r\n                </Typography>\r\n                <Grid container spacing={1}>\r\n                  {recognizedStudents.map((student, index) => (\r\n                    <Grid item xs={6} sm={4} key={index}>\r\n                      <Paper\r\n                        elevation={2}\r\n                        sx={{\r\n                          p: 1,\r\n                          display: \"flex\",\r\n                          flexDirection: \"column\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        <Typography variant=\"body2\" noWrap>\r\n                          {student.name}\r\n                        </Typography>\r\n                        <Typography variant=\"caption\" color=\"textSecondary\">\r\n                          {Math.round(student.confidence * 100)}% match\r\n                        </Typography>\r\n                        <Button\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          color=\"primary\"\r\n                          sx={{ mt: 1 }}\r\n                          onClick={() =>\r\n                            handleMarkAttendance(\r\n                              student.studentId,\r\n                              student.confidence\r\n                            )\r\n                          }\r\n                        >\r\n                          <Check fontSize=\"small\" sx={{ mr: 0.5 }} />\r\n                          Điểm danh\r\n                        </Button>\r\n                      </Paper>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </Box>\r\n            )}\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={4}>\r\n          <Card sx={{ mb: 3 }}>\r\n            <CardContent>\r\n              <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                mb={2}\r\n              >\r\n                <Typography variant=\"h6\">\r\n                  Có mặt (\r\n                  {\r\n                    attendanceLogs.filter((log) => log.status === \"present\")\r\n                      .length\r\n                  }\r\n                  /{classInfo?.students.length})\r\n                </Typography>\r\n                <IconButton size=\"small\" onClick={refreshAttendanceLogs}>\r\n                  <Refresh />\r\n                </IconButton>\r\n              </Box>\r\n\r\n              <List dense>\r\n                {attendanceLogs\r\n                  .filter((log) => log.status === \"present\")\r\n                  .sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))\r\n                  .map((log) => (\r\n                    <ListItem\r\n                      key={log._id}\r\n                      secondaryAction={\r\n                        <Chip\r\n                          size=\"small\"\r\n                          icon={\r\n                            log.recognized ? (\r\n                              <VerifiedUser fontSize=\"small\" />\r\n                            ) : null\r\n                          }\r\n                          label={log.recognized ? \"Tự động\" : \"Thủ công\"}\r\n                          color={log.recognized ? \"success\" : \"primary\"}\r\n                        />\r\n                      }\r\n                    >\r\n                      <ListItemAvatar>\r\n                        <Avatar\r\n                          alt={log.student_id.full_name}\r\n                          src={log.student_id.avatar_url}\r\n                        />\r\n                      </ListItemAvatar>\r\n                      <ListItemText\r\n                        primary={log.student_id.full_name}\r\n                        secondary={`${new Date(\r\n                          log.timestamp\r\n                        ).toLocaleTimeString(\"vi-VN\")}`}\r\n                      />\r\n                    </ListItem>\r\n                  ))}\r\n\r\n                {attendanceLogs.filter((log) => log.status === \"present\")\r\n                  .length === 0 && (\r\n                  <ListItem>\r\n                    <ListItemText primary=\"Chưa có sinh viên nào điểm danh\" />\r\n                  </ListItem>\r\n                )}\r\n              </List>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Vắng mặt ({absentStudents.length}/{classInfo?.students.length})\r\n              </Typography>\r\n\r\n              <List dense>\r\n                {absentStudents.map((student) => (\r\n                  <ListItem\r\n                    key={student._id}\r\n                    secondaryAction={\r\n                      <IconButton\r\n                        edge=\"end\"\r\n                        onClick={() => openManualAttendanceDialog(student)}\r\n                      >\r\n                        <Edit fontSize=\"small\" />\r\n                      </IconButton>\r\n                    }\r\n                  >\r\n                    <ListItemAvatar>\r\n                      <Avatar\r\n                        alt={student.full_name}\r\n                        src={student.avatar_url}\r\n                      />\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={student.full_name}\r\n                      secondary={student.student_code}\r\n                    />\r\n                  </ListItem>\r\n                ))}\r\n\r\n                {absentStudents.length === 0 && (\r\n                  <ListItem>\r\n                    <ListItemText primary=\"Không có sinh viên nào vắng mặt\" />\r\n                  </ListItem>\r\n                )}\r\n              </List>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Dialog điểm danh thủ công */}\r\n      <Dialog open={manualDialogOpen} onClose={handleManualDialogClose}>\r\n        <DialogTitle>Điểm danh thủ công</DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ p: 1 }}>\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              {selectedStudent?.full_name} ({selectedStudent?.student_code})\r\n            </Typography>\r\n\r\n            <FormControl fullWidth margin=\"normal\">\r\n              <InputLabel>Trạng thái</InputLabel>\r\n              <Select\r\n                name=\"status\"\r\n                value={manualAttendanceData.status}\r\n                onChange={handleManualAttendanceChange}\r\n                label=\"Trạng thái\"\r\n              >\r\n                <MenuItem value=\"present\">Có mặt</MenuItem>\r\n                <MenuItem value=\"absent\">Vắng mặt</MenuItem>\r\n                <MenuItem value=\"late\">Đi trễ</MenuItem>\r\n                <MenuItem value=\"early_leave\">Về sớm</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n              fullWidth\r\n              margin=\"normal\"\r\n              name=\"note\"\r\n              label=\"Ghi chú\"\r\n              value={manualAttendanceData.note}\r\n              onChange={handleManualAttendanceChange}\r\n              multiline\r\n              rows={2}\r\n            />\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleManualDialogClose}>Hủy</Button>\r\n          <Button onClick={handleManualAttendanceSubmit} variant=\"contained\">\r\n            Xác nhận\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AttendancePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}