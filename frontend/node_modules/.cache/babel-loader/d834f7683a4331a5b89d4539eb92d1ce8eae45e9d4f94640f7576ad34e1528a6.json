{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from \"../utils/axios\";\nimport { setCredentials } from \"../redux/slices/authSlice\";\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\nexport const useUserProfile = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    user,\n    token,\n    isAuthenticated\n  } = useSelector(state => state.auth);\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        // Chỉ gọi API nếu đã đăng nhập và không có thông tin sinh viên/giảng viên đầy đủ\n        const needsProfileData = user.role === \"student\" && !user.student_code || user.role === \"teacher\" && !user.teacher_code;\n        if (isAuthenticated && token && needsProfileData) {\n          const response = await axios.get(`${API_URL}/auth/me`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          if (response.data.success) {\n            // Cập nhật thông tin user vào Redux store, giữ nguyên token\n            dispatch(setCredentials({\n              token: token,\n              user: response.data.data\n            }));\n          }\n        }\n      } catch (error) {\n        console.error(\"Lỗi khi lấy thông tin người dùng:\", error);\n      }\n    };\n    fetchUserData();\n  }, [isAuthenticated, token, user === null || user === void 0 ? void 0 : user._id]); // Chỉ chạy khi người dùng đăng nhập hoặc đổi tài khoản\n\n  return {\n    user\n  };\n};\n_s(useUserProfile, \"W1cbhuUzvbQzYMV/ZetcdD2WF/k=\", false, function () {\n  return [useDispatch, useSelector];\n});","map":{"version":3,"names":["useEffect","useSelector","useDispatch","axios","setCredentials","API_URL","process","env","REACT_APP_API_URL","useUserProfile","_s","dispatch","user","token","isAuthenticated","state","auth","fetchUserData","needsProfileData","role","student_code","teacher_code","response","get","headers","Authorization","data","success","error","console","_id"],"sources":["C:/Users/kasiz/Documents/Studying/FaceReg/frontend/src/hooks/useUserProfile.js"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"../utils/axios\";\r\nimport { setCredentials } from \"../redux/slices/authSlice\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\r\n\r\nexport const useUserProfile = () => {\r\n  const dispatch = useDispatch();\r\n  const { user, token, isAuthenticated } = useSelector((state) => state.auth);\r\n\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      try {\r\n        // Chỉ gọi API nếu đã đăng nhập và không có thông tin sinh viên/giảng viên đầy đủ\r\n        const needsProfileData =\r\n          (user.role === \"student\" && !user.student_code) ||\r\n          (user.role === \"teacher\" && !user.teacher_code);\r\n\r\n        if (isAuthenticated && token && needsProfileData) {\r\n          const response = await axios.get(`${API_URL}/auth/me`, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          });\r\n\r\n          if (response.data.success) {\r\n            // Cập nhật thông tin user vào Redux store, giữ nguyên token\r\n            dispatch(\r\n              setCredentials({\r\n                token: token,\r\n                user: response.data.data,\r\n              })\r\n            );\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Lỗi khi lấy thông tin người dùng:\", error);\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, [isAuthenticated, token, user?._id]); // Chỉ chạy khi người dùng đăng nhập hoặc đổi tài khoản\r\n\r\n  return { user };\r\n};\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,KAAK,MAAM,gBAAgB;AAClC,SAASC,cAAc,QAAQ,2BAA2B;AAE1D,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAE5E,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEU,IAAI;IAAEC,KAAK;IAAEC;EAAgB,CAAC,GAAGb,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EAE3EhB,SAAS,CAAC,MAAM;IACd,MAAMiB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF;QACA,MAAMC,gBAAgB,GACnBN,IAAI,CAACO,IAAI,KAAK,SAAS,IAAI,CAACP,IAAI,CAACQ,YAAY,IAC7CR,IAAI,CAACO,IAAI,KAAK,SAAS,IAAI,CAACP,IAAI,CAACS,YAAa;QAEjD,IAAIP,eAAe,IAAID,KAAK,IAAIK,gBAAgB,EAAE;UAChD,MAAMI,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAC,GAAGlB,OAAO,UAAU,EAAE;YACrDmB,OAAO,EAAE;cAAEC,aAAa,EAAE,UAAUZ,KAAK;YAAG;UAC9C,CAAC,CAAC;UAEF,IAAIS,QAAQ,CAACI,IAAI,CAACC,OAAO,EAAE;YACzB;YACAhB,QAAQ,CACNP,cAAc,CAAC;cACbS,KAAK,EAAEA,KAAK;cACZD,IAAI,EAAEU,QAAQ,CAACI,IAAI,CAACA;YACtB,CAAC,CACH,CAAC;UACH;QACF;MACF,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D;IACF,CAAC;IAEDX,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACH,eAAe,EAAED,KAAK,EAAED,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEkB,GAAG,CAAC,CAAC,CAAC,CAAC;;EAEzC,OAAO;IAAElB;EAAK,CAAC;AACjB,CAAC;AAACF,EAAA,CApCWD,cAAc;EAAA,QACRP,WAAW,EACaD,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}