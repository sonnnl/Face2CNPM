{"ast":null,"code":"import * as faceapi from \"face-api.js\";\nlet isModelsLoaded = false;\n\n/**\r\n * Tải các model face-api.js\r\n * @returns {Promise<boolean>}\r\n */\nexport const loadModels = async () => {\n  if (isModelsLoaded) {\n    return true;\n  }\n  try {\n    const MODEL_URL = \"/models\";\n    await Promise.all([faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL), faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL), faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL)]);\n    isModelsLoaded = true;\n    return true;\n  } catch (error) {\n    console.error(\"Error loading models:\", error);\n    throw error;\n  }\n};\n\n/**\r\n * Phát hiện khuôn mặt từ hình ảnh\r\n * @param {string} imageData - Base64 image data\r\n * @returns {Promise<Object>} - Kết quả phát hiện khuôn mặt\r\n */\nexport const detectFace = async imageData => {\n  if (!isModelsLoaded) {\n    await loadModels();\n  }\n  try {\n    const img = await faceapi.fetchImage(imageData);\n    const detections = await faceapi.detectSingleFace(img, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceDescriptor();\n    return detections;\n  } catch (error) {\n    console.error(\"Error detecting face:\", error);\n    throw error;\n  }\n};\n\n/**\r\n * Tính toán khoảng cách Euclid giữa các đặc trưng khuôn mặt\r\n * @param {Float32Array} descriptor1 - Đặc trưng khuôn mặt 1\r\n * @param {Float32Array} descriptor2 - Đặc trưng khuôn mặt 2\r\n * @returns {number} - Khoảng cách (0-1, càng nhỏ càng giống nhau)\r\n */\nexport const getFaceDistance = (descriptor1, descriptor2) => {\n  return faceapi.euclideanDistance(descriptor1, descriptor2);\n};\n\n/**\r\n * Kiểm tra xem khuôn mặt có phải là cùng một người không\r\n * @param {Float32Array} descriptor1 - Đặc trưng khuôn mặt 1\r\n * @param {Float32Array} descriptor2 - Đặc trưng khuôn mặt 2\r\n * @param {number} threshold - Ngưỡng để xác định là cùng một người (mặc định: 0.6)\r\n * @returns {boolean} - Có phải cùng một người không\r\n */\nexport const isSameFace = (descriptor1, descriptor2, threshold = 0.6) => {\n  const distance = getFaceDistance(descriptor1, descriptor2);\n  return distance < threshold;\n};","map":{"version":3,"names":["faceapi","isModelsLoaded","loadModels","MODEL_URL","Promise","all","nets","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","error","console","detectFace","imageData","img","fetchImage","detections","detectSingleFace","TinyFaceDetectorOptions","withFaceLandmarks","withFaceDescriptor","getFaceDistance","descriptor1","descriptor2","euclideanDistance","isSameFace","threshold","distance"],"sources":["C:/Users/kasiz/Documents/Studying/FaceReg/frontend/src/utils/faceUtils.js"],"sourcesContent":["import * as faceapi from \"face-api.js\";\r\n\r\nlet isModelsLoaded = false;\r\n\r\n/**\r\n * Tải các model face-api.js\r\n * @returns {Promise<boolean>}\r\n */\r\nexport const loadModels = async () => {\r\n  if (isModelsLoaded) {\r\n    return true;\r\n  }\r\n\r\n  try {\r\n    const MODEL_URL = \"/models\";\r\n    await Promise.all([\r\n      faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL),\r\n      faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),\r\n      faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL),\r\n    ]);\r\n    isModelsLoaded = true;\r\n    return true;\r\n  } catch (error) {\r\n    console.error(\"Error loading models:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Phát hiện khuôn mặt từ hình ảnh\r\n * @param {string} imageData - Base64 image data\r\n * @returns {Promise<Object>} - Kết quả phát hiện khuôn mặt\r\n */\r\nexport const detectFace = async (imageData) => {\r\n  if (!isModelsLoaded) {\r\n    await loadModels();\r\n  }\r\n\r\n  try {\r\n    const img = await faceapi.fetchImage(imageData);\r\n    const detections = await faceapi\r\n      .detectSingleFace(img, new faceapi.TinyFaceDetectorOptions())\r\n      .withFaceLandmarks()\r\n      .withFaceDescriptor();\r\n\r\n    return detections;\r\n  } catch (error) {\r\n    console.error(\"Error detecting face:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Tính toán khoảng cách Euclid giữa các đặc trưng khuôn mặt\r\n * @param {Float32Array} descriptor1 - Đặc trưng khuôn mặt 1\r\n * @param {Float32Array} descriptor2 - Đặc trưng khuôn mặt 2\r\n * @returns {number} - Khoảng cách (0-1, càng nhỏ càng giống nhau)\r\n */\r\nexport const getFaceDistance = (descriptor1, descriptor2) => {\r\n  return faceapi.euclideanDistance(descriptor1, descriptor2);\r\n};\r\n\r\n/**\r\n * Kiểm tra xem khuôn mặt có phải là cùng một người không\r\n * @param {Float32Array} descriptor1 - Đặc trưng khuôn mặt 1\r\n * @param {Float32Array} descriptor2 - Đặc trưng khuôn mặt 2\r\n * @param {number} threshold - Ngưỡng để xác định là cùng một người (mặc định: 0.6)\r\n * @returns {boolean} - Có phải cùng một người không\r\n */\r\nexport const isSameFace = (descriptor1, descriptor2, threshold = 0.6) => {\r\n  const distance = getFaceDistance(descriptor1, descriptor2);\r\n  return distance < threshold;\r\n};\r\n"],"mappings":"AAAA,OAAO,KAAKA,OAAO,MAAM,aAAa;AAEtC,IAAIC,cAAc,GAAG,KAAK;;AAE1B;AACA;AACA;AACA;AACA,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAID,cAAc,EAAE;IAClB,OAAO,IAAI;EACb;EAEA,IAAI;IACF,MAAME,SAAS,GAAG,SAAS;IAC3B,MAAMC,OAAO,CAACC,GAAG,CAAC,CAChBL,OAAO,CAACM,IAAI,CAACC,gBAAgB,CAACC,WAAW,CAACL,SAAS,CAAC,EACpDH,OAAO,CAACM,IAAI,CAACG,iBAAiB,CAACD,WAAW,CAACL,SAAS,CAAC,EACrDH,OAAO,CAACM,IAAI,CAACI,kBAAkB,CAACF,WAAW,CAACL,SAAS,CAAC,CACvD,CAAC;IACFF,cAAc,GAAG,IAAI;IACrB,OAAO,IAAI;EACb,CAAC,CAAC,OAAOU,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAME,UAAU,GAAG,MAAOC,SAAS,IAAK;EAC7C,IAAI,CAACb,cAAc,EAAE;IACnB,MAAMC,UAAU,CAAC,CAAC;EACpB;EAEA,IAAI;IACF,MAAMa,GAAG,GAAG,MAAMf,OAAO,CAACgB,UAAU,CAACF,SAAS,CAAC;IAC/C,MAAMG,UAAU,GAAG,MAAMjB,OAAO,CAC7BkB,gBAAgB,CAACH,GAAG,EAAE,IAAIf,OAAO,CAACmB,uBAAuB,CAAC,CAAC,CAAC,CAC5DC,iBAAiB,CAAC,CAAC,CACnBC,kBAAkB,CAAC,CAAC;IAEvB,OAAOJ,UAAU;EACnB,CAAC,CAAC,OAAON,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMW,eAAe,GAAGA,CAACC,WAAW,EAAEC,WAAW,KAAK;EAC3D,OAAOxB,OAAO,CAACyB,iBAAiB,CAACF,WAAW,EAAEC,WAAW,CAAC;AAC5D,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAME,UAAU,GAAGA,CAACH,WAAW,EAAEC,WAAW,EAAEG,SAAS,GAAG,GAAG,KAAK;EACvE,MAAMC,QAAQ,GAAGN,eAAe,CAACC,WAAW,EAAEC,WAAW,CAAC;EAC1D,OAAOI,QAAQ,GAAGD,SAAS;AAC7B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}